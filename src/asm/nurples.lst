PC     Output      Line
040000             0001       assume adl=1
040000             0002       org 0x040000
040000 C3 45 00 04 0003       jp start
040004 FF FF FF FF 0004       align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0005       db "MOS"
040043 00          0006       db 00h
040044 01          0007       db 01h
040045             0008   
040045             0009   start:
040045 F5          0010       push af
040046 C5          0011       push bc
040047 D5          0012       push de
040048 DD E5       0013       push ix
04004A FD E5       0014       push iy
04004C CD D2 F5 04 0015       call init
040050 CD AE F6 04 0016       call main
040054             0017   
040054             0018   exit:
040054 FD E1       0019       pop iy
040056 DD E1       0020       pop ix
040058 D1          0021       pop de
040059 C1          0022       pop bc
04005A F1          0023       pop af
04005B 21 00 00 00 0024       ld hl,0
04005F             0025   
04005F C9          0026       ret
040060             0027   
040060             0028   ; API INCLUDES
040060             0029       include "mos_api.inc"
040060             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/mos_api.inc
040060             0002*  ; Title:	AGON MOS - API for user projects
040060             0003*  ; Author:	Dean Belfield
040060             0004*  ;			Adapted for agon-ez80asm by Jeroen Venema
040060             0005*  ;			Added MOS error codes for return in HL
040060             0006*  ; Created:	03/08/2022
040060             0007*  ; Last Updated:	10/08/2023
040060             0008*  ;
040060             0009*  ; Modinfo:
040060             0010*  ; 05/08/2022:	Added mos_feof
040060             0011*  ; 09/08/2022:	Added system variables: cursorX, cursorY
040060             0012*  ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040060             0013*  ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040060             0014*  ; 24/09/2022:	Added mos_getError, mos_mkdir
040060             0015*  ; 13/10/2022:	Added mos_oscli
040060             0016*  ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040060             0017*  ; 04/03/2023:	Added sysvar_scrpixelIndex
040060             0018*  ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040060             0019*  ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040060             0020*  ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040060             0021*  ; 22/03/2023:	The VDP commands are now indexed from 0x80
040060             0022*  ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040060             0023*  ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040060             0024*  ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040060             0025*  ; 19/05/2023:	Added sysvar_scrMode
040060             0026*  ; 05/06/2023:	Added sysvar_rtcEnable
040060             0027*  ; 03/08/2023:	Added mos_setkbvector
040060             0028*  ; 10/08/2023:	Added mos_getkbmap
040060             0029*  
040060             0030*  ; VDP control (VDU 23, 0, n)
040060             0031*  ;
040060             0032*  vdp_gp:				EQU 80h
040060             0033*  vdp_keycode:		EQU 81h
040060             0034*  vdp_cursor:			EQU	82h
040060             0035*  vdp_scrchar:		EQU	83h
040060             0036*  vdp_scrpixel:		EQU	84h
040060             0037*  vdp_audio:			EQU	85h
040060             0038*  vdp_mode:			EQU	86h
040060             0039*  vdp_rtc:			EQU	87h
040060             0040*  vdp_keystate:		EQU	88h
040060             0041*  vdp_logicalcoords:	EQU	C0h
040060             0042*  vdp_terminalmode:	EQU	FFh
040060             0043*  
040060             0044*  ; MOS high level functions
040060             0045*  ;
040060             0046*  mos_getkey:			EQU	00h
040060             0047*  mos_load:			EQU	01h
040060             0048*  mos_save:			EQU	02h
040060             0049*  mos_cd:				EQU	03h
040060             0050*  mos_dir:			EQU	04h
040060             0051*  mos_del:			EQU	05h
040060             0052*  mos_ren:			EQU	06h
040060             0053*  mos_mkdir:			EQU	07h
040060             0054*  mos_sysvars:		EQU	08h
040060             0055*  mos_editline:		EQU	09h
040060             0056*  mos_fopen:			EQU	0Ah
040060             0057*  mos_fclose:			EQU	0Bh
040060             0058*  mos_fgetc:			EQU	0Ch
040060             0059*  mos_fputc:			EQU	0Dh
040060             0060*  mos_feof:			EQU	0Eh
040060             0061*  mos_getError:		EQU	0Fh
040060             0062*  mos_oscli:			EQU	10h
040060             0063*  mos_copy:			EQU	11h
040060             0064*  mos_getrtc:			EQU	12h
040060             0065*  mos_setrtc:			EQU	13h
040060             0066*  mos_setintvector:	EQU	14h
040060             0067*  mos_uopen:			EQU	15h
040060             0068*  mos_uclose:			EQU	16h
040060             0069*  mos_ugetc:			EQU	17h
040060             0070*  mos_uputc:			EQU	18h
040060             0071*  mos_getfil:			EQU	19h
040060             0072*  mos_fread:			EQU	1Ah
040060             0073*  mos_fwrite:			EQU	1Bh
040060             0074*  mos_flseek:			EQU	1Ch
040060             0075*  mos_setkbvector:	EQU	1Dh
040060             0076*  mos_getkbmap:		EQU	1Eh
040060             0077*  
040060             0078*  ; MOS program exit codes
040060             0079*  ;
040060             0080*  EXIT_OK:				EQU  0;	"OK",
040060             0081*  EXIT_ERROR_SD_ACCESS:	EQU	 1;	"Error accessing SD card",
040060             0082*  EXIT_ERROR_ASSERTION:	EQU  2;	"Assertion failed",
040060             0083*  EXIT_SD_CARDFAILURE:	EQU  3;	"SD card failure",
040060             0084*  EXIT_FILENOTFOUND:		EQU  4;	"Could not find file",
040060             0085*  EXIT_PATHNOTFOUND:		EQU  5;	"Could not find path",
040060             0086*  EXIT_INVALIDPATHNAME:	EQU  6;	"Invalid path name",
040060             0087*  EXIT_ACCESSDENIED_FULL:	EQU  7;	"Access denied or directory full",
040060             0088*  EXIT_ACCESSDENIED:		EQU  8;	"Access denied",
040060             0089*  EXIT_INVALIDOBJECT:		EQU  9;	"Invalid file/directory object",
040060             0090*  EXIT_SD_WRITEPROTECTED:	EQU 10;	"SD card is write protected",
040060             0091*  EXIT_INVALIDDRIVENUMBER:EQU 11;	"Logical drive number is invalid",
040060             0092*  EXIT_NOVOLUMEWORKAREA:	EQU 12;	"Volume has no work area",
040060             0093*  EXIT_NOVALIDFATVOLUME:	EQU 13;	"No valid FAT volume",
040060             0094*  EXIT_ERRORMKFS:			EQU 14;	"Error occurred during mkfs",
040060             0095*  EXIT_VOLUMETIMEOUT:		EQU 15;	"Volume timeout",
040060             0096*  EXIT_VOLUMELOCKED:		EQU 16;	"Volume locked",
040060             0097*  EXIT_LFNALLOCATION:		EQU 17;	"LFN working buffer could not be allocated",
040060             0098*  EXIT_MAXOPENFILES:		EQU 18;	"Too many open files",
040060             0099*  EXIT_INVALIDPARAMETER:	EQU 19;	"Invalid parameter",
040060             0100*  EXIT_INVALIDCOMMAND:	EQU 20;	"Invalid command",
040060             0101*  EXIT_INVALIDEXECUTABLE:	EQU 21;	"Invalid executable",
040060             0102*  ; FatFS file access functions
040060             0103*  ;
040060             0104*  ffs_fopen:			EQU	80h
040060             0105*  ffs_fclose:			EQU	81h
040060             0106*  ffs_fread:			EQU	82h
040060             0107*  ffs_fwrite:			EQU	83h
040060             0108*  ffs_flseek:			EQU	84h
040060             0109*  ffs_ftruncate:		EQU	85h
040060             0110*  ffs_fsync:			EQU	86h
040060             0111*  ffs_fforward:		EQU	87h
040060             0112*  ffs_fexpand:		EQU	88h
040060             0113*  ffs_fgets:			EQU	89h
040060             0114*  ffs_fputc:			EQU	8Ah
040060             0115*  ffs_fputs:			EQU	8Bh
040060             0116*  ffs_fprintf:		EQU	8Ch
040060             0117*  ffs_ftell:			EQU	8Dh
040060             0118*  ffs_feof:			EQU	8Eh
040060             0119*  ffs_fsize:			EQU	8Fh
040060             0120*  ffs_ferror:			EQU	90h
040060             0121*  
040060             0122*  ; FatFS directory access functions
040060             0123*  ;
040060             0124*  ffs_dopen:			EQU	91h
040060             0125*  ffs_dclose:			EQU	92h
040060             0126*  ffs_dread:			EQU	93h
040060             0127*  ffs_dfindfirst:		EQU	94h
040060             0128*  ffs_dfindnext:		EQU	95h
040060             0129*  
040060             0130*  ; FatFS file and directory management functions
040060             0131*  ;
040060             0132*  ffs_stat:			EQU	96h
040060             0133*  ffs_unlink:			EQU	97h
040060             0134*  ffs_rename:			EQU	98h
040060             0135*  ffs_chmod:			EQU	99h
040060             0136*  ffs_utime:			EQU	9Ah
040060             0137*  ffs_mkdir:			EQU	9Bh
040060             0138*  ffs_chdir:			EQU	9Ch
040060             0139*  ffs_chdrive:		EQU	9Dh
040060             0140*  ffs_getcwd:			EQU	9Eh
040060             0141*  
040060             0142*  ; FatFS volume management and system configuration functions
040060             0143*  ;
040060             0144*  ffs_mount:			EQU	9Fh
040060             0145*  ffs_mkfs:			EQU	A0h
040060             0146*  ffs_fdisk:			EQU	A1h
040060             0147*  ffs_getfree:		EQU	A2h
040060             0148*  ffs_getlabel:		EQU	A3h
040060             0149*  ffs_setlabel:		EQU	A4h
040060             0150*  ffs_setcp:			EQU	A5h
040060             0151*  
040060             0152*  ; File access modes
040060             0153*  ;
040060             0154*  fa_read:			EQU	01h
040060             0155*  fa_write:			EQU	02h
040060             0156*  fa_open_existing:	EQU	00h
040060             0157*  fa_create_new:		EQU	04h
040060             0158*  fa_create_always:	EQU	08h
040060             0159*  fa_open_always:		EQU	10h
040060             0160*  fa_open_append:		EQU	30h
040060             0161*  
040060             0162*  ; System variable indexes for api_sysvars
040060             0163*  ; Index into _sysvars in globals.inc
040060             0164*  ;
040060             0165*  sysvar_time:			EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040060             0166*  sysvar_vpd_pflags:		EQU	04h	; 1: Flags to indicate completion of VDP commands
040060             0167*  sysvar_keyascii:		EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040060             0168*  sysvar_keymods:			EQU	06h	; 1: Keycode modifiers
040060             0169*  sysvar_cursorX:			EQU	07h	; 1: Cursor X position
040060             0170*  sysvar_cursorY:			EQU	08h	; 1: Cursor Y position
040060             0171*  sysvar_scrchar:			EQU	09h	; 1: Character read from screen
040060             0172*  sysvar_scrpixel:		EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040060             0173*  sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040060             0174*  sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040060             0175*  sysvar_scrWidth:		EQU	0Fh	; 2: Screen width in pixels
040060             0176*  sysvar_scrHeight:		EQU	11h	; 2: Screen height in pixels
040060             0177*  sysvar_scrCols:			EQU	13h	; 1: Screen columns in characters
040060             0178*  sysvar_scrRows:			EQU	14h	; 1: Screen rows in characters
040060             0179*  sysvar_scrColours:		EQU	15h	; 1: Number of colours displayed
040060             0180*  sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040060             0181*  sysvar_vkeycode:		EQU	17h	; 1: Virtual key code from FabGL
040060             0182*  sysvar_vkeydown:		EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040060             0183*  sysvar_vkeycount:		EQU	19h	; 1: Incremented every time a key packet is received
040060             0184*  sysvar_rtc:				EQU	1Ah	; 6: Real time clock data
040060             0185*  sysvar_spare:			EQU	20h	; 2: Spare, previously used by rtc
040060             0186*  sysvar_keydelay:		EQU	22h	; 2: Keyboard repeat delay
040060             0187*  sysvar_keyrate:			EQU	24h	; 2: Keyboard repeat reat
040060             0188*  sysvar_keyled:			EQU	26h	; 1: Keyboard LED status
040060             0189*  sysvar_scrMode:			EQU	27h	; 1: Screen mode
040060             0190*  sysvar_rtcEnable:		EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040060             0191*  
040060             0192*  ; Flags for the VPD protocol
040060             0193*  ;
040060             0194*  vdp_pflag_cursor:		EQU	00000001b
040060             0195*  vdp_pflag_scrchar:		EQU	00000010b
040060             0196*  vdp_pflag_point:		EQU	00000100b
040060             0197*  vdp_pflag_audio:		EQU	00001000b
040060             0198*  vdp_pflag_mode:			EQU	00010000b
040060             0199*  vdp_pflag_rtc:			EQU	00100000b
040060             0200*  
040060             0201*  ;
040060             0202*  ; FatFS structures
040060             0203*  ; These mirror the structures contained in src_fatfs/ff.h in the MOS project
040060             0204*  ;
040060             0205*  ; Object ID and allocation information (FFOBJID)
040060             0206*  ;
040060             0207*  ; Indexes into FFOBJID structure
040060             0208*  ffobjid_fs:			EQU	0	; 3: Pointer to the hosting volume of this object
040060             0209*  ffobjid_id:			EQU	3	; 2: Hosting volume mount ID
040060             0210*  ffobjid_attr:		EQU	5	; 1: Object attribute
040060             0211*  ffobjid_stat:		EQU	6	; 1: Object chain status (b1-0: =0:not contiguous, =2:contiguous, =3:fragmented in this session, b2:sub-directory stretched)
040060             0212*  ffobjid_sclust:		EQU	7	; 4: Object data start cluster (0:no cluster or root directory)
040060             0213*  ffobjid_objsize:	EQU	11	; 4: Object size (valid when sclust != 0)
040060             0214*  ;
040060             0215*  ; File object structure (FIL)
040060             0216*  ;
040060             0217*  ; Indexes into FIL structure
040060             0218*  fil_obj:		EQU 0	; 15: Object identifier
040060             0219*  fil_flag:		EQU	15 	;  1: File status flags
040060             0220*  fil_err:		EQU	16	;  1: Abort flag (error code)
040060             0221*  fil_fptr:		EQU	17	;  4: File read/write pointer (Zeroed on file open)
040060             0222*  fil_clust:		EQU	21	;  4: Current cluster of fpter (invalid when fptr is 0)
040060             0223*  fil_sect:		EQU	25	;  4: Sector number appearing in buf[] (0:invalid)
040060             0224*  fil_dir_sect:	EQU	29	;  4: Sector number containing the directory entry
040060             0225*  fil_dir_ptr:	EQU	33	;  3: Pointer to the directory entry in the win[]
040060             0226*  ;
040060             0227*  ; Directory object structure (DIR)
040060             0228*  ; Indexes into DIR structure
040060             0229*  dir_obj:		EQU  0	; 15: Object identifier
040060             0230*  dir_dptr:		EQU	15	;  4: Current read/write offset
040060             0231*  dir_clust:		EQU	19	;  4: Current cluster
040060             0232*  dir_sect:		EQU	23	;  4: Current sector (0:Read operation has terminated)
040060             0233*  dir_dir:		EQU	27	;  3: Pointer to the directory item in the win[]
040060             0234*  dir_fn:			EQU	30	; 12: SFN (in/out) {body[8],ext[3],status[1]}
040060             0235*  dir_blk_ofs:	EQU	42	;  4: Offset of current entry block being processed (0xFFFFFFFF:Invalid)
040060             0236*  ;
040060             0237*  ; File information structure (FILINFO)
040060             0238*  ;
040060             0239*  ; Indexes into FILINFO structure
040060             0240*  filinfo_fsize:		EQU 0	;   4: File size
040060             0241*  filinfo_fdate:		EQU	4	;   2: Modified date
040060             0242*  filinfo_ftime:		EQU	6	;   2: Modified time
040060             0243*  filinfo_fattrib:	EQU	8	;   1: File attribute
040060             0244*  filinfo_altname:	EQU	9	;  13: Alternative file name
040060             0245*  filinfo_fname:		EQU	22	; 256: Primary file name
040060             0246*  ;
040060             0247*  ; Macro for calling the API
040060             0248*  ; Parameters:
040060             0249*  ; - function: One of the function numbers listed above
040060             0250*  ;
040060             0251*  	MACRO	MOSCALL	function
040060             0252*  			LD	A, function
040060             0253*  			RST.LIL	08h
040060             0254*  	ENDMACRO
040060             0030       include "functions.inc"
040060             0001*  
040060             0002*      MACRO printChar char
040060             0003*      LD A, char
040060             0004*      RST.LIL 10h
040060             0005*      ENDMACRO
040060             0006*  
040060             0007*  ; Simulated call to subroutine at HL
040060             0008*  ; inputs: HL pointing to the subroutine address plus whatever the called function expects
040060             0009*  ; outputs: whatever the subroutine does, including HL and BC
040060             0010*  ; destroys: only what the subroutine does, but always BC
040060             0011*      MACRO callHL
040060             0012*      ld bc,@F ; Address of first instruction after the jump
040060             0013*      push bc ; which constitutes the return address
040060             0014*      jp (hl) ; Jump to the address in HL
040060             0015*  @@:
040060             0016*      ENDMACRO
040060             0017*  
040060             0018*  ; Simulated call to subroutine at IX
040060             0019*  ; inputs: IX pointing to the subroutine address plus whatever the called function expects
040060             0020*  ; outputs: whatever the subroutine does, including IX and BC
040060             0021*  ; destroys: only what the subroutine does, but always BC
040060             0022*      MACRO callIX
040060             0023*      ld bc,@F ; Address of first instruction after the jump
040060             0024*      push bc ; which constitutes the return address
040060             0025*      jp (ix) ; Jump to the address in IX
040060             0026*  @@:
040060             0027*      ENDMACRO
040060             0028*  
040060             0029*  ; Simulated call to soubroutinte at IY
040060             0030*  ; inputs: IY pointing to the subroutine address plus whatever the called function expects
040060             0031*  ; outputs: whatever the subroutine does, including IY and BC
040060             0032*  ; destroys: only what the subroutine does, but always BC
040060             0033*      MACRO callIY
040060             0034*      ld bc,@F ; Address of first instruction after the jump
040060             0035*      push bc ; which constitutes the return address
040060             0036*      jp (iy) ; Jump to the address in IY
040060             0037*  @@:
040060             0038*      ENDMACRO
040060             0039*  
040060             0040*  ; put the value in HLU into the accumulator
040060             0041*  ; destroys: af
040060             0042*      MACRO HLU_TO_A
040060             0043*      push hl ; 4 cycles
040060             0044*      inc sp ; 1 cycle
040060             0045*      pop af ; 4 cycles
040060             0046*      dec sp ; 1 cycle
040060             0047*      ; 10 cycles total
040060             0048*      ENDMACRO
040060             0049*  
040060             0050*  A_TO_HLU:
040060             0051*      ; call is 7 cycles
040060 22 6D 00 04 0052*      ld (@scratch),hl ; 7 cycles
040064 32 6F 00 04 0053*      ld (@scratch+2),a ; 5 cycles
040068 2A 6D 00 04 0054*      ld hl,(@scratch) ; 7 cycles
04006C C9          0055*      ret ; 6 cycles
04006D             0056*      ; 25 cycles total
04006D 00 00 00    0057*  @scratch: dl 0
040070             0058*  
040070             0059*      ; TODO: implement this
040070             0060*      ; MACRO A_TO_HLU
040070             0061*      ;     push.s af
040070             0062*      ;     inc sp
040070             0063*      ;     push.s hl
040070             0064*      ;     pop hl
040070             0065*      ;     inc sp
040070             0066*      ;     inc sp
040070             0067*      ; ENDMACRO
040070             0068*  
040070             0069*      MACRO PUSH_ALL
040070             0070*      ex af,af'
040070             0071*      exx
040070             0072*      push af
040070             0073*      push hl
040070             0074*      push bc
040070             0075*      push de
040070             0076*  
040070             0077*      ex af,af'
040070             0078*      exx
040070             0079*      push af
040070             0080*      push hl
040070             0081*      push bc
040070             0082*      push de
040070             0083*      push ix
040070             0084*      push iy
040070             0085*      ENDMACRO
040070             0086*  
040070             0087*      MACRO POP_ALL
040070             0088*      pop iy
040070             0089*      pop ix
040070             0090*      pop de
040070             0091*      pop bc
040070             0092*      pop hl
040070             0093*      pop af
040070             0094*      ex af,af'
040070             0095*      exx
040070             0096*  
040070             0097*      pop de
040070             0098*      pop bc
040070             0099*      pop hl
040070             0100*      pop af
040070             0101*      ex af,af'
040070             0102*      exx
040070             0103*      ENDMACRO
040070             0104*  
040070             0105*  ; Print a zero-terminated string inline with code, e.g.:
040070             0106*  ;
040070             0107*  ;    call printInline
040070             0108*  ;    ASCIZ "Hello, world!\r\n"
040070             0109*  ;
040070             0110*  ; Destroys: HL,AF
040070             0111*  printInline:
040070 E1          0112*      pop hl ; get the return address = pointer to start of string
040071 CD 77 00 04 0113*      call printString ; HL advances to end of string
040075 E5          0114*      push hl ; restore the return address = pointer to end of string
040076 C9          0115*      ret
040077             0116*  
040077             0117*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/functions.s
040077             0118*  ; Print a zero-terminated string
040077             0119*  ; HL: Pointer to string
040077             0120*  printString:
040077 C5          0121*      PUSH BC
040078 01 00 00 00 0122*      LD BC,0
04007C 3E 00       0123*      LD A,0
04007E 5B DF       0124*      RST.LIL 18h
040080 C1          0125*      POP BC
040081 C9          0126*      RET
040082             0127*  ; print a VDU sequence
040082             0128*  ; HL: Pointer to VDU sequence - <1 byte length> <data>
040082             0129*  sendVDUsequence:
040082 C5          0130*      PUSH BC
040083 01 00 00 00 0131*      LD BC, 0
040087 4E          0132*      LD C, (HL)
040088 5B DF       0133*      RST.LIL 18h
04008A C1          0134*      POP BC
04008B C9          0135*      RET
04008C             0136*  ; Print Newline sequence to VDP
04008C             0137*  printNewLine:
04008C F5          0138*      push af ; for some reason rst.lil 10h sets carry flag
04008D 3E 0D       0139*      LD A, '\r'
04008F 5B D7       0140*      RST.LIL 10h
040091 3E 0A       0141*      LD A, '\n'
040093 5B D7       0142*      RST.LIL 10h
040095 F1          0143*      pop af
040096 C9          0144*      RET
040097             0145*  
040097             0146*  ; Print a 24-bit HEX number
040097             0147*  ; HLU: Number to print
040097             0148*  printHex24:
040097             0149*      HLU_TO_A
040097 E5          0001*M     push hl ; 4 cycles
040098 33          0002*M     inc sp ; 1 cycle
040099 F1          0003*M     pop af ; 4 cycles
04009A 3B          0004*M     dec sp ; 1 cycle
04009B             0005*M     ; 10 cycles total
04009B CD A5 00 04 0150*      CALL printHex8
04009F             0151*  ; Print a 16-bit HEX number
04009F             0152*  ; HL: Number to print
04009F             0153*  printHex16:
04009F 7C          0154*      LD A,H
0400A0 CD A5 00 04 0155*      CALL printHex8
0400A4 7D          0156*      LD A,L
0400A5             0157*  ; Print an 8-bit HEX number
0400A5             0158*  ; A: Number to print
0400A5             0159*  printHex8:
0400A5 4F          0160*      LD C,A
0400A6 1F          0161*      RRA
0400A7 1F          0162*      RRA
0400A8 1F          0163*      RRA
0400A9 1F          0164*      RRA
0400AA CD AF 00 04 0165*      CALL @F
0400AE 79          0166*      LD A,C
0400AF             0167*  @@:
0400AF E6 0F       0168*      AND 0Fh
0400B1 C6 90       0169*      ADD A,90h
0400B3 27          0170*      DAA
0400B4 CE 40       0171*      ADC A,40h
0400B6 27          0172*      DAA
0400B7 5B D7       0173*      RST.LIL 10h
0400B9 C9          0174*      RET
0400BA             0175*  
0400BA             0176*  printHexA:
0400BA F5          0177*      push af
0400BB C5          0178*      push bc
0400BC CD A5 00 04 0179*      call printHex8
0400C0 3E 20       0180*      ld a,' '
0400C2 5B D7       0181*      rst.lil 10h
0400C4 C1          0182*      pop bc
0400C5 F1          0183*      pop af
0400C6 C9          0184*      ret
0400C7             0185*  
0400C7             0186*  printHexHL:
0400C7 F5          0187*      push af
0400C8 C5          0188*      push bc
0400C9 CD 9F 00 04 0189*      call printHex16
0400CD 3E 20       0190*      ld a,' '
0400CF 5B D7       0191*      rst.lil 10h
0400D1 C1          0192*      pop bc
0400D2 F1          0193*      pop af
0400D3 C9          0194*      ret
0400D4             0195*  
0400D4             0196*  printHexUHL:
0400D4 F5          0197*      push af
0400D5 C5          0198*      push bc
0400D6 CD 97 00 04 0199*      call printHex24
0400DA 3E 20       0200*      ld a,' '
0400DC 5B D7       0201*      rst.lil 10h
0400DE C1          0202*      pop bc
0400DF F1          0203*      pop af
0400E0 C9          0204*      ret
0400E1             0205*  
0400E1             0206*  printHexAUHL:
0400E1 F5          0207*      push af
0400E2 C5          0208*      push bc
0400E3 CD A5 00 04 0209*      call printHex8
0400E7 3E 2E       0210*      ld a,'.'
0400E9 5B D7       0211*      rst.lil 10h
0400EB CD 97 00 04 0212*      call printHex24
0400EF 3E 20       0213*      ld a,' '
0400F1 5B D7       0214*      rst.lil 10h
0400F3 C1          0215*      pop bc
0400F4 F1          0216*      pop af
0400F5 C9          0217*      ret
0400F6             0218*  
0400F6             0219*  printHexABHL:
0400F6             0220*  ; preserve registers
0400F6 C5          0221*      push bc ; b will be ok c will not
0400F7 F5          0222*      push af ; will get totally destroyed
0400F8             0223*  ; print a
0400F8 CD A5 00 04 0224*      call printHex8
0400FC             0225*  ; print b
0400FC 78          0226*      ld a,b
0400FD CD A5 00 04 0227*      call printHex8
040101             0228*  ; print hl
040101 CD 9F 00 04 0229*      call printHex16
040105             0230*  ; restore registers
040105 F1          0231*      pop af
040106 C1          0232*      pop bc
040107 C9          0233*      ret
040108             0234*  
040108             0235*  printHexBHL:
040108             0236*  ; preserve registers
040108 C5          0237*      push bc ; b will be ok c will not
040109 F5          0238*      push af ; will get totally destroyed
04010A             0239*  ; print b
04010A 78          0240*      ld a,b
04010B CD A5 00 04 0241*      call printHex8
04010F             0242*  ; print hl
04010F CD 9F 00 04 0243*      call printHex16
040113             0244*  ; restore registers
040113 F1          0245*      pop af
040114 C1          0246*      pop bc
040115 C9          0247*      ret
040116             0248*  
040116             0249*  printHexCDE:
040116             0250*  ; preserve registers
040116 C5          0251*      push bc ; b will be ok c will not
040117 F5          0252*      push af ; will get totally destroyed
040118             0253*  ; print c
040118 79          0254*      ld a,c
040119 CD A5 00 04 0255*      call printHex8
04011D             0256*  ; print de
04011D EB          0257*      ex de,hl
04011E CD 9F 00 04 0258*      call printHex16
040122 EB          0259*      ex de,hl
040123             0260*  ; restore registers
040123 F1          0261*      pop af
040124 C1          0262*      pop bc
040125 C9          0263*      ret
040126             0264*  
040126             0265*  printHexUIX:
040126             0266*  ; store everything in scratch
040126 22 9F 05 04 0267*      ld (uhl),hl
04012A ED 43 A2 05 0268*      ld (ubc),bc
       04          
04012F ED 53 A5 05 0269*      ld (ude),de
       04          
040134 DD 22 A8 05 0270*      ld (uix),ix
       04          
040139 FD 22 AB 05 0271*      ld (uiy),iy
       04          
04013E F5          0272*      push af ; fml
04013F             0273*  
04013F 21 36 05 04 0274*      ld hl,str_ixu
040143 CD 77 00 04 0275*      call printString
040147 2A A8 05 04 0276*      ld hl,(uix)
04014B CD 97 00 04 0277*      call printHex24
04014F CD 8C 00 04 0278*      call printNewLine
040153             0279*  
040153             0280*  ; restore everything
040153 2A 9F 05 04 0281*      ld hl, (uhl)
040157 ED 4B A2 05 0282*      ld bc, (ubc)
       04          
04015C ED 5B A5 05 0283*      ld de, (ude)
       04          
040161 DD 2A A8 05 0284*      ld ix, (uix)
       04          
040166 FD 2A AB 05 0285*      ld iy, (uiy)
       04          
04016B F1          0286*      pop af
04016C             0287*  ; all done
04016C C9          0288*      ret
04016D             0289*  
04016D             0290*  ; Print a 0x HEX prefix
04016D             0291*  DisplayHexPrefix:
04016D 3E 30       0292*      LD A, '0'
04016F 5B D7       0293*      RST.LIL 10h
040171 3E 78       0294*      LD A, 'x'
040173 5B D7       0295*      RST.LIL 10h
040175 C9          0296*      RET
040176             0297*  
040176             0298*      MACRO printDecBC
040176             0299*      push hl
040176             0300*      push bc
040176             0301*      pop hl
040176             0302*      call printDec
040176             0303*      pop hl
040176             0304*      ENDMACRO
040176             0305*  
040176             0306*      MACRO printDecDE
040176             0307*      push hl
040176             0308*      push de
040176             0309*      pop hl
040176             0310*      call printDec
040176             0311*      pop hl
040176             0312*      ENDMACRO
040176             0313*  
040176             0314*      MACRO printDecHL
040176             0315*      call printDec
040176             0316*      ENDMACRO
040176             0317*  
040176             0318*      MACRO printDecIX
040176             0319*      push hl
040176             0320*      push ix
040176             0321*      pop hl
040176             0322*      call printDec
040176             0323*      pop hl
040176             0324*      ENDMACRO
040176             0325*  
040176             0326*      MACRO printDecIY
040176             0327*      push hl
040176             0328*      push iy
040176             0329*      pop hl
040176             0330*      call printDec
040176             0331*      pop hl
040176             0332*      ENDMACRO
040176             0333*  
040176             0334*  
040176             0335*  ; Prints the right justified decimal value in HL without leading zeroes
040176             0336*  ; HL : Value to print
040176             0337*  ; preserves all registers and flags
040176             0338*  printDec:
040176             0339*  ; BEGIN MY CODE
040176             0340*  ; back up all the things
040176 F5          0341*      push af
040177 C5          0342*      push bc
040178 D5          0343*      push de
040179 E5          0344*      push hl
04017A             0345*  ; END MY CODE
04017A 11 A2 01 04 0346*      LD DE, _printDecBuffer
04017E CD B2 01 04 0347*      CALL u24_to_ascii
040182             0348*  ; BEGIN MY CODE
040182             0349*  ; replace leading zeroes with spaces
040182 21 A2 01 04 0350*      LD HL, _printDecBuffer
040186 06 07       0351*      ld B, 7 ; if HL was 0, we want to keep the final zero
040188             0352*  @loop:
040188 7E          0353*      LD A, (HL)
040189 FE 30       0354*      CP '0'
04018B C2 95 01 04 0355*      JP NZ, @done
04018F 3E 20       0356*      LD A, ' '
040191 77          0357*      LD (HL), A
040192 23          0358*      INC HL
040193             0359*      ; CALL vdu_cursor_forward
040193 10 F3       0360*      DJNZ @loop
040195             0361*  @done:
040195             0362*  ; END MY CODE
040195 21 A2 01 04 0363*      LD HL, _printDecBuffer
040199 CD 77 00 04 0364*      CALL printString
04019D             0365*  ; BEGIN MY CODE
04019D             0366*  ; restore all the things
04019D E1          0367*      pop hl
04019E D1          0368*      pop de
04019F C1          0369*      pop bc
0401A0 F1          0370*      pop af
0401A1             0371*  ; END MY CODE
0401A1 C9          0372*      RET
0401A2 00 00 00 00 0373*  _printDecBuffer: blkb 16,0 ; a few bytes extra just to be sure
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
0401B2             0374*  
0401B2             0375*  ; This routine converts the unsigned 24-bit value in HLU into it's ASCII representation,
0401B2             0376*  ; starting to memory location pointing by DE, in decimal form and with leading zeroes
0401B2             0377*  ; so it will allways be 8 characters length
0401B2             0378*  ; HL : Value to convert to string
0401B2             0379*  ; DE : pointer to buffer, at least 8 byte + 0
0401B2             0380*  u24_to_ascii:
0401B2 01 80 69 67 0381*      LD BC,-10000000
0401B6 CD E9 01 04 0382*      CALL @one_digit
0401BA 01 C0 BD F0 0383*      LD BC,-1000000
0401BE CD E9 01 04 0384*      CALL @one_digit
0401C2 01 60 79 FE 0385*      LD BC,-100000
0401C6 CD E9 01 04 0386*      CALL @one_digit
0401CA 01 F0 D8 FF 0387*      LD BC,-10000
0401CE CD E9 01 04 0388*      CALL @one_digit
0401D2 01 18 FC FF 0389*      LD BC,-1000
0401D6 CD E9 01 04 0390*      CALL @one_digit
0401DA 01 9C FF FF 0391*      LD BC,-100
0401DE CD E9 01 04 0392*      CALL @one_digit
0401E2 0E F6       0393*      LD C,-10
0401E4 CD E9 01 04 0394*      CALL @one_digit
0401E8 48          0395*      LD C,B
0401E9             0396*  @one_digit:
0401E9 3E 2F       0397*      LD A,'0'-1
0401EB             0398*  @divide_me:
0401EB 3C          0399*      INC A
0401EC 09          0400*      ADD HL,BC
0401ED 38 FC       0401*      JR C,@divide_me
0401EF ED 42       0402*      SBC HL,BC
0401F1 12          0403*      LD (DE),A
0401F2 13          0404*      INC DE
0401F3 C9          0405*      RET
0401F4             0406*  
0401F4             0407*  print_u24:
0401F4 D5          0408*      push de
0401F5 E5          0409*      push hl
0401F6 11 A2 01 04 0410*      ld de,_printDecBuffer
0401FA CD B2 01 04 0411*      call u24_to_ascii
0401FE 21 A2 01 04 0412*      ld hl,_printDecBuffer
040202 CD 77 00 04 0413*      call printString
040206 3E 20       0414*      ld a,' '
040208 5B D7       0415*      rst.lil 10h
04020A E1          0416*      pop hl
04020B D1          0417*      pop de
04020C C9          0418*      ret
04020D             0419*  
04020D             0420*  ; u168_to_ascii: Converts an unsigned 16.8 fixed-point value in HL to an ASCII string.
04020D             0421*  ; HL : Value to convert to string (integer part in H, fractional part in L)
04020D             0422*  ; DE : Pointer to buffer, requires at least 11 bytes (8 digits, sign, decimal point, and null terminator)
04020D             0423*  u168_to_ascii:
04020D             0424*  ; add a leading space to make room for sign flag if needed
04020D 3E 20       0425*      ld a,' '
04020F 12          0426*      ld (de),a
040210 13          0427*      inc de
040211             0428*  ; Convert integer part
040211 E5          0429*      push hl ; Save HL (we’ll need the fractional part later)
040212 CD FB 06 04 0430*      call hlu_udiv256 ; Shift to get integer portion in HL
040216 01 F0 D8 FF 0431*      ld bc, -10000
04021A CD 3D 02 04 0432*      call @one_int
04021E 01 18 FC FF 0433*      ld bc, -1000
040222 CD 3D 02 04 0434*      call @one_int
040226 01 9C FF FF 0435*      ld bc, -100
04022A CD 3D 02 04 0436*      call @one_int
04022E 0E F6       0437*      ld c, -10
040230 CD 3D 02 04 0438*      call @one_int
040234 48          0439*      ld c, b
040235 CD 3D 02 04 0440*      call @one_int
040239 C3 48 02 04 0441*      jp @frac ; Jump to fractional part conversion
04023D             0442*  @one_int:
04023D 3E 2F       0443*      ld a, '0' - 1 ; Start ASCII character at '0'
04023F             0444*  @divide_me:
04023F 3C          0445*      inc a
040240 09          0446*      add hl, bc ; Accumulate until overflow
040241 38 FC       0447*      jr c, @divide_me
040243 ED 42       0448*      sbc hl, bc ; Remove excess after overflow
040245 12          0449*      ld (de), a ; Store ASCII digit
040246 13          0450*      inc de
040247 C9          0451*      ret
040248             0452*  ; Convert fractional part
040248             0453*  @frac:
040248 3E 2E       0454*      ld a, '.' ; Decimal point
04024A 12          0455*      ld (de), a
04024B 13          0456*      inc de
04024C E1          0457*      pop hl ; Restore HL with original fraction
04024D 06 03       0458*      ld b, 3 ; Loop counter for 3 fractional digits
04024F             0459*  @frac_loop:
04024F 26 0A       0460*      ld h, 10 ; Load multiplier for fractional part
040251 ED 6C       0461*      mlt hl ; Multiply by 10, result in HL (H holds the integer part)
040253 3E 30       0462*      ld a, '0'
040255 84          0463*      add a, h ; Convert integer part to ASCII
040256 12          0464*      ld (de), a
040257 13          0465*      inc de
040258 10 F5       0466*      djnz @frac_loop ; Repeat for each fractional digit
04025A             0467*  ; Add null terminator
04025A AF          0468*      xor a ; Null terminator
04025B 12          0469*      ld (de), a
04025C C9          0470*      ret
04025D             0471*  
04025D             0472*  print_u168:
04025D D5          0473*      push de
04025E E5          0474*      push hl
04025F 11 A2 01 04 0475*      ld de,_printDecBuffer
040263 CD 0D 02 04 0476*      call u168_to_ascii
040267 21 A2 01 04 0477*      ld hl,_printDecBuffer
04026B CD 77 00 04 0478*      call printString
04026F E1          0479*      pop hl
040270 D1          0480*      pop de
040271 C9          0481*      ret
040272             0482*  
040272             0483*  ; signed version of u168_to_ascii
040272             0484*  s168_to_ascii:
040272 D5          0485*      push de ; save starting address of buffer
040273 CD 94 06 04 0486*      call hlu_abs
040277 F5          0487*      push af ; save sign flag
040278 CD 0D 02 04 0488*      call u168_to_ascii
04027C F1          0489*      pop af ; restore sign flag
04027D D1          0490*      pop de ; restore starting address of buffer
04027E F0          0491*      ret p ; hlu was positive so nothing to do
04027F 3E 2D       0492*      ld a,'-'
040281 12          0493*      ld (de),a
040282 C9          0494*      ret
040283             0495*  
040283             0496*  print_s168:
040283 D5          0497*      push de
040284 E5          0498*      push hl
040285 11 A2 01 04 0499*      ld de,_printDecBuffer
040289 CD 72 02 04 0500*      call s168_to_ascii
04028D 21 A2 01 04 0501*      ld hl,_printDecBuffer
040291 CD 77 00 04 0502*      call printString
040295 E1          0503*      pop hl
040296 D1          0504*      pop de
040297 C9          0505*      ret
040298             0506*  
040298             0507*  print_s168_hl:
040298 F5          0508*      push af
040299 E5          0509*      push hl
04029A CD 83 02 04 0510*      call print_s168
04029E 3E 20       0511*      ld a,' '
0402A0 5B D7       0512*      rst.lil 10h
0402A2 E1          0513*      pop hl
0402A3 F1          0514*      pop af
0402A4 C9          0515*      ret
0402A5             0516*  
0402A5             0517*  print_s168_bc:
0402A5 F5          0518*      push af
0402A6 C5          0519*      push bc
0402A7 E5          0520*      push hl
0402A8 C5          0521*      push bc
0402A9 E1          0522*      pop hl
0402AA CD 83 02 04 0523*      call print_s168
0402AE 3E 20       0524*      ld a,' '
0402B0 5B D7       0525*      rst.lil 10h
0402B2 E1          0526*      pop hl
0402B3 C1          0527*      pop bc
0402B4 F1          0528*      pop af
0402B5 C9          0529*      ret
0402B6             0530*  
0402B6             0531*  print_s168_de:
0402B6 F5          0532*      push af
0402B7 D5          0533*      push de
0402B8 E5          0534*      push hl
0402B9 EB          0535*      ex de,hl
0402BA CD 83 02 04 0536*      call print_s168
0402BE 3E 20       0537*      ld a,' '
0402C0 5B D7       0538*      rst.lil 10h
0402C2 E1          0539*      pop hl
0402C3 D1          0540*      pop de
0402C4 F1          0541*      pop af
0402C5 C9          0542*      ret
0402C6             0543*  
0402C6             0544*  print_s168_hl_bc_de:
0402C6 F5          0545*      push af
0402C7 C5          0546*      push bc
0402C8 D5          0547*      push de
0402C9 E5          0548*      push hl
0402CA CD 83 02 04 0549*      call print_s168
0402CE 3E 20       0550*      ld a,' '
0402D0 5B D7       0551*      rst.lil 10h
0402D2 C5          0552*      push bc
0402D3 E1          0553*      pop hl
0402D4 CD 83 02 04 0554*      call print_s168
0402D8 3E 20       0555*      ld a,' '
0402DA 5B D7       0556*      rst.lil 10h
0402DC EB          0557*      ex de,hl
0402DD CD 83 02 04 0558*      call print_s168
0402E1 3E 20       0559*      ld a,' '
0402E3 5B D7       0560*      rst.lil 10h
0402E5 E1          0561*      pop hl
0402E6 D1          0562*      pop de
0402E7 C1          0563*      pop bc
0402E8 F1          0564*      pop af
0402E9 C9          0565*      ret
0402EA             0566*  
0402EA             0567*  print_s168_bc_de:
0402EA F5          0568*      push af
0402EB C5          0569*      push bc
0402EC D5          0570*      push de
0402ED C5          0571*      push bc
0402EE E1          0572*      pop hl
0402EF CD 83 02 04 0573*      call print_s168
0402F3 3E 20       0574*      ld a,' '
0402F5 5B D7       0575*      rst.lil 10h
0402F7 EB          0576*      ex de,hl
0402F8 CD 83 02 04 0577*      call print_s168
0402FC 3E 20       0578*      ld a,' '
0402FE 5B D7       0579*      rst.lil 10h
040300 E1          0580*      pop hl
040301 D1          0581*      pop de
040302 C1          0582*      pop bc
040303 F1          0583*      pop af
040304 C9          0584*      ret
040305             0585*  
040305             0586*  print_s168_a:
040305 F5          0587*      push af
040306 C5          0588*      push bc
040307 E5          0589*      push hl
040308 21 00 00 00 0590*      ld hl,0
04030C 6F          0591*      ld l,a
04030D CD 98 02 04 0592*      call print_s168_hl
040311 E1          0593*      pop hl
040312 C1          0594*      pop bc
040313 F1          0595*      pop af
040314 C9          0596*      ret
040315             0597*  
040315             0598*  ; #### new functions added by Brandon R. Gates ####
040315             0599*  
040315             0600*  ; print the binary representation of the 8-bit value in a
040315             0601*  ; destroys a, hl, bc
040315             0602*  printBin8:
040315 06 08       0603*      ld b,8 ; loop counter for 8 bits
040317 21 32 03 04 0604*      ld hl,@cmd ; set hl to the low byte of the output string
04031B             0605*      ; (which will be the high bit of the value in a)
04031B             0606*  @loop:
04031B 07          0607*      rlca ; put the next highest bit into carry
04031C 38 04       0608*      jr c,@one
04031E 36 30       0609*      ld (hl),'0'
040320 18 02       0610*      jr @next_bit
040322             0611*  @one:
040322 36 31       0612*      ld (hl),'1'
040324             0613*  @next_bit:
040324 23          0614*      inc hl
040325 10 F4       0615*      djnz @loop
040327             0616*  ; print it
040327 21 32 03 04 0617*      ld hl,@cmd
04032B 01 08 00 00 0618*      ld bc,@end-@cmd
04032F 5B DF       0619*      rst.lil $18
040331 C9          0620*      ret
040332             0621*  @cmd: ds 8 ; eight bytes for eight bits
04033A             0622*  @end:
04033A             0623*  
04033A             0624*  ; print the binary representation of the 8-bit value in a
04033A             0625*  ; in reverse order (lsb first)
04033A             0626*  ; destroys a, hl, bc
04033A             0627*  printBin8Rev:
04033A 06 08       0628*      ld b,8 ; loop counter for 8 bits
04033C 21 57 03 04 0629*      ld hl,@cmd ; set hl to the low byte of the output string
040340             0630*      ; (which will be the high bit of the value in a)
040340             0631*  @loop:
040340 0F          0632*      rrca ; put the next lowest bit into carry
040341 38 04       0633*      jr c,@one
040343 36 30       0634*      ld (hl),'0'
040345 18 02       0635*      jr @next_bit
040347             0636*  @one:
040347 36 31       0637*      ld (hl),'1'
040349             0638*  @next_bit:
040349 23          0639*      inc hl
04034A 10 F4       0640*      djnz @loop
04034C             0641*  ; print it
04034C 21 57 03 04 0642*      ld hl,@cmd
040350 01 08 00 00 0643*      ld bc,@end-@cmd
040354 5B DF       0644*      rst.lil $18
040356 C9          0645*      ret
040357             0646*  @cmd: ds 8 ; eight bytes for eight bits
04035F             0647*  @end:
04035F             0648*  
04035F             0649*  ; print registers to screen in hexidecimal format
04035F             0650*  ; inputs: none
04035F             0651*  ; outputs: values of every register printed to screen
04035F             0652*  ;    values of each register in global scratch memory
04035F             0653*  ; destroys: nothing
04035F             0654*  stepRegistersHex:
04035F             0655*  ; store everything in scratch
04035F 22 9F 05 04 0656*      ld (uhl),hl
040363 ED 43 A2 05 0657*      ld (ubc),bc
       04          
040368 ED 53 A5 05 0658*      ld (ude),de
       04          
04036D DD 22 A8 05 0659*      ld (uix),ix
       04          
040372 FD 22 AB 05 0660*      ld (uiy),iy
       04          
040377 F5          0661*      push af ; fml
040378 E1          0662*      pop hl ; thanks, zilog
040379 22 9C 05 04 0663*      ld (uaf),hl
04037D F5          0664*      push af ; dammit
04037E             0665*  
04037E             0666*  ; home the cursor
04037E             0667*      ; call vdu_home_cursor
04037E             0668*  
04037E             0669*  ; print each register
04037E 21 22 05 04 0670*      ld hl,str_afu
040382 CD 77 00 04 0671*      call printString
040386 2A 9C 05 04 0672*      ld hl,(uaf)
04038A CD 97 00 04 0673*      call printHex24
04038E CD 8C 00 04 0674*      call printNewLine
040392             0675*  
040392 21 27 05 04 0676*      ld hl,str_hlu
040396 CD 77 00 04 0677*      call printString
04039A 2A 9F 05 04 0678*      ld hl,(uhl)
04039E CD 97 00 04 0679*      call printHex24
0403A2 CD 8C 00 04 0680*      call printNewLine
0403A6             0681*  
0403A6 21 2C 05 04 0682*      ld hl,str_bcu
0403AA CD 77 00 04 0683*      call printString
0403AE 2A A2 05 04 0684*      ld hl,(ubc)
0403B2 CD 97 00 04 0685*      call printHex24
0403B6 CD 8C 00 04 0686*      call printNewLine
0403BA             0687*  
0403BA 21 31 05 04 0688*      ld hl,str_deu
0403BE CD 77 00 04 0689*      call printString
0403C2 2A A5 05 04 0690*      ld hl,(ude)
0403C6 CD 97 00 04 0691*      call printHex24
0403CA CD 8C 00 04 0692*      call printNewLine
0403CE             0693*  
0403CE 21 36 05 04 0694*      ld hl,str_ixu
0403D2 CD 77 00 04 0695*      call printString
0403D6 2A A8 05 04 0696*      ld hl,(uix)
0403DA CD 97 00 04 0697*      call printHex24
0403DE CD 8C 00 04 0698*      call printNewLine
0403E2             0699*  
0403E2 21 3B 05 04 0700*      ld hl,str_iyu
0403E6 CD 77 00 04 0701*      call printString
0403EA 2A AB 05 04 0702*      ld hl,(uiy)
0403EE CD 97 00 04 0703*      call printHex24
0403F2 CD 8C 00 04 0704*      call printNewLine
0403F6             0705*  
0403F6             0706*      ; call vsync
0403F6             0707*  
0403F6 CD 8C 00 04 0708*      call printNewLine
0403FA             0709*  
0403FA             0710*  ; check for right shift key and quit if pressed
0403FA             0711*      MOSCALL mos_getkbmap
0403FA 3E 1E       0001*M 			LD	A, function
0403FC 5B CF       0002*M 			RST.LIL	08h
0403FE             0712*  @stayhere:
0403FE             0713*  ; 7 RightShift
0403FE DD CB 00 76 0714*      bit 6,(ix+0)
040402 20 02       0715*      jr nz,@RightShift
040404 18 F8       0716*      jr @stayhere
040406             0717*  @RightShift:
040406 DD CB 0E 86 0718*      res 0,(ix+14) ; debounce the key (hopefully)
04040A 3E 80       0719*      ld a,%10000000
04040C             0720*      ; call multiPurposeDelay
04040C             0721*  
04040C             0722*  ; restore everything
04040C 2A 9F 05 04 0723*      ld hl, (uhl)
040410 ED 4B A2 05 0724*      ld bc, (ubc)
       04          
040415 ED 5B A5 05 0725*      ld de, (ude)
       04          
04041A DD 2A A8 05 0726*      ld ix, (uix)
       04          
04041F FD 2A AB 05 0727*      ld iy, (uiy)
       04          
040424 F1          0728*      pop af
040425             0729*  ; all done
040425 C9          0730*      ret
040426             0731*  
040426             0732*  ; print registers to screen in hexidecimal format
040426             0733*  ; inputs: none
040426             0734*  ; outputs: values of every register printed to screen
040426             0735*  ;    values of each register in global scratch memory
040426             0736*  ; destroys: nothing
040426             0737*  dumpRegistersHex:
040426             0738*  ; store everything in scratch
040426 22 9F 05 04 0739*      ld (uhl),hl
04042A ED 43 A2 05 0740*      ld (ubc),bc
       04          
04042F ED 53 A5 05 0741*      ld (ude),de
       04          
040434 DD 22 A8 05 0742*      ld (uix),ix
       04          
040439 FD 22 AB 05 0743*      ld (uiy),iy
       04          
04043E F5          0744*      push af ; fml
04043F E1          0745*      pop hl ; thanks, zilog
040440 22 9C 05 04 0746*      ld (uaf),hl
040444 F5          0747*      push af ; dammit
040445             0748*  
040445             0749*  ; home the cursor
040445             0750*      ; call vdu_home_cursor
040445             0751*      ; call printNewLine
040445             0752*  
040445             0753*  ; print each register
040445 21 22 05 04 0754*      ld hl,str_afu
040449 CD 77 00 04 0755*      call printString
04044D 2A 9C 05 04 0756*      ld hl,(uaf)
040451 CD 97 00 04 0757*      call printHex24
040455             0758*      ; call printNewLine
040455             0759*  
040455 21 27 05 04 0760*      ld hl,str_hlu
040459 CD 77 00 04 0761*      call printString
04045D 2A 9F 05 04 0762*      ld hl,(uhl)
040461 CD 97 00 04 0763*      call printHex24
040465             0764*      ; call printNewLine
040465             0765*  
040465 21 2C 05 04 0766*      ld hl,str_bcu
040469 CD 77 00 04 0767*      call printString
04046D 2A A2 05 04 0768*      ld hl,(ubc)
040471 CD 97 00 04 0769*      call printHex24
040475             0770*      ; call printNewLine
040475             0771*  
040475 21 31 05 04 0772*      ld hl,str_deu
040479 CD 77 00 04 0773*      call printString
04047D 2A A5 05 04 0774*      ld hl,(ude)
040481 CD 97 00 04 0775*      call printHex24
040485             0776*      ; call printNewLine
040485             0777*  
040485 21 36 05 04 0778*      ld hl,str_ixu
040489 CD 77 00 04 0779*      call printString
04048D 2A A8 05 04 0780*      ld hl,(uix)
040491 CD 97 00 04 0781*      call printHex24
040495             0782*      ; call printNewLine
040495             0783*  
040495 21 3B 05 04 0784*      ld hl,str_iyu
040499 CD 77 00 04 0785*      call printString
04049D 2A AB 05 04 0786*      ld hl,(uiy)
0404A1 CD 97 00 04 0787*      call printHex24
0404A5             0788*      ; call printNewLine
0404A5             0789*  
0404A5             0790*      ; call vdu_vblank
0404A5             0791*  
0404A5 CD 8C 00 04 0792*      call printNewLine
0404A9             0793*  ; restore everything
0404A9 2A 9F 05 04 0794*      ld hl, (uhl)
0404AD ED 4B A2 05 0795*      ld bc, (ubc)
       04          
0404B2 ED 5B A5 05 0796*      ld de, (ude)
       04          
0404B7 DD 2A A8 05 0797*      ld ix, (uix)
       04          
0404BC FD 2A AB 05 0798*      ld iy, (uiy)
       04          
0404C1 F1          0799*      pop af
0404C2             0800*  ; all done
0404C2 C9          0801*      ret
0404C3             0802*  
0404C3             0803*  dumpRegistersHexPrime:
0404C3 D9          0804*      exx
0404C4 08          0805*      ex af,af'
0404C5 CD 26 04 04 0806*      call dumpRegistersHex
0404C9 08          0807*      ex af,af'
0404CA D9          0808*      exx
0404CB C9          0809*      ret
0404CC             0810*  
0404CC             0811*  ; additionally dump prime registers
0404CC             0812*  ; inputs: none
0404CC             0813*  ; outputs: values of every register printed to screen
0404CC             0814*  ; destroys: nothing
0404CC             0815*  dumpRegistersHexAll:
0404CC CD 26 04 04 0816*      call dumpRegistersHex
0404D0 08          0817*      ex af,af'
0404D1 D9          0818*      exx
0404D2 CD 26 04 04 0819*      call dumpRegistersHex
0404D6 08          0820*      ex af,af'
0404D7 D9          0821*      exx
0404D8 C9          0822*      ret
0404D9             0823*  
0404D9             0824*  ; print hlu to screen in hexidecimal format
0404D9             0825*  ; inputs: none
0404D9             0826*  ; destroys: nothing
0404D9             0827*  print_hex_hl:
0404D9 F5          0828*      push af
0404DA E5          0829*      push hl
0404DB 21 27 05 04 0830*      ld hl,str_hlu
0404DF CD 77 00 04 0831*      call printString
0404E3 E1          0832*      pop hl
0404E4 E5          0833*      push hl
0404E5 CD 97 00 04 0834*      call printHex24
0404E9 3E 20       0835*      ld a,' '
0404EB 5B D7       0836*      rst.lil 10h
0404ED E1          0837*      pop hl
0404EE F1          0838*      pop af
0404EF C9          0839*      ret
0404F0             0840*  
0404F0             0841*  ; print bcu to screen in hexidecimal format
0404F0             0842*  ; inputs: none
0404F0             0843*  ; destroys: nothing
0404F0             0844*  print_hex_bc:
0404F0 F5          0845*      push af
0404F1 E5          0846*      push hl
0404F2 C5          0847*      push bc
0404F3 21 2C 05 04 0848*      ld hl,str_bcu
0404F7 CD 77 00 04 0849*      call printString
0404FB E1          0850*      pop hl
0404FC E5          0851*      push hl
0404FD CD 97 00 04 0852*      call printHex24
040501 3E 20       0853*      ld a,' '
040503 5B D7       0854*      rst.lil 10h
040505 C1          0855*      pop bc
040506 E1          0856*      pop hl
040507 F1          0857*      pop af
040508 C9          0858*      ret
040509             0859*  
040509             0860*  ; print deu to screen in hexidecimal format
040509             0861*  ; inputs: none
040509             0862*  ; destroys: nothing
040509             0863*  print_hex_de:
040509 F5          0864*      push af
04050A E5          0865*      push hl
04050B D5          0866*      push de
04050C 21 31 05 04 0867*      ld hl,str_deu
040510 CD 77 00 04 0868*      call printString
040514 E1          0869*      pop hl
040515 E5          0870*      push hl
040516 CD 97 00 04 0871*      call printHex24
04051A 3E 20       0872*      ld a,' '
04051C 5B D7       0873*      rst.lil 10h
04051E D1          0874*      pop de
04051F E1          0875*      pop hl
040520 F1          0876*      pop af
040521 C9          0877*      ret
040522             0878*  
040522 20 61 66 3D 0879*  str_afu: db " af=",0
       00          
040527 20 68 6C 3D 0880*  str_hlu: db " hl=",0
       00          
04052C 20 62 63 3D 0881*  str_bcu: db " bc=",0
       00          
040531 20 64 65 3D 0882*  str_deu: db " de=",0
       00          
040536 20 69 78 3D 0883*  str_ixu: db " ix=",0
       00          
04053B 20 69 79 3D 0884*  str_iyu: db " iy=",0
       00          
040540             0885*  
040540             0886*  ; print udeuhl to screen in hexidecimal format
040540             0887*  ; inputs: none
040540             0888*  ; outputs: concatenated hexidecimal udeuhl
040540             0889*  ; destroys: nothing
040540             0890*  dumpUDEUHLHex:
040540             0891*  ; store everything in scratch
040540 22 9F 05 04 0892*      ld (uhl),hl
040544 ED 43 A2 05 0893*      ld (ubc),bc
       04          
040549 ED 53 A5 05 0894*      ld (ude),de
       04          
04054E DD 22 A8 05 0895*      ld (uix),ix
       04          
040553 FD 22 AB 05 0896*      ld (uiy),iy
       04          
040558 F5          0897*      push af
040559             0898*  
040559             0899*  ; print each register
040559             0900*  
040559 21 93 05 04 0901*      ld hl,str_udeuhl
04055D CD 77 00 04 0902*      call printString
040561 2A A5 05 04 0903*      ld hl,(ude)
040565 CD 97 00 04 0904*      call printHex24
040569 3E 2E       0905*      ld a,'.' ; print a dot to separate the values
04056B 5B D7       0906*      rst.lil 10h
04056D 2A 9F 05 04 0907*      ld hl,(uhl)
040571 CD 97 00 04 0908*      call printHex24
040575 CD 8C 00 04 0909*      call printNewLine
040579             0910*  
040579             0911*  ; restore everything
040579 2A 9F 05 04 0912*      ld hl, (uhl)
04057D ED 4B A2 05 0913*      ld bc, (ubc)
       04          
040582 ED 5B A5 05 0914*      ld de, (ude)
       04          
040587 DD 2A A8 05 0915*      ld ix, (uix)
       04          
04058C FD 2A AB 05 0916*      ld iy, (uiy)
       04          
040591 F1          0917*      pop af
040592             0918*  ; all done
040592 C9          0919*      ret
040593             0920*  
040593 75 64 65 2E 0921*  str_udeuhl: db "ude.uhl=",0
       75 68 6C 3D 
       00          
04059C             0922*  
04059C             0923*  ; global scratch memory for registers
04059C 00 00 00    0924*  uaf: dl 0
04059F 00 00 00    0925*  uhl: dl 0
0405A2 00 00 00    0926*  ubc: dl 0
0405A5 00 00 00    0927*  ude: dl 0
0405A8 00 00 00    0928*  uix: dl 0
0405AB 00 00 00    0929*  uiy: dl 0
0405AE 00 00 00    0930*  usp: dl 0
0405B1 00 00 00    0931*  upc: dl 0
0405B4             0932*  
0405B4             0933*  ; inputs: whatever is in the flags register
0405B4             0934*  ; outputs: binary representation of flags
0405B4             0935*  ;          with a header so we know which is what
0405B4             0936*  ; destroys: nothing
0405B4             0937*  ; preserves: everything
0405B4             0938*  dumpFlags:
0405B4             0939*  ; first we curse zilog for not giving direct access to flags
0405B4 F5          0940*      push af ; this is so we can send it back unharmed
0405B5 F5          0941*      push af ; this is so we can pop it to hl
0405B6             0942*  ; store everything in scratch
0405B6 22 9F 05 04 0943*      ld (uhl),hl
0405BA ED 43 A2 05 0944*      ld (ubc),bc
       04          
0405BF ED 53 A5 05 0945*      ld (ude),de
       04          
0405C4 DD 22 A8 05 0946*      ld (uix),ix
       04          
0405C9 FD 22 AB 05 0947*      ld (uiy),iy
       04          
0405CE             0948*  ; next we print the header
0405CE 21 FA 05 04 0949*      ld hl,@header
0405D2 CD 77 00 04 0950*      call printString
0405D6 E1          0951*      pop hl ; flags are now in l
0405D7 7D          0952*      ld a,l ; flags are now in a
0405D8 CD 15 03 04 0953*      call printBin8
0405DC CD 8C 00 04 0954*      call printNewLine
0405E0             0955*  ; restore everything
0405E0 2A 9F 05 04 0956*      ld hl, (uhl)
0405E4 ED 4B A2 05 0957*      ld bc, (ubc)
       04          
0405E9 ED 5B A5 05 0958*      ld de, (ude)
       04          
0405EE DD 2A A8 05 0959*      ld ix, (uix)
       04          
0405F3 FD 2A AB 05 0960*      ld iy, (uiy)
       04          
0405F8 F1          0961*      pop af ; send her home the way she came
0405F9 C9          0962*      ret
0405FA             0963*  ; Bit 7 (S): Sign flag
0405FA             0964*  ; Bit 6 (Z): Zero flag
0405FA             0965*  ; Bit 5 (5): Reserved (copy of bit 5 of the result)
0405FA             0966*  ; Bit 4 (H): Half Carry flag
0405FA             0967*  ; Bit 3 (3): Reserved (copy of bit 3 of the result)
0405FA             0968*  ; Bit 2 (PV): Parity/Overflow flag
0405FA             0969*  ; Bit 1 (N): Subtract flag
0405FA             0970*  ; Bit 0 (C): Carry flag
0405FA 53 5A 78 48 0971*  @header: db "SZxHxPNC\r\n",0 ; cr/lf and 0 terminator
       78 50 4E 43 
       0D 0A 00    
040605             0972*  
040605             0973*  ; set all the bits in the flag register
040605             0974*  ; more of an academic exercise than anything useful
040605             0975*  ; inputs; none
040605             0976*  ; outputs; a=0,f=255
040605             0977*  ; destroys: flags, hl
040605             0978*  ; preserves: a, because why not
040605             0979*  setAllFlags:
040605 21 FF 00 00 0980*      ld hl,255
040609 67          0981*      ld h,a ; four cycles to preserve a is cheap
04060A E5          0982*      push hl
04060B F1          0983*      pop af
04060C C9          0984*      ret
04060D             0985*  
04060D             0986*  ; reset all the bits in the flag register
04060D             0987*  ; unlike its inverse counterpart, this may actually be useful
04060D             0988*  ; inputs; none
04060D             0989*  ; outputs; a=0,f=0
04060D             0990*  ; destroys: flags, hl
04060D             0991*  ; preserves: a, because why not
04060D             0992*  resetAllFlags:
04060D 21 00 00 00 0993*      ld hl,0
040611 67          0994*      ld h,a ; four cycles to preserve a is cheap
040612 E5          0995*      push hl
040613 F1          0996*      pop af
040614 C9          0997*      ret
040615             0998*  
040615             0999*  ; wait until user presses a key
040615             1000*  ; inputs: none
040615             1001*  ; outputs: ascii code of key pressed in a
040615             1002*  ; destroys: af,ix
040615             1003*  waitKeypress:
040615             1004*      MOSCALL mos_getkey
040615 3E 00       0001*M 			LD	A, function
040617 5B CF       0002*M 			RST.LIL	08h
040619 C9          1005*      ret
04061A             1006*  
04061A             1007*  ; print bytes from an address to the screen in hexidecimal format
04061A             1008*  ; inputs: hl = address of first byte to print, a = number of bytes to print
04061A             1009*  ; outputs: values of each byte printed to screen separated by spaces
04061A             1010*  ; destroys: nothing
04061A             1011*  dumpMemoryHex:
04061A             1012*  ; save registers to the stack
04061A C5          1013*      push bc
04061B E5          1014*      push hl
04061C F5          1015*      push af
04061D             1016*  
04061D             1017*  ; print the address and separator
04061D CD 97 00 04 1018*      call printHex24
040621 3E 3A       1019*      ld a,':'
040623 5B D7       1020*      rst.lil 10h
040625 3E 20       1021*      ld a,' '
040627 5B D7       1022*      rst.lil 10h
040629             1023*  
040629             1024*  ; set b to be our loop counter
040629 F1          1025*      pop af
04062A 47          1026*      ld b,a
04062B E1          1027*      pop hl
04062C E5          1028*      push hl
04062D F5          1029*      push af
04062E             1030*  @loop:
04062E             1031*  ; print the byte
04062E 7E          1032*      ld a,(hl)
04062F CD A5 00 04 1033*      call printHex8
040633             1034*  ; print a space
040633 3E 20       1035*      ld a,' '
040635 5B D7       1036*      rst.lil 10h
040637 23          1037*      inc hl
040638 10 F4       1038*      djnz @loop
04063A CD 8C 00 04 1039*      call printNewLine
04063E             1040*  
04063E             1041*  ; restore everything
04063E F1          1042*      pop af
04063F E1          1043*      pop hl
040640 C1          1044*      pop bc
040641             1045*  
040641             1046*  ; all done
040641 C9          1047*      ret
040642             1048*  
040642             1049*  
040642             1050*  ; print bytes from an address to the screen in binary format
040642             1051*  ; inputs: hl = address of first byte to print, a = number of bytes to print
040642             1052*  ; outputs: values of each byte printed to screen separated by spaces
040642             1053*  ; destroys: nothing
040642             1054*  dumpMemoryBin:
040642             1055*  ; save all registers to the stack
040642 F5          1056*      push af
040643 C5          1057*      push bc
040644 D5          1058*      push de
040645 E5          1059*      push hl
040646 DD E5       1060*      push ix
040648 FD E5       1061*      push iy
04064A             1062*  
04064A             1063*  ; set b to be our loop counter
04064A 47          1064*      ld b,a
04064B             1065*  @loop:
04064B             1066*  ; print the byte
04064B 7E          1067*      ld a,(hl)
04064C E5          1068*      push hl
04064D C5          1069*      push bc
04064E CD 15 03 04 1070*      call printBin8
040652 C1          1071*      pop bc
040653             1072*  ; print a space
040653 3E 20       1073*      ld a,' '
040655 5B D7       1074*      rst.lil 10h
040657 E1          1075*      pop hl
040658 23          1076*      inc hl
040659 10 F0       1077*      djnz @loop
04065B CD 8C 00 04 1078*      call printNewLine
04065F             1079*  
04065F             1080*  ; restore everything
04065F FD E1       1081*      pop iy
040661 DD E1       1082*      pop ix
040663 E1          1083*      pop hl
040664 D1          1084*      pop de
040665 C1          1085*      pop bc
040666 F1          1086*      pop af
040667             1087*  ; all done
040667 C9          1088*      ret
040668             1089*  
040668             1090*  ; print bytes from an address to the screen in binary format
040668             1091*  ; with the bits of each byte in reverse order (lsb first)
040668             1092*  ; inputs: hl = address of first byte to print, a = number of bytes to print
040668             1093*  ; outputs: values of each byte printed to screen separated by spaces
040668             1094*  ; destroys: nothing
040668             1095*  dumpMemoryBinRev:
040668             1096*  ; save all registers to the stack
040668 F5          1097*      push af
040669 C5          1098*      push bc
04066A D5          1099*      push de
04066B E5          1100*      push hl
04066C DD E5       1101*      push ix
04066E FD E5       1102*      push iy
040670             1103*  
040670             1104*  ; set b to be our loop counter
040670 47          1105*      ld b,a
040671             1106*  @loop:
040671             1107*  ; print the byte
040671 7E          1108*      ld a,(hl)
040672 E5          1109*      push hl
040673 C5          1110*      push bc
040674 CD 3A 03 04 1111*      call printBin8Rev
040678 C1          1112*      pop bc
040679             1113*  ; print a space
040679 3E 20       1114*      ld a,' '
04067B 5B D7       1115*      rst.lil 10h
04067D E1          1116*      pop hl
04067E 23          1117*      inc hl
04067F 10 F0       1118*      djnz @loop
040681 CD 8C 00 04 1119*      call printNewLine
040685             1120*  
040685             1121*  ; restore everything
040685 FD E1       1122*      pop iy
040687 DD E1       1123*      pop ix
040689 E1          1124*      pop hl
04068A D1          1125*      pop de
04068B C1          1126*      pop bc
04068C F1          1127*      pop af
04068D             1128*  ; all done
04068D C9          1129*      ret
04068E             0031       include "maths.inc"
04068E             0001*  ; test the sign of HL
04068E             0002*  ; inputs: HL obviously
04068E             0003*  ; outputs: sign flag set if HL is negative, zero flag set if HL is zero
04068E             0004*  ; destroys: flags
04068E             0005*      MACRO sign_hlu
04068E             0006*      add hl,de
04068E             0007*      or a
04068E             0008*      sbc hl,de
04068E             0009*      ENDMACRO
04068E             0010*  
04068E             0011*  
04068E             0012*  ;------------------------------------------------------------------------
04068E             0013*  ; Scratch area for calculations
04068E             0014*  ;------------------------------------------------------------------------
04068E 00 00 00    0015*  scratch1: dw24 0 ;bit manipulation buffer 1
040691 00 00 00    0016*  scratch2: dw24 0 ;bit manipulation buffer 2
040694             0017*  
040694             0018*  ; absolute value of hlu
040694             0019*  ; returns: abs(hlu), flags set according to the incoming sign of hlu:
040694             0020*  ;         s1,z0,pv0,n1,c0 if hlu was negative
040694             0021*  ;         s0,z1,pv0,n1,c0 if hlu was zero
040694             0022*  ;         s0,z0,pv0,n1,c0 if hlu was positive
040694             0023*  ; destroys: a
040694             0024*  hlu_abs:
040694 19          0025*      add hl,de
040695 B7          0026*      or a
040696 ED 52       0027*      sbc hl,de
040698 FA 9D 06 04 0028*      jp m,@is_neg
04069C C9          0029*      ret ; hlu is positive or zero so we're done
04069D             0030*  @is_neg:
04069D F5          0031*      push af ; otherwise, save current flags for return
04069E CD A4 06 04 0032*      call neg_hlu ; negate hlu
0406A2 F1          0033*      pop af ; get back flags
0406A3 C9          0034*      ret
0406A4             0035*  
0406A4             0036*  ; flip the sign of hlu
0406A4             0037*  ; inputs: hlu
0406A4             0038*  ; returns: 0-hlu, flags set appropriately for the result:
0406A4             0039*  ;         s1,z0,pv0,n1,c1 if result is negative
0406A4             0040*  ;         s0,z1,pv0,n1,c0 if result is zero
0406A4             0041*  ;         s0,z0,pv0,n1,c1 if result is positive
0406A4             0042*  ; destroys a
0406A4             0043*  neg_hlu:
0406A4 D5          0044*      push de ; save de
0406A5 EB          0045*      ex de,hl ; put hl into de
0406A6 21 00 00 00 0046*      ld hl,0 ; clear hl
0406AA AF          0047*      xor a ; clear carry
0406AB ED 52       0048*      sbc hl,de ; 0-hlu = -hlu
0406AD D1          0049*      pop de ; get de back
0406AE C9          0050*      ret ; easy peasy
0406AF             0051*  
0406AF             0052*  ;------------------------------------------------------------------------
0406AF             0053*  ; divide hlu by 2, inspired by above
0406AF             0054*  ;------------------------------------------------------------------------
0406AF             0055*  hlu_div2:
0406AF 22 8E 06 04 0056*      ld (scratch1),hl
0406B3 21 90 06 04 0057*      ld hl,scratch1+2
0406B7 CB 1E       0058*      rr (hl)
0406B9 2B          0059*      dec hl
0406BA CB 1E       0060*      rr (hl)
0406BC 2B          0061*      dec hl
0406BD CB 1E       0062*      rr (hl)
0406BF 23          0063*      inc hl
0406C0 23          0064*      inc hl
0406C1 2A 8E 06 04 0065*      ld hl,(scratch1)
0406C5 C9          0066*      ret
0406C6             0067*  
0406C6             0068*  ; this is my little hack to divide by 16
0406C6             0069*  hlu_div16:
0406C6 AF          0070*      xor a
0406C7 29          0071*      add hl,hl
0406C8 17          0072*      rla
0406C9 29          0073*      add hl,hl
0406CA 17          0074*      rla
0406CB 29          0075*      add hl,hl
0406CC 17          0076*      rla
0406CD 29          0077*      add hl,hl
0406CE 17          0078*      rla
0406CF 22 DC 06 04 0079*      ld (@scratch),hl
0406D3 32 DF 06 04 0080*      ld (@scratch+3),a
0406D7 2A DD 06 04 0081*      ld hl,(@scratch+1)
0406DB C9          0082*      ret
0406DC             0083*  @scratch: ds 4
0406E0             0084*  
0406E0             0085*  ; hlu signed division by 256
0406E0             0086*  ; returns: hlu / 256
0406E0             0087*  ; destroys: af
0406E0             0088*  hlu_sdiv256:
0406E0 AF          0089*      xor a ; assume hl is positive
0406E1 22 F7 06 04 0090*      ld (@buffer),hl
0406E5             0091*      sign_hlu
0406E5 19          0001*M     add hl,de
0406E6 B7          0002*M     or a
0406E7 ED 52       0003*M     sbc hl,de
0406E9 F2 EE 06 04 0092*      jp p,@hl_pos
0406ED 3D          0093*      dec a
0406EE             0094*  @hl_pos:
0406EE 32 FA 06 04 0095*      ld (@buffer+3),a
0406F2 2A F8 06 04 0096*      ld hl,(@buffer+1)
0406F6 C9          0097*      ret
0406F7             0098*  @buffer: ds 4
0406FB             0099*  
0406FB             0100*  ; hlu 1 byte right shift, unsigned
0406FB             0101*  ; returns: hlu / 256, fractional portion in a
0406FB             0102*  ; destroys: af
0406FB             0103*  hlu_udiv256:
0406FB AF          0104*      xor a
0406FC 32 0D 07 04 0105*      ld (@buffer+3),a
040700 7D          0106*      ld a,l ; save the fractional portion
040701 22 0A 07 04 0107*      ld (@buffer),hl
040705 2A 0B 07 04 0108*      ld hl,(@buffer+1)
040709 C9          0109*      ret
04070A             0110*  @buffer: ds 4
04070E             0111*  
04070E             0112*      MACRO hlu_mul256
04070E             0113*      add hl,hl ; * 2
04070E             0114*      add hl,hl ; * 4
04070E             0115*      add hl,hl ; * 8
04070E             0116*      add hl,hl ; * 16
04070E             0117*      add hl,hl ; * 32
04070E             0118*      add hl,hl ; * 64
04070E             0119*      add hl,hl ; * 128
04070E             0120*      add hl,hl ; * 256
04070E             0121*      ENDMACRO
04070E             0122*  
04070E             0123*  ; compute the modulo of hlu by deu
04070E             0124*  ; outputs: hlu = hlu % deu
04070E             0125*  ; destroys: f, hl
04070E             0126*  hlu_mod:
04070E B7          0127*      or a ; clear carry
04070F             0128*  @loop:
04070F ED 52       0129*      sbc hl,de
040711 DA 19 07 04 0130*      jp c, @end
040715 C3 0F 07 04 0131*      jp @loop
040719             0132*  @end:
040719 19          0133*      add hl,de
04071A C9          0134*      ret
04071B             0135*  
04071B             0136*  
04071B 00 00 00 00 0137*  add_bcd_arg1: db #00,#00,#00,#00
04071F 00 00 00 00 0138*  add_bcd_arg2: db #00,#00,#00,#00
040723             0139*  
040723             0140*  ; set bcd values in a scratch memory address from registers bcde
040723             0141*  ; input: hl; scratch address,bcde; 8-place bcd number
040723             0142*  ; destroys ; hl
040723             0143*  set_bcd:
040723 73          0144*      ld (hl),e
040724 23          0145*      inc hl
040725 72          0146*      ld (hl),d
040726 23          0147*      inc hl
040727 71          0148*      ld (hl),c
040728 23          0149*      inc hl
040729 70          0150*      ld (hl),b
04072A C9          0151*      ret
04072B             0152*  
04072B             0153*  ; load bcd values from a scratch memory address to bcde
04072B             0154*  ; input: hl; scratch address
04072B             0155*  ; output: bcde; 8-place bcd number
04072B             0156*  ; destroys: hl
04072B             0157*  get_bcd:
04072B 5E          0158*      ld e,(hl)
04072C 23          0159*      inc hl
04072D 56          0160*      ld d,(hl)
04072E 23          0161*      inc hl
04072F 4E          0162*      ld c,(hl)
040730 23          0163*      inc hl
040731 46          0164*      ld b,(hl)
040732 C9          0165*      ret
040733             0166*  
040733             0167*  ; BCD addition
040733             0168*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
040733             0169*  ;       a is the number of bytes holding each number (number of places/2)
040733             0170*  ; outputs: (hl) + (de) --> (hl)
040733             0171*  ; destroys: a,b,de,hl
040733             0172*  add_bcd:
040733 47          0173*      ld b,a ; loop counter
040734 AF          0174*      xor a ; reset a, clear carry flag
040735             0175*  adcec:
040735 1A          0176*      ld a,(de) ; addend to acc
040736 8E          0177*      adc a,(hl) ; add (hl) to acc
040737 27          0178*      daa ; adjust result to bcd
040738 77          0179*      ld (hl),a ; store result
040739 23          0180*      inc hl ; advance memory pointers
04073A 13          0181*      inc de
04073B 10 F8       0182*      djnz adcec ; loop until b == 0
04073D C9          0183*      ret
04073E             0184*  
04073E             0185*  ; BCD subtraction
04073E             0186*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
04073E             0187*  ;       a is the number of bytes holding each number (number of places/2)
04073E             0188*  ; outputs: (hl) - (de) --> (hl)
04073E             0189*  ; destroys: a,b,de,hl
04073E             0190*  sub_bcd:
04073E 47          0191*      ld b,a ; loop counter
04073F AF          0192*      xor a ; reset a,clear carry flag
040740             0193*  subdec:
040740 1A          0194*      ld a,(de) ; subtrahend to acc
040741 9E          0195*      sbc a,(hl) ; subtract (hl) from acc
040742 27          0196*      daa ; adjust result to bcd
040743 77          0197*      ld (hl),a ; store result
040744 23          0198*      inc hl ; advance memory pointers
040745 13          0199*      inc de
040746 10 F8       0200*      djnz subdec ; loop until b == 0
040748 C9          0201*      ret
040749             0202*  
040749             0203*  ; http://www.z80.info/pseudo-random.txt
040749             0204*  rand_8:
040749 C5          0205*      push bc
04074A 3A 5D 07 04 0206*      ld a,(r_seed)
04074E 4F          0207*      ld c,a
04074F             0208*  
04074F 0F          0209*      rrca ; multiply by 32
040750 0F          0210*      rrca
040751 0F          0211*      rrca
040752 EE 1F       0212*      xor 0x1f
040754             0213*  
040754 81          0214*      add a,c
040755 DE FF       0215*      sbc a,255 ; carry
040757             0216*  
040757 32 5D 07 04 0217*      ld (r_seed),a
04075B C1          0218*      pop bc
04075C C9          0219*      ret
04075D 50          0220*  r_seed: defb $50
04075E             0221*  
04075E             0222*  ; https://www.omnimaga.org/asm-language/ez80-optimized-routines/msg399325/#msg399325
04075E             0223*  prng24:
04075E             0224*  ;;Expects ADL mode.
04075E             0225*  ;;Output: HL
04075E             0226*  ;;50cc
04075E             0227*  ;;33 bytes
04075E             0228*  ;;cycle length: 281,474,959,933,440 (about 2.8 trillion)
04075E ED 5B 7F 07 0229*      ld de,(seed1)
       04          
040763 B7          0230*      or a
040764 ED 62       0231*      sbc hl,hl
040766 19          0232*      add hl,de
040767 29          0233*      add hl,hl
040768 29          0234*      add hl,hl
040769 2C          0235*      inc l
04076A 19          0236*      add hl,de
04076B 22 7F 07 04 0237*      ld (seed1),hl
04076F 2A 82 07 04 0238*      ld hl,(seed2)
040773 29          0239*      add hl,hl
040774 9F          0240*      sbc a,a
040775 E6 1B       0241*      and %00011011
040777 AD          0242*      xor l
040778 6F          0243*      ld l,a
040779 22 82 07 04 0244*      ld (seed2),hl
04077D 19          0245*      add hl,de
04077E C9          0246*      ret
04077F 00 00 00    0247*  seed1: dl 0
040782 00 00 00    0248*  seed2: dl 0
040785             0032       include "files.inc"
040785             0001*  ; load to onboard 8k sram
040785             0002*  filedata: equ 0xB7E000; Directory object structure (DIR)
040785             0033       include "fixed168.inc"
040785             0001*  ; multiply a signed 24-bit number by an unsigned 8-bit number giving a signed 24-bit result
040785             0002*  ; uses EZ80 MLT instruction for speed
040785             0003*  ; operation: UHL * A --> UHL
040785             0004*  ; destroys: AF, HL
040785             0005*  smul24x8:
040785             0006*  ; make hl positive and store sign flag
040785 CD 94 06 04 0007*      call hlu_abs
040789 F5          0008*      push af
04078A             0009*  ; do the division
04078A CD 95 07 04 0010*      call mul24x8 ; hl = product
04078E             0011*  ; adjust sign of result
04078E F1          0012*      pop af ; sign de
04078F F0          0013*      ret p ; hl was positive, nothing to do
040790 CD A4 06 04 0014*      call neg_hlu ; result is negative
040794 C9          0015*      ret
040795             0016*  
040795             0017*  ; unsigned multiplication of a 24-bit and 8-bit number giving a 32-bit result
040795             0018*  ; uses EZ80 MLT instruction for speed
040795             0019*  ; operation: UHL * A --> AUHL
040795             0020*  ; destroys: AF, HL
040795             0021*  mul24x8:
040795 D5          0022*      push de ; preserve de
040796             0023*  ; low byte
040796 5D          0024*      ld e,l
040797 57          0025*      ld d,a
040798 ED 5C       0026*      mlt de
04079A 6B          0027*      ld l,e ; product low byte
04079B 08          0028*      ex af,af' ; save multiplier
04079C 7A          0029*      ld a,d ; carry
04079D 08          0030*      ex af,af' ; save carry, restore multiplier
04079E             0031*  ; high byte
04079E 5C          0032*      ld e,h
04079F 57          0033*      ld d,a
0407A0 ED 5C       0034*      mlt de
0407A2 08          0035*      ex af,af' ; save multiplier, restore carry
0407A3 83          0036*      add a,e ; add carry
0407A4 67          0037*      ld h,a ; product middle byte
0407A5 7A          0038*      ld a,d ; carry
0407A6 08          0039*      ex af,af' ; save carry, restore multiplier
0407A7             0040*  ; upper byte
0407A7 22 C2 07 04 0041*      ld (@scratch),hl ; 7 cycles
0407AB 5F          0042*      ld e,a
0407AC 3A C4 07 04 0043*      ld a,(@scratch+2)
0407B0 57          0044*      ld d,a
0407B1 ED 5C       0045*      mlt de
0407B3 08          0046*      ex af,af' ; restore carry
0407B4 8B          0047*      adc a,e ; add carry
0407B5 32 C4 07 04 0048*      ld (@scratch+2),a ; 5 cycles
0407B9 2A C2 07 04 0049*      ld hl,(@scratch) ; 7 cycles
0407BD             0050*  ; highest byte
0407BD 3E 00       0051*      ld a,0 ; preserve carry flag
0407BF 8A          0052*      adc a,d ; product highest byte
0407C0 D1          0053*      pop de ; restore de
0407C1 C9          0054*      ret
0407C2             0055*  @scratch: ds 3
0407C5             0056*  
0407C5 00 00 00 00 0057*  mul24out: blkb 6,0
       00 00       
0407CB             0058*  
0407CB             0059*  ; unsigned multiplication of two 24-bit numbers giving a 48-bit result
0407CB             0060*  ; operation: UHL * UDE --> mul24out
0407CB             0061*  mul24:
0407CB DD E5       0062*      push ix ; preserve
0407CD             0063*  ; point to output buffer and clear it
0407CD DD 21 C5 07 0064*      ld ix,mul24out
       04          
0407D2 C5          0065*      push bc
0407D3 01 00 00 00 0066*      ld bc,0
0407D7 DD 0F 00    0067*      ld (ix),bc
0407DA DD 0F 03    0068*      ld (ix+3),bc
0407DD C1          0069*      pop bc
0407DE             0070*  ; STEP 1: UHL * E
0407DE 7B          0071*      ld a,e
0407DF E5          0072*      push hl
0407E0 CD 95 07 04 0073*      call mul24x8
0407E4 DD 2F 00    0074*      ld (ix+0),hl
0407E7 DD 77 03    0075*      ld (ix+3),a
0407EA             0076*  ; STEP 2: UHL * D
0407EA E1          0077*      pop hl
0407EB E5          0078*      push hl
0407EC 7A          0079*      ld a,d
0407ED CD 95 07 04 0080*      call mul24x8
0407F1 CD 0A 08 04 0081*      call @accumulate
0407F5             0082*  ; STEP 3: UHL * DEU
0407F5 E1          0083*      pop hl
0407F6 ED 53 3A 08 0084*      ld (@de),de
       04          
0407FB 3A 3C 08 04 0085*      ld a,(@de+2)
0407FF CD 95 07 04 0086*      call mul24x8
040803 CD 0A 08 04 0087*      call @accumulate
040807             0088*  ; all done
040807 DD E1       0089*      pop ix ; restore
040809 C9          0090*      ret
04080A             0091*  @accumulate:
04080A DD 23       0092*      inc ix
04080C             0093*  ; highest byte of product to carry
04080C DD 77 03    0094*      ld (ix+3),a
04080F             0095*  ; low byte of product
04080F 7D          0096*      ld a,l
040810 DD 86 00    0097*      add a,(ix+0)
040813 DD 77 00    0098*      ld (ix+0),a
040816             0099*  ; high byte of product
040816 7C          0100*      ld a,h
040817 DD 8E 01    0101*      adc a,(ix+1)
04081A DD 77 01    0102*      ld (ix+1),a
04081D             0103*  ; uppper byte of product
04081D 22 37 08 04 0104*      ld (@hl),hl
040821 3A 39 08 04 0105*      ld a,(@hl+2)
040825 DD 8E 02    0106*      adc a,(ix+2)
040828 DD 77 02    0107*      ld (ix+2),a
04082B             0108*  ; carry
04082B 3E 00       0109*      ld a,0 ; preserve flags
04082D DD 8E 03    0110*      adc a,(ix+3)
040830 DD 77 03    0111*      ld (ix+3),a
040833 C9          0112*      ret
040834             0113*  
040834 00 00 00    0114*  @ix: dl 0
040837 00 00 00    0115*  @hl: dl 0
04083A 00 00 00    0116*  @de: dl 0
04083D             0117*  
04083D             0118*  ; UHL * UDE --> UHL (unsigned)
04083D             0119*  umul24:
04083D CD CB 07 04 0120*      call mul24
040841 2A C5 07 04 0121*      ld hl,(mul24out)
040845 C9          0122*      ret
040846             0123*  
040846             0124*  ; UH.L = UH.L*UD.E (unsigned)
040846             0125*  umul168:
040846 CD CB 07 04 0126*      call mul24
04084A 2A C6 07 04 0127*      ld hl,(mul24out+1)
04084E C9          0128*      ret
04084F             0129*  
04084F             0130*  ; UH.L * UD.E --> UH.L (signed)
04084F             0131*  smul168:
04084F             0132*  ; make everything positive and store sign flags
04084F CD 94 06 04 0133*      call hlu_abs
040853 F5          0134*      push af
040854 EB          0135*      ex de,hl
040855 CD 94 06 04 0136*      call hlu_abs
040859 EB          0137*      ex de,hl
04085A F5          0138*      push af
04085B             0139*  ; do the division
04085B CD 46 08 04 0140*      call umul168 ; hl = product
04085F             0141*  ; adjust sign of result
04085F F1          0142*      pop af ; sign de
040860 FA 6B 08 04 0143*      jp m,@de_neg
040864 F1          0144*      pop af ; sign hl
040865 F0          0145*      ret p ; both positive, nothing to do
040866             0146*  @hl_neg:
040866 CD A4 06 04 0147*      call neg_hlu ; de pos, hl neg, result is negative
04086A C9          0148*      ret
04086B             0149*  @de_neg:
04086B F1          0150*      pop af
04086C F8          0151*      ret m ; both negative, nothing to do
04086D CD A4 06 04 0152*      call neg_hlu ; result is negative
040871 C9          0153*      ret
040872             0154*  
040872             0155*  ; UH.L / UD.E --> UD.E rem UHL (unsigned)
040872             0156*  ; perform unsigned division of 16.8 fixed place values
040872             0157*  ; with an unsigned 16.8 fixed place result and 24-bit remainder
040872             0158*  udiv168:
040872             0159*  ; back up divisor
040872 ED 53 A9 08 0160*      ld (@ude),de
       04          
040877             0161*  ; get the 16-bit integer part of the quotient
040877 CD DA 08 04 0162*      call udiv24 ; de = quotient, hl = remainder
04087B             0163*  ; load quotient to upper three bytes of output
04087B ED 53 B0 08 0164*      ld (div168_out+1),de
       04          
040880             0165*  @div256:
040880             0166*  ; multiply remainder by 256
040880             0167*      hlu_mul256
040880 29          0001*M     add hl,hl ; * 2
040881 29          0002*M     add hl,hl ; * 4
040882 29          0003*M     add hl,hl ; * 8
040883 29          0004*M     add hl,hl ; * 16
040884 29          0005*M     add hl,hl ; * 32
040885 29          0006*M     add hl,hl ; * 64
040886 29          0007*M     add hl,hl ; * 128
040887 29          0008*M     add hl,hl ; * 256
040888             0168*  ; skip fractional computation if remainder is zero
040888             0169*      sign_hlu
040888 19          0001*M     add hl,de
040889 B7          0002*M     or a
04088A ED 52       0003*M     sbc hl,de
04088C 20 03       0170*      jr nz,@div_frac
04088E AF          0171*      xor a
04088F 18 0A       0172*      jr @write_frac
040891             0173*  ; now divide the shifted remainder by the divisor
040891             0174*  @div_frac:
040891 ED 5B A9 08 0175*      ld de,(@ude) ; get back divisor
       04          
040896 CD DA 08 04 0176*      call udiv24 ; de = quotient, hl = remainder
04089A             0177*  ; load low byte of quotient to low byte of output
04089A 7B          0178*      ld a,e
04089B             0179*  @write_frac:
04089B 32 AF 08 04 0180*      ld (div168_out),a
04089F             0181*  ; load de with return value
04089F ED 5B AF 08 0182*      ld de,(div168_out)
       04          
0408A4             0183*  ; load a with any overflow
0408A4 3A B2 08 04 0184*      ld a,(div168_out+3)
0408A8 C9          0185*      ret ; ud.e is the 16.8 result
0408A9             0186*  @ude: ds 6
0408AF             0187*  div168_out: ds 4 ; the extra byte is for overflow
0408B3             0188*  
0408B3             0189*  ; UH.L / UD.E --> UD.E (signed) rem UHL (unsigned)
0408B3             0190*  ; perform signed division of 16.8 fixed place values
0408B3             0191*  ; with a signed 16.8 fixed place result and unsigned 24-bit remainder
0408B3             0192*  sdiv168:
0408B3             0193*  ; make everything positive and store sign flags
0408B3 CD 94 06 04 0194*      call hlu_abs
0408B7 F5          0195*      push af
0408B8 EB          0196*      ex de,hl
0408B9 CD 94 06 04 0197*      call hlu_abs
0408BD EB          0198*      ex de,hl
0408BE F5          0199*      push af
0408BF             0200*  ; do the division
0408BF CD 72 08 04 0201*      call udiv168 ; de = quotient, hl = remainder
0408C3             0202*  ; adjust sign of result
0408C3 F1          0203*      pop af ; sign de
0408C4 FA D1 08 04 0204*      jp m,@de_neg
0408C8 F1          0205*      pop af ; sign hl
0408C9 F0          0206*      ret p ; both positive, nothing to do
0408CA             0207*  @hl_neg:
0408CA EB          0208*      ex de,hl ; hl = quotient, de = remainder
0408CB CD A4 06 04 0209*      call neg_hlu ; de pos, hl neg, result is negative
0408CF EB          0210*      ex de,hl ; de = negated quotient, hl = remainder
0408D0 C9          0211*      ret
0408D1             0212*  @de_neg:
0408D1 F1          0213*      pop af
0408D2 F8          0214*      ret m ; both negative, nothing to do
0408D3 EB          0215*      ex de,hl ; hl = quotient, de = remainder
0408D4 CD A4 06 04 0216*      call neg_hlu ; result is negative
0408D8 EB          0217*      ex de,hl ; de = negated quotient, hl = remainder
0408D9 C9          0218*      ret
0408DA             0219*  
0408DA             0220*  ;------------------------------------------------------------------------
0408DA             0221*  ;  arith24.asm
0408DA             0222*  ;  24-bit ez80 arithmetic routines
0408DA             0223*  ;  Copyright (c) Shawn Sijnstra 2024
0408DA             0224*  ;  MIT license
0408DA             0225*  ;
0408DA             0226*  ;  This library was created as a tool to help make ez80
0408DA             0227*  ;  24-bit native assembly routines for simple mathematical problems
0408DA             0228*  ;  more widely available.
0408DA             0229*  ;
0408DA             0230*  ;------------------------------------------------------------------------
0408DA             0231*  ;
0408DA             0232*  ;------------------------------------------------------------------------
0408DA             0233*  ; udiv24
0408DA             0234*  ; Unsigned 24-bit division
0408DA             0235*  ; Divides HLU by DEU. Gives result in DEU (and BC), remainder in HLU.
0408DA             0236*  ;
0408DA             0237*  ; Uses AF BC DE HL
0408DA             0238*  ; Uses Restoring Division algorithm
0408DA             0239*  ;------------------------------------------------------------------------
0408DA             0240*  
0408DA             0241*  udiv24:
0408DA E5          0242*      push hl
0408DB C1          0243*      pop bc ;move dividend to BCU
0408DC 21 00 00 00 0244*      ld hl,0 ;result
0408E0 A7          0245*      and a
0408E1 ED 52       0246*      sbc hl,de ;test for div by 0
0408E3 C8          0247*      ret z ;it's zero, carry flag is clear
0408E4 19          0248*      add hl,de ;HL is 0 again
0408E5 3E 18       0249*      ld a,24 ;number of loops through.
0408E7             0250*  udiv1:
0408E7 C5          0251*      push bc ;complicated way of doing this because of lack of access to top bits
0408E8 E3          0252*      ex (sp),hl
0408E9 37          0253*      scf
0408EA ED 6A       0254*      adc hl,hl
0408EC E3          0255*      ex (sp),hl
0408ED C1          0256*      pop bc ;we now have bc = (bc * 2) + 1
0408EE             0257*  
0408EE ED 6A       0258*      adc hl,hl
0408F0 A7          0259*      and a ;is this the bug
0408F1 ED 52       0260*      sbc hl,de
0408F3 30 02       0261*      jr nc,udiv2
0408F5 19          0262*      add hl,de
0408F6             0263*  ;	dec	c
0408F6 0B          0264*      dec bc
0408F7             0265*  udiv2:
0408F7 3D          0266*      dec a
0408F8 20 ED       0267*      jr nz,udiv1
0408FA 37          0268*      scf ;flag used for div0 error
0408FB C5          0269*      push bc
0408FC D1          0270*      pop de ;remainder
0408FD C9          0271*      ret
0408FE             0272*  
0408FE             0273*  ;------------------------------------------------------------------------
0408FE             0274*  ;  END 24-bit ez80 arithmetic routines by Shawn Sijnstra
0408FE             0275*  ;------------------------------------------------------------------------
0408FE             0276*  
0408FE             0277*  
0408FE             0278*      ; include "trig24fast.inc"
0408FE             0279*  
0408FE             0280*  
0408FE             0281*  ; convert signed angles from a 360 to 256 degree circle
0408FE             0282*  ; inputs: uh.l is the angle360 in 16.8 fixed format
0408FE             0283*  ; outputs: uh.l is the angle256 in 16.8 fixed format
0408FE             0284*  ; destroys: TODO
0408FE             0285*  deg_360_to_256:
0408FE D5          0286*      push de ; preserve de
0408FF             0287*  ; make angle positive and store sign flag
0408FF CD 94 06 04 0288*      call hlu_abs
040903 F5          0289*      push af
040904             0290*  ; multiply by coversion factor of 256/360
040904 11 B6 00 00 0291*      ld de,0x0000B6 ; 0.711
040908 CD 46 08 04 0292*      call umul168 ; uh.l = uh.l * 0.711
04090C             0293*  ; restore sign flag and adjust output accordingly
04090C F1          0294*      pop af
04090D F2 15 09 04 0295*      jp p,@pos ; positive number
040911 CD A4 06 04 0296*      call neg_hlu
040915             0297*  @pos:
040915             0298*  ; restore de and return uh.l as the result
040915 D1          0299*      pop de
040916 C9          0300*      ret
040917             0301*  
040917             0302*  ; convert signed angles from a 256 to 360 degree circle
040917             0303*  ; inputs: uh.l is the angle256 in 16.8 fixed format
040917             0304*  ; outputs: uh.l is the angle360 in 16.8 fixed format
040917             0305*  ; destroys: TODO
040917             0306*  deg_256_to_360:
040917 D5          0307*      push de ; preserve de
040918             0308*  ; make angle positive and store sign flag
040918 CD 94 06 04 0309*      call hlu_abs
04091C F5          0310*      push af
04091D             0311*  ; multiply by coversion factor of 360/256
04091D 11 68 01 00 0312*      ld de,0x000168 ; 1.406
040921 CD 46 08 04 0313*      call umul168 ; uh.l = uh.l * 1.406
040925             0314*  ; restore sign flag and adjust output accordingly
040925 F1          0315*      pop af
040926 F2 2E 09 04 0316*      jp p,@pos ; positive number
04092A CD A4 06 04 0317*      call neg_hlu
04092E             0318*  @pos:
04092E             0319*  ; restore de and return uh.l as the result
04092E D1          0320*      pop de
04092F C9          0321*      ret
040930             0322*  
040930             0323*  ; fixed 16.8 routine
040930             0324*  ; cos(uh.l) --> uh.l
040930             0325*  ; destroys: f, hl
040930             0326*  cos168:
040930 D5          0327*      push de ; preserve de
040931             0328*  ; for cos we simply increment the angle by 90 degrees
040931             0329*  ; or 0x004000 in 16.8 degrees256
040931             0330*  ; which makes it a sin problem
040931 11 00 40 00 0331*      ld de,0x004000
040935 19          0332*      add hl,de ; modulo 256 happens below
040936 D1          0333*      pop de ; restore de
040937             0334*  ; fall through to sin168
040937             0335*  
040937             0336*  ; ---------------------
040937             0337*  ; fixed 16.8 routine
040937             0338*  ; sin(uh.l) --> uh.l
040937             0339*  ; destroys: f, hl
040937             0340*  sin168:
040937 D5          0341*      push de
040938             0342*  ; handle negative angles appropriately
040938 CD 94 06 04 0343*      call hlu_abs
04093C F2 45 09 04 0344*      jp p,@F
040940 11 00 00 FF 0345*      ld de,-256*256
040944 19          0346*      add hl,de
040945             0347*  @@:
040945 2E 03       0348*      ld l,3 ; multiply by 3 to get our lookup index
040947 ED 6C       0349*      mlt hl
040949 11 94 0B 04 0350*      ld de,sin_lut_168 ; grab the lut address
04094D 19          0351*      add hl,de ; bump hl by the index
04094E ED 27       0352*      ld hl,(hl) ; don't try this on a z80!
040950 D1          0353*      pop de
040951 C9          0354*      ret
040952             0355*  
040952             0356*  ; 16.8 fixed inputs / outputs
040952             0357*  ; takes: uh.l as angle in degrees 256
040952             0358*  ;        ud.e as radius
040952             0359*  ; returns ub.c as dx, ud.e as dy, uh.l as radius
040952             0360*  ;        displacements from origin (0,0)
040952             0361*  ; destroys: everything except indexes
040952             0362*  polar_to_cartesian:
040952             0363*  ; back up input parameters
040952 22 81 09 04 0364*      ld (@angle), hl
040956 ED 53 84 09 0365*      ld (@radius), de
       04          
04095B             0366*  ; compute dx = sin(uh.l) * ud.e
04095B CD 37 09 04 0367*      call sin168 ; uh.l = sin(uh.l)
04095F ED 5B 84 09 0368*      ld de,(@radius)
       04          
040964 CD 4F 08 04 0369*      call smul168 ; uh.l = dx
040968 E5          0370*      push hl
040969             0371*  ; compute dy = -cos(uh.l) * ud.e
040969 2A 81 09 04 0372*      ld hl,(@angle)
04096D CD 30 09 04 0373*      call cos168 ; uh.l = cos(uh.l)
040971 ED 5B 84 09 0374*      ld de,(@radius)
       04          
040976 CD 4F 08 04 0375*      call smul168 ; uh.l = dy
04097A CD A4 06 04 0376*      call neg_hlu ; invert dy for screen coords convention
04097E EB          0377*      ex de,hl ; de = dy for output
04097F C1          0378*      pop bc ; bc = dx for output
040980             0379*  ; and out
040980 C9          0380*      ret
040981             0381*  @angle: ds 3
040984             0382*  @radius: ds 3
040987             0383*  
040987             0384*  ; inputs: ub.c and ud.e are x0 and y0 in 16.8 fixed format
040987             0385*  ;         ui.x and ui.y are x1 and y1 in 16.8 fixed format
040987             0386*  ; output: ub.c and ud.e are dx and dy in 16.8 fixed format
040987             0387*  ;         also populates scratch locations dx168 and dy168
040987             0388*  ; destroys: a,hl,bc,de
040987             0389*  dxy168:
040987             0390*  ; compute dx = x1-x0
040987 AF          0391*      xor a ; clear carry
040988 DD E5       0392*      push ix ; move ix to hl via the stack
04098A E1          0393*      pop hl ; hl = x1
04098B ED 42       0394*      sbc hl,bc ; hl = dx
04098D 22 A2 09 04 0395*      ld (dx168),hl ; dx to scratch
040991             0396*  ; compute dy = y1-y0
040991 AF          0397*      xor a ; clear carry
040992 FD E5       0398*      push iy ; move iy to hl via the stack
040994 E1          0399*      pop hl ; hl = y1
040995 ED 52       0400*      sbc hl,de ; hl = dy
040997 22 A8 09 04 0401*      ld (dy168),hl ; dy to scratch
04099B             0402*  ; populate output registers and return
04099B EB          0403*      ex de,hl ; ud.e = dy
04099C ED 4B A2 09 0404*      ld bc,(dx168) ; ub.c = dx
       04          
0409A1 C9          0405*      ret
0409A2 00 00 00 00 0406*  dx168: blkb 6,0
       00 00       
0409A8 00 00 00 00 0407*  dy168: blkb 6,0
       00 00       
0409AE             0408*  
0409AE             0409*  ; compute the euclidian distance between two cartesian coordinates
0409AE             0410*  ; using the formula d = sqrt(dx^2+dy^2)
0409AE             0411*  ; inputs: dx168 and dy168 are dx and dy in 16.8 fixed format
0409AE             0412*  ; output; uh.l is the 16.8 fixed format distance
0409AE             0413*  ;         also populates scratch locations dx168 and dy168
0409AE             0414*  ; destroys: a,hl,bc,de
0409AE             0415*  ; NOTE: rounds both deltas down to the nearest integer to avoid overflow when squaring,
0409AE             0416*  ;       thus the result will always be an integer, albeit in 16.8 format
0409AE             0417*  distance168:
0409AE             0418*  ; compute dy^2
0409AE 2A A8 09 04 0419*      ld hl,(dy168)
0409B2 CD 94 06 04 0420*      call hlu_abs
0409B6 CD FB 06 04 0421*      call hlu_udiv256 ; make integer to avoid overflow
0409BA E5          0422*      push hl
0409BB D1          0423*      pop de
0409BC CD 3D 08 04 0424*      call umul24 ; hl = dy^2
0409C0 E5          0425*      push hl ; save dy^2
0409C1             0426*  ; compute dx^2
0409C1 2A A2 09 04 0427*      ld hl,(dx168)
0409C5 CD 94 06 04 0428*      call hlu_abs
0409C9 CD FB 06 04 0429*      call hlu_udiv256 ; make integer to avoid overflow
0409CD E5          0430*      push hl
0409CE D1          0431*      pop de
0409CF CD 3D 08 04 0432*      call umul24 ; hl = dx^2
0409D3             0433*  ; add dx^2 and dy^2
0409D3 D1          0434*      pop de ; de = dy^2 (was hl)
0409D4 19          0435*      add hl,de ; hl = dx^2 + dy^2
0409D5             0436*  ; compute the square root
0409D5 CD AE 0A 04 0437*      call sqrt24 ; de = sqrt(dx^2 + dy^2)
0409D9 EB          0438*      ex de,hl ; hl = distance
0409DA             0439*      hlu_mul256 ; convert back to 16.8 fixed
0409DA 29          0001*M     add hl,hl ; * 2
0409DB 29          0002*M     add hl,hl ; * 4
0409DC 29          0003*M     add hl,hl ; * 8
0409DD 29          0004*M     add hl,hl ; * 16
0409DE 29          0005*M     add hl,hl ; * 32
0409DF 29          0006*M     add hl,hl ; * 64
0409E0 29          0007*M     add hl,hl ; * 128
0409E1 29          0008*M     add hl,hl ; * 256
0409E2 C9          0440*      ret
0409E3             0441*  
0409E3             0442*  ; atan2_(ub.c,ud.e) --> uh.l
0409E3             0443*  ; inputs: ub.c and ud.e are dx and dy in 16.8 fixed format
0409E3             0444*  ;   whether inputs are integers or fractional doesn't matter
0409E3             0445*  ;   so long as the sign bit of the upper byte is correct
0409E3             0446*  ; output: uh.l is the 16.8 fixed angle in degrees 256
0409E3             0447*  ; angles are COMPASS HEADINGS based on
0409E3             0448*  ; screen coordinate conventions,where the y axis is flipped
0409E3             0449*  ; #E0 224      0       32 #20
0409E3             0450*  ;        -x,-y | +x,-y
0409E3             0451*  ; #C0 192------+------ 64 #40
0409E3             0452*  ;        -x,+y | +x,+y
0409E3             0453*  ; #A0 160   128 #80   96 #60
0409E3             0454*  atan2_168fast:
0409E3             0455*  ; get signs and make everything positive
0409E3             0456*  ; get abs(x) and store its original sign
0409E3 C5          0457*      push bc
0409E4 E1          0458*      pop hl
0409E5 CD 94 06 04 0459*      call hlu_abs ; if x was negative this also sets the sign flag
0409E9 E5          0460*      push hl ; store abs(x)
0409EA C1          0461*      pop bc ; bc = abs(x)
0409EB F5          0462*      push af ; store sign of x
0409EC             0463*  ; get abs(y) and store its original sign
0409EC EB          0464*      ex de,hl ; hl = y
0409ED CD 94 06 04 0465*      call hlu_abs ; if y was negative this also sets the sign flag
0409F1 EB          0466*      ex de,hl ; de = abs(y)
0409F2 F5          0467*      push af ; store sign of y
0409F3             0468*  ; if abs(bc) < abs(de),then we do bc/de,otherwise de/bc
0409F3             0469*  ; this ensures that our lookup value is between 0 and 1 inclusive
0409F3 AF          0470*      xor a ; clear the carry flag
0409F4 D5          0471*      push de
0409F5 E1          0472*      pop hl
0409F6 ED 42       0473*      sbc hl,bc
0409F8 F5          0474*      push af ; save sign of de - bc
0409F9 F2 02 0A 04 0475*      jp p,@1 ; bc <= de, so we skip ahead
0409FD             0476*  ; otherwise we swap bc and de
0409FD C5          0477*      push bc
0409FE E1          0478*      pop hl
0409FF EB          0479*      ex de,hl
040A00 E5          0480*      push hl
040A01 C1          0481*      pop bc
040A02             0482*  @1:
040A02             0483*  ; now we're ready to snag our preliminary result
040A02 C5          0484*      push bc
040A03 E1          0485*      pop hl
040A04 CD 72 0A 04 0486*      call atan_168fast ; uh.l comes back with prelim result
040A08             0487*  ; now we adjust uh.l based on sign of de - bc
040A08 F1          0488*      pop af
040A09 F2 15 0A 04 0489*      jp p,@2 ; bc <= de,so we skip ahead
040A0D EB          0490*      ex de,hl
040A0E 21 00 40 00 0491*      ld hl,64*256 ; subtract from 64 (90) degrees
040A12 AF          0492*      xor a ; clear the carry flag
040A13 ED 52       0493*      sbc hl,de
040A15             0494*  @2:
040A15             0495*  ; adjust the result based on quadrant
040A15             0496*  ; #E0 224      0       32 #20
040A15             0497*  ;        -x,-y | +x,-y
040A15             0498*  ; #C0 192------+------ 64 #40
040A15             0499*  ;        -x,+y | +x,+y
040A15             0500*  ; #A0 160   128 #80   96 #60
040A15 F1          0501*      pop af ; sign of y
040A16 CA 53 0A 04 0502*      jp z,@y_zero
040A1A F2 33 0A 04 0503*      jp p,@y_pos
040A1E             0504*  ; y neg,check x
040A1E F1          0505*      pop af ; sign of x
040A1F CA 2D 0A 04 0506*      jp z,@y_neg_x_zero
040A23 F2 32 0A 04 0507*      jp p,@y_neg_x_pos
040A27             0508*  ; y neg,x neg
040A27             0509*  ; angle is 128 to 256 (270 to 360)
040A27             0510*  ; negating the intermediate does the trick
040A27 CD A4 06 04 0511*      call neg_hlu
040A2B 18 31       0512*      jr @zero_hlu
040A2D             0513*  
040A2D             0514*  @y_neg_x_zero:
040A2D             0515*  ; y neg,x zero
040A2D             0516*  ; angle is 0
040A2D 21 00 00 00 0517*      ld hl,0
040A31 C9          0518*      ret
040A32             0519*  @y_neg_x_pos:
040A32             0520*  ; y neg,x pos
040A32             0521*  ; angle is 0 to 64 (0 to 90)
040A32             0522*  ; so we're good
040A32 C9          0523*      ret
040A33             0524*  
040A33             0525*  @y_pos:
040A33 F1          0526*      pop af ; sign of x
040A34 CA 43 0A 04 0527*      jp z,@y_pos_x_zero
040A38 F2 48 0A 04 0528*      jp p,@y_pos_x_pos
040A3C             0529*  ; y pos,x neg
040A3C             0530*  ; angle is 128 to 192 (180-270)
040A3C             0531*  ; so we add 128 to intermediate
040A3C 11 00 80 00 0532*      ld de,128*256
040A40 19          0533*      add hl,de
040A41 18 1B       0534*      jr @zero_hlu
040A43             0535*  @y_pos_x_zero:
040A43             0536*  ; y pos,x zero
040A43             0537*  ; angle is 128 (180)
040A43 21 00 80 00 0538*      ld hl,128*256
040A47 C9          0539*      ret
040A48             0540*  @y_pos_x_pos:
040A48             0541*  ; y pos,x pos
040A48             0542*  ; angle is 64 to 128 (90 to 180)
040A48             0543*  ; neg the intermediate and add 180 degrees
040A48 CD A4 06 04 0544*      call neg_hlu
040A4C 11 00 80 00 0545*      ld de,128*256
040A50 19          0546*      add hl,de
040A51 18 0B       0547*      jr @zero_hlu
040A53             0548*  
040A53             0549*  @y_zero:
040A53 F1          0550*      pop af ; sign of x
040A54 FA 59 0A 04 0551*      jp m,@y_zero_x_neg
040A58             0552*  ; y zero,x pos
040A58             0553*  ; angle is 64 (90),nothing to do
040A58 C9          0554*      ret
040A59             0555*  @y_zero_x_neg:
040A59             0556*  ; y zero ,x neg
040A59             0557*  ; angle is 192 (270)
040A59 21 00 C0 00 0558*      ld hl,192*256
040A5D C9          0559*      ret
040A5E             0560*  @zero_hlu:
040A5E AF          0561*      xor a
040A5F 22 6C 0A 04 0562*      ld (@scratch),hl
040A63 32 6E 0A 04 0563*      ld (@scratch+2),a
040A67 2A 6C 0A 04 0564*      ld hl,(@scratch)
040A6B C9          0565*      ret
040A6C             0566*  @scratch: ds 6
040A72             0567*  
040A72             0568*  ; inputs: ub.c and ud.e are dx and dy in 16.8 fixed format
040A72             0569*  ; output: uh.l is the 16.8 fixed format angle in degrees 256
040A72             0570*  ; destroys: a,hl,bc,de
040A72             0571*  ; note: only works for angles from 0 to 32 (45) degrees
040A72             0572*  ;   use atan2_168fast (which calls this proc) to handle the full 256 (360) degrees
040A72             0573*  atan_168fast:
040A72             0574*  ; because we use compass headings instead of geometric angles
040A72             0575*  ; we compute dx/dy which is 1/tan(theta) in the maths world
040A72             0576*  ; we can do faster unsigned division here because we know dx and dy are positive
040A72 CD 72 08 04 0577*      call udiv168 ; ud.e = dx/dy
040A76 EB          0578*      ex de,hl ; uh.l = dx/dy
040A77             0579*  ; test uh.l for 0
040A77 19          0580*      add hl,de
040A78 B7          0581*      or a
040A79 ED 52       0582*      sbc hl,de
040A7B 28 22       0583*      jr z,@is_zero
040A7D             0584*  ; test uh.l for 1
040A7D AF          0585*      xor a ; clear carry
040A7E EB          0586*      ex de,hl
040A7F 21 00 01 00 0587*      ld hl,1*256 ; 1 in 16.8 fixed format
040A83 ED 52       0588*      sbc hl,de
040A85 28 13       0589*      jr z,@is_45
040A87 EB          0590*      ex de,hl
040A88             0591*  ; no special cases so we move on
040A88             0592*  ; l contains the fractional portion of tan(uh.l)
040A88             0593*  ; we multiply it by three to get our lookup table index
040A88 26 03       0594*      ld h,3
040A8A ED 6C       0595*      mlt hl ; index into lut
040A8C 11 00 00 00 0596*      ld de,0 ; clear deu
040A90 54          0597*      ld d,h ; copy hl to de
040A91 5D          0598*      ld e,l ; de contains our index
040A92 21 97 0E 04 0599*      ld hl,atan_lut_168 ; grab the lut address
040A96 19          0600*      add hl,de ; bump hl by the index
040A97 ED 27       0601*      ld hl,(hl) ; don't try this on a z80!
040A99 C9          0602*      ret ; and out
040A9A             0603*  @is_45:
040A9A 21 00 40 00 0604*      ld hl,64*256
040A9E C9          0605*      ret
040A9F             0606*  ; for the case tan(0)
040A9F             0607*  @is_zero:
040A9F 21 00 00 00 0608*      ld hl,0*256
040AA3 C9          0609*      ret
040AA4             0610*  
040AA4             0611*  ; Expects  ADL mode
040AA4             0612*  ; Inputs:  UH.L
040AA4             0613*  ; Outputs: UH.L is the 16.8 square root
040AA4             0614*  ;          UDE is the integer difference inputHL-DE^2
040AA4             0615*  sqrt168:
040AA4 CD AE 0A 04 0616*      call sqrt24
040AA8 EB          0617*      ex de,hl
040AA9 29          0618*      add hl,hl
040AAA 29          0619*      add hl,hl
040AAB 29          0620*      add hl,hl
040AAC 29          0621*      add hl,hl
040AAD C9          0622*      ret
040AAE             0623*  
040AAE             0624*  ; credit: xeda112358
040AAE             0625*  ; https://www.cemetech.net/forum/viewtopic.php?t=11178&postdays=0&postorder=asc&start=0
040AAE             0626*  sqrt24:
040AAE             0627*  ; Expects ADL mode
040AAE             0628*  ; Inputs: HL
040AAE             0629*  ; Outputs: DE is the integer square root
040AAE             0630*  ;  HL is the difference inputHL-DE^2
040AAE             0631*  ;  c flag reset
040AAE 01 00 00 00 0632*      ld bc,0 ; clear bcu
040AB2 11 00 00 00 0633*      ld de,0 ; clear deu
040AB6 AF          0634*      xor a
040AB7 45          0635*      ld b,l
040AB8 C5          0636*      push bc
040AB9 47          0637*      ld b,a
040ABA 6F          0638*      ld l,a
040ABB             0639*  ; Iteration 1
040ABB 29          0640*      add hl,hl
040ABC CB 11       0641*      rl c
040ABE 29          0642*      add hl,hl
040ABF CB 11       0643*      rl c
040AC1 91          0644*      sub c
040AC2 30 04       0645*      jr nc,$+6
040AC4 1C          0646*      inc e
040AC5 1C          0647*      inc e
040AC6 2F          0648*      cpl
040AC7 4F          0649*      ld c,a
040AC8             0650*  ; Iteration 2
040AC8 29          0651*      add hl,hl
040AC9 CB 11       0652*      rl c
040ACB 29          0653*      add hl,hl
040ACC CB 11       0654*      rl c
040ACE CB 13       0655*      rl e
040AD0 7B          0656*      ld a,e
040AD1 91          0657*      sub c
040AD2 30 04       0658*      jr nc,$+6
040AD4 1C          0659*      inc e
040AD5 1C          0660*      inc e
040AD6 2F          0661*      cpl
040AD7 4F          0662*      ld c,a
040AD8             0663*  ; Iteration 3
040AD8 29          0664*      add hl,hl
040AD9 CB 11       0665*      rl c
040ADB 29          0666*      add hl,hl
040ADC CB 11       0667*      rl c
040ADE CB 13       0668*      rl e
040AE0 7B          0669*      ld a,e
040AE1 91          0670*      sub c
040AE2 30 04       0671*      jr nc,$+6
040AE4 1C          0672*      inc e
040AE5 1C          0673*      inc e
040AE6 2F          0674*      cpl
040AE7 4F          0675*      ld c,a
040AE8             0676*  ; Iteration 4
040AE8 29          0677*      add hl,hl
040AE9 CB 11       0678*      rl c
040AEB 29          0679*      add hl,hl
040AEC CB 11       0680*      rl c
040AEE CB 13       0681*      rl e
040AF0 7B          0682*      ld a,e
040AF1 91          0683*      sub c
040AF2 30 04       0684*      jr nc,$+6
040AF4 1C          0685*      inc e
040AF5 1C          0686*      inc e
040AF6 2F          0687*      cpl
040AF7 4F          0688*      ld c,a
040AF8             0689*  ; Iteration 5
040AF8 29          0690*      add hl,hl
040AF9 CB 11       0691*      rl c
040AFB 29          0692*      add hl,hl
040AFC CB 11       0693*      rl c
040AFE CB 13       0694*      rl e
040B00 7B          0695*      ld a,e
040B01 91          0696*      sub c
040B02 30 04       0697*      jr nc,$+6
040B04 1C          0698*      inc e
040B05 1C          0699*      inc e
040B06 2F          0700*      cpl
040B07 4F          0701*      ld c,a
040B08             0702*  ; Iteration 6
040B08 29          0703*      add hl,hl
040B09 CB 11       0704*      rl c
040B0B 29          0705*      add hl,hl
040B0C CB 11       0706*      rl c
040B0E CB 13       0707*      rl e
040B10 7B          0708*      ld a,e
040B11 91          0709*      sub c
040B12 30 04       0710*      jr nc,$+6
040B14 1C          0711*      inc e
040B15 1C          0712*      inc e
040B16 2F          0713*      cpl
040B17 4F          0714*      ld c,a
040B18             0715*  ; Iteration 7
040B18 29          0716*      add hl,hl
040B19 CB 11       0717*      rl c
040B1B 29          0718*      add hl,hl
040B1C CB 11       0719*      rl c
040B1E CB 10       0720*      rl b
040B20 EB          0721*      ex de,hl
040B21 29          0722*      add hl,hl
040B22 E5          0723*      push hl
040B23 ED 42       0724*      sbc hl,bc
040B25 30 06       0725*      jr nc,$+8
040B27 7C          0726*      ld a,h
040B28 2F          0727*      cpl
040B29 47          0728*      ld b,a
040B2A 7D          0729*      ld a,l
040B2B 2F          0730*      cpl
040B2C 4F          0731*      ld c,a
040B2D E1          0732*      pop hl
040B2E 30 02       0733*      jr nc,$+4
040B30 23          0734*      inc hl
040B31 23          0735*      inc hl
040B32 EB          0736*      ex de,hl
040B33             0737*  ; Iteration 8
040B33 29          0738*      add hl,hl
040B34 69          0739*      ld l,c
040B35 60          0740*      ld h,b
040B36 ED 6A       0741*      adc hl,hl
040B38 ED 6A       0742*      adc hl,hl
040B3A EB          0743*      ex de,hl
040B3B 29          0744*      add hl,hl
040B3C ED 52       0745*      sbc hl,de
040B3E 19          0746*      add hl,de
040B3F EB          0747*      ex de,hl
040B40 30 04       0748*      jr nc,$+6
040B42 ED 52       0749*      sbc hl,de
040B44 13          0750*      inc de
040B45 13          0751*      inc de
040B46             0752*  ; Iteration 9
040B46 F1          0753*      pop af
040B47 17          0754*      rla
040B48 ED 6A       0755*      adc hl,hl
040B4A 17          0756*      rla
040B4B ED 6A       0757*      adc hl,hl
040B4D EB          0758*      ex de,hl
040B4E 29          0759*      add hl,hl
040B4F ED 52       0760*      sbc hl,de
040B51 19          0761*      add hl,de
040B52 EB          0762*      ex de,hl
040B53 30 04       0763*      jr nc,$+6
040B55 ED 52       0764*      sbc hl,de
040B57 13          0765*      inc de
040B58 13          0766*      inc de
040B59             0767*  ; Iteration 10
040B59 17          0768*      rla
040B5A ED 6A       0769*      adc hl,hl
040B5C 17          0770*      rla
040B5D ED 6A       0771*      adc hl,hl
040B5F EB          0772*      ex de,hl
040B60 29          0773*      add hl,hl
040B61 ED 52       0774*      sbc hl,de
040B63 19          0775*      add hl,de
040B64 EB          0776*      ex de,hl
040B65 30 04       0777*      jr nc,$+6
040B67 ED 52       0778*      sbc hl,de
040B69 13          0779*      inc de
040B6A 13          0780*      inc de
040B6B             0781*  ; Iteration 11
040B6B 17          0782*      rla
040B6C ED 6A       0783*      adc hl,hl
040B6E 17          0784*      rla
040B6F ED 6A       0785*      adc hl,hl
040B71 EB          0786*      ex de,hl
040B72 29          0787*      add hl,hl
040B73 ED 52       0788*      sbc hl,de
040B75 19          0789*      add hl,de
040B76 EB          0790*      ex de,hl
040B77 30 04       0791*      jr nc,$+6
040B79 ED 52       0792*      sbc hl,de
040B7B 13          0793*      inc de
040B7C 13          0794*      inc de
040B7D             0795*  ; Iteration 12
040B7D 17          0796*      rla
040B7E ED 6A       0797*      adc hl,hl
040B80 17          0798*      rla
040B81 ED 6A       0799*      adc hl,hl
040B83 EB          0800*      ex de,hl
040B84 29          0801*      add hl,hl
040B85 ED 52       0802*      sbc hl,de
040B87 19          0803*      add hl,de
040B88 EB          0804*      ex de,hl
040B89 30 04       0805*      jr nc,$+6
040B8B ED 52       0806*      sbc hl,de
040B8D 13          0807*      inc de
040B8E 13          0808*      inc de
040B8F CB 1A       0809*      rr d
040B91 CB 1B       0810*      rr e
040B93 C9          0811*      ret
040B94             0812*  
040B94             0813*  sin_lut_168:
040B94 00 00 00    0814*      dl 0x000000 ; 0.000 00, 0.000
040B97 06 00 00    0815*      dl 0x000006 ; 1.406 01, 0.025
040B9A 0C 00 00    0816*      dl 0x00000C ; 2.813 02, 0.049
040B9D 12 00 00    0817*      dl 0x000012 ; 4.219 03, 0.074
040BA0 19 00 00    0818*      dl 0x000019 ; 5.625 04, 0.098
040BA3 1F 00 00    0819*      dl 0x00001F ; 7.031 05, 0.122
040BA6 25 00 00    0820*      dl 0x000025 ; 8.438 06, 0.147
040BA9 2B 00 00    0821*      dl 0x00002B ; 9.844 07, 0.171
040BAC 31 00 00    0822*      dl 0x000031 ; 11.250 08, 0.195
040BAF 38 00 00    0823*      dl 0x000038 ; 12.656 09, 0.219
040BB2 3E 00 00    0824*      dl 0x00003E ; 14.063 0A, 0.243
040BB5 44 00 00    0825*      dl 0x000044 ; 15.469 0B, 0.267
040BB8 4A 00 00    0826*      dl 0x00004A ; 16.875 0C, 0.290
040BBB 50 00 00    0827*      dl 0x000050 ; 18.281 0D, 0.314
040BBE 56 00 00    0828*      dl 0x000056 ; 19.688 0E, 0.337
040BC1 5C 00 00    0829*      dl 0x00005C ; 21.094 0F, 0.360
040BC4 61 00 00    0830*      dl 0x000061 ; 22.500 10, 0.383
040BC7 67 00 00    0831*      dl 0x000067 ; 23.906 11, 0.405
040BCA 6D 00 00    0832*      dl 0x00006D ; 25.313 12, 0.428
040BCD 73 00 00    0833*      dl 0x000073 ; 26.719 13, 0.450
040BD0 78 00 00    0834*      dl 0x000078 ; 28.125 14, 0.471
040BD3 7E 00 00    0835*      dl 0x00007E ; 29.531 15, 0.493
040BD6 83 00 00    0836*      dl 0x000083 ; 30.938 16, 0.514
040BD9 88 00 00    0837*      dl 0x000088 ; 32.344 17, 0.535
040BDC 8E 00 00    0838*      dl 0x00008E ; 33.750 18, 0.556
040BDF 93 00 00    0839*      dl 0x000093 ; 35.156 19, 0.576
040BE2 98 00 00    0840*      dl 0x000098 ; 36.563 1A, 0.596
040BE5 9D 00 00    0841*      dl 0x00009D ; 37.969 1B, 0.615
040BE8 A2 00 00    0842*      dl 0x0000A2 ; 39.375 1C, 0.634
040BEB A7 00 00    0843*      dl 0x0000A7 ; 40.781 1D, 0.653
040BEE AB 00 00    0844*      dl 0x0000AB ; 42.188 1E, 0.672
040BF1 B0 00 00    0845*      dl 0x0000B0 ; 43.594 1F, 0.690
040BF4 B5 00 00    0846*      dl 0x0000B5 ; 45.000 20, 0.707
040BF7 B9 00 00    0847*      dl 0x0000B9 ; 46.406 21, 0.724
040BFA BD 00 00    0848*      dl 0x0000BD ; 47.813 22, 0.741
040BFD C1 00 00    0849*      dl 0x0000C1 ; 49.219 23, 0.757
040C00 C5 00 00    0850*      dl 0x0000C5 ; 50.625 24, 0.773
040C03 C9 00 00    0851*      dl 0x0000C9 ; 52.031 25, 0.788
040C06 CD 00 00    0852*      dl 0x0000CD ; 53.438 26, 0.803
040C09 D1 00 00    0853*      dl 0x0000D1 ; 54.844 27, 0.818
040C0C D4 00 00    0854*      dl 0x0000D4 ; 56.250 28, 0.831
040C0F D8 00 00    0855*      dl 0x0000D8 ; 57.656 29, 0.845
040C12 DB 00 00    0856*      dl 0x0000DB ; 59.063 2A, 0.858
040C15 DE 00 00    0857*      dl 0x0000DE ; 60.469 2B, 0.870
040C18 E1 00 00    0858*      dl 0x0000E1 ; 61.875 2C, 0.882
040C1B E4 00 00    0859*      dl 0x0000E4 ; 63.281 2D, 0.893
040C1E E7 00 00    0860*      dl 0x0000E7 ; 64.688 2E, 0.904
040C21 EA 00 00    0861*      dl 0x0000EA ; 66.094 2F, 0.914
040C24 EC 00 00    0862*      dl 0x0000EC ; 67.500 30, 0.924
040C27 EE 00 00    0863*      dl 0x0000EE ; 68.906 31, 0.933
040C2A F1 00 00    0864*      dl 0x0000F1 ; 70.313 32, 0.942
040C2D F3 00 00    0865*      dl 0x0000F3 ; 71.719 33, 0.950
040C30 F4 00 00    0866*      dl 0x0000F4 ; 73.125 34, 0.957
040C33 F6 00 00    0867*      dl 0x0000F6 ; 74.531 35, 0.964
040C36 F8 00 00    0868*      dl 0x0000F8 ; 75.938 36, 0.970
040C39 F9 00 00    0869*      dl 0x0000F9 ; 77.344 37, 0.976
040C3C FB 00 00    0870*      dl 0x0000FB ; 78.750 38, 0.981
040C3F FC 00 00    0871*      dl 0x0000FC ; 80.156 39, 0.985
040C42 FD 00 00    0872*      dl 0x0000FD ; 81.563 3A, 0.989
040C45 FE 00 00    0873*      dl 0x0000FE ; 82.969 3B, 0.992
040C48 FE 00 00    0874*      dl 0x0000FE ; 84.375 3C, 0.995
040C4B FF 00 00    0875*      dl 0x0000FF ; 85.781 3D, 0.997
040C4E FF 00 00    0876*      dl 0x0000FF ; 87.188 3E, 0.999
040C51 FF 00 00    0877*      dl 0x0000FF ; 88.594 3F, 1.000
040C54 00 01 00    0878*      dl 0x000100 ; 90.000 40, 1.000
040C57 FF 00 00    0879*      dl 0x0000FF ; 91.406 41, 1.000
040C5A FF 00 00    0880*      dl 0x0000FF ; 92.813 42, 0.999
040C5D FF 00 00    0881*      dl 0x0000FF ; 94.219 43, 0.997
040C60 FE 00 00    0882*      dl 0x0000FE ; 95.625 44, 0.995
040C63 FE 00 00    0883*      dl 0x0000FE ; 97.031 45, 0.992
040C66 FD 00 00    0884*      dl 0x0000FD ; 98.438 46, 0.989
040C69 FC 00 00    0885*      dl 0x0000FC ; 99.844 47, 0.985
040C6C FB 00 00    0886*      dl 0x0000FB ; 101.250 48, 0.981
040C6F F9 00 00    0887*      dl 0x0000F9 ; 102.656 49, 0.976
040C72 F8 00 00    0888*      dl 0x0000F8 ; 104.063 4A, 0.970
040C75 F6 00 00    0889*      dl 0x0000F6 ; 105.469 4B, 0.964
040C78 F4 00 00    0890*      dl 0x0000F4 ; 106.875 4C, 0.957
040C7B F3 00 00    0891*      dl 0x0000F3 ; 108.281 4D, 0.950
040C7E F1 00 00    0892*      dl 0x0000F1 ; 109.688 4E, 0.942
040C81 EE 00 00    0893*      dl 0x0000EE ; 111.094 4F, 0.933
040C84 EC 00 00    0894*      dl 0x0000EC ; 112.500 50, 0.924
040C87 EA 00 00    0895*      dl 0x0000EA ; 113.906 51, 0.914
040C8A E7 00 00    0896*      dl 0x0000E7 ; 115.313 52, 0.904
040C8D E4 00 00    0897*      dl 0x0000E4 ; 116.719 53, 0.893
040C90 E1 00 00    0898*      dl 0x0000E1 ; 118.125 54, 0.882
040C93 DE 00 00    0899*      dl 0x0000DE ; 119.531 55, 0.870
040C96 DB 00 00    0900*      dl 0x0000DB ; 120.938 56, 0.858
040C99 D8 00 00    0901*      dl 0x0000D8 ; 122.344 57, 0.845
040C9C D4 00 00    0902*      dl 0x0000D4 ; 123.750 58, 0.831
040C9F D1 00 00    0903*      dl 0x0000D1 ; 125.156 59, 0.818
040CA2 CD 00 00    0904*      dl 0x0000CD ; 126.563 5A, 0.803
040CA5 C9 00 00    0905*      dl 0x0000C9 ; 127.969 5B, 0.788
040CA8 C5 00 00    0906*      dl 0x0000C5 ; 129.375 5C, 0.773
040CAB C1 00 00    0907*      dl 0x0000C1 ; 130.781 5D, 0.757
040CAE BD 00 00    0908*      dl 0x0000BD ; 132.188 5E, 0.741
040CB1 B9 00 00    0909*      dl 0x0000B9 ; 133.594 5F, 0.724
040CB4 B5 00 00    0910*      dl 0x0000B5 ; 135.000 60, 0.707
040CB7 B0 00 00    0911*      dl 0x0000B0 ; 136.406 61, 0.690
040CBA AB 00 00    0912*      dl 0x0000AB ; 137.813 62, 0.672
040CBD A7 00 00    0913*      dl 0x0000A7 ; 139.219 63, 0.653
040CC0 A2 00 00    0914*      dl 0x0000A2 ; 140.625 64, 0.634
040CC3 9D 00 00    0915*      dl 0x00009D ; 142.031 65, 0.615
040CC6 98 00 00    0916*      dl 0x000098 ; 143.438 66, 0.596
040CC9 93 00 00    0917*      dl 0x000093 ; 144.844 67, 0.576
040CCC 8E 00 00    0918*      dl 0x00008E ; 146.250 68, 0.556
040CCF 88 00 00    0919*      dl 0x000088 ; 147.656 69, 0.535
040CD2 83 00 00    0920*      dl 0x000083 ; 149.063 6A, 0.514
040CD5 7E 00 00    0921*      dl 0x00007E ; 150.469 6B, 0.493
040CD8 78 00 00    0922*      dl 0x000078 ; 151.875 6C, 0.471
040CDB 73 00 00    0923*      dl 0x000073 ; 153.281 6D, 0.450
040CDE 6D 00 00    0924*      dl 0x00006D ; 154.688 6E, 0.428
040CE1 67 00 00    0925*      dl 0x000067 ; 156.094 6F, 0.405
040CE4 61 00 00    0926*      dl 0x000061 ; 157.500 70, 0.383
040CE7 5C 00 00    0927*      dl 0x00005C ; 158.906 71, 0.360
040CEA 56 00 00    0928*      dl 0x000056 ; 160.313 72, 0.337
040CED 50 00 00    0929*      dl 0x000050 ; 161.719 73, 0.314
040CF0 4A 00 00    0930*      dl 0x00004A ; 163.125 74, 0.290
040CF3 44 00 00    0931*      dl 0x000044 ; 164.531 75, 0.267
040CF6 3E 00 00    0932*      dl 0x00003E ; 165.938 76, 0.243
040CF9 38 00 00    0933*      dl 0x000038 ; 167.344 77, 0.219
040CFC 31 00 00    0934*      dl 0x000031 ; 168.750 78, 0.195
040CFF 2B 00 00    0935*      dl 0x00002B ; 170.156 79, 0.171
040D02 25 00 00    0936*      dl 0x000025 ; 171.563 7A, 0.147
040D05 1F 00 00    0937*      dl 0x00001F ; 172.969 7B, 0.122
040D08 19 00 00    0938*      dl 0x000019 ; 174.375 7C, 0.098
040D0B 12 00 00    0939*      dl 0x000012 ; 175.781 7D, 0.074
040D0E 0C 00 00    0940*      dl 0x00000C ; 177.188 7E, 0.049
040D11 06 00 00    0941*      dl 0x000006 ; 178.594 7F, 0.025
040D14 00 00 00    0942*      dl 0x000000 ; 180.000 80, 0.000
040D17 FA FF FF    0943*      dl 0xFFFFFA ; 181.406 81, -0.025
040D1A F4 FF FF    0944*      dl 0xFFFFF4 ; 182.813 82, -0.049
040D1D EE FF FF    0945*      dl 0xFFFFEE ; 184.219 83, -0.074
040D20 E7 FF FF    0946*      dl 0xFFFFE7 ; 185.625 84, -0.098
040D23 E1 FF FF    0947*      dl 0xFFFFE1 ; 187.031 85, -0.122
040D26 DB FF FF    0948*      dl 0xFFFFDB ; 188.438 86, -0.147
040D29 D5 FF FF    0949*      dl 0xFFFFD5 ; 189.844 87, -0.171
040D2C CF FF FF    0950*      dl 0xFFFFCF ; 191.250 88, -0.195
040D2F C8 FF FF    0951*      dl 0xFFFFC8 ; 192.656 89, -0.219
040D32 C2 FF FF    0952*      dl 0xFFFFC2 ; 194.063 8A, -0.243
040D35 BC FF FF    0953*      dl 0xFFFFBC ; 195.469 8B, -0.267
040D38 B6 FF FF    0954*      dl 0xFFFFB6 ; 196.875 8C, -0.290
040D3B B0 FF FF    0955*      dl 0xFFFFB0 ; 198.281 8D, -0.314
040D3E AA FF FF    0956*      dl 0xFFFFAA ; 199.688 8E, -0.337
040D41 A4 FF FF    0957*      dl 0xFFFFA4 ; 201.094 8F, -0.360
040D44 9F FF FF    0958*      dl 0xFFFF9F ; 202.500 90, -0.383
040D47 99 FF FF    0959*      dl 0xFFFF99 ; 203.906 91, -0.405
040D4A 93 FF FF    0960*      dl 0xFFFF93 ; 205.313 92, -0.428
040D4D 8D FF FF    0961*      dl 0xFFFF8D ; 206.719 93, -0.450
040D50 88 FF FF    0962*      dl 0xFFFF88 ; 208.125 94, -0.471
040D53 82 FF FF    0963*      dl 0xFFFF82 ; 209.531 95, -0.493
040D56 7D FF FF    0964*      dl 0xFFFF7D ; 210.938 96, -0.514
040D59 78 FF FF    0965*      dl 0xFFFF78 ; 212.344 97, -0.535
040D5C 72 FF FF    0966*      dl 0xFFFF72 ; 213.750 98, -0.556
040D5F 6D FF FF    0967*      dl 0xFFFF6D ; 215.156 99, -0.576
040D62 68 FF FF    0968*      dl 0xFFFF68 ; 216.563 9A, -0.596
040D65 63 FF FF    0969*      dl 0xFFFF63 ; 217.969 9B, -0.615
040D68 5E FF FF    0970*      dl 0xFFFF5E ; 219.375 9C, -0.634
040D6B 59 FF FF    0971*      dl 0xFFFF59 ; 220.781 9D, -0.653
040D6E 55 FF FF    0972*      dl 0xFFFF55 ; 222.188 9E, -0.672
040D71 50 FF FF    0973*      dl 0xFFFF50 ; 223.594 9F, -0.690
040D74 4B FF FF    0974*      dl 0xFFFF4B ; 225.000 A0, -0.707
040D77 47 FF FF    0975*      dl 0xFFFF47 ; 226.406 A1, -0.724
040D7A 43 FF FF    0976*      dl 0xFFFF43 ; 227.813 A2, -0.741
040D7D 3F FF FF    0977*      dl 0xFFFF3F ; 229.219 A3, -0.757
040D80 3B FF FF    0978*      dl 0xFFFF3B ; 230.625 A4, -0.773
040D83 37 FF FF    0979*      dl 0xFFFF37 ; 232.031 A5, -0.788
040D86 33 FF FF    0980*      dl 0xFFFF33 ; 233.438 A6, -0.803
040D89 2F FF FF    0981*      dl 0xFFFF2F ; 234.844 A7, -0.818
040D8C 2C FF FF    0982*      dl 0xFFFF2C ; 236.250 A8, -0.831
040D8F 28 FF FF    0983*      dl 0xFFFF28 ; 237.656 A9, -0.845
040D92 25 FF FF    0984*      dl 0xFFFF25 ; 239.063 AA, -0.858
040D95 22 FF FF    0985*      dl 0xFFFF22 ; 240.469 AB, -0.870
040D98 1F FF FF    0986*      dl 0xFFFF1F ; 241.875 AC, -0.882
040D9B 1C FF FF    0987*      dl 0xFFFF1C ; 243.281 AD, -0.893
040D9E 19 FF FF    0988*      dl 0xFFFF19 ; 244.688 AE, -0.904
040DA1 16 FF FF    0989*      dl 0xFFFF16 ; 246.094 AF, -0.914
040DA4 14 FF FF    0990*      dl 0xFFFF14 ; 247.500 B0, -0.924
040DA7 12 FF FF    0991*      dl 0xFFFF12 ; 248.906 B1, -0.933
040DAA 0F FF FF    0992*      dl 0xFFFF0F ; 250.313 B2, -0.942
040DAD 0D FF FF    0993*      dl 0xFFFF0D ; 251.719 B3, -0.950
040DB0 0C FF FF    0994*      dl 0xFFFF0C ; 253.125 B4, -0.957
040DB3 0A FF FF    0995*      dl 0xFFFF0A ; 254.531 B5, -0.964
040DB6 08 FF FF    0996*      dl 0xFFFF08 ; 255.938 B6, -0.970
040DB9 07 FF FF    0997*      dl 0xFFFF07 ; 257.344 B7, -0.976
040DBC 05 FF FF    0998*      dl 0xFFFF05 ; 258.750 B8, -0.981
040DBF 04 FF FF    0999*      dl 0xFFFF04 ; 260.156 B9, -0.985
040DC2 03 FF FF    1000*      dl 0xFFFF03 ; 261.563 BA, -0.989
040DC5 02 FF FF    1001*      dl 0xFFFF02 ; 262.969 BB, -0.992
040DC8 02 FF FF    1002*      dl 0xFFFF02 ; 264.375 BC, -0.995
040DCB 01 FF FF    1003*      dl 0xFFFF01 ; 265.781 BD, -0.997
040DCE 01 FF FF    1004*      dl 0xFFFF01 ; 267.188 BE, -0.999
040DD1 01 FF FF    1005*      dl 0xFFFF01 ; 268.594 BF, -1.000
040DD4 00 FF FF    1006*      dl 0xFFFF00 ; 270.000 C0, -1.000
040DD7 01 FF FF    1007*      dl 0xFFFF01 ; 271.406 C1, -1.000
040DDA 01 FF FF    1008*      dl 0xFFFF01 ; 272.813 C2, -0.999
040DDD 01 FF FF    1009*      dl 0xFFFF01 ; 274.219 C3, -0.997
040DE0 02 FF FF    1010*      dl 0xFFFF02 ; 275.625 C4, -0.995
040DE3 02 FF FF    1011*      dl 0xFFFF02 ; 277.031 C5, -0.992
040DE6 03 FF FF    1012*      dl 0xFFFF03 ; 278.438 C6, -0.989
040DE9 04 FF FF    1013*      dl 0xFFFF04 ; 279.844 C7, -0.985
040DEC 05 FF FF    1014*      dl 0xFFFF05 ; 281.250 C8, -0.981
040DEF 07 FF FF    1015*      dl 0xFFFF07 ; 282.656 C9, -0.976
040DF2 08 FF FF    1016*      dl 0xFFFF08 ; 284.063 CA, -0.970
040DF5 0A FF FF    1017*      dl 0xFFFF0A ; 285.469 CB, -0.964
040DF8 0C FF FF    1018*      dl 0xFFFF0C ; 286.875 CC, -0.957
040DFB 0D FF FF    1019*      dl 0xFFFF0D ; 288.281 CD, -0.950
040DFE 0F FF FF    1020*      dl 0xFFFF0F ; 289.688 CE, -0.942
040E01 12 FF FF    1021*      dl 0xFFFF12 ; 291.094 CF, -0.933
040E04 14 FF FF    1022*      dl 0xFFFF14 ; 292.500 D0, -0.924
040E07 16 FF FF    1023*      dl 0xFFFF16 ; 293.906 D1, -0.914
040E0A 19 FF FF    1024*      dl 0xFFFF19 ; 295.313 D2, -0.904
040E0D 1C FF FF    1025*      dl 0xFFFF1C ; 296.719 D3, -0.893
040E10 1F FF FF    1026*      dl 0xFFFF1F ; 298.125 D4, -0.882
040E13 22 FF FF    1027*      dl 0xFFFF22 ; 299.531 D5, -0.870
040E16 25 FF FF    1028*      dl 0xFFFF25 ; 300.938 D6, -0.858
040E19 28 FF FF    1029*      dl 0xFFFF28 ; 302.344 D7, -0.845
040E1C 2C FF FF    1030*      dl 0xFFFF2C ; 303.750 D8, -0.831
040E1F 2F FF FF    1031*      dl 0xFFFF2F ; 305.156 D9, -0.818
040E22 33 FF FF    1032*      dl 0xFFFF33 ; 306.563 DA, -0.803
040E25 37 FF FF    1033*      dl 0xFFFF37 ; 307.969 DB, -0.788
040E28 3B FF FF    1034*      dl 0xFFFF3B ; 309.375 DC, -0.773
040E2B 3F FF FF    1035*      dl 0xFFFF3F ; 310.781 DD, -0.757
040E2E 43 FF FF    1036*      dl 0xFFFF43 ; 312.188 DE, -0.741
040E31 47 FF FF    1037*      dl 0xFFFF47 ; 313.594 DF, -0.724
040E34 4B FF FF    1038*      dl 0xFFFF4B ; 315.000 E0, -0.707
040E37 50 FF FF    1039*      dl 0xFFFF50 ; 316.406 E1, -0.690
040E3A 55 FF FF    1040*      dl 0xFFFF55 ; 317.813 E2, -0.672
040E3D 59 FF FF    1041*      dl 0xFFFF59 ; 319.219 E3, -0.653
040E40 5E FF FF    1042*      dl 0xFFFF5E ; 320.625 E4, -0.634
040E43 63 FF FF    1043*      dl 0xFFFF63 ; 322.031 E5, -0.615
040E46 68 FF FF    1044*      dl 0xFFFF68 ; 323.438 E6, -0.596
040E49 6D FF FF    1045*      dl 0xFFFF6D ; 324.844 E7, -0.576
040E4C 72 FF FF    1046*      dl 0xFFFF72 ; 326.250 E8, -0.556
040E4F 78 FF FF    1047*      dl 0xFFFF78 ; 327.656 E9, -0.535
040E52 7D FF FF    1048*      dl 0xFFFF7D ; 329.063 EA, -0.514
040E55 82 FF FF    1049*      dl 0xFFFF82 ; 330.469 EB, -0.493
040E58 88 FF FF    1050*      dl 0xFFFF88 ; 331.875 EC, -0.471
040E5B 8D FF FF    1051*      dl 0xFFFF8D ; 333.281 ED, -0.450
040E5E 93 FF FF    1052*      dl 0xFFFF93 ; 334.688 EE, -0.428
040E61 99 FF FF    1053*      dl 0xFFFF99 ; 336.094 EF, -0.405
040E64 9F FF FF    1054*      dl 0xFFFF9F ; 337.500 F0, -0.383
040E67 A4 FF FF    1055*      dl 0xFFFFA4 ; 338.906 F1, -0.360
040E6A AA FF FF    1056*      dl 0xFFFFAA ; 340.313 F2, -0.337
040E6D B0 FF FF    1057*      dl 0xFFFFB0 ; 341.719 F3, -0.314
040E70 B6 FF FF    1058*      dl 0xFFFFB6 ; 343.125 F4, -0.290
040E73 BC FF FF    1059*      dl 0xFFFFBC ; 344.531 F5, -0.267
040E76 C2 FF FF    1060*      dl 0xFFFFC2 ; 345.938 F6, -0.243
040E79 C8 FF FF    1061*      dl 0xFFFFC8 ; 347.344 F7, -0.219
040E7C CF FF FF    1062*      dl 0xFFFFCF ; 348.750 F8, -0.195
040E7F D5 FF FF    1063*      dl 0xFFFFD5 ; 350.156 F9, -0.171
040E82 DB FF FF    1064*      dl 0xFFFFDB ; 351.563 FA, -0.147
040E85 E1 FF FF    1065*      dl 0xFFFFE1 ; 352.969 FB, -0.122
040E88 E7 FF FF    1066*      dl 0xFFFFE7 ; 354.375 FC, -0.098
040E8B EE FF FF    1067*      dl 0xFFFFEE ; 355.781 FD, -0.074
040E8E F4 FF FF    1068*      dl 0xFFFFF4 ; 357.188 FE, -0.049
040E91 FA FF FF    1069*      dl 0xFFFFFA ; 358.594 FF, -0.025
040E94 00 00 00    1070*      dl 0x000000 ; 0.000 00, 0.000 for interpolation
040E97             1071*  
040E97             1072*  atan_lut_168:
040E97 00 00 00    1073*      dl 0x000000 ; 000000, 0.000
040E9A 28 00 00    1074*      dl 0x000028 ; 000001, 0.224
040E9D 51 00 00    1075*      dl 0x000051 ; 000002, 0.448
040EA0 7A 00 00    1076*      dl 0x00007A ; 000003, 0.671
040EA3 A2 00 00    1077*      dl 0x0000A2 ; 000004, 0.895
040EA6 CB 00 00    1078*      dl 0x0000CB ; 000005, 1.119
040EA9 F4 00 00    1079*      dl 0x0000F4 ; 000006, 1.343
040EAC 1D 01 00    1080*      dl 0x00011D ; 000007, 1.566
040EAF 45 01 00    1081*      dl 0x000145 ; 000008, 1.790
040EB2 6E 01 00    1082*      dl 0x00016E ; 000009, 2.013
040EB5 97 01 00    1083*      dl 0x000197 ; 00000A, 2.237
040EB8 BF 01 00    1084*      dl 0x0001BF ; 00000B, 2.460
040EBB E8 01 00    1085*      dl 0x0001E8 ; 00000C, 2.684
040EBE 11 02 00    1086*      dl 0x000211 ; 00000D, 2.907
040EC1 39 02 00    1087*      dl 0x000239 ; 00000E, 3.130
040EC4 62 02 00    1088*      dl 0x000262 ; 00000F, 3.353
040EC7 8B 02 00    1089*      dl 0x00028B ; 000010, 3.576
040ECA B3 02 00    1090*      dl 0x0002B3 ; 000011, 3.799
040ECD DC 02 00    1091*      dl 0x0002DC ; 000012, 4.022
040ED0 04 03 00    1092*      dl 0x000304 ; 000013, 4.245
040ED3 2D 03 00    1093*      dl 0x00032D ; 000014, 4.467
040ED6 55 03 00    1094*      dl 0x000355 ; 000015, 4.690
040ED9 7E 03 00    1095*      dl 0x00037E ; 000016, 4.912
040EDC A6 03 00    1096*      dl 0x0003A6 ; 000017, 5.134
040EDF CE 03 00    1097*      dl 0x0003CE ; 000018, 5.356
040EE2 F7 03 00    1098*      dl 0x0003F7 ; 000019, 5.578
040EE5 1F 04 00    1099*      dl 0x00041F ; 00001A, 5.799
040EE8 48 04 00    1100*      dl 0x000448 ; 00001B, 6.021
040EEB 70 04 00    1101*      dl 0x000470 ; 00001C, 6.242
040EEE 98 04 00    1102*      dl 0x000498 ; 00001D, 6.463
040EF1 C0 04 00    1103*      dl 0x0004C0 ; 00001E, 6.684
040EF4 E8 04 00    1104*      dl 0x0004E8 ; 00001F, 6.905
040EF7 11 05 00    1105*      dl 0x000511 ; 000020, 7.125
040EFA 39 05 00    1106*      dl 0x000539 ; 000021, 7.345
040EFD 61 05 00    1107*      dl 0x000561 ; 000022, 7.565
040F00 89 05 00    1108*      dl 0x000589 ; 000023, 7.785
040F03 B1 05 00    1109*      dl 0x0005B1 ; 000024, 8.005
040F06 D9 05 00    1110*      dl 0x0005D9 ; 000025, 8.224
040F09 01 06 00    1111*      dl 0x000601 ; 000026, 8.443
040F0C 28 06 00    1112*      dl 0x000628 ; 000027, 8.662
040F0F 50 06 00    1113*      dl 0x000650 ; 000028, 8.881
040F12 78 06 00    1114*      dl 0x000678 ; 000029, 9.099
040F15 A0 06 00    1115*      dl 0x0006A0 ; 00002A, 9.317
040F18 C7 06 00    1116*      dl 0x0006C7 ; 00002B, 9.535
040F1B EF 06 00    1117*      dl 0x0006EF ; 00002C, 9.752
040F1E 16 07 00    1118*      dl 0x000716 ; 00002D, 9.970
040F21 3E 07 00    1119*      dl 0x00073E ; 00002E, 10.187
040F24 65 07 00    1120*      dl 0x000765 ; 00002F, 10.403
040F27 8D 07 00    1121*      dl 0x00078D ; 000030, 10.620
040F2A B4 07 00    1122*      dl 0x0007B4 ; 000031, 10.836
040F2D DB 07 00    1123*      dl 0x0007DB ; 000032, 11.051
040F30 03 08 00    1124*      dl 0x000803 ; 000033, 11.267
040F33 2A 08 00    1125*      dl 0x00082A ; 000034, 11.482
040F36 51 08 00    1126*      dl 0x000851 ; 000035, 11.697
040F39 78 08 00    1127*      dl 0x000878 ; 000036, 11.911
040F3C 9F 08 00    1128*      dl 0x00089F ; 000037, 12.125
040F3F C6 08 00    1129*      dl 0x0008C6 ; 000038, 12.339
040F42 ED 08 00    1130*      dl 0x0008ED ; 000039, 12.553
040F45 13 09 00    1131*      dl 0x000913 ; 00003A, 12.766
040F48 3A 09 00    1132*      dl 0x00093A ; 00003B, 12.978
040F4B 61 09 00    1133*      dl 0x000961 ; 00003C, 13.191
040F4E 87 09 00    1134*      dl 0x000987 ; 00003D, 13.403
040F51 AE 09 00    1135*      dl 0x0009AE ; 00003E, 13.614
040F54 D4 09 00    1136*      dl 0x0009D4 ; 00003F, 13.825
040F57 FB 09 00    1137*      dl 0x0009FB ; 000040, 14.036
040F5A 21 0A 00    1138*      dl 0x000A21 ; 000041, 14.247
040F5D 47 0A 00    1139*      dl 0x000A47 ; 000042, 14.457
040F60 6D 0A 00    1140*      dl 0x000A6D ; 000043, 14.666
040F63 94 0A 00    1141*      dl 0x000A94 ; 000044, 14.876
040F66 BA 0A 00    1142*      dl 0x000ABA ; 000045, 15.085
040F69 E0 0A 00    1143*      dl 0x000AE0 ; 000046, 15.293
040F6C 05 0B 00    1144*      dl 0x000B05 ; 000047, 15.501
040F6F 2B 0B 00    1145*      dl 0x000B2B ; 000048, 15.709
040F72 51 0B 00    1146*      dl 0x000B51 ; 000049, 15.916
040F75 77 0B 00    1147*      dl 0x000B77 ; 00004A, 16.123
040F78 9C 0B 00    1148*      dl 0x000B9C ; 00004B, 16.329
040F7B C2 0B 00    1149*      dl 0x000BC2 ; 00004C, 16.535
040F7E E7 0B 00    1150*      dl 0x000BE7 ; 00004D, 16.740
040F81 0C 0C 00    1151*      dl 0x000C0C ; 00004E, 16.945
040F84 32 0C 00    1152*      dl 0x000C32 ; 00004F, 17.150
040F87 57 0C 00    1153*      dl 0x000C57 ; 000050, 17.354
040F8A 7C 0C 00    1154*      dl 0x000C7C ; 000051, 17.558
040F8D A1 0C 00    1155*      dl 0x000CA1 ; 000052, 17.761
040F90 C6 0C 00    1156*      dl 0x000CC6 ; 000053, 17.964
040F93 EB 0C 00    1157*      dl 0x000CEB ; 000054, 18.166
040F96 0F 0D 00    1158*      dl 0x000D0F ; 000055, 18.368
040F99 34 0D 00    1159*      dl 0x000D34 ; 000056, 18.569
040F9C 58 0D 00    1160*      dl 0x000D58 ; 000057, 18.770
040F9F 7D 0D 00    1161*      dl 0x000D7D ; 000058, 18.970
040FA2 A1 0D 00    1162*      dl 0x000DA1 ; 000059, 19.170
040FA5 C6 0D 00    1163*      dl 0x000DC6 ; 00005A, 19.370
040FA8 EA 0D 00    1164*      dl 0x000DEA ; 00005B, 19.569
040FAB 0E 0E 00    1165*      dl 0x000E0E ; 00005C, 19.767
040FAE 32 0E 00    1166*      dl 0x000E32 ; 00005D, 19.965
040FB1 56 0E 00    1167*      dl 0x000E56 ; 00005E, 20.163
040FB4 7A 0E 00    1168*      dl 0x000E7A ; 00005F, 20.360
040FB7 9E 0E 00    1169*      dl 0x000E9E ; 000060, 20.556
040FBA C1 0E 00    1170*      dl 0x000EC1 ; 000061, 20.752
040FBD E5 0E 00    1171*      dl 0x000EE5 ; 000062, 20.947
040FC0 08 0F 00    1172*      dl 0x000F08 ; 000063, 21.142
040FC3 2C 0F 00    1173*      dl 0x000F2C ; 000064, 21.337
040FC6 4F 0F 00    1174*      dl 0x000F4F ; 000065, 21.531
040FC9 72 0F 00    1175*      dl 0x000F72 ; 000066, 21.724
040FCC 95 0F 00    1176*      dl 0x000F95 ; 000067, 21.917
040FCF B8 0F 00    1177*      dl 0x000FB8 ; 000068, 22.109
040FD2 DB 0F 00    1178*      dl 0x000FDB ; 000069, 22.301
040FD5 FE 0F 00    1179*      dl 0x000FFE ; 00006A, 22.493
040FD8 21 10 00    1180*      dl 0x001021 ; 00006B, 22.683
040FDB 44 10 00    1181*      dl 0x001044 ; 00006C, 22.874
040FDE 66 10 00    1182*      dl 0x001066 ; 00006D, 23.063
040FE1 89 10 00    1183*      dl 0x001089 ; 00006E, 23.253
040FE4 AB 10 00    1184*      dl 0x0010AB ; 00006F, 23.441
040FE7 CD 10 00    1185*      dl 0x0010CD ; 000070, 23.629
040FEA EF 10 00    1186*      dl 0x0010EF ; 000071, 23.817
040FED 11 11 00    1187*      dl 0x001111 ; 000072, 24.004
040FF0 33 11 00    1188*      dl 0x001133 ; 000073, 24.191
040FF3 55 11 00    1189*      dl 0x001155 ; 000074, 24.376
040FF6 77 11 00    1190*      dl 0x001177 ; 000075, 24.562
040FF9 99 11 00    1191*      dl 0x001199 ; 000076, 24.747
040FFC BA 11 00    1192*      dl 0x0011BA ; 000077, 24.931
040FFF DC 11 00    1193*      dl 0x0011DC ; 000078, 25.115
041002 FD 11 00    1194*      dl 0x0011FD ; 000079, 25.298
041005 1E 12 00    1195*      dl 0x00121E ; 00007A, 25.481
041008 3F 12 00    1196*      dl 0x00123F ; 00007B, 25.663
04100B 60 12 00    1197*      dl 0x001260 ; 00007C, 25.844
04100E 81 12 00    1198*      dl 0x001281 ; 00007D, 26.025
041011 A2 12 00    1199*      dl 0x0012A2 ; 00007E, 26.206
041014 C3 12 00    1200*      dl 0x0012C3 ; 00007F, 26.386
041017 E4 12 00    1201*      dl 0x0012E4 ; 000080, 26.565
04101A 04 13 00    1202*      dl 0x001304 ; 000081, 26.744
04101D 25 13 00    1203*      dl 0x001325 ; 000082, 26.922
041020 45 13 00    1204*      dl 0x001345 ; 000083, 27.100
041023 65 13 00    1205*      dl 0x001365 ; 000084, 27.277
041026 85 13 00    1206*      dl 0x001385 ; 000085, 27.453
041029 A5 13 00    1207*      dl 0x0013A5 ; 000086, 27.629
04102C C5 13 00    1208*      dl 0x0013C5 ; 000087, 27.805
04102F E5 13 00    1209*      dl 0x0013E5 ; 000088, 27.979
041032 05 14 00    1210*      dl 0x001405 ; 000089, 28.154
041035 24 14 00    1211*      dl 0x001424 ; 00008A, 28.327
041038 44 14 00    1212*      dl 0x001444 ; 00008B, 28.501
04103B 63 14 00    1213*      dl 0x001463 ; 00008C, 28.673
04103E 83 14 00    1214*      dl 0x001483 ; 00008D, 28.845
041041 A2 14 00    1215*      dl 0x0014A2 ; 00008E, 29.017
041044 C1 14 00    1216*      dl 0x0014C1 ; 00008F, 29.187
041047 E0 14 00    1217*      dl 0x0014E0 ; 000090, 29.358
04104A FF 14 00    1218*      dl 0x0014FF ; 000091, 29.527
04104D 1E 15 00    1219*      dl 0x00151E ; 000092, 29.697
041050 3C 15 00    1220*      dl 0x00153C ; 000093, 29.865
041053 5B 15 00    1221*      dl 0x00155B ; 000094, 30.033
041056 79 15 00    1222*      dl 0x001579 ; 000095, 30.201
041059 98 15 00    1223*      dl 0x001598 ; 000096, 30.368
04105C B6 15 00    1224*      dl 0x0015B6 ; 000097, 30.534
04105F D4 15 00    1225*      dl 0x0015D4 ; 000098, 30.700
041062 F2 15 00    1226*      dl 0x0015F2 ; 000099, 30.865
041065 10 16 00    1227*      dl 0x001610 ; 00009A, 31.030
041068 2E 16 00    1228*      dl 0x00162E ; 00009B, 31.194
04106B 4C 16 00    1229*      dl 0x00164C ; 00009C, 31.357
04106E 6A 16 00    1230*      dl 0x00166A ; 00009D, 31.520
041071 87 16 00    1231*      dl 0x001687 ; 00009E, 31.682
041074 A5 16 00    1232*      dl 0x0016A5 ; 00009F, 31.844
041077 C2 16 00    1233*      dl 0x0016C2 ; 0000A0, 32.005
04107A DF 16 00    1234*      dl 0x0016DF ; 0000A1, 32.166
04107D FC 16 00    1235*      dl 0x0016FC ; 0000A2, 32.326
041080 19 17 00    1236*      dl 0x001719 ; 0000A3, 32.486
041083 36 17 00    1237*      dl 0x001736 ; 0000A4, 32.645
041086 53 17 00    1238*      dl 0x001753 ; 0000A5, 32.803
041089 70 17 00    1239*      dl 0x001770 ; 0000A6, 32.961
04108C 8C 17 00    1240*      dl 0x00178C ; 0000A7, 33.118
04108F A9 17 00    1241*      dl 0x0017A9 ; 0000A8, 33.275
041092 C5 17 00    1242*      dl 0x0017C5 ; 0000A9, 33.431
041095 E2 17 00    1243*      dl 0x0017E2 ; 0000AA, 33.587
041098 FE 17 00    1244*      dl 0x0017FE ; 0000AB, 33.742
04109B 1A 18 00    1245*      dl 0x00181A ; 0000AC, 33.896
04109E 36 18 00    1246*      dl 0x001836 ; 0000AD, 34.050
0410A1 52 18 00    1247*      dl 0x001852 ; 0000AE, 34.203
0410A4 6E 18 00    1248*      dl 0x00186E ; 0000AF, 34.356
0410A7 8A 18 00    1249*      dl 0x00188A ; 0000B0, 34.509
0410AA A5 18 00    1250*      dl 0x0018A5 ; 0000B1, 34.660
0410AD C1 18 00    1251*      dl 0x0018C1 ; 0000B2, 34.811
0410B0 DC 18 00    1252*      dl 0x0018DC ; 0000B3, 34.962
0410B3 F7 18 00    1253*      dl 0x0018F7 ; 0000B4, 35.112
0410B6 13 19 00    1254*      dl 0x001913 ; 0000B5, 35.262
0410B9 2E 19 00    1255*      dl 0x00192E ; 0000B6, 35.410
0410BC 49 19 00    1256*      dl 0x001949 ; 0000B7, 35.559
0410BF 64 19 00    1257*      dl 0x001964 ; 0000B8, 35.707
0410C2 7F 19 00    1258*      dl 0x00197F ; 0000B9, 35.854
0410C5 99 19 00    1259*      dl 0x001999 ; 0000BA, 36.001
0410C8 B4 19 00    1260*      dl 0x0019B4 ; 0000BB, 36.147
0410CB CE 19 00    1261*      dl 0x0019CE ; 0000BC, 36.293
0410CE E9 19 00    1262*      dl 0x0019E9 ; 0000BD, 36.438
0410D1 03 1A 00    1263*      dl 0x001A03 ; 0000BE, 36.582
0410D4 1D 1A 00    1264*      dl 0x001A1D ; 0000BF, 36.726
0410D7 37 1A 00    1265*      dl 0x001A37 ; 0000C0, 36.870
0410DA 51 1A 00    1266*      dl 0x001A51 ; 0000C1, 37.013
0410DD 6B 1A 00    1267*      dl 0x001A6B ; 0000C2, 37.155
0410E0 85 1A 00    1268*      dl 0x001A85 ; 0000C3, 37.297
0410E3 9F 1A 00    1269*      dl 0x001A9F ; 0000C4, 37.439
0410E6 B9 1A 00    1270*      dl 0x001AB9 ; 0000C5, 37.579
0410E9 D2 1A 00    1271*      dl 0x001AD2 ; 0000C6, 37.720
0410EC EC 1A 00    1272*      dl 0x001AEC ; 0000C7, 37.859
0410EF 05 1B 00    1273*      dl 0x001B05 ; 0000C8, 37.999
0410F2 1E 1B 00    1274*      dl 0x001B1E ; 0000C9, 38.137
0410F5 37 1B 00    1275*      dl 0x001B37 ; 0000CA, 38.276
0410F8 50 1B 00    1276*      dl 0x001B50 ; 0000CB, 38.413
0410FB 69 1B 00    1277*      dl 0x001B69 ; 0000CC, 38.550
0410FE 82 1B 00    1278*      dl 0x001B82 ; 0000CD, 38.687
041101 9B 1B 00    1279*      dl 0x001B9B ; 0000CE, 38.823
041104 B4 1B 00    1280*      dl 0x001BB4 ; 0000CF, 38.959
041107 CC 1B 00    1281*      dl 0x001BCC ; 0000D0, 39.094
04110A E5 1B 00    1282*      dl 0x001BE5 ; 0000D1, 39.228
04110D FD 1B 00    1283*      dl 0x001BFD ; 0000D2, 39.362
041110 16 1C 00    1284*      dl 0x001C16 ; 0000D3, 39.496
041113 2E 1C 00    1285*      dl 0x001C2E ; 0000D4, 39.629
041116 46 1C 00    1286*      dl 0x001C46 ; 0000D5, 39.762
041119 5E 1C 00    1287*      dl 0x001C5E ; 0000D6, 39.894
04111C 76 1C 00    1288*      dl 0x001C76 ; 0000D7, 40.025
04111F 8E 1C 00    1289*      dl 0x001C8E ; 0000D8, 40.156
041122 A5 1C 00    1290*      dl 0x001CA5 ; 0000D9, 40.286
041125 BD 1C 00    1291*      dl 0x001CBD ; 0000DA, 40.416
041128 D5 1C 00    1292*      dl 0x001CD5 ; 0000DB, 40.546
04112B EC 1C 00    1293*      dl 0x001CEC ; 0000DC, 40.675
04112E 04 1D 00    1294*      dl 0x001D04 ; 0000DD, 40.803
041131 1B 1D 00    1295*      dl 0x001D1B ; 0000DE, 40.931
041134 32 1D 00    1296*      dl 0x001D32 ; 0000DF, 41.059
041137 49 1D 00    1297*      dl 0x001D49 ; 0000E0, 41.186
04113A 60 1D 00    1298*      dl 0x001D60 ; 0000E1, 41.312
04113D 77 1D 00    1299*      dl 0x001D77 ; 0000E2, 41.438
041140 8E 1D 00    1300*      dl 0x001D8E ; 0000E3, 41.564
041143 A5 1D 00    1301*      dl 0x001DA5 ; 0000E4, 41.689
041146 BB 1D 00    1302*      dl 0x001DBB ; 0000E5, 41.814
041149 D2 1D 00    1303*      dl 0x001DD2 ; 0000E6, 41.938
04114C E9 1D 00    1304*      dl 0x001DE9 ; 0000E7, 42.061
04114F FF 1D 00    1305*      dl 0x001DFF ; 0000E8, 42.184
041152 15 1E 00    1306*      dl 0x001E15 ; 0000E9, 42.307
041155 2C 1E 00    1307*      dl 0x001E2C ; 0000EA, 42.429
041158 42 1E 00    1308*      dl 0x001E42 ; 0000EB, 42.551
04115B 58 1E 00    1309*      dl 0x001E58 ; 0000EC, 42.672
04115E 6E 1E 00    1310*      dl 0x001E6E ; 0000ED, 42.793
041161 84 1E 00    1311*      dl 0x001E84 ; 0000EE, 42.913
041164 99 1E 00    1312*      dl 0x001E99 ; 0000EF, 43.033
041167 AF 1E 00    1313*      dl 0x001EAF ; 0000F0, 43.152
04116A C5 1E 00    1314*      dl 0x001EC5 ; 0000F1, 43.271
04116D DA 1E 00    1315*      dl 0x001EDA ; 0000F2, 43.390
041170 F0 1E 00    1316*      dl 0x001EF0 ; 0000F3, 43.508
041173 05 1F 00    1317*      dl 0x001F05 ; 0000F4, 43.625
041176 1B 1F 00    1318*      dl 0x001F1B ; 0000F5, 43.742
041179 30 1F 00    1319*      dl 0x001F30 ; 0000F6, 43.859
04117C 45 1F 00    1320*      dl 0x001F45 ; 0000F7, 43.975
04117F 5A 1F 00    1321*      dl 0x001F5A ; 0000F8, 44.091
041182 6F 1F 00    1322*      dl 0x001F6F ; 0000F9, 44.206
041185 84 1F 00    1323*      dl 0x001F84 ; 0000FA, 44.321
041188 99 1F 00    1324*      dl 0x001F99 ; 0000FB, 44.435
04118B AD 1F 00    1325*      dl 0x001FAD ; 0000FC, 44.549
04118E C2 1F 00    1326*      dl 0x001FC2 ; 0000FD, 44.662
041191 D7 1F 00    1327*      dl 0x001FD7 ; 0000FE, 44.775
041194 EB 1F 00    1328*      dl 0x001FEB ; 0000FF, 44.888
041197 00 20 00    1329*      dl 0x002000 ; 000100, 45.000 only needed for interpolation
04119A             0034       include "fonts.inc"
04119A             0001*  fonts_load:
04119A DD 21 F6 1C 0002*      ld ix,font_list ; pointer to font list lookup
       04          
04119F 06 12       0003*      ld b,num_fonts ; loop counter
0411A1             0004*  
0411A1             0005*  @load_loop:
0411A1 C5          0006*      push bc ; save loop counter
0411A2             0007*  
0411A2             0008*  ; load font into a buffer
0411A2 DD 27 06    0009*      ld hl,(ix+font_list_bufferId)
0411A5 DD 31 09    0010*      ld iy,(ix+font_list_filename)
0411A8 CD B5 16 04 0011*      call vdu_load_buffer_from_file
0411AC             0012*  
0411AC             0013*  ; create font from buffer
0411AC DD 27 06    0014*      ld hl,(ix+font_list_bufferId)
0411AF DD 5E 00    0015*      ld e,(ix+font_list_width)
0411B2 DD 56 03    0016*      ld d,(ix+font_list_height)
0411B5 3E 00       0017*      ld a,0 ; flags
0411B7 CD 38 18 04 0018*      call vdu_font_create
0411BB             0019*  
0411BB             0020*  ; select font
0411BB DD 27 06    0021*      ld hl,(ix+font_list_bufferId)
0411BE 3E 01       0022*      ld a,1 ; flags
0411C0 CD 1E 18 04 0023*      call vdu_font_select
0411C4             0024*  
0411C4             0025*  ; ; debug print filename
0411C4             0026*  ;     call printNewLine
0411C4             0027*  ;     ld hl,(ix+font_list_filename)
0411C4             0028*  ;     call printString
0411C4             0029*  
0411C4             0030*  ; advance font_list pointer to next record
0411C4 ED 32 0C    0031*      lea ix,ix+font_list_record_size
0411C7             0032*  
0411C7             0033*  ; restore loop counter
0411C7 C1          0034*      pop bc
0411C8 10 D7       0035*      djnz @load_loop
0411CA             0036*  
0411CA             0037*  ; all done
0411CA C9          0038*      ret
0411CB             0035       include "images.inc"
0411CB             0001*  image_type: equ 0
0411CB             0002*  image_width: equ image_type+3
0411CB             0003*  image_height: equ image_width+3
0411CB             0004*  image_filesize: equ image_height+3
0411CB             0005*  image_filename: equ image_filesize+3
0411CB             0006*  image_bufferId: equ image_filename+3
0411CB             0007*  image_record_size: equ image_bufferId+3
0411CB             0008*  
0411CB 00 00 00    0009*  cur_image_list: dl 0
0411CE 00 00 00    0010*  cur_filename: dl 0
0411D1 00 00 00    0011*  cur_buffer_id: dl 0
0411D4             0012*  
0411D4             0013*  img_load_init:
0411D4             0014*  ; initialize logo's position parameters
0411D4 21 00 00 00 0015*      ld hl,0
0411D8 22 8A 12 04 0016*      ld (logo_xvel),hl
0411DC 22 8D 12 04 0017*      ld (logo_xpos),hl
0411E0             0018*  ; begin 16.8 maths to determine logo's y position and velocity
0411E0 21 00 E0 00 0019*      ld hl,240-16*256 ; allow space for text at bottom of screen
0411E4 22 93 12 04 0020*      ld (logo_ypos),hl
0411E8 EB          0021*      ex de,hl
0411E9 21 00 F8 FF 0022*      ld hl,-8*256 ; 8 pixels from top of screen
0411ED 19          0023*      add hl,de ; distance for logo to travel
0411EE 11 00 B1 FF 0024*      ld de,-sprites_num_images*256
0411F2 CD B3 08 04 0025*      call sdiv168 ; ud.e = distance / num images = y velocity
0411F6 ED 53 90 12 0026*      ld (logo_yvel),de
       04          
0411FB             0027*  ; all done
0411FB C9          0028*      ret
0411FC             0029*  
0411FC             0030*  ; inputs: bc is the number of images to load, cur_image_list set
0411FC             0031*  img_load_main:
0411FC             0032*  ; back up loop counter
0411FC C5          0033*      push bc
0411FD             0034*  
0411FD             0035*  ; load the next image
0411FD CD 34 12 04 0036*      call load_next_image
041201             0037*  
041201             0038*  ; plot the background
041201 CD 88 14 04 0039*      call vdu_cls
041205 21 02 00 00 0040*      ld hl,BUF_SPLASH_BG
041209 CD 75 15 04 0041*      call vdu_buff_select
04120D 01 00 00 00 0042*      ld bc,0
041211 11 00 00 00 0043*      ld de,0
041215 CD D1 18 04 0044*      call vdu_plot_bmp
041219             0045*  
041219             0046*  ; ; draw the most recently loaded image
041219             0047*  ; 	ld hl,(cur_buffer_id)
041219             0048*  ; 	call vdu_buff_select
041219             0049*  ; 	ld bc,0
041219             0050*  ; 	ld de,0
041219             0051*  ; 	call vdu_plot_bmp
041219             0052*  
041219             0053*  ; move logo
041219 CD 65 12 04 0054*      call move_logo
04121D             0055*  
04121D             0056*  ; print current filename
04121D 2A CE 11 04 0057*      ld hl,(cur_filename)
041221 CD 77 00 04 0058*      call printString
041225             0059*  
041225             0060*  ; flip the framebuffer
041225             0061*      ; call vdu_flip
041225             0062*  
041225             0063*  ; decrement loop counter
041225 C1          0064*      pop bc
041226 0B          0065*      dec bc
041227 79          0066*      ld a,c
041228 B7          0067*      or a
041229 C2 FC 11 04 0068*      jp nz,img_load_main
04122D 78          0069*      ld a,b
04122E B7          0070*      or a
04122F C2 FC 11 04 0071*      jp nz,img_load_main
041233 C9          0072*      ret
041234             0073*  
041234             0074*  load_next_image:
041234 FD 2A CB 11 0075*      ld iy,(cur_image_list)
       04          
041239 FD E5       0076*      push iy
04123B FD 7E 00    0077*      ld a,(iy+image_type) ; get image type
04123E FD 07 03    0078*      ld bc,(iy+image_width) ; get image width
041241 FD 17 06    0079*      ld de,(iy+image_height) ; get image height
041244 FD 31 09    0080*      ld ix,(iy+image_filesize) ; get image file size
041247 FD 27 0F    0081*      ld hl,(iy+image_bufferId) ; get image bufferId
04124A 22 D1 11 04 0082*      ld (cur_buffer_id),hl
04124E FD 37 0C    0083*      ld iy,(iy+image_filename) ; get image filename
041251 FD 22 CE 11 0084*      ld (cur_filename),iy
       04          
041256 CD 93 16 04 0085*      call vdu_load_img
04125A FD E1       0086*      pop iy
04125C ED 33 12    0087*      lea iy,iy+image_record_size
04125F FD 22 CB 11 0088*      ld (cur_image_list),iy
       04          
041264 C9          0089*      ret
041265             0090*  
041265             0091*  move_logo:
041265             0092*  ; activate logo bitmap
041265 21 03 00 00 0093*      ld hl, BUF_SPLASH_LOGO
041269 CD 75 15 04 0094*      call vdu_buff_select
04126D             0095*  ; update position based on velocity parameters
04126D 2A 93 12 04 0096*      ld hl,(logo_ypos)
041271 ED 5B 90 12 0097*      ld de,(logo_yvel)
       04          
041276 19          0098*      add hl,de
041277 22 93 12 04 0099*      ld (logo_ypos),hl
04127B             0100*  ; draw logo
04127B ED 4B 8D 12 0101*      ld bc,(logo_xpos)
       04          
041280 ED 5B 93 12 0102*      ld de,(logo_ypos)
       04          
041285 CD ED 18 04 0103*      call vdu_plot_bmp168
041289 C9          0104*      ret
04128A             0105*  
04128A 00 00 00    0106*  logo_xvel: dl 0
04128D 00 00 00    0107*  logo_xpos: dl 0
041290             0108*  
041290 00 00 00    0109*  logo_yvel: dl 0
041293 00 00 00    0110*  logo_ypos: dl 0
041296             0111*  
041296             0112*  load_ui_images:
041296             0113*  ; initialize image loading variables
041296 21 53 CC 04 0114*      ld hl,ui_image_list
04129A 22 CB 11 04 0115*      ld (cur_image_list),hl
04129E             0116*  ; load images
04129E 06 04       0117*      ld b,ui_num_images
0412A0             0118*  @loop:
0412A0 C5          0119*      push bc
0412A1 CD 34 12 04 0120*      call load_next_image
0412A5 C1          0121*      pop bc
0412A6 10 F8       0122*      djnz @loop
0412A8 C9          0123*      ret
0412A9             0124*  
0412A9             0125*  load_sprite_images:
0412A9             0126*  ; initialize image loading variables
0412A9 21 23 BF 04 0127*      ld hl,sprites_image_list
0412AD 22 CB 11 04 0128*      ld (cur_image_list),hl
0412B1 01 4F 00 00 0129*      ld bc,sprites_num_images
0412B5             0130*  ; load images
0412B5 CD FC 11 04 0131*      call img_load_main
0412B9 C9          0132*      ret
0412BA             0133*  
0412BA             0134*  load_tilesets:
0412BA             0135*  ; ; initialize image loading variables
0412BA             0136*  ;     ld hl,tiles_dg_image_list
0412BA             0137*  ;     ld (cur_image_list),hl
0412BA             0138*  ;     ld bc,tiles_dg_num_images
0412BA             0139*  ; ; load images
0412BA             0140*  ;     call img_load_main
0412BA             0141*  
0412BA             0142*  ; initialize image loading variables
0412BA 21 F6 1F 04 0143*      ld hl,tiles_xevious_image_list
0412BE 22 CB 11 04 0144*      ld (cur_image_list),hl
0412C2 01 1F 03 00 0145*      ld bc,tiles_xevious_num_images
0412C6             0146*  ; load images
0412C6 CD FC 11 04 0147*      call img_load_main
0412CA C9          0148*      ret
0412CB             0036       include "timer.inc"
0412CB             0001*  ; Table 32. Timer Control Registers
0412CB             0002*  ; this constant is the base address of the timer control registers
0412CB             0003*  ; each timer takes three bytes:
0412CB             0004*  ;   0: control register
0412CB             0005*  ;   1: low byte of timer reset value
0412CB             0006*  ;   2: high byte of timer reset value
0412CB             0007*  ; note that the value is only 8-bits,so we use in0/out0 i/o calls,
0412CB             0008*  ; which correctly force the high and upper bytes of the address bus to zero
0412CB             0009*  TMR_CTL:     equ 80h
0412CB             0010*  
0412CB             0011*  ; Timer Control Register Bit Definitions
0412CB             0012*  PRT_IRQ_0:    equ %00000000 ; The timer does not reach its end-of-count value.
0412CB             0013*                              ; This bit is reset to 0 every time the TMRx_CTL register is read.
0412CB             0014*  PRT_IRQ_1:    equ %10000000 ; The timer reaches its end-of-count value. If IRQ_EN is set to 1,
0412CB             0015*                              ; an interrupt signal is sent to the CPU. This bit remains 1 until
0412CB             0016*                              ; the TMRx_CTL register is read.
0412CB             0017*  
0412CB             0018*  IRQ_EN_0:     equ %00000000 ; Timer interrupt requests are disabled.
0412CB             0019*  IRQ_EN_1:     equ %01000000 ; Timer interrupt requests are enabled.
0412CB             0020*  
0412CB             0021*  PRT_MODE_0:   equ %00000000 ; The timer operates in SINGLE PASS mode. PRT_EN (bit 0) is reset to
0412CB             0022*                              ;  0,and counting stops when the end-of-count value is reached.
0412CB             0023*  PRT_MODE_1:   equ %00010000 ; The timer operates in CONTINUOUS mode. The timer reload value is
0412CB             0024*                              ; written to the counter when the end-of-count value is reached.
0412CB             0025*  
0412CB             0026*  ; CLK_DIV is a 2-bit mask that sets the timer input source clock divider
0412CB             0027*  CLK_DIV_256:  equ %00001100 ;
0412CB             0028*  CLK_DIV_64:   equ %00001000 ;
0412CB             0029*  CLK_DIV_16:   equ %00000100 ;
0412CB             0030*  CLK_DIV_4:    equ %00000000 ;
0412CB             0031*  
0412CB             0032*  RST_EN_0:     equ %00000000 ; The reload and restart function is disabled.
0412CB             0033*  RST_EN_1:     equ %00000010 ; The reload and restart function is enabled.
0412CB             0034*                              ; When a 1 is written to this bit,the values in the reload registers
0412CB             0035*                              ;  are loaded into the downcounter when the timer restarts. The
0412CB             0036*                              ; programmer must ensure that this bit is set to 1 each time
0412CB             0037*                              ; SINGLE-PASS mode is used.
0412CB             0038*  
0412CB             0039*  ; disable/enable the programmable reload timer
0412CB             0040*  PRT_EN_0:     equ %00000000 ;
0412CB             0041*  PRT_EN_1:     equ %00000001 ;
0412CB             0042*  
0412CB             0043*  ; Table 37. Timer Input Source Select Register
0412CB             0044*  ; Each of the 4 timers are allocated two bits of the 8-bit register
0412CB             0045*  ; in little-endian order,with TMR0 using bits 0 and 1,TMR1 using bits 2 and 3,etc.
0412CB             0046*  ;   00: System clock / CLK_DIV
0412CB             0047*  ;   01: RTC / CLK_DIV
0412CB             0048*  ;   NOTE: these are the values given in the manual,but it may be a typo
0412CB             0049*  ;   10: GPIO port B pin 1.
0412CB             0050*  ;   11: GPIO port B pin 1.
0412CB             0051*  TMR_ISS:   equ 92h ; register address
0412CB             0052*  
0412CB             0053*  ; Table 51. Real-Time Clock Control Register
0412CB             0054*  RTC_CTRL: equ EDh ; register address
0412CB             0055*  
0412CB             0056*  ; alarm interrupt disable/enable
0412CB             0057*  RTC_ALARM_0:    equ %00000000
0412CB             0058*  RTC_ALARM_1:    equ %10000000
0412CB             0059*  
0412CB             0060*  ; interrupt on alarm disable/enable
0412CB             0061*  RTC_INT_ENT_0:  equ %00000000
0412CB             0062*  RTC_INT_ENT_1:  equ %01000000
0412CB             0063*  
0412CB             0064*  RTC_BCD_EN_0:   equ %00000000   ; RTC count and alarm registers are binary
0412CB             0065*  RTC_BCD_EN_1:   equ %00100000   ; RTC count and alarm registers are BCD
0412CB             0066*  
0412CB             0067*  RTC_CLK_SEL_0:  equ %00000000   ; RTC clock source is crystal oscillator output (32768 Hz).
0412CB             0068*                                  ; On-chip 32768 Hz oscillator is enabled.
0412CB             0069*  RTC_CLK_SEL_1:  equ %00010000   ; RTC clock source is power line frequency input as set by FREQ_SEL.
0412CB             0070*                                  ; On-chip 32768 Hz oscillator is disabled.
0412CB             0071*  
0412CB             0072*  RTC_FREQ_SEL_0: equ %00000000   ; 60 Hz power line frequency.
0412CB             0073*  RTC_FREQ_SEL_1: equ %00001000   ; 50 Hz power line frequency.
0412CB             0074*  
0412CB             0075*  RTC_SLP_WAKE_0: equ %00000000   ; RTC does not generate a sleep-mode recovery reset.
0412CB             0076*  RTC_SLP_WAKE_1: equ %00000010   ; RTC generates a sleep-mode recovery reset.
0412CB             0077*  
0412CB             0078*  RTC_UNLOCK_0:   equ %00000000   ; RTC count registers are locked to prevent Write access.
0412CB             0079*                                  ; RTC counter is enabled.
0412CB             0080*  RTC_UNLOCK_1:   equ %00000001   ; RTC count registers are unlocked to allow Write access.
0412CB             0081*                                  ; RTC counter is disabled.
0412CB             0082*  
0412CB             0083*  ; prt_reload_emulator: equ 11234 ; 1/102.4 seconds on emulator with 16 clock divider
0412CB             0084*  
0412CB             0085*  prt_reload_emulator: equ 11519 ; 1 centisecond on emulator with 16 clock divider
0412CB             0086*  prt_reload_hardware: equ 11532 ; 1 centisecond on hardware with 16 clock divider
0412CB 00 00 00    0087*  prt_reload: dl 0x000000
0412CE             0088*  
0412CE             0089*  ; set PRT timer
0412CE             0090*  prt_set:
0412CE 21 00 00 00 0091*      ld hl,0
0412D2 22 1C 13 04 0092*      ld (prt_irq_counter),hl
0412D6 2A CB 12 04 0093*      ld hl,(prt_reload)
0412DA ED 29 84    0094*      out0 ($84),l
0412DD ED 21 85    0095*  	out0 ($85),h
0412E0             0096*  ; disable timer
0412E0 3E 06       0097*      ld a,PRT_IRQ_0 | IRQ_EN_0 | PRT_MODE_0 | CLK_DIV_16 | RST_EN_1 | PRT_EN_0
0412E2 ED 39 83    0098*  	out0 ($83),a
0412E5             0099*  ; enable timer,with interrupt and CONTINUOUS mode,clock divider 16
0412E5 3E 57       0100*      ld a,PRT_IRQ_0 | IRQ_EN_1 | PRT_MODE_1 | CLK_DIV_16 | RST_EN_1 | PRT_EN_1
0412E7 ED 39 83    0101*  	out0 ($83),a
0412EA C9          0102*      ret
0412EB             0103*  
0412EB             0104*  ; ===============================================
0412EB             0105*  ; PRT Timer Interrupt Handling
0412EB             0106*  ; https://github.com/tomm/agon-cpu-emulator/blob/main/sdcard/regression_suite/timerirq.inc
0412EB             0107*  ; -----------------------------------------------
0412EB             0108*  prt_irq_init:
0412EB             0109*      ; set up interrupt vector table 2
0412EB 21 00 00 00 0110*  	ld hl,0
0412EF 3A 0C 01 00 0111*  	ld a,($10c)
0412F3 6F          0112*  	ld l,a
0412F4 3A 0D 01 00 0113*  	ld a,($10d)
0412F8 67          0114*  	ld h,a
0412F9             0115*  
0412F9             0116*  	; skip over CALL ($c3)
0412F9 23          0117*  	inc hl
0412FA             0118*  	; load address of jump into vector table 2 (in ram)
0412FA ED 27       0119*  	ld hl,(hl)
0412FC             0120*  
0412FC             0121*  	; write CALL prt_irq_handler to vector table 2
0412FC 3E C3       0122*  	ld a,$c3
0412FE 77          0123*  	ld (hl),a
0412FF 23          0124*  	inc hl
041300 11 07 13 04 0125*  	ld de,prt_irq_handler
041304 ED 1F       0126*  	ld (hl),de
041306             0127*  
041306 C9          0128*      ret
041307             0129*  
041307             0130*  prt_irq_handler:
041307 F3          0131*  	di
041308 F5          0132*  	push af
041309 E5          0133*      push hl
04130A ED 38 83    0134*  	in0 a,($83)
04130D 2A 1C 13 04 0135*  	ld hl,(prt_irq_counter)
041311 23          0136*  	inc hl
041312 22 1C 13 04 0137*  	ld (prt_irq_counter),hl
041316 E1          0138*      pop hl
041317 F1          0139*  	pop af
041318 FB          0140*  	ei
041319 5B ED 4D    0141*  	reti.l
04131C             0142*  
04131C             0143*  prt_irq_counter:
04131C 00 00 00    0144*  	.dl 0
04131F             0145*  prt_irq_counter_saved:
04131F 00 00 00    0146*      .dl 0
041322             0147*  
041322             0148*  prt_loop_reset:
041322 E5          0149*      push hl
041323 21 00 00 00 0150*  	ld hl,0
041327 22 1C 13 04 0151*  	ld (prt_irq_counter),hl
04132B 22 8D 13 04 0152*      ld (prt_loop_counter),hl
04132F 22 90 13 04 0153*      ld (prt_loops),hl
041333 CD CE 12 04 0154*      call prt_set
041337 E1          0155*      pop hl
041338 C9          0156*      ret
041339             0157*  
041339             0158*  prt_loop_start:
041339 E5          0159*      push hl
04133A 21 00 00 00 0160*  	ld hl,0
04133E 22 1C 13 04 0161*  	ld (prt_irq_counter),hl
041342 E1          0162*      pop hl
041343 C9          0163*      ret
041344             0164*  
041344             0165*  prt_loop_stop:
041344 E5          0166*      push hl
041345 D5          0167*      push de
041346 2A 1C 13 04 0168*      ld hl,(prt_irq_counter)
04134A ED 5B 8D 13 0169*      ld de,(prt_loop_counter)
       04          
04134F 19          0170*      add hl,de
041350 22 8D 13 04 0171*      ld (prt_loop_counter),hl
041354 21 00 00 00 0172*      ld hl,0
041358 22 1C 13 04 0173*      ld (prt_irq_counter),hl
04135C 2A 90 13 04 0174*      ld hl,(prt_loops)
041360 23          0175*      inc hl
041361 22 90 13 04 0176*      ld (prt_loops),hl
041365 D1          0177*      pop de
041366 E1          0178*      pop hl
041367 C9          0179*      ret
041368             0180*  
041368             0181*  ; inputs: bc = y,x text coordinates to print
041368             0182*  prt_loop_print:
041368 F5          0183*      push af
041369 E5          0184*      push hl
04136A C5          0185*      push bc
04136B D5          0186*      push de
04136C DD E5       0187*      push ix
04136E FD E5       0188*      push iy
041370 CD 74 14 04 0189*      call vdu_move_cursor
041374             0190*  
041374 2A 8D 13 04 0191*      ld hl,(prt_loop_counter)
041378 CD 76 01 04 0192*      call printDec
04137C             0193*  
04137C 2A 90 13 04 0194*      ld hl,(prt_loops)
041380 CD 76 01 04 0195*      call printDec
041384             0196*  
041384 FD E1       0197*      pop iy
041386 DD E1       0198*      pop ix
041388 D1          0199*      pop de
041389 C1          0200*      pop bc
04138A E1          0201*      pop hl
04138B F1          0202*      pop af
04138C C9          0203*      ret
04138D             0204*  
04138D             0205*  prt_loop_counter:
04138D 00 00 00    0206*      .dl 0
041390             0207*  prt_loops:
041390 00 00 00    0208*      .dl 0
041393             0209*  
041393             0210*  ; ===============================================
041393             0211*  ; Timer functions
041393             0212*  ; -----------------------------------------------
041393             0213*  ; set a countdown timer
041393             0214*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
041393             0215*  ; returns: hl = current time
041393             0216*  tmr_set:
041393 FD 2F 03    0217*      ld (iy+3),hl            ; set time remaining
041396             0218*      MOSCALL mos_sysvars     ; ix points to syvars table
041396 3E 08       0001*M 			LD	A, function
041398 5B CF       0002*M 			RST.LIL	08h
04139A DD 27 00    0219*      ld hl,(ix+sysvar_time)  ; get current time
04139D FD 2F 00    0220*      ld (iy+0),hl            ; set start time
0413A0 C9          0221*      ret
0413A1             0222*  
0413A1             0223*  ; gets time remaining on a countdown timer
0413A1             0224*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
0413A1             0225*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
0413A1             0226*  ;          sign flags: pos = time not expired,zero or neg = time expired
0413A1             0227*  tmr_get:
0413A1             0228*      MOSCALL mos_sysvars     ; ix points to syvars table
0413A1 3E 08       0001*M 			LD	A, function
0413A3 5B CF       0002*M 			RST.LIL	08h
0413A5 DD 17 00    0229*      ld de,(ix+sysvar_time)  ; get current time
0413A8 FD 27 00    0230*      ld hl,(iy+0)            ; get start time
0413AB AF          0231*      xor a                   ; clear carry
0413AC ED 52       0232*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
0413AE FD 17 03    0233*      ld de,(iy+3)            ; get timer set value
0413B1 AF          0234*      xor a                   ; clear carry
0413B2 ED 5A       0235*      adc hl,de               ; hl = time remaining
0413B4             0236*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
0413B4 C9          0237*      ret
0413B5             0238*  
0413B5             0239*  tmr_test: ds 6 ; example of a buffer to hold timer data
0413BB             0240*  
0413BB 00 00 00    0241*  timestamp_now: dl 0
0413BE 00 00 00    0242*  timestamp_old: dl 0
0413C1 00 00 00    0243*  timestamp_chg: dl 0
0413C4             0244*  
0413C4             0245*  ; update the global timestamp from the system clock
0413C4             0246*  ; inputs: none
0413C4             0247*  ; returns: hl = time elapsed in 1/120ths of a second
0413C4             0248*  ;          ix = pointer to syvars table
0413C4             0249*  ; destroys: af,hl,de,ix
0413C4             0250*  timestamp_tick:
0413C4 ED 5B BB 13 0251*      ld de,(timestamp_now)   ; get previous time
       04          
0413C9 ED 53 BE 13 0252*      ld (timestamp_old),de   ; save previous time
       04          
0413CE             0253*      MOSCALL mos_sysvars     ; ix points to syvars table
0413CE 3E 08       0001*M 			LD	A, function
0413D0 5B CF       0002*M 			RST.LIL	08h
0413D2 DD 27 00    0254*      ld hl,(ix+sysvar_time)  ; get current time
0413D5 22 BB 13 04 0255*      ld (timestamp_now),hl   ; save current time
0413D9 AF          0256*      xor a                   ; clear carry
0413DA ED 52       0257*      sbc hl,de               ; hl = time elapsed
0413DC 22 C1 13 04 0258*      ld (timestamp_chg),hl   ; save elapsed time
0413E0 C9          0259*      ret
0413E1             0260*  
0413E1             0261*  ; set a countdown timer
0413E1             0262*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
0413E1             0263*  ; requires: timestamp_tick to be called at least once before this function
0413E1             0264*  ; returns: hl = current time
0413E1             0265*  ; destroys: hl
0413E1             0266*  timestamp_tmr_set:
0413E1 FD 2F 03    0267*      ld (iy+3),hl            ; set time remaining
0413E4 2A BB 13 04 0268*      ld hl,(timestamp_now)   ; get current timestamp
0413E8 FD 2F 00    0269*      ld (iy+0),hl            ; set start time
0413EB C9          0270*      ret
0413EC             0271*  
0413EC             0272*  ; gets time remaining on a countdown timer following the global timestamp
0413EC             0273*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
0413EC             0274*  ; requires: timestamp_tick to be called at least once before this function
0413EC             0275*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
0413EC             0276*  ;          sign flags: pos = time not expired,zero or neg = time expired
0413EC             0277*  ; destroys: af,hl,de
0413EC             0278*  timestamp_tmr_get:
0413EC ED 5B BB 13 0279*      ld de,(timestamp_now)   ; get current timestamp
       04          
0413F1 FD 27 00    0280*      ld hl,(iy+0)            ; get start time
0413F4 AF          0281*      xor a                   ; clear carry
0413F5 ED 52       0282*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
0413F7 FD 17 03    0283*      ld de,(iy+3)            ; get timer set value
0413FA AF          0284*      xor a                   ; clear carry
0413FB ED 5A       0285*      adc hl,de               ; hl = time remaining
0413FD             0286*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
0413FD C9          0287*      ret
0413FE             0288*  
0413FE             0289*  ; set a stopwatch
0413FE             0290*  ; returns: hl = start time
0413FE             0291*  ; destroys: hl,ix
0413FE             0292*  stopwatch_set:
0413FE             0293*      MOSCALL mos_sysvars     ; ix points to syvars table
0413FE 3E 08       0001*M 			LD	A, function
041400 5B CF       0002*M 			RST.LIL	08h
041402 DD 27 00    0294*      ld hl,(ix+sysvar_time)  ; get current time
041405 22 1A 14 04 0295*      ld (stopwatch_started),hl            ; set start time
041409 C9          0296*      ret
04140A             0297*  
04140A             0298*  ; gets time elapsed on a stopwatch
04140A             0299*  ; returns: hl = time elapsed in 1/120ths of a second
04140A             0300*  ; destroys: af,hl,de,ix
04140A             0301*  stopwatch_get:
04140A             0302*      MOSCALL mos_sysvars     ; ix points to syvars table
04140A 3E 08       0001*M 			LD	A, function
04140C 5B CF       0002*M 			RST.LIL	08h
04140E DD 27 00    0303*      ld hl,(ix+sysvar_time)  ; get current time
041411 ED 5B 1A 14 0304*      ld de,(stopwatch_started)            ; get start time
       04          
041416 AF          0305*      xor a                   ; clear carry
041417 ED 52       0306*      sbc hl,de               ; hl = time elapsed (will always be zero or positive)
041419 C9          0307*      ret
04141A             0308*  
04141A             0309*  stopwatch_started: ds 3 ; buffer to hold stopwatch start time
04141D             0310*  
04141D             0311*  ; ------------------
04141D             0312*  ; delay routine
04141D             0313*  ; Author: Richard Turrnidge
04141D             0314*  ; https://github.com/richardturnnidge/lessons/blob/main/slowdown.inc
04141D             0315*  ; routine waits a fixed time,then returns
04141D             0316*  ; arrive with A =  the delay byte. One bit to be set only.
04141D             0317*  ; eg. ld A,00000100b
04141D             0318*  
04141D             0319*  multiPurposeDelay:
04141D F5          0320*      push af
04141E C5          0321*      push bc
04141F DD E5       0322*      push ix
041421 47          0323*      ld b,a
041422 3E 08       0324*      ld a,$08
041424 5B CF       0325*      RST.LIL	08h                 ; get IX pointer to sysvars
041426             0326*  
041426             0327*  waitLoop:
041426             0328*  
041426 DD 7E 00    0329*      ld a,(ix + 0)              ; ix+0h is lowest byte of clock timer
041429             0330*  
041429             0331*                                  ;   we check if bit set is same as last time we checked.
041429             0332*                                  ;   bit 0 - don't use
041429             0333*                                  ;   bit 1 - changes 64 times per second
041429             0334*                                  ;   bit 2 - changes 32 times per second
041429             0335*                                  ;   bit 3 - changes 16 times per second
041429             0336*  
041429             0337*                                  ;   bit 4 - changes 8 times per second
041429             0338*                                  ;   bit 5 - changes 4 times per second
041429             0339*                                  ;   bit 6 - changes 2 times per second
041429             0340*                                  ;   bit 7 - changes 1 times per second
041429 A0          0341*      and b
04142A 4F          0342*      ld c,a
04142B 3A 3C 14 04 0343*      ld a,(oldTimeStamp)
04142F B9          0344*      cp c                        ; is A same as last value?
041430 28 F4       0345*      jr z,waitLoop              ; loop here if it is
041432 79          0346*      ld a,c
041433 32 3C 14 04 0347*      ld (oldTimeStamp),a        ; set new value
041437             0348*  
041437 DD E1       0349*      pop ix
041439 C1          0350*      pop bc
04143A F1          0351*      pop af
04143B C9          0352*      ret
04143C             0353*  
04143C 00          0354*  oldTimeStamp:   .db 00h
04143D             0037       include "vdu.inc"
04143D             0001*  
04143D             0002*  ; VDU 30: Home cursor
04143D             0003*  vdu_home_cursor:
04143D 3E 1E       0004*      ld a,30
04143F 5B D7       0005*  	rst.lil $10
041441 C9          0006*  	ret
041442             0007*  
041442             0008*  vdu_cursor_on:
041442 21 4D 14 04 0009*  	ld hl,@cmd
041446 01 03 00 00 0010*  	ld bc,@end-@cmd
04144A 5B DF       0011*  	rst.lil $18
04144C C9          0012*  	ret
04144D             0013*  @cmd:
04144D 17 01 01    0014*  	db 23,1,1
041450             0015*  @end:
041450             0016*  
041450             0017*  vdu_cursor_off:
041450 21 5B 14 04 0018*  	ld hl,@cmd
041454 01 03 00 00 0019*  	ld bc,@end-@cmd
041458 5B DF       0020*  	rst.lil $18
04145A C9          0021*  	ret
04145B             0022*  @cmd:
04145B 17 01 00    0023*  	db 23,1,0
04145E             0024*  @end:
04145E             0025*  
04145E             0026*  ; VDU 5: Write text at graphics cursor
04145E             0027*  ; inputs: a is the character to write to the screen
04145E             0028*  ; prerequisites: the graphics cursor at the intended position on screen
04145E             0029*  ; outputs: see the name of the function
04145E             0030*  ; destroys: a, hl, bc
04145E             0031*  vdu_char_to_gfx_cursor:
04145E 32 6E 14 04 0032*  	ld (@arg),a
041462 21 6D 14 04 0033*  	ld hl,@cmd
041466 01 02 00 00 0034*  	ld bc,@end-@cmd
04146A 5B DF       0035*  	rst.lil $18
04146C C9          0036*  	ret
04146D 05          0037*  @cmd: db 5
04146E 00          0038*  @arg: db 0
04146F             0039*  @end:
04146F             0040*  ; VDU 9: Move cursor forward one character
04146F             0041*  vdu_cursor_forward:
04146F 3E 09       0042*      ld a,9
041471 5B D7       0043*  	rst.lil $10
041473 C9          0044*  	ret
041474             0045*  
041474             0046*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
041474             0047*  ; inputs: c=x, b=y 8-bit unsigned integers
041474             0048*  vdu_move_cursor:
041474 ED 43 85 14 0049*      ld (@x0),bc
       04          
041479 21 84 14 04 0050*  	ld hl,@cmd
04147D 01 03 00 00 0051*  	ld bc,@end-@cmd
041481 5B DF       0052*  	rst.lil $18
041483 C9          0053*  	ret
041484 1F          0054*  @cmd: 	db 31
041485 00          0055*  @x0:	db 0
041486 00          0056*  @y0: 	db 0
041487 00          0057*  @end: 	db 0 ; padding
041488             0058*  
041488             0059*  ; VDU 12: Clear text area (CLS)
041488             0060*  vdu_cls:
041488 3E 0C       0061*      ld a,12
04148A 5B D7       0062*  	rst.lil $10
04148C C9          0063*  	ret
04148D             0064*  
04148D             0065*  vdu_flip:
04148D 21 98 14 04 0066*  	ld hl,@cmd
041491 01 03 00 00 0067*  	ld bc,@end-@cmd
041495 5B DF       0068*  	rst.lil $18
041497 C9          0069*  	ret
041498 17 00 C3    0070*  @cmd: db 23,0,0xC3
04149B             0071*  @end:
04149B             0072*  
04149B             0073*  ; VDU 16: Clear graphics area (CLG)
04149B             0074*  vdu_clg:
04149B 3E 10       0075*      ld a,16
04149D 5B D7       0076*  	rst.lil $10
04149F C9          0077*  	ret
0414A0             0078*  
0414A0             0079*  ; https://github.com/breakintoprogram/agon-docs/wiki/VDP
0414A0             0080*  ; VDU 23, 7: Scrolling
0414A0             0081*  ;     VDU 23, 7, extent, direction, speed: Scroll the screen
0414A0             0082*  ; inputs: a, extent; l, direction; h; speed
0414A0             0083*  vdu_scroll_down:
0414A0 32 B5 14 04 0084*  	ld (@extent),a
0414A4 22 B6 14 04 0085*  	ld (@dir),hl ; implicitly populates @speed
0414A8 21 B3 14 04 0086*  	ld hl,@cmd
0414AC 01 05 00 00 0087*  	ld bc,@end-@cmd
0414B0 5B DF       0088*  	rst.lil $18     ;; Sending command to VDP
0414B2 C9          0089*  	ret
0414B3 17 07       0090*  @cmd:       db 23,7
0414B5 00          0091*  @extent:    db 0x00 ; 0 current text window, 1 entire screen, 2 curr gfx viewport
0414B6 00          0092*  @dir:       db 0x00 ; 0 right, 1 left, 2 down, 3 up
0414B7 00          0093*  @speed:     db 0x00 ; pixels
0414B8 00          0094*  @end:		db 0x00 ; padding
0414B9             0095*  
0414B9             0096*  ; COLOUR MODES
0414B9             0097*  ; Mode	Effect
0414B9             0098*  ; 0	Set on-screen pixel to target colour value
0414B9             0099*  ; 1	OR value with the on-screen pixel
0414B9             0100*  ; 2	AND value with the on-screen pixel
0414B9             0101*  ; 3	XOR value with the on-screen pixel
0414B9             0102*  ; 4	Invert the on-screen pixel
0414B9             0103*  ; 5	No operation
0414B9             0104*  ; 6	AND the inverse of the specified colour with the on-screen pixel
0414B9             0105*  ; 7	OR the inverse of the specified colour with the on-screen pixel
0414B9             0106*  
0414B9             0107*  ; VDU 17, colour: Define text colour (COLOUR)
0414B9             0108*  vdu_colour_text:
0414B9 32 C9 14 04 0109*  	ld (@arg),a
0414BD 21 C8 14 04 0110*  	ld hl,@cmd
0414C1 01 02 00 00 0111*  	ld bc,@end-@cmd
0414C5 5B DF       0112*  	rst.lil $18
0414C7 C9          0113*  	ret
0414C8 11          0114*  @cmd: db 17
0414C9 00          0115*  @arg: db 0
0414CA             0116*  @end:
0414CA             0117*  
0414CA             0118*  ; VDU 18, mode, colour: Set graphics colour (GCOL mode, colour)
0414CA             0119*  ; inputs: a=mode, c=colour (add 128 to set background colour)
0414CA             0120*  vdu_gcol:
0414CA 32 DF 14 04 0121*  	ld (@mode),a
0414CE 79          0122*      ld a,c
0414CF 32 E0 14 04 0123*      ld (@col),a
0414D3 21 DE 14 04 0124*  	ld hl,@cmd
0414D7 01 03 00 00 0125*  	ld bc,@end-@cmd
0414DB 5B DF       0126*  	rst.lil $18
0414DD C9          0127*  	ret
0414DE 12          0128*  @cmd:  db 18
0414DF 00          0129*  @mode: db 0
0414E0 00          0130*  @col:  db 0
0414E1             0131*  @end:
0414E1             0132*  
0414E1             0133*  
0414E1             0134*  ; VDU 28, left, bottom, right, top: Set text viewport **
0414E1             0135*  ; MIND THE LITTLE-ENDIANESS
0414E1             0136*  ; inputs: c=left,b=bottom,e=right,d=top
0414E1             0137*  ; outputs; nothing
0414E1             0138*  ; destroys: a might make it out alive
0414E1             0139*  vdu_set_txt_viewport:
0414E1 ED 43 F7 14 0140*      ld (@lb),bc
       04          
0414E6 ED 53 F9 14 0141*  	ld (@rt),de
       04          
0414EB 21 F6 14 04 0142*  	ld hl,@cmd
0414EF 01 05 00 00 0143*  	ld bc,@end-@cmd
0414F3 5B DF       0144*  	rst.lil $18
0414F5 C9          0145*  	ret
0414F6 1C          0146*  @cmd:   db 28 ; set text viewport command
0414F7 00 00       0147*  @lb: 	dw 0x0000 ; set by bc
0414F9 00 00       0148*  @rt: 	dw 0x0000 ; set by de
0414FB 00          0149*  @end:   db 0x00	  ; padding
0414FC             0150*  
0414FC             0151*  ; Wait for VBLANK interrupt
0414FC             0152*  vdu_vblank:
0414FC DD E5       0153*      PUSH 	IX
0414FE             0154*  	MOSCALL	mos_sysvars
0414FE 3E 08       0001*M 			LD	A, function
041500 5B CF       0002*M 			RST.LIL	08h
041502 DD 7E 00    0155*  	LD	A, (IX + sysvar_time + 0)
041505             0156*  @wait:
041505 DD BE 00    0157*      CP 	A, (IX + sysvar_time + 0)
041508 28 FB       0158*      JR	Z, @wait
04150A DD E1       0159*      POP	IX
04150C C9          0160*      RET
04150D             0161*  
04150D             0162*  ; VDU 29, x; y;: Set graphics origin
04150D             0163*  ; This command sets the graphics origin.
04150D             0164*  ; The origin is the point on the screen where the coordinates (0,0) are located.
04150D             0165*  ; inputs: bc=x0,de=y0
04150D             0166*  ; outputs; nothing
04150D             0167*  ; destroys: a might make it out alive
04150D             0168*  vdu_set_gfx_origin:
04150D ED 43 23 15 0169*      ld (@x0),bc
       04          
041512 ED 53 25 15 0170*      ld (@y0),de
       04          
041517 21 22 15 04 0171*      ld hl,@cmd
04151B 01 05 00 00 0172*      ld bc,@end-@cmd
04151F 5B DF       0173*      rst.lil $18
041521 C9          0174*      ret
041522 1D          0175*  @cmd:   db 29 ; set graphics origin command
041523 00 00       0176*  @x0: 	dw 0x0000 ; set by bc
041525 00 00       0177*  @y0: 	dw 0x0000 ; set by de
041527 00          0178*  @end:   db 0x00	  ; padding
041528             0179*  
041528             0180*  ; VDU 24, left; bottom; right; top;: Set graphics viewport
041528             0181*  ; NOTE: the order of the y-coordinate parameters are inverted
041528             0182*  ; 	because we have turned off logical screen scaling
041528             0183*  ; inputs: bc=x0,de=y0,ix=x1,iy=y1
041528             0184*  ; outputs; nothing
041528             0185*  ; destroys: a might make it out alive
041528             0186*  vdu_set_gfx_viewport:
041528 ED 43 48 15 0187*      ld (@x0),bc
       04          
04152D FD 22 4A 15 0188*      ld (@y1),iy
       04          
041532 DD 22 4C 15 0189*  	ld (@x1),ix
       04          
041537 ED 53 4E 15 0190*  	ld (@y0),de
       04          
04153C 21 47 15 04 0191*  	ld hl,@cmd
041540 01 09 00 00 0192*  	ld bc,@end-@cmd
041544 5B DF       0193*  	rst.lil $18
041546 C9          0194*  	ret
041547 18          0195*  @cmd:   db 24 ; set graphics viewport command
041548 00 00       0196*  @x0: 	dw 0x0000 ; set by bc
04154A 00 00       0197*  @y1: 	dw 0x0000 ; set by iy
04154C 00 00       0198*  @x1: 	dw 0x0000 ; set by ix
04154E 00 00       0199*  @y0: 	dw 0x0000 ; set by de
041550 00          0200*  @end:   db 0x00	  ; padding
041551             0201*  
041551             0202*  ; SCREEN MODES
041551             0203*  ; ===============================
041551             0204*  ; Mode  Horz  Vert  Cols  Refresh
041551             0205*  ; ---   ----  ----  ----  -------
041551             0206*  ; 11    320   240   2     60hz
041551             0207*  ; 139   320   240   2     60hz
041551             0208*  ; 23    512   384   2     60hz
041551             0209*  ; 151   512   384   2     60hz
041551             0210*  ; 6     640   240   2     60hz
041551             0211*  ; 134   640   240   2     60hz
041551             0212*  ; 2     640   480   2     60hz
041551             0213*  ; 130   640   480   2     60hz
041551             0214*  ; 17    800   600   2     60hz
041551             0215*  ; 145   800   600   2     60hz
041551             0216*  ; 18    1024  768   2     60hz
041551             0217*  ; 146   1024  768   2     60hz
041551             0218*  ; ---   ----  ----  ----  -------
041551             0219*  ; 10    320   240   4     60hz
041551             0220*  ; 138   320   240   4     60hz
041551             0221*  ; 22    512   384   4     60hz
041551             0222*  ; 150   512   384   4     60hz
041551             0223*  ; 5     640   240   4     60hz
041551             0224*  ; 133   640   240   4     60hz
041551             0225*  ; 1     640   480   4     60hz
041551             0226*  ; 129   640   480   4     60hz
041551             0227*  ; 16    800   600   4     60hz
041551             0228*  ; 19    1024  768   4     60hz
041551             0229*  ; ---   ----  ----  ----  -------
041551             0230*  ; 9     320   240   16    60hz
041551             0231*  ; 137   320   240   16    60hz
041551             0232*  ; 21    512   384   16    60hz
041551             0233*  ; 149   512   384   16    60hz
041551             0234*  ; 4     640   240   16    60hz
041551             0235*  ; 132   640   240   16    60hz
041551             0236*  ; 0     640   480   16    60hz
041551             0237*  ; 7     n/a   n/a   16    60hz
041551             0238*  ; ---   ----  ----  ----  -------
041551             0239*  ; 8     320   240   64    60hz
041551             0240*  ; 136   320   240   64    60hz
041551             0241*  ; 20    512   384   64    60hz
041551             0242*  ; 3     640   240   64    60hz
041551             0243*  ; ---   ----  ----  ----  -------
041551             0244*  vdu_set_screen_mode:
041551 32 61 15 04 0245*  	ld (@arg),a
041555 21 60 15 04 0246*  	ld hl,@cmd
041559 01 02 00 00 0247*  	ld bc,@end-@cmd
04155D 5B DF       0248*  	rst.lil $18
04155F C9          0249*  	ret
041560 16          0250*  @cmd: db 22 ; set screen mode
041561 00          0251*  @arg: db 0  ; screen mode parameter
041562             0252*  @end:
041562             0253*  
041562             0254*  ; VDU 23, 0, &C0, n: Turn logical screen scaling on and off *
041562             0255*  ; inputs: a is scaling mode, 1=on, 0=off
041562             0256*  ; note: default setting on boot is scaling ON
041562             0257*  vdu_set_scaling:
041562 32 74 15 04 0258*  	ld (@arg),a
041566 21 71 15 04 0259*  	ld hl,@cmd
04156A 01 04 00 00 0260*  	ld bc,@end-@cmd
04156E 5B DF       0261*  	rst.lil $18
041570 C9          0262*  	ret
041571 17 00 C0    0263*  @cmd: db 23,0,0xC0
041574 00          0264*  @arg: db 0  ; scaling on/off
041575             0265*  @end:
041575             0266*  
041575             0267*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
041575             0268*  ; inputs: hl=bufferId
041575             0269*  vdu_buff_select:
041575 22 87 15 04 0270*  	ld (@bufferId),hl
041579 21 84 15 04 0271*  	ld hl,@cmd
04157D 01 05 00 00 0272*  	ld bc,@end-@cmd
041581 5B DF       0273*  	rst.lil $18
041583 C9          0274*  	ret
041584 17 1B 20    0275*  @cmd: db 23,27,0x20
041587 00 00       0276*  @bufferId: dw 0x0000
041589 00          0277*  @end: db 0x00 ; padding
04158A             0278*  
04158A             0279*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer
04158A             0280*  ; inputs: a=format; bc=width; de=height
04158A             0281*  ; prerequisites: buffer selected by vdu_bmp_select or vdu_buff_select
04158A             0282*  ; formats: https://agonconsole8.github.io/agon-docs/VDP---Bitmaps-API.html
04158A             0283*  ; 0 	RGBA8888 (4-bytes per pixel)
04158A             0284*  ; 1 	RGBA2222 (1-bytes per pixel)
04158A             0285*  ; 2 	Mono/Mask (1-bit per pixel)
04158A             0286*  ; 3 	Reserved for internal use by VDP (“native” format)
04158A             0287*  vdu_bmp_create:
04158A ED 43 A6 15 0288*      ld (@width),bc
       04          
04158F ED 53 A8 15 0289*      ld (@height),de
       04          
041594 32 AA 15 04 0290*      ld (@fmt),a
041598 21 A3 15 04 0291*  	ld hl,@cmd
04159C 01 08 00 00 0292*  	ld bc,@end-@cmd
0415A0 5B DF       0293*  	rst.lil $18
0415A2 C9          0294*  	ret
0415A3 17 1B 21    0295*  @cmd:       db 23,27,0x21
0415A6 00 00       0296*  @width:     dw 0x0000
0415A8 00 00       0297*  @height:    dw 0x0000
0415AA 00          0298*  @fmt:       db 0x00
0415AB             0299*  @end:
0415AB             0300*  
0415AB             0301*  ; load an rgba2222 image file to a working buffer and make it an rgba8888 bitmap in a target buffer
0415AB             0302*  ; inputs: bc,de image width,height ; hl = targetBufferId ; ix = file size ; iy = pointer to filename
0415AB             0303*  vdu_load_img_rgba2_to_8:
0415AB             0304*  ; backup the target buffer id and image dimensions
0415AB E5          0305*      push hl
0415AC D5          0306*      push de
0415AD C5          0307*      push bc
0415AE             0308*  ; load the rgba2 image to working buffer 65534
0415AE 21 FE FF 00 0309*      ld hl,65534 ; temporary working buffer id
0415B2 CD B5 16 04 0310*  	call vdu_load_buffer_from_file
0415B6             0311*  ; restore the image dimensions and target buffer id
0415B6 C1          0312*      pop bc
0415B7 D1          0313*      pop de
0415B8 E1          0314*      pop hl
0415B9             0315*  ; fall through to vdu_rgba2_to_8
0415B9             0316*  
0415B9             0317*  ; https://discord.com/channels/1158535358624039014/1158536711148675072/1257757461729771771
0415B9             0318*  ; ok, so the "expand bitmap" can be used, when coupled with a "reverse" - the expanded bitmap _doesn't_ come out "right" otherwise, cos of endian-ness
0415B9             0319*  ; the "expand bitmap" command is:
0415B9             0320*  ; VDU 23,0,&A0,targetBufferID%;&48,2,sourceBufferId%;0,&7F,&BF,&FF
0415B9             0321*  ; and then to reverse the byte order to fix endian-ness:
0415B9             0322*  ; VDU 23,0,&A0,targetBufferID%;24,4,4;
0415B9             0323*  ; finally you'd need to set that buffer to be an RGBA8888 format bitmap:
0415B9             0324*  ; VDU 23,27,&20,targetBufferID%;
0415B9             0325*  ; VDU 23,27,&21,width%;height%;0
0415B9             0326*  ; -------------------------------------------------------------------
0415B9             0327*  ; inputs: bc,de image width,height ; hl = targetBufferId
0415B9             0328*  ; prerequisites: rgba2 image data loaded into workingBufferId 65534
0415B9             0329*  vdu_rgba2_to_8:
0415B9             0330*  ; load the image dimensions and buffer id parameters
0415B9 ED 43 15 16 0331*      ld (@width),bc
       04          
0415BE ED 53 17 16 0332*      ld (@height),de
       04          
0415C3 22 FA 15 04 0333*      ld (@bufferId0),hl
0415C7 22 07 16 04 0334*      ld (@bufferId2),hl
0415CB 22 10 16 04 0335*      ld (@bufferId1),hl
0415CF             0336*  ; clean up bytes that got stomped on by the ID loads
0415CF 3E 48       0337*      ld a,0x48
0415D1 32 FC 15 04 0338*      ld (@bufferId0+2),a
0415D5 3E 17       0339*      ld a,23
0415D7 32 12 16 04 0340*      ld (@bufferId1+2),a
0415DB 3E 18       0341*      ld a,24
0415DD 32 09 16 04 0342*      ld (@bufferId2+2),a
0415E1 AF          0343*      xor a
0415E2 32 19 16 04 0344*      ld (@height+2),a
0415E6             0345*  ; send the vdu command strings
0415E6 21 F1 15 04 0346*      ld hl,@beg
0415EA 01 29 00 00 0347*      ld bc,@end-@beg
0415EE 5B DF       0348*      rst.lil $18
0415F0 C9          0349*      ret
0415F1             0350*  @beg:
0415F1             0351*  ; Command 14: Consolidate blocks in a buffer
0415F1             0352*  ; VDU 23, 0, &A0, bufferId; 14
0415F1 17 00 A0    0353*      db 23,0,0xA0
0415F4 FE FF       0354*      dw 65534 ; workingBufferId
0415F6 0E          0355*      db 14 ; consolidate blocks
0415F7             0356*  ; the "expand bitmap" command is:
0415F7             0357*  ; VDU 23,0,&A0,targetBufferID%;&48,2,sourceBufferId%;0,&7F,&BF,&FF
0415F7 17 00 A0    0358*      db 23,0,0xA0
0415FA 00 00       0359*  @bufferId0: dw 0x0000 ; targetBufferId
0415FC 48          0360*      db 0x48 ; given as decimal command 72 in the docs
0415FD 02          0361*      db 2 ; options mask: %00000011 is the number of bits per pixel in the source bitmap
0415FE FE FF       0362*      dw 65534 ; sourceBufferId
041600 00 7F BF FF 0363*      db 0x00,0x7F,0xBF,0xFF ; expanding to bytes by bit-shifting?
041604             0364*  ; reverse the byte order to fix endian-ness:
041604             0365*  ; Command 24: Reverse the order of data of blocks within a buffer
041604             0366*  ; VDU 23, 0, &A0, bufferId; 24, options, [valueSize;] [chunkSize;]
041604             0367*  ; VDU 23,0,&A0,targetBufferID%;24,4,4;
041604 17 00 A0    0368*      db 23,0,0xA0
041607 00 00       0369*  @bufferId2:    dw 0x0000 ; targetBufferId
041609 18          0370*      db 24 ; reverse byte order
04160A 04          0371*      db 4 ; option: Reverse data of the value size within chunk of data of the specified size
04160B 04 00       0372*      dw 4 ; size (4 bytes)
04160D             0373*  ; finally you'd need to set that buffer to be an RGBA8888 format bitmap:
04160D             0374*  ; VDU 23,27,&20,targetBufferID%;
04160D 17 1B 20    0375*      db 23,27,0x20 ; select bitmap
041610 00 00       0376*  @bufferId1: dw 0x0000 ; targetBufferId
041612             0377*  ; VDU 23,27,&21,width%;height%;0
041612 17 1B 21    0378*      db 23,27,0x21 ; create bitmap from buffer
041615 00 00       0379*  @width: dw 0x0000
041617 00 00       0380*  @height: dw 0x0000
041619 00          0381*      db 0x00 ; rgba8888 format
04161A             0382*  @end:
04161A             0383*  
04161A             0384*  ; scratch variables
04161A 00 00 00    0385*  bufferId0: dl 0x000000
04161D 00 00 00    0386*  bufferId1: dl 0x000000
041620             0387*  
041620             0388*  ; load a vdu buffer from local memory
041620             0389*  ; inputs: hl = bufferId ; bc = length ; de = pointer to data
041620             0390*  vdu_load_buffer:
041620 ED 43 49 16 0391*      ld (@length),bc
       04          
041625 D5          0392*      push de ; save data pointer
041626             0393*  ; send the vdu command string
041626 7D          0394*      ld a,l
041627 32 46 16 04 0395*      ld (@bufferId),a
04162B 7C          0396*      ld a,h
04162C 32 47 16 04 0397*      ld (@bufferId+1),a
041630 21 43 16 04 0398*      ld hl,@cmd
041634 01 08 00 00 0399*      ld bc,@end-@cmd
041638 5B DF       0400*      rst.lil $18
04163A             0401*  ; send the buffer data
04163A E1          0402*      pop hl ; pointer to data
04163B ED 4B 49 16 0403*      ld bc,(@length)
       04          
041640 5B DF       0404*      rst.lil $18 ; send it
041642 C9          0405*      ret
041643             0406*  ; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
041643 17 00 A0    0407*  @cmd:       db 23,0,0xA0
041646 00 00       0408*  @bufferId:	dw 0x0000
041648 00          0409*  		    db 0 ; load buffer
041649 00 00       0410*  @length:	dw 0x0000
04164B 00          0411*  @end: db 0 ; padding
04164C             0412*  
04164C             0413*  ; clear a buffer
04164C             0414*  ; inputs: hl = bufferId
04164C             0415*  vdu_clear_buffer:
04164C 7D          0416*      ld a,l
04164D 32 64 16 04 0417*      ld (@bufferId),a
041651 7C          0418*      ld a,h
041652 32 65 16 04 0419*      ld (@bufferId+1),a
041656 21 61 16 04 0420*      ld hl,@cmd
04165A 01 06 00 00 0421*      ld bc,@end-@cmd
04165E 5B DF       0422*      rst.lil $18
041660 C9          0423*      ret
041661 17 00 A0    0424*  @cmd:       db 23,0,0xA0
041664 00 00       0425*  @bufferId:	dw 0x0000
041666 02          0426*  		    db 2 ; clear buffer
041667             0427*  @end:
041667             0428*  
041667             0429*  vdu_clear_all_buffers:
041667             0430*  ; clear all buffers
041667 21 72 16 04 0431*      ld hl,@beg
04166B 01 06 00 00 0432*      ld bc,@end-@beg
04166F 5B DF       0433*      rst.lil $18
041671 C9          0434*      ret
041672 17 00 A0    0435*  @beg: db 23,0,$A0
041675 FF FF       0436*        dw -1 ; clear all buffers
041677 02          0437*        db 2  ; command 2: clear a buffer
041678             0438*  @end:
041678             0439*  
041678             0440*  ; Command 14: Consolidate blocks in a buffer
041678             0441*  vdu_consolidate_buffer:
041678             0442*  ; set parameters for vdu call
041678 7D          0443*      ld a,l
041679 32 90 16 04 0444*      ld (@bufferId),a
04167D 7C          0445*      ld a,h
04167E 32 91 16 04 0446*      ld (@bufferId+1),a
041682 21 8D 16 04 0447*      ld hl,@beg
041686 01 06 00 00 0448*      ld bc,@end-@beg
04168A 5B DF       0449*      rst.lil $18
04168C C9          0450*      ret
04168D             0451*  ; VDU 23, 0, &A0, bufferId; 14
04168D 17 00 A0    0452*  @beg: db 23,0,0xA0
041690 00 00       0453*  @bufferId: dw 0x0000
041692 0E          0454*             db 14
041693             0455*  @end:
041693             0456*  
041693             0457*  ; load an image file to a buffer and make it a bitmap
041693             0458*  ; inputs: a = image type ; bc,de image width,height ; hl = bufferId ; ix = file size ; iy = pointer to filename
041693             0459*  vdu_load_img:
041693             0460*  ; back up image type and dimension parameters
041693 22 1A 16 04 0461*      ld (bufferId0),hl
041697 F5          0462*      push af
041698 C5          0463*  	push bc
041699 D5          0464*  	push de
04169A             0465*  ; load the image
04169A CD B5 16 04 0466*  	call vdu_load_buffer_from_file
04169E             0467*  ; now make it a bitmap
04169E 2A 1A 16 04 0468*      ld hl,(bufferId0)
0416A2 CD 78 16 04 0469*      call vdu_consolidate_buffer
0416A6 2A 1A 16 04 0470*      ld hl,(bufferId0)
0416AA CD 75 15 04 0471*      call vdu_buff_select
0416AE D1          0472*  	pop de ; image height
0416AF C1          0473*  	pop bc ; image width
0416B0 F1          0474*  	pop af ; image type
0416B1 C3 8A 15 04 0475*  	jp vdu_bmp_create ; will return to caller from there
0416B5             0476*  
0416B5             0477*  ; inputs: hl = bufferId; iy = pointer to filename
0416B5             0478*  vdu_load_buffer_from_file:
0416B5 22 1A 16 04 0479*      ld (bufferId0),hl
0416B9             0480*  
0416B9             0481*  ; clear target buffer
0416B9 CD 4C 16 04 0482*      call vdu_clear_buffer
0416BD             0483*  
0416BD             0484*  ; open the file in read mode
0416BD             0485*  ; Open a file
0416BD             0486*  ; HLU: Filename
0416BD             0487*  ;   C: Mode
0416BD             0488*  ; Returns:
0416BD             0489*  ;   A: Filehandle, or 0 if couldn't open
0416BD FD E5       0490*  	push iy ; pointer to filename
0416BF E1          0491*  	pop hl
0416C0 0E 01       0492*  	ld c,fa_read
0416C2             0493*      MOSCALL mos_fopen
0416C2 3E 0A       0001*M 			LD	A, function
0416C4 5B CF       0002*M 			RST.LIL	08h
0416C6 32 01 17 04 0494*      ld (@filehandle),a
0416CA             0495*  
0416CA             0496*  @read_file:
0416CA             0497*  ; Read a block of data from a file
0416CA             0498*  ;   C: Filehandle
0416CA             0499*  ; HLU: Pointer to where to write the data to
0416CA             0500*  ; DEU: Number of bytes to read
0416CA             0501*  ; Returns:
0416CA             0502*  ; DEU: Number of bytes read
0416CA 3A 01 17 04 0503*      ld a,(@filehandle)
0416CE 4F          0504*      ld c,a
0416CF 21 00 E0 B7 0505*      ld hl,filedata
0416D3 11 00 20 00 0506*      ld de,8192 ; max we can read into onboard sram at one time
0416D7             0507*      MOSCALL mos_fread
0416D7 3E 1A       0001*M 			LD	A, function
0416D9 5B CF       0002*M 			RST.LIL	08h
0416DB             0508*  
0416DB             0509*  ; test de for zero bytes read
0416DB 21 00 00 00 0510*      ld hl,0
0416DF AF          0511*      xor a ; clear carry
0416E0 ED 52       0512*      sbc hl,de
0416E2 CA F8 16 04 0513*      jp z,@close_file
0416E6             0514*  
0416E6             0515*  ; load a vdu buffer from local memory
0416E6             0516*  ; inputs: hl = bufferId ; bc = length ; de = pointer to data
0416E6 2A 1A 16 04 0517*      ld hl,(bufferId0)
0416EA D5          0518*      push de ; chunksize
0416EB C1          0519*      pop bc
0416EC 11 00 E0 B7 0520*      ld de,filedata
0416F0 CD 20 16 04 0521*      call vdu_load_buffer
0416F4             0522*  
0416F4             0523*  ; read the next block
0416F4 C3 CA 16 04 0524*      jp @read_file
0416F8             0525*  
0416F8             0526*  ; close the file
0416F8             0527*  @close_file:
0416F8 3A 01 17 04 0528*      ld a,(@filehandle)
0416FC             0529*      MOSCALL mos_fclose
0416FC 3E 0B       0001*M 			LD	A, function
0416FE 5B CF       0002*M 			RST.LIL	08h
041700 C9          0530*      ret ; vdu_load_buffer_from_file
041701             0531*  
041701 00          0532*  @filehandle: db 0 ; file handle
041702 00 00 00    0533*  @fil: dl 0 ; pointer to FIL struct
041705             0534*  
041705 00 00 00    0535*  @chunkpointer: dl 0 ; pointer to current chunk
041708             0536*  
041708             0537*  ; File information structure (FILINFO)
041708             0538*  @filinfo:
041708 00 00 00 00 0539*  @filinfo_fsize:    blkb 4, 0   ; File size (4 bytes)
04170C 00 00       0540*  @filinfo_fdate:    blkb 2, 0   ; Modified date (2 bytes)
04170E 00 00       0541*  @filinfo_ftime:    blkb 2, 0   ; Modified time (2 bytes)
041710 00          0542*  @filinfo_fattrib:  blkb 1, 0   ; File attribute (1 byte)
041711 00 00 00 00 0543*  @filinfo_altname:  blkb 13, 0  ; Alternative file name (13 bytes)
       00 00 00 00 
       00 00 00 00 
       00          
04171E 00 00 00 00 0544*  @filinfo_fname:    blkb 256, 0 ; Primary file name (256 bytes)
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
04181E             0038       include "vdu_fonts.inc"
04181E             0001*  ; select font
04181E             0002*  ; inputs: hl = bufferId, a = font flags
04181E             0003*  ; Flags:
04181E             0004*  ; Bit	Description
04181E             0005*  ; 0	Adjust cursor position to ensure text baseline is aligned
04181E             0006*  ;   0: Do not adjust cursor position (best for changing font on a new line)
04181E             0007*  ;   1: Adjust cursor position (best for changing font in the middle of a line)
04181E             0008*  ; 1-7	Reserved for future use
04181E             0009*  ; VDU 23, 0, &95, 0, bufferId; flags: Select font
04181E             0010*  vdu_font_select:
04181E 22 35 18 04 0011*      ld (@bufferId),hl
041822 32 37 18 04 0012*      ld (@flags),a
041826 21 31 18 04 0013*      ld hl,@cmd
04182A 01 07 00 00 0014*      ld bc,@end-@cmd
04182E 5B DF       0015*      rst.lil $18
041830 C9          0016*      ret
041831 17 00 95 00 0017*  @cmd: db 23, 0, 0x95, 0
041835 00 00       0018*  @bufferId: dw 0x0000
041837 00          0019*  @flags: db 0x00
041838             0020*  @end:
041838             0021*  
041838             0022*  ; create font from buffer
041838             0023*  ; inputs: hl = bufferId, e = width, d = height, d = ascent, a = flags
041838             0024*  ; VDU 23, 0, &95, 1, bufferId; width, height, ascent, flags: Create font from buffer
041838             0025*  vdu_font_create:
041838 22 5D 18 04 0026*      ld (@bufferId),hl
04183C ED 53 5F 18 0027*      ld (@width),de ; also loads height
       04          
041841 32 62 18 04 0028*      ld (@flags),a
041845 7A          0029*      ld a,d ; height
041846 32 61 18 04 0030*      ld (@ascent),a ; ascent = height
04184A             0031*  ; consolidate buffer
04184A CD 78 16 04 0032*      call vdu_consolidate_buffer
04184E             0033*  ; create font
04184E 21 59 18 04 0034*      ld hl,@cmd
041852 01 0A 00 00 0035*      ld bc,@end-@cmd
041856 5B DF       0036*      rst.lil $18
041858 C9          0037*      ret
041859 17 00 95 01 0038*  @cmd: db 23, 0, 0x95, 1
04185D 00 00       0039*  @bufferId: dw 0x0000
04185F 00          0040*  @width: db 0x00
041860 00          0041*  @height: db 0x00
041861 00          0042*  @ascent: db 0x00
041862 00          0043*  @flags: db 0x00
041863             0044*  @end:
041863             0045*  
041863             0046*  ; set or adjust font property
041863             0047*  ; inputs: hl = bufferId, a = field, de = value
041863             0048*  ; VDU 23, 0, &95, 2, bufferId; field, value;: Set or adjust font property
041863             0049*  vdu_font_property:
041863 22 7F 18 04 0050*      ld (@bufferId),hl
041867 32 81 18 04 0051*      ld (@field),a
04186B ED 53 82 18 0052*      ld (@value),de
       04          
041870 21 7B 18 04 0053*      ld hl,@cmd
041874 01 09 00 00 0054*      ld bc,@end-@cmd
041878 5B DF       0055*      rst.lil $18
04187A C9          0056*      ret
04187B 17 00 95 02 0057*  @cmd: db 23, 0, 0x95, 2
04187F 00 00       0058*  @bufferId: dw 0x0000
041881 00          0059*  @field: db 0x00
041882 00 00       0060*  @value: dw 0x0000
041884 00          0061*  @end: db 0x00 ; padding
041885             0062*  
041885             0063*  ; VDU 23, 0, &95, 3, bufferId; [<args>]: Reserved
041885             0064*  
041885             0065*  ; Clear/Delete font
041885             0066*  ; inputs: hl = bufferId
041885             0067*  ; VDU 23, 0, &95, 4, bufferId;: Clear/Delete font
041885             0068*  vdu_font_clear:
041885 22 98 18 04 0069*      ld (@bufferId),hl
041889 21 94 18 04 0070*      ld hl,@cmd
04188D 01 06 00 00 0071*      ld bc,@end-@cmd
041891 5B DF       0072*      rst.lil $18
041893 C9          0073*      ret
041894 17 00 95 04 0074*  @cmd: db 23, 0, 0x95, 4
041898 00 00       0075*  @bufferId: dw 0x0000
04189A 00          0076*  @end: db 0x00 ; padding
04189B             0077*  
04189B             0078*  ; Copy system font to buffer
04189B             0079*  ; inputs: hl = bufferId
04189B             0080*  ; VDU 23, 0, &95, 5, bufferId;: Copy system font to buffer
04189B             0081*  vdu_font_copy_system:
04189B 22 AE 18 04 0082*      ld (@bufferId),hl
04189F 21 AA 18 04 0083*      ld hl,@cmd
0418A3 01 06 00 00 0084*      ld bc,@end-@cmd
0418A7 5B DF       0085*      rst.lil $18
0418A9 C9          0086*      ret
0418AA 17 00 95 05 0087*  @cmd: db 23, 0, 0x95, 5
0418AE 00 00       0088*  @bufferId: dw 0x0000
0418B0 00          0089*  @end: db 0x00 ; padding
0418B1             0039       include "vdu_plot.inc"
0418B1             0001*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
0418B1             0002*  ; PLOT code 	(Decimal) 	Effect
0418B1             0003*  ; &00-&07 	0-7 	Solid line, includes both ends
0418B1             0004*  plot_sl_both: equ 0x00
0418B1             0005*  
0418B1             0006*  ; &08-&0F 	8-15 	Solid line, final point omitted
0418B1             0007*  plot_sl_first: equ 0x08
0418B1             0008*  
0418B1             0009*  ; &10-&17 	16-23 	Not supported (Dot-dash line, includes both ends, pattern restarted)
0418B1             0010*  ; &18-&1F 	24-31 	Not supported (Dot-dash line, first point omitted, pattern restarted)
0418B1             0011*  
0418B1             0012*  ; &20-&27 	32-39 	Solid line, first point omitted
0418B1             0013*  plot_sl_last: equ 0x20
0418B1             0014*  
0418B1             0015*  ; &28-&2F 	40-47 	Solid line, both points omitted
0418B1             0016*  plot_sl_none: equ 0x28
0418B1             0017*  
0418B1             0018*  ; &30-&37 	48-55 	Not supported (Dot-dash line, first point omitted, pattern continued)
0418B1             0019*  ; &38-&3F 	56-63 	Not supported (Dot-dash line, both points omitted, pattern continued)
0418B1             0020*  
0418B1             0021*  ; &40-&47 	64-71 	Point plot
0418B1             0022*  plot_pt: equ 0x40
0418B1             0023*  
0418B1             0024*  ; &48-&4F 	72-79 	Line fill left and right to non-background §§
0418B1             0025*  plot_lf_lr_non_bg: equ 0x48
0418B1             0026*  
0418B1             0027*  ; &50-&57 	80-87 	Triangle fill
0418B1             0028*  plot_tf: equ 0x50
0418B1             0029*  
0418B1             0030*  ; &58-&5F 	88-95 	Line fill right to background §§
0418B1             0031*  plot_lf_r_bg: equ 0x58
0418B1             0032*  
0418B1             0033*  ; &60-&67 	96-103 	Rectangle fill
0418B1             0034*  plot_rf: equ 0x60
0418B1             0035*  
0418B1             0036*  ; &68-&6F 	104-111 	Line fill left and right to foreground §§
0418B1             0037*  plot_lf_lr_fg: equ 0x60
0418B1             0038*  
0418B1             0039*  ; &70-&77 	112-119 	Parallelogram fill
0418B1             0040*  plot_pf: equ 0x70
0418B1             0041*  
0418B1             0042*  ; &78-&7F 	120-127 	Line fill right to non-foreground §§
0418B1             0043*  plot_lf_r_non_fg: equ 0x78
0418B1             0044*  
0418B1             0045*  ; &80-&87 	128-135 	Not supported (Flood until non-background)
0418B1             0046*  ; &88-&8F 	136-143 	Not supported (Flood until foreground)
0418B1             0047*  
0418B1             0048*  ; &90-&97 	144-151 	Circle outline
0418B1             0049*  plot_co: equ 0x90
0418B1             0050*  
0418B1             0051*  ; &98-&9F 	152-159 	Circle fill
0418B1             0052*  plot_cf: equ 0x98
0418B1             0053*  
0418B1             0054*  ; &A0-&A7 	160-167 	Not supported (Circular arc)
0418B1             0055*  ; &A8-&AF 	168-175 	Not supported (Circular segment)
0418B1             0056*  ; &B0-&B7 	176-183 	Not supported (Circular sector)
0418B1             0057*  
0418B1             0058*  ; &B8-&BF 	184-191 	Rectangle copy/move
0418B1             0059*  plot_rcm: equ 0xB8
0418B1             0060*  
0418B1             0061*  ; &C0-&C7 	192-199 	Not supported (Ellipse outline)
0418B1             0062*  ; &C8-&CF 	200-207 	Not supported (Ellipse fill)
0418B1             0063*  ; &D0-&D7 	208-215 	Not defined
0418B1             0064*  ; &D8-&DF 	216-223 	Not defined
0418B1             0065*  ; &E0-&E7 	224-231 	Not defined
0418B1             0066*  
0418B1             0067*  ; &E8-&EF 	232-239 	Bitmap plot §
0418B1             0068*  plot_bmp: equ 0xE8
0418B1             0069*  
0418B1             0070*  ; &F0-&F7 	240-247 	Not defined
0418B1             0071*  ; &F8-&FF 	248-255 	Not defined
0418B1             0072*  
0418B1             0073*  ; § Support added in Agon Console8 VDP 2.1.0 §§ Support added in
0418B1             0074*  ; Agon Console8 VDP 2.2.0
0418B1             0075*  
0418B1             0076*  ; Within each group of eight plot codes, the effects are as follows:
0418B1             0077*  ; Plot code 	Effect
0418B1             0078*  ; 0 	Move relative
0418B1             0079*  mv_rel: equ 0
0418B1             0080*  
0418B1             0081*  ; 1 	Plot relative in current foreground colour
0418B1             0082*  dr_rel_fg: equ 1
0418B1             0083*  
0418B1             0084*  ; 2 	Not supported (Plot relative in logical inverse colour)
0418B1             0085*  ; 3 	Plot relative in current background colour
0418B1             0086*  dr_rel_bg: equ 3
0418B1             0087*  
0418B1             0088*  ; 4 	Move absolute
0418B1             0089*  mv_abs: equ 4
0418B1             0090*  
0418B1             0091*  ; 5 	Plot absolute in current foreground colour
0418B1             0092*  dr_abs_fg: equ 5
0418B1             0093*  
0418B1             0094*  ; 6 	Not supported (Plot absolute in logical inverse colour)
0418B1             0095*  ; 7 	Plot absolute in current background colour
0418B1             0096*  dr_abs_bg: equ 7
0418B1             0097*  
0418B1             0098*  ; Codes 0-3 use the position data provided as part of the command
0418B1             0099*  ; as a relative position, adding the position given to the current
0418B1             0100*  ; graphical cursor position. Codes 4-7 use the position data provided
0418B1             0101*  ; as part of the command as an absolute position, setting the current
0418B1             0102*  ; graphical cursor position to the position given.
0418B1             0103*  
0418B1             0104*  ; Codes 2 and 6 on Acorn systems plot using a logical inverse of the
0418B1             0105*  ; current pixel colour. These operations cannot currently be supported
0418B1             0106*  ; by the graphics system the Agon VDP uses, so these codes are not
0418B1             0107*  ; supported. Support for these codes may be added in a future version
0418B1             0108*  ; of the VDP firmware.
0418B1             0109*  
0418B1             0110*  ; 16 colour palette constants
0418B1             0111*  c_black: equ 0
0418B1             0112*  c_red_dk: equ 1
0418B1             0113*  c_green_dk: equ 2
0418B1             0114*  c_yellow_dk: equ 3
0418B1             0115*  c_blue_dk: equ 4
0418B1             0116*  c_magenta_dk: equ 5
0418B1             0117*  c_cyan_dk: equ 6
0418B1             0118*  c_grey: equ 7
0418B1             0119*  c_grey_dk: equ 8
0418B1             0120*  c_red: equ 9
0418B1             0121*  c_green: equ 10
0418B1             0122*  c_yellow: equ 11
0418B1             0123*  c_blue: equ 12
0418B1             0124*  c_magenta: equ 13
0418B1             0125*  c_cyan: equ 14
0418B1             0126*  c_white: equ 15
0418B1             0127*  
0418B1             0128*  ; VDU 25, mode, x; y;: PLOT command
0418B1             0129*  ; inputs: a=mode, bc=x0, de=y0
0418B1             0130*  vdu_plot:
0418B1 32 CB 18 04 0131*      ld (@mode),a
0418B5 ED 43 CC 18 0132*      ld (@x0),bc
       04          
0418BA ED 53 CE 18 0133*      ld (@y0),de
       04          
0418BF 21 CA 18 04 0134*  	ld hl,@cmd
0418C3 01 06 00 00 0135*  	ld bc,@end-@cmd
0418C7 5B DF       0136*  	rst.lil $18
0418C9 C9          0137*  	ret
0418CA 19          0138*  @cmd:   db 25
0418CB 00          0139*  @mode:  db 0
0418CC 00 00       0140*  @x0: 	dw 0
0418CE 00 00       0141*  @y0: 	dw 0
0418D0 00          0142*  @end:   db 0 ; extra byte to soak up deu
0418D1             0143*  
0418D1             0144*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
0418D1             0145*  ; &E8-&EF 	232-239 	Bitmap plot §
0418D1             0146*  ; VDU 25, mode, x; y;: PLOT command
0418D1             0147*  ; inputs: bc=x0, de=y0
0418D1             0148*  ; prerequisites: vdu_buff_select
0418D1             0149*  vdu_plot_bmp:
0418D1 ED 43 E8 18 0150*      ld (@x0),bc
       04          
0418D6 ED 53 EA 18 0151*      ld (@y0),de
       04          
0418DB 21 E6 18 04 0152*  	ld hl,@cmd
0418DF 01 06 00 00 0153*  	ld bc,@end-@cmd
0418E3 5B DF       0154*  	rst.lil $18
0418E5 C9          0155*  	ret
0418E6 19          0156*  @cmd:   db 25
0418E7 ED          0157*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
0418E8 00 00       0158*  @x0: 	dw 0x0000
0418EA 00 00       0159*  @y0: 	dw 0x0000
0418EC 00          0160*  @end:   db 0x00 ; padding
0418ED             0161*  
0418ED             0162*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
0418ED             0163*  ; &E8-&EF 	232-239 	Bitmap plot §
0418ED             0164*  ; VDU 25, mode, x; y;: PLOT command
0418ED             0165*  ; inputs: bc=x0, de=y0
0418ED             0166*  ; USING 16.8 FIXED POINT COORDINATES
0418ED             0167*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
0418ED             0168*  ;   the fractional portiion of the inputs are truncated
0418ED             0169*  ;   leaving only the 16-bit integer portion
0418ED             0170*  ; prerequisites: vdu_buff_select
0418ED             0171*  vdu_plot_bmp168:
0418ED             0172*  ; populate in the reverse of normal to keep the
0418ED             0173*  ; inputs from stomping on each other
0418ED ED 53 0B 19 0174*      ld (@y0-1),de
       04          
0418F2 ED 43 09 19 0175*      ld (@x0-1),bc
       04          
0418F7 3E ED       0176*      ld a,plot_bmp+dr_abs_fg ; 0xED
0418F9 32 09 19 04 0177*      ld (@mode),a ; restore the mode byte that got stomped on by bcu
0418FD 21 08 19 04 0178*  	ld hl,@cmd
041901 01 06 00 00 0179*  	ld bc,@end-@cmd
041905 5B DF       0180*  	rst.lil $18
041907 C9          0181*  	ret
041908 19          0182*  @cmd:   db 25
041909 ED          0183*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04190A 00 00       0184*  @x0: 	dw 0x0000
04190C 00 00       0185*  @y0: 	dw 0x0000
04190E             0186*  @end:  ; no padding required b/c we shifted de right
04190E             0187*  
04190E             0188*  ; draw a filled rectangle
04190E             0189*  vdu_plot_rf:
04190E ED 43 35 19 0190*      ld (@x0),bc
       04          
041913 ED 53 37 19 0191*      ld (@y0),de
       04          
041918 DD 22 3B 19 0192*      ld (@x1),ix
       04          
04191D FD 22 3D 19 0193*      ld (@y1),iy
       04          
041922 3E 19       0194*      ld a,25 ; we have to reload the 2nd plot command
041924 32 39 19 04 0195*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
041928 21 33 19 04 0196*  	ld hl,@cmd0
04192C 01 0C 00 00 0197*  	ld bc,@end-@cmd0
041930 5B DF       0198*  	rst.lil $18
041932 C9          0199*      ret
041933 19          0200*  @cmd0:  db 25 ; plot
041934 04          0201*  @arg0:  db plot_sl_both+mv_abs
041935 00 00       0202*  @x0:    dw 0x0000
041937 00 00       0203*  @y0:    dw 0x0000
041939 19          0204*  @cmd1:  db 25 ; plot
04193A 65          0205*  @arg1:  db plot_rf+dr_abs_fg
04193B 00 00       0206*  @x1:    dw 0x0000
04193D 00 00       0207*  @y1:    dw 0x0000
04193F 00          0208*  @end:   db 0x00 ; padding
041940             0209*  
041940             0210*  ; draw a filled circle
041940             0211*  vdu_plot_cf:
041940 ED 43 67 19 0212*      ld (@x0),bc
       04          
041945 ED 53 69 19 0213*      ld (@y0),de
       04          
04194A DD 22 6D 19 0214*      ld (@x1),ix
       04          
04194F FD 22 6F 19 0215*      ld (@y1),iy
       04          
041954 3E 19       0216*      ld a,25 ; we have to reload the 2nd plot command
041956 32 6B 19 04 0217*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04195A 21 65 19 04 0218*  	ld hl,@cmd0
04195E 01 0C 00 00 0219*  	ld bc,@end-@cmd0
041962 5B DF       0220*  	rst.lil $18
041964 C9          0221*      ret
041965 19          0222*  @cmd0:  db 25 ; plot
041966 04          0223*  @arg0:  db plot_sl_both+mv_abs
041967 00 00       0224*  @x0:    dw 0x0000
041969 00 00       0225*  @y0:    dw 0x0000
04196B 19          0226*  @cmd1:  db 25 ; plot
04196C 9D          0227*  @arg1:  db plot_cf+dr_abs_fg
04196D 00 00       0228*  @x1:    dw 0x0000
04196F 00 00       0229*  @y1:    dw 0x0000
041971 00          0230*  @end:   db 0x00 ; padding
041972             0040       include "vdu_sprites.inc"
041972             0001*  ; ; https://github.com/AgonConsole8/agon-docs/blob/main/VDP---Bitmaps-API.md
041972             0002*  ; the VDP can support up to 256 sprites. They must be defined
041972             0003*  ; contiguously, and so the first sprite is sprite 0.
041972             0004*  ; (In contrast, bitmaps can have any ID from 0 to 65534.)
041972             0005*  ; Once a selection of sprites have been defined, you can activate
041972             0006*  ; them using the VDU 23, 27, 7, n command, where n is the number
041972             0007*  ; of sprites to activate. This will activate the first n sprites,
041972             0008*  ; starting with sprite 0. All sprites from 0 to n-1 must be defined.
041972             0009*  
041972             0010*  ; A single sprite can have multiple "frames", referring to
041972             0011*  ; different bitmaps.
041972             0012*  ; (These bitmaps do not need to be the same size.)
041972             0013*  ; This allows a sprite to include an animation sequence,
041972             0014*  ; which can be stepped through one frame at a time, or picked
041972             0015*  ; in any order.
041972             0016*  
041972             0017*  ; Any format of bitmap can be used as a sprite frame. It should
041972             0018*  ; be noted however that "native" format bitmaps are not
041972             0019*  ; recommended for use as sprite frames, as they cannot get
041972             0020*  ; erased from the screen. (As noted above, the "native" bitmap
041972             0021*  ; format is not really intended for general use.) This is part
041972             0022*  ; of why from Agon Console8 VDP 2.6.0 bitmaps captured from the
041972             0023*  ; screen are now stored in RGBA2222 format.
041972             0024*  
041972             0025*  ; An "active" sprite can be hidden, so it will stop being drawn,
041972             0026*  ; and then later shown again.
041972             0027*  
041972             0028*  ; Moving sprites around the screen is done by changing the
041972             0029*  ; position of the sprite. This can be done either by setting
041972             0030*  ; the absolute position of the sprite, or by moving the sprite
041972             0031*  ; by a given number of pixels. (Sprites are positioned using
041972             0032*  ; pixel coordinates, and not by the logical OS coordinate system.)
041972             0033*  ; In the current sprite system, sprites will not update their
041972             0034*  ; position on-screen until either another drawing operation is
041972             0035*  ; performed or an explicit VDU 23, 27, 15 command is performed.
041972             0036*  
041972             0037*  ; VDU 23, 27, 4, n: Select sprite n
041972             0038*  ; inputs: a is the 8-bit sprite id
041972             0039*  vdu_sprite_select:
041972 32 84 19 04 0040*      ld (@sprite),a
041976 21 81 19 04 0041*      ld hl,@cmd
04197A 01 04 00 00 0042*      ld bc,@end-@cmd
04197E 5B DF       0043*      rst.lil $18
041980 C9          0044*      ret
041981 17 1B 04    0045*  @cmd:    db 23,27,4
041984 00          0046*  @sprite: db 0x00
041985             0047*  @end:
041985             0048*  
041985             0049*  ; VDU 23, 27, 5: Clear frames in current sprite
041985             0050*  ; inputs: none
041985             0051*  ; prerequisites: vdu_sprite_select
041985             0052*  vdu_sprite_clear_frames:
041985 21 90 19 04 0053*      ld hl,@cmd
041989 01 03 00 00 0054*      ld bc,@end-@cmd
04198D 5B DF       0055*      rst.lil $18
04198F C9          0056*      ret
041990 17 1B 05    0057*  @cmd: db 23,27,5
041993             0058*  @end:
041993             0059*  
041993             0060*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
041993             0061*  ; inputs: a is the 8-bit bitmap number
041993             0062*  ; prerequisites: vdu_sprite_select
041993             0063*  vdu_sprite_add_bmp:
041993 32 A5 19 04 0064*      ld (@bmp),a
041997 21 A2 19 04 0065*      ld hl,@cmd
04199B 01 04 00 00 0066*      ld bc,@end-@cmd
04199F 5B DF       0067*      rst.lil $18
0419A1 C9          0068*      ret
0419A2 17 1B 06    0069*  @cmd: db 23,27,6
0419A5 00          0070*  @bmp: db 0x00
0419A6             0071*  @end:
0419A6             0072*  
0419A6             0073*  ; VDU 23, 27, 7, n: Activate n sprites
0419A6             0074*  ; inputs: a is the number of sprites to activate
0419A6             0075*  ; prerequisites: each sprite activated must have at least one frame attached to it
0419A6             0076*  vdu_sprite_activate:
0419A6 32 B8 19 04 0077*      ld (@num),a
0419AA 21 B5 19 04 0078*      ld hl,@cmd
0419AE 01 04 00 00 0079*      ld bc,@end-@cmd
0419B2 5B DF       0080*      rst.lil $18
0419B4 C9          0081*      ret
0419B5 17 1B 07    0082*  @cmd: db 23,27,7
0419B8 00          0083*  @num: db 0x00
0419B9             0084*  @end:
0419B9             0085*  
0419B9             0086*  ; VDU 23, 27, 8: Select next frame of current sprite
0419B9             0087*  ; inputs: none
0419B9             0088*  ; prerequisites: vdu_sprite_select
0419B9             0089*  vdu_sprite_next_frame:
0419B9 21 C4 19 04 0090*      ld hl,@cmd
0419BD 01 03 00 00 0091*      ld bc,@end-@cmd
0419C1 5B DF       0092*      rst.lil $18
0419C3 C9          0093*      ret
0419C4 17 1B 08    0094*  @cmd: db 23,27,8
0419C7             0095*  @end:
0419C7             0096*  
0419C7             0097*  ; VDU 23, 27, 9: Select previous frame of current sprite
0419C7             0098*  ; inputs: none
0419C7             0099*  ; prerequisites: vdu_sprite_select
0419C7             0100*  vdu_sprite_prev_frame:
0419C7 21 D2 19 04 0101*      ld hl,@cmd
0419CB 01 03 00 00 0102*      ld bc,@end-@cmd
0419CF 5B DF       0103*      rst.lil $18
0419D1 C9          0104*      ret
0419D2 17 1B 09    0105*  @cmd: db 23,27,9
0419D5             0106*  @end:
0419D5             0107*  
0419D5             0108*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
0419D5             0109*  ; inputs: a is frame number to select
0419D5             0110*  ; prerequisites: vdu_sprite_select
0419D5             0111*  vdu_sprite_select_frame:
0419D5 32 E7 19 04 0112*      ld (@frame),a
0419D9 21 E4 19 04 0113*      ld hl,@cmd
0419DD 01 04 00 00 0114*      ld bc,@end-@cmd
0419E1 5B DF       0115*      rst.lil $18
0419E3 C9          0116*      ret
0419E4 17 1B 0A    0117*  @cmd:    db 23,27,10
0419E7 00          0118*  @frame:  db 0x00
0419E8             0119*  @end:
0419E8             0120*  
0419E8             0121*  ; VDU 23, 27, 11: Show current sprite
0419E8             0122*  ; inputs: none
0419E8             0123*  ; prerequisites: vdu_sprite_select
0419E8             0124*  vdu_sprite_show:
0419E8 21 F3 19 04 0125*      ld hl,@cmd
0419EC 01 03 00 00 0126*      ld bc,@end-@cmd
0419F0 5B DF       0127*      rst.lil $18
0419F2 C9          0128*      ret
0419F3 17 1B 0B    0129*  @cmd: db 23,27,11
0419F6             0130*  @end:
0419F6             0131*  
0419F6             0132*  ; VDU 23, 27, 12: Hide current sprite
0419F6             0133*  ; inputs: none
0419F6             0134*  ; prerequisites: vdu_sprite_select
0419F6             0135*  vdu_sprite_hide:
0419F6 21 01 1A 04 0136*      ld hl,@cmd
0419FA 01 03 00 00 0137*      ld bc,@end-@cmd
0419FE 5B DF       0138*      rst.lil $18
041A00 C9          0139*      ret
041A01 17 1B 0C    0140*  @cmd: db 23,27,12
041A04             0141*  @end:
041A04             0142*  
041A04             0143*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
041A04             0144*  ; inputs: bc is x coordinate, de is y coordinate
041A04             0145*  ; prerequisites: vdu_sprite_select
041A04             0146*  vdu_sprite_move_abs:
041A04 ED 43 1C 1A 0147*      ld (@xpos),bc
       04          
041A09 ED 53 1E 1A 0148*      ld (@ypos),de
       04          
041A0E 21 19 1A 04 0149*      ld hl,@cmd
041A12 01 07 00 00 0150*      ld bc,@end-@cmd
041A16 5B DF       0151*      rst.lil $18
041A18 C9          0152*      ret
041A19 17 1B 0D    0153*  @cmd:  db 23,27,13
041A1C 00 00       0154*  @xpos: dw 0x0000
041A1E 00 00       0155*  @ypos: dw 0x0000
041A20 00          0156*  @end:  db 0x00 ; padding
041A21             0157*  
041A21             0158*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
041A21             0159*  ; inputs: bc is x coordinate, de is y coordinate
041A21             0160*  ; prerequisites: vdu_sprite_select
041A21             0161*  vdu_sprite_move_rel:
041A21 ED 43 39 1A 0162*      ld (@dx),bc
       04          
041A26 ED 53 3B 1A 0163*      ld (@dy),de
       04          
041A2B 21 36 1A 04 0164*      ld hl,@cmd
041A2F 01 07 00 00 0165*      ld bc,@end-@cmd
041A33 5B DF       0166*      rst.lil $18
041A35 C9          0167*      ret
041A36 17 1B 0E    0168*  @cmd: db 23,27,14
041A39 00 00       0169*  @dx:  dw 0x0000
041A3B 00 00       0170*  @dy:  dw 0x0000
041A3D 00          0171*  @end: db 0x00 ; padding
041A3E             0172*  
041A3E             0173*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
041A3E             0174*  ; USING 16.8 FIXED POINT COORDINATES
041A3E             0175*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
041A3E             0176*  ;   the fractional portiion of the inputs are truncated
041A3E             0177*  ;   leaving only the 16-bit integer portion
041A3E             0178*  ; prerequisites: vdu_sprite_select
041A3E             0179*  vdu_sprite_move_abs168:
041A3E             0180*  ; offset inputs by the gfx origin
041A3E             0181*  ; y coordinate
041A3E 21 00 00 00 0182*      ld hl,origin_top*256
041A42 19          0183*      add hl,de
041A43 22 65 1A 04 0184*      ld (@ypos-1),hl
041A47             0185*  ; x coordinate
041A47 21 00 80 00 0186*      ld hl,origin_left*256
041A4B 09          0187*      add hl,bc
041A4C 22 63 1A 04 0188*      ld (@xpos-1),hl
041A50             0189*  ; prepare vdu command
041A50 3E 0D       0190*      ld a,13       ; restore the final byte of the command
041A52 32 63 1A 04 0191*      ld (@cmd+2),a ; string that got stomped on by bcu
041A56 21 61 1A 04 0192*      ld hl,@cmd
041A5A 01 07 00 00 0193*      ld bc,@end-@cmd
041A5E 5B DF       0194*      rst.lil $18
041A60 C9          0195*      ret
041A61 17 1B 0D    0196*  @cmd:  db 23,27,13
041A64 00 00       0197*  @xpos: dw 0x0000
041A66 00 00       0198*  @ypos: dw 0x0000
041A68             0199*  @end:  ; no padding required b/c we shifted de right
041A68             0200*  
041A68             0201*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
041A68             0202*  ; USING 16.8 FIXED POINT COORDINATES
041A68             0203*  ; inputs: ub.c is dx, ud.e is dy
041A68             0204*  ;   the fractional portiion of the inputs are truncated
041A68             0205*  ;   leaving only the 16-bit integer portion
041A68             0206*  ; prerequisites: vdu_sprite_select
041A68             0207*  vdu_sprite_move_rel168:
041A68             0208*  ; populate in the reverse of normal to keep the
041A68             0209*  ; inputs from stomping on each other
041A68 ED 53 87 1A 0210*      ld (@dy-1),de
       04          
041A6D ED 43 85 1A 0211*      ld (@dx-1),bc
       04          
041A72 3E 0E       0212*      ld a,14       ; restore the final byte of the command
041A74 32 85 1A 04 0213*      ld (@cmd+2),a ; string that got stomped on by bcu
041A78 21 83 1A 04 0214*      ld hl,@cmd
041A7C 01 07 00 00 0215*      ld bc,@end-@cmd
041A80 5B DF       0216*      rst.lil $18
041A82 C9          0217*      ret
041A83 17 1B 0E    0218*  @cmd:  db 23,27,14
041A86 00 00       0219*  @dx: dw 0x0000
041A88 00 00       0220*  @dy: dw 0x0000
041A8A             0221*  @end:  ; no padding required b/c we shifted de right
041A8A             0222*  
041A8A             0223*  ; VDU 23, 27, 15: Update the sprites in the GPU
041A8A             0224*  ; inputs: none
041A8A             0225*  vdu_sprite_update:
041A8A 21 95 1A 04 0226*      ld hl,@cmd
041A8E 01 03 00 00 0227*      ld bc,@end-@cmd
041A92 5B DF       0228*      rst.lil $18
041A94 C9          0229*      ret
041A95 17 1B 0F    0230*  @cmd: db 23,27,15
041A98             0231*  @end:
041A98             0232*  
041A98             0233*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
041A98             0234*  ; inputs: none
041A98             0235*  vdu_sprite_bmp_reset:
041A98 21 A3 1A 04 0236*      ld hl,@cmd
041A9C 01 03 00 00 0237*      ld bc,@end-@cmd
041AA0 5B DF       0238*      rst.lil $18
041AA2 C9          0239*      ret
041AA3 17 1B 10    0240*  @cmd: db 23,27,16
041AA6             0241*  @end:
041AA6             0242*  
041AA6             0243*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
041AA6             0244*  ; inputs: none
041AA6             0245*  vdu_sprite_reset:
041AA6 21 B1 1A 04 0246*      ld hl,@cmd
041AAA 01 03 00 00 0247*      ld bc,@end-@cmd
041AAE 5B DF       0248*      rst.lil $18
041AB0 C9          0249*      ret
041AB1 17 1B 11    0250*  @cmd: db 23,27,17
041AB4             0251*  @end:
041AB4             0252*  
041AB4             0253*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
041AB4             0254*  ; inputs: a is the GCOL paint mode
041AB4             0255*  ; prerequisites: vdu_sprite_select
041AB4             0256*  vdu_sprite_set_gcol:
041AB4 32 C6 1A 04 0257*      ld (@mode),a
041AB8 21 C3 1A 04 0258*      ld hl,@cmd
041ABC 01 04 00 00 0259*      ld bc,@end-@cmd
041AC0 5B DF       0260*      rst.lil $18
041AC2 C9          0261*      ret
041AC3 17 1B 12    0262*  @cmd:  db 23,27,18
041AC6 00          0263*  @mode: db 0x00
041AC7             0264*  @end:
041AC7             0265*  
041AC7             0266*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
041AC7             0267*  ; inputs: hl=bufferId
041AC7             0268*  ; prerequisites: vdu_sprite_select
041AC7             0269*  vdu_sprite_add_buff:
041AC7 22 D9 1A 04 0270*      ld (@bufferId),hl
041ACB 21 D6 1A 04 0271*      ld hl,@cmd
041ACF 01 05 00 00 0272*      ld bc,@end-@cmd
041AD3 5B DF       0273*      rst.lil $18
041AD5 C9          0274*      ret
041AD6 17 1B 26    0275*  @cmd:      db 23,27,0x26
041AD9 00 00       0276*  @bufferId: dw 0x0000
041ADB 00          0277*  @end:      db 0x00 ; padding
041ADC             0041   
041ADC             0042   ; APPLICATION INCLUDES
041ADC             0043       include "collisions.inc"
041ADC             0001*  ; ====== COLLISION DETECTION ======
041ADC             0002*  ; --- constants ---
041ADC             0003*  ; sprite_collisions flags
041ADC             0004*  collides_with_player: equ 0
041ADC             0005*  collides_with_laser: equ 1
041ADC             0006*  sprite_alive: equ 6 ; set when sprite is alive
041ADC             0007*  sprite_just_died: equ 7 ; set when sprite just died
041ADC             0008*  
041ADC             0009*  ; TODO: make these bit numbers instead of masks
041ADC             0010*  collide_top: equ %00001000
041ADC             0011*  collide_bottom: equ %00000100
041ADC             0012*  collide_left: equ %00000010
041ADC             0013*  collide_right: equ %00000001
041ADC             0014*  ; END TODO
041ADC             0015*  
041ADC             0016*  ; this routine detects collisions between two collidable objects,
041ADC             0017*  ; which can include sprites, active tiles, or any screen coordinate
041ADC             0018*  ; which has been set up with a sprite table structure that includes dim_x
041ADC             0019*  ; representing the radius of the collidable object
041ADC             0020*  ; inputs: ix and iy point to the colliding objects' sprite table records
041ADC             0021*  ; outputs: uh.l = distance - sum of radii
041ADC             0022*  ;          zero flag set or sign flag negative if collision detected
041ADC             0023*  ;          dx168 and dy168 are also populated with the signed displacements
041ADC             0024*  ; destroys: everything except indexes
041ADC             0025*  check_collision:
041ADC             0026*  ; compute dx = x1-x0
041ADC DD 27 0B    0027*      ld hl,(ix+sprite_x)
041ADF FD 17 0B    0028*      ld de,(iy+sprite_x)
041AE2 AF          0029*      xor a ; clear carry
041AE3 ED 52       0030*      sbc hl,de
041AE5 22 A2 09 04 0031*      ld (dx168),hl ; dx to scratch
041AE9             0032*  ; compute dy = y1-y0
041AE9 DD 27 0E    0033*      ld hl,(ix+sprite_y)
041AEC FD 17 0E    0034*      ld de,(iy+sprite_y)
041AEF AF          0035*      xor a ; clear carry
041AF0 ED 52       0036*      sbc hl,de ; hl = dy
041AF2 22 A8 09 04 0037*      ld (dy168),hl ; dy to scratch
041AF6             0038*  ; compute euclidean distance between centers
041AF6 CD AE 09 04 0039*      call distance168 ; uh.l = distance
041AFA             0040*  ; check for overlap by summing half the radii
041AFA DD 7E 09    0041*      ld a,(ix+sprite_dim_x)
041AFD CB 3F       0042*      srl a ; divide by 2
041AFF FD 5E 09    0043*      ld e,(iy+sprite_dim_x)
041B02 CB 3B       0044*      srl e ; divide by 2
041B04 83          0045*      add a,e
041B05 11 00 00 00 0046*      ld de,0 ; clear deu and e
041B09 57          0047*      ld d,a ; ud.e = sum of radii
041B0A B7          0048*      or a ; clear carry
041B0B ED 52       0049*      sbc hl,de ; uh.l = distance - sum of radii
041B0D C9          0050*      ret
041B0E             0051*  ; end check_collision
041B0E             0044       include "enemies.inc"
041B0E 04          0001*  max_enemy_sprites: db 4
041B0F             0002*  
041B0F             0003*  ; sprite_type
041B0F             0004*  enemy_dead: equ 0
041B0F             0005*  enemy_seeker: equ 1
041B0F             0006*  enemy_medium: equ 2
041B0F             0007*  enemy_large: equ 3
041B0F             0008*  landing_pad: equ 4
041B0F             0009*  laser_turret: equ 5
041B0F             0010*  fireballs: equ 6
041B0F             0011*  explosion: equ 7
041B0F             0012*  
041B0F             0013*  move_enemies:
041B0F             0014*  ; are there any active enemies or explosions?
041B0F 3A 7D F1 04 0015*      ld a,(table_active_sprites)
041B13 A7          0016*      and a ; will be zero if no alive enemies or explosions
041B14 C2 21 1B 04 0017*      jp nz,@they_live
041B18 21 E5 F3 04 0018*      ld hl,enemies_dead
041B1C 22 E2 F3 04 0019*      ld (enemies_state),hl
041B20 C9          0020*      ret
041B21             0021*  @they_live:
041B21             0022*  ; initialize pointers and loop counter
041B21 FD 21 1A EF 0023*      ld iy,table_base ; set iy to first record in table
       04          
041B26 06 10       0024*      ld b,table_max_records ; loop counter
041B28             0025*  @move_loop:
041B28 FD 22 7A F1 0026*      ld (table_pointer),iy ; update table pointer
       04          
041B2D C5          0027*      push bc ; backup loop counter
041B2E             0028*  ; check sprite_type to see if sprite is active
041B2E FD 7E 01    0029*      ld a,(iy+sprite_type)
041B31 A7          0030*      and a ; if zero, sprite is dead
041B32 CA 65 1B 04 0031*      jp z,@next_record ; ... and we skip to next record
041B36             0032*  ; otherwise we prepare to move the sprite
041B36 FD 7E 00    0033*      ld a,(iy+sprite_id) ; get spriteId
041B39 CD 72 19 04 0034*      call vdu_sprite_select ; select sprite
041B3D FD 27 05    0035*      ld hl,(iy+sprite_move_program) ; load the behavior subroutine address
041B40             0036*      callHL
041B40 01 46 1B 04 0001*M     ld bc,@F ; Address of first instruction after the jump
041B44 C5          0002*M     push bc ; which constitutes the return address
041B45 E9          0003*M     jp (hl) ; Jump to the address in HL
041B46             0004*M @@:
041B46             0037*  ; move_enemies_loop_return: return from behavior subroutines
041B46 FD 2A 7A F1 0038*      ld iy,(table_pointer) ; get back table pointer
       04          
041B4B             0039*  ; now we check results of all the moves
041B4B FD CB 08 7E 0040*      bit sprite_just_died,(iy+sprite_collisions)
041B4F CA 5B 1B 04 0041*      jp z,@draw_sprite ; if not dead, draw sprite
041B53 CD C6 F1 04 0042*      call table_deactivate_sprite
041B57 C3 65 1B 04 0043*      jp @next_record ; and to the next record
041B5B             0044*  @draw_sprite:
041B5B FD 07 0B    0045*      ld bc,(iy+sprite_x)
041B5E FD 17 0E    0046*      ld de,(iy+sprite_y)
041B61 CD 3E 1A 04 0047*      call vdu_sprite_move_abs168
041B65             0048*  ; fall through to @next_record
041B65             0049*  @next_record:
041B65 ED 33 26    0050*      lea iy,iy+table_bytes_per_record
041B68 AF          0051*      xor a ; clears carry flag
041B69 32 7E F1 04 0052*      ld (sprite_screen_edge),a ; clear screen edge collision flag
041B6D C1          0053*      pop bc ; get back our loop counter
041B6E 10 B8       0054*      djnz @move_loop ; loop until we've checked all the records
041B70 C9          0055*      ret ; and we're out
041B71             0056*  
041B71             0057*  ; ; ######### SPRITE BEHAVIOR ROUTINES #########
041B71             0058*  ; ; each sprite in the table must have one of these defined
041B71             0059*  ; ; but they need not be unique to a particular sprite
041B71             0060*  ; ; these are jumped to from move_enemies_do_program,but could come from other places
041B71             0061*  ; ; and have the option but not obligation to go back to move_enemies_loop_return
041B71             0062*  ; ; but they can call anything they want between those two endpoints
041B71             0063*  ; move_programs: ; bookmark in case we want to know the first address of the first subroutine
041B71             0064*  
041B71             0065*  ; move_nop: ; does nothing but burn a few cycles changing the PC
041B71             0066*  ;     ret
041B71             0067*  
041B71             0068*  ; move_explosion:
041B71             0069*  ;     call animate_explosion
041B71             0070*  ;     ret
041B71             0071*  
041B71             0072*  speed_seeker: equ 0x000280 ; 2.5 pixels per frame
041B71             0073*  move_enemy_seeker:
041B71             0074*  ; run the movement program for the seeker enemy
041B71 CD B2 1B 04 0075*      call en_nav_seek_zag
041B75 C3 79 1B 04 0076*      jp check_enemy_player_collisions
041B79             0077*  ; end move_enemy_seeker
041B79             0078*  
041B79             0079*  check_enemy_player_collisions:
041B79             0080*  ; check for collisions with laser
041B79 DD 21 E5 CC 0081*      ld ix,laser_start_variables
       04          
041B7E DD CB 08 76 0082*      bit sprite_alive,(ix+sprite_collisions)
041B82 CA 9F 1B 04 0083*      jp z,@player ; laser dead, check player
041B86 CD DC 1A 04 0084*      call check_collision
041B8A F2 9F 1B 04 0085*      jp p,@player ; no collision
041B8E DD 21 E5 CC 0086*      ld ix,laser_start_variables
       04          
041B93 DD CB 08 FE 0087*      set sprite_just_died,(ix+sprite_collisions)
041B97 DD CB 08 F6 0088*      set sprite_alive,(ix+sprite_collisions)
041B9B C3 DC 1C 04 0089*      jp enemy_kill
041B9F             0090*  @player: ; check for collisions with player
041B9F DD 21 E7 ED 0091*      ld ix,player_start_variables
       04          
041BA4 DD CB 08 76 0092*      bit sprite_alive,(ix+sprite_collisions)
041BA8 C8          0093*      ret z ; player dead, no collision
041BA9 CD DC 1A 04 0094*      call check_collision
041BAD F0          0095*      ret p ; no collision
041BAE C3 DC 1C 04 0096*      jp enemy_kill
041BB2             0097*  ; end move_enemy_seeker
041BB2             0098*  
041BB2             0099*  ; contains the logic for how to move the enemy
041BB2             0100*  ; and then does the moving
041BB2             0101*  ; inputs: a fully-populated active sprite table
041BB2             0102*  ;         player position variables
041BB2             0103*  ; destroys: everything except index registers
041BB2             0104*  ; outputs: moving enemies
041BB2             0105*  en_nav_seek_zag:
041BB2             0106*  ; set velocity and orientation by player's relative location
041BB2             0107*  ; move enemies y-axis
041BB2             0108*  ; where is player relative to us?
041BB2 CD B5 1C 04 0109*      call orientation_to_player ; uh.l angle to player, ub.c, ud.e = dx, dy
041BB6             0110*  ; is player above or below us?
041BB6 ED 53 A5 05 0111*      ld (ude),de ; dy
       04          
041BBB 3A A7 05 04 0112*      ld a,(ude+2) ; deu
041BBF 17          0113*      rla ; shift sign bit into carry
041BC0 D2 EC 1B 04 0114*      jp nc,@zig_zag ; player is below,evade
041BC4             0115*  ; player is even or above,so home in on current heading
041BC4 FD 2F 1A    0116*      ld (iy+sprite_heading),hl ; save sprite heading
041BC7             0117*  ; fall through to @compute_velocities
041BC7             0118*  @compute_velocities:
041BC7 CD CF F2 04 0119*      call sprite_compute_velocities
041BCB             0120*  ; change the animation frame to match heading
041BCB FD 7E 1B    0121*      ld a,(iy+sprite_heading+1) ; we want the integer portion
041BCE CB 3F       0122*      srl a ; divide integer portion by 8
041BD0 CB 3F       0123*      srl a
041BD2 CB 3F       0124*      srl a
041BD4 CD D5 19 04 0125*      call vdu_sprite_select_frame
041BD8 C3 2E F2 04 0126*      jp move_sprite ; will return to caller from there
041BDC             0127*  @zig_zag_start:
041BDC FD 2A 7A F1 0128*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
041BE1 CD 49 07 04 0129*      call rand_8
041BE5 E6 3F       0130*      and %00111111 ; limit it to 64
041BE7 CB DF       0131*      set 3,a ; make sure it's at least 8
041BE9 FD 77 22    0132*      ld (iy+sprite_move_timer),a ; store it
041BEC             0133*      ; fall through to @zig_zag
041BEC             0134*  @zig_zag:
041BEC FD 7E 22    0135*      ld a,(iy+sprite_move_timer)
041BEF 3D          0136*      dec a
041BF0 FD 77 22    0137*      ld (iy+sprite_move_timer),a
041BF3 C2 19 1C 04 0138*      jp nz,@zig_zag_no_switch
041BF7             0139*      ; otherwise flip direction and restart timer
041BF7 FD 7E 23    0140*      ld a,(iy+sprite_move_step)
041BFA EE 01       0141*      xor %1 ; flips bit one
041BFC FD 77 23    0142*      ld (iy+sprite_move_step),a ; store it
041BFF C2 0E 1C 04 0143*      jp nz,@F ; zag right
041C03             0144*  ;otherwise zag left
041C03 21 00 A0 00 0145*      ld hl,160*256; southwest heading
041C07 FD 2F 1A    0146*      ld (iy+sprite_heading),hl ; save sprite heading
041C0A C3 DC 1B 04 0147*      jp @zig_zag_start
041C0E             0148*  @@: ; zag right
041C0E 21 00 60 00 0149*      ld hl,96*256; southeast heading
041C12 FD 2F 1A    0150*      ld (iy+sprite_heading),hl ; save sprite heading
041C15 C3 DC 1B 04 0151*      jp @zig_zag_start
041C19             0152*  @zig_zag_no_switch:
041C19             0153*      ; ld a,(sprite_orientation)
041C19 FD 27 1A    0154*      ld hl,(iy+sprite_heading)
041C1C C3 C7 1B 04 0155*      jp @compute_velocities
041C20             0156*  ; end en_nav_seek_zag
041C20             0157*  
041C20             0158*  enemy_init_from_landing_pad:
041C20             0159*  ; get next available spriteId
041C20 CD A1 F1 04 0160*      call table_get_next_id
041C24 D0          0161*      ret nc ; no carry means no free sprite slots, so we go home
041C25             0162*  ; ix comes back with the pointer to the new sprite variables
041C25 DD E5       0163*      push ix ; de picks it up when we're ready for the copy to the table
041C27             0164*  ; a comes back with the spriteId of the new sprite
041C27 32 8F 1C 04 0165*      ld (@id),a
041C2B             0166*  ; initialize the new sprite
041C2B CD 72 19 04 0167*      call vdu_sprite_select
041C2F CD 85 19 04 0168*      call vdu_sprite_clear_frames
041C33 21 0B 01 00 0169*      ld hl,BUF_SEEKER_000
041C37 06 20       0170*      ld b,32
041C39             0171*  @load_frames:
041C39 C5          0172*      push bc
041C3A E5          0173*      push hl
041C3B CD C7 1A 04 0174*      call vdu_sprite_add_buff
041C3F E1          0175*      pop hl
041C40 23          0176*      inc hl
041C41 C1          0177*      pop bc
041C42 10 F5       0178*      djnz @load_frames
041C44             0179*  ; copy coordinates of active sprite to new sprite
041C44 FD 2A 7A F1 0180*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
041C49             0181*      ; ld hl,(iy+sprite_x)
041C49             0182*      ; ld hl,0x008000 ; debug
041C49             0183*  
041C49 CD 49 07 04 0184*      call rand_8
041C4D 21 00 00 00 0185*      ld hl,0
041C51 67          0186*      ld h,a
041C52             0187*  
041C52 22 9A 1C 04 0188*      ld (@x),hl
041C56             0189*      ; ld hl,(iy+sprite_y)
041C56             0190*      ; ld hl,0x002000 ; debug
041C56             0191*  
041C56 CD 49 07 04 0192*      call rand_8
041C5A 21 00 00 00 0193*      ld hl,0
041C5E 67          0194*      ld h,a
041C5F             0195*  
041C5F 22 9D 1C 04 0196*      ld (@y),hl
041C63 CD 49 07 04 0197*      call rand_8
041C67 E6 01       0198*      and %00000001 ; 50/50 chance of moving left or right on spanw
041C69 32 B2 1C 04 0199*      ld (@move_step),a
041C6D             0200*  ; now copy to the table
041C6D 21 8F 1C 04 0201*      ld hl,@id ; address to copy from
041C71 D1          0202*      pop de ; address to copy to (was ix)
041C72 01 26 00 00 0203*      ld bc,table_bytes_per_record ; number of bytes to copy
041C76 ED B0       0204*      ldir ; copy the records from local scratch to sprite table
041C78             0205*  ; set collision flags
041C78 FD CB 08 CE 0206*      set collides_with_laser,(iy+sprite_collisions)
041C7C FD CB 08 C6 0207*      set collides_with_player,(iy+sprite_collisions)
041C80             0208*  ; update the new sprite's position and make it visible
041C80 FD 07 0B    0209*      ld bc,(iy+sprite_x)
041C83 FD 17 0E    0210*      ld de,(iy+sprite_y)
041C86 CD 3E 1A 04 0211*      call vdu_sprite_move_abs168
041C8A CD E8 19 04 0212*      call vdu_sprite_show
041C8E C9          0213*      ret
041C8F 00          0214*  @id:                    db 0x00 ; 1 bytes unique spriteId, zero-based
041C90 01          0215*  @type:                  db enemy_seeker ; 1 bytes type of sprite as defined in enemies.inc
041C91 0B 01 00    0216*  @base_bufferId:         dl BUF_SEEKER_000 ; 3 bytes bitmap bufferId
041C94 71 1B 04    0217*  @move_program:          dl move_enemy_seeker ; 3 bytes address of sprite's behavior subroutine
041C97 00          0218*  @collisions:            db 0 ; 3 bytes, set by spawing routine
041C98 10          0219*  @dim_x:                 db 16 ; 1 bytes sprite width in pixels
041C99 10          0220*  @dim_y:                 db 16 ; 1 bytes sprite height in pixels
041C9A 00 00 00    0221*  @x:                     dl 0x000000 ; 1 bytes 16.8 fractional x position in pixels
041C9D 00 00 00    0222*  @y:                     dl 0x000000 ; 3 bytes 16.8 fractional y position in pixels
041CA0 00 00 00    0223*  @xvel:                  dl 0x000000 ; 3 bytes x-component velocity, 16.8 fixed, pixels
041CA3 00 00 00    0224*  @yvel:                  dl 0x000000 ; 3 bytes y-component velocity, 16.8 fixed, pixels
041CA6 80 02 00    0225*  @vel:                   dl speed_seeker ; 3 bytes velocity, 16.8 fixed, pixels
041CA9 00 80 00    0226*  @heading:               dl 0x008000 ; 3 bytes sprite movement direction deg256 16.8 fixed
041CAC 00 80 00    0227*  @orientation:           dl 0x008000 ; 3 bytes orientation bits
041CAF 00          0228*  @animation:             db 0x00 ; 1 bytes current animation index, zero-based
041CB0 00          0229*  @animation_timer:       db 0x00 ; 1 bytes when hits zero, draw next animation
041CB1 01          0230*  @move_timer:            db 0x01 ; 1 bytes when zero, go to next move program, or step
041CB2 00          0231*  @move_step:             db 0x00 ; 1 bytes stage in a move program sequence, varies
041CB3 0A          0232*  @points:                db 10 ; 1 bytes points awarded for killing this sprite type
041CB4 02          0233*  @shield_damage:         db 0x02 ; 1 bytes shield points deducted for collision
041CB5             0234*  
041CB5             0235*  
041CB5             0236*  ; move_fireballs:
041CB5             0237*  ;     call move_sprite ; move sprite
041CB5             0238*  ;     ld a,(sprite_screen_edge) ; check for collision with screen edge
041CB5             0239*  ;     and a ; if zero we're still within screen bounds
041CB5             0240*  ;     jp z,move_fireballs_alive
041CB5             0241*  ; ; otherwise kill sprite
041CB5             0242*  ;     ld a,%10000000 ; any bit set in high nibble means sprite will die
041CB5             0243*  ;     ld (iy+sprite_collisions),a
041CB5             0244*  ;     ret
041CB5             0245*  ; move_fireballs_alive:
041CB5             0246*  ;     ld a,(sprite_animation_timer)
041CB5             0247*  ;     dec a
041CB5             0248*  ;     ld (sprite_animation_timer),a
041CB5             0249*  ;     jp nz,move_fireballs_draw
041CB5             0250*  ;     ld a,(sprite_animation)
041CB5             0251*  ;     xor %1
041CB5             0252*  ;     ld (sprite_animation),a
041CB5             0253*  ;     ld a,6 ; 1/10th of a second timer
041CB5             0254*  ;     ld (sprite_animation_timer),a
041CB5             0255*  ;     ; fall through
041CB5             0256*  
041CB5             0257*  ; move_fireballs_draw:
041CB5             0258*  ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
041CB5             0259*  ;     call vdu_bmp_draw ; convert to vdu_bmp_plot
041CB5             0260*  ;     call check_collisions
041CB5             0261*  ;     ret
041CB5             0262*  
041CB5             0263*  ; compute orientation to player
041CB5             0264*  ; based on relative positions
041CB5             0265*  ; returns: h.l 16.8 fixed angle256 to player
041CB5             0266*  ;    ub.c and ud.e as 16.8 signed fixed point numbers
041CB5             0267*  ;    representing delta-x/y *to* target respectively
041CB5             0268*  orientation_to_player:
041CB5 FD 2A 7A F1 0269*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
041CBA FD 07 0B    0270*      ld bc,(iy+sprite_x)
041CBD FD 17 0E    0271*      ld de,(iy+sprite_y)
041CC0 DD 2A F2 ED 0272*      ld ix,(player_x)
       04          
041CC5 FD 2A F5 ED 0273*      ld iy,(player_y)
       04          
041CCA CD 87 09 04 0274*      call dxy168
041CCE C5          0275*      push bc
041CCF D5          0276*      push de
041CD0 CD E3 09 04 0277*      call atan2_168fast
041CD4 D1          0278*      pop de
041CD5 C1          0279*      pop bc
041CD6 FD 2A 7A F1 0280*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
041CDB C9          0281*      ret
041CDC             0282*  
041CDC             0283*  ; this routine vanquishes the enemy sprite
041CDC             0284*  ; and replaces it with an animated explosion
041CDC             0285*  ; we jump here instead of call because
041CDC             0286*  ; we want to return to differing locations in the loop
041CDC             0287*  ; depending on whether we're still sploding
041CDC             0288*  ; destroys: everything except index registers
041CDC             0289*  ; returns: an incandescent ball of debris and gas
041CDC             0290*  enemy_kill:
041CDC FD 2A 7A F1 0291*      ld iy,(table_pointer); TODO: see if we can get IY to land here with the proper value
       04          
041CE1             0292*  ; tally up points
041CE1 2A DD ED 04 0293*      ld hl,(player_score)
041CE5 01 00 00 00 0294*      ld bc,0 ; clear bcu
041CE9 FD 4E 24    0295*      ld c,(iy+sprite_points)
041CEC 09          0296*      add hl,bc
041CED 22 DD ED 04 0297*      ld (player_score),hl
041CF1             0298*  ; ; initialize explosion
041CF1             0299*  ; init_explosion:
041CF1             0300*  ;     ld hl,explosion
041CF1             0301*  ;     ld (sprite_base_bufferId),hl
041CF1             0302*  ;     ld hl,move_explosion
041CF1             0303*  ;     ld (sprite_move_program),hl
041CF1             0304*  ;     ld a,%00000000 ; collides with nothing
041CF1             0305*  ;     ld (iy+sprite_collisions),a
041CF1             0306*  ;     ld hl,0 ; north
041CF1             0307*  ;     ld (sprite_heading),hl
041CF1             0308*  ;     ld a,0x04 ; will decrement to 03
041CF1             0309*  ;     ld (sprite_animation),a
041CF1             0310*  ;     ld a,0x07 ; 7/60th of a second timer
041CF1             0311*  ;     ld (sprite_animation_timer),a
041CF1             0312*  ;     xor a
041CF1             0313*  ;     ld (sprite_move_timer),a
041CF1             0314*  ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
041CF1             0315*  ; ; fall through to next_explosion
041CF1             0316*  ; next_explosion:
041CF1             0317*  ;     ld a,(sprite_animation)
041CF1             0318*  ;     dec a ; if rolled negative from zero,we're done sploding
041CF1             0319*  ;     jp m,done_explosion
041CF1             0320*  ;     ld (sprite_animation),a
041CF1             0321*  ;     ld a,0x7 ; 7/60th of a second timer
041CF1             0322*  ;     ld (sprite_animation_timer),a
041CF1             0323*  ; ; fall through to animate_explosion
041CF1             0324*  ; animate_explosion:
041CF1             0325*  ;     ld hl,sprite_y+1
041CF1             0326*  ;     inc (hl) ; move explosion down 1 pixel
041CF1             0327*  ;     jp z, done_explosion ; if wraparound to top of screen, kill explosion
041CF1             0328*  ;     ld hl,sprite_animation_timer
041CF1             0329*  ;     dec (hl) ; if timer is zero,we do next animation
041CF1             0330*  ;     jp z,next_explosion
041CF1             0331*  ;     ;otherwise we fall through to draw the current one
041CF1             0332*  ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
041CF1             0333*  ;     call vdu_bmp_draw ; convert to vdu_bmp_plot
041CF1             0334*  ;     ret ; now we go back to caller
041CF1             0335*  ; done_explosion:
041CF1 FD CB 08 FE 0336*      set sprite_just_died,(iy+sprite_collisions)
041CF5 C9          0337*      ret ; now we go back to caller
041CF6             0338*  ; end enemy_kill
041CF6             0045       include "fonts_list.inc"
041CF6             0001*  ; Generated by asm_config_editor.py
041CF6             0002*  font_list_record_size: equ 12
041CF6             0003*  font_list_width: equ 0
041CF6             0004*  font_list_height: equ 3
041CF6             0005*  font_list_bufferId: equ 6
041CF6             0006*  font_list_filename: equ 9
041CF6             0007*  
041CF6             0008*  num_fonts: equ 18
041CF6             0009*  
041CF6             0010*  ; Index list:
041CF6             0011*  amiga_forever_16x24: equ 64000
041CF6             0012*  amiga_forever_8x16: equ 64001
041CF6             0013*  amiga_forever_8x8: equ 64002
041CF6             0014*  computer_pixel_7_10x15: equ 64003
041CF6             0015*  computer_pixel_7_10x24: equ 64004
041CF6             0016*  computer_pixel_7_8x16: equ 64005
041CF6             0017*  Lat2_Terminus12x6_6x12: equ 64006
041CF6             0018*  Lat2_TerminusBold14_8x14: equ 64007
041CF6             0019*  Lat2_VGA14_8x14: equ 64008
041CF6             0020*  Lat2_VGA16_8x16: equ 64009
041CF6             0021*  Lat2_VGA8_8x8: equ 64010
041CF6             0022*  Lat7_Fixed13_8x13: equ 64011
041CF6             0023*  Lat7_Terminus12x6_6x12: equ 64012
041CF6             0024*  Lat7_TerminusBold16_8x16: equ 64013
041CF6             0025*  Lat7_VGA14_8x14: equ 64014
041CF6             0026*  Lat7_VGA8x8: equ 64015
041CF6             0027*  scriptorium_12x14: equ 64016
041CF6             0028*  Squarewave_Bold_8x12: equ 64017
041CF6             0029*  
041CF6             0030*  font_list: ; width; height; bufferId; filename;:
041CF6 10 00 00 18 0031*  	dl 16, 24, 64000, fn_amiga_forever_16x24
       00 00 00 FA 
       00 CE 1D 04 
041D02 08 00 00 10 0032*  	dl 8, 16, 64001, fn_amiga_forever_8x16
       00 00 01 FA 
       00 ED 1D 04 
041D0E 08 00 00 08 0033*  	dl 8, 8, 64002, fn_amiga_forever_8x8
       00 00 02 FA 
       00 0B 1E 04 
041D1A 0A 00 00 0F 0034*  	dl 10, 15, 64003, fn_computer_pixel_7_10x15
       00 00 03 FA 
       00 28 1E 04 
041D26 0A 00 00 18 0035*  	dl 10, 24, 64004, fn_computer_pixel_7_10x24
       00 00 04 FA 
       00 4A 1E 04 
041D32 08 00 00 10 0036*  	dl 8, 16, 64005, fn_computer_pixel_7_8x16
       00 00 05 FA 
       00 6C 1E 04 
041D3E 06 00 00 0C 0037*  	dl 6, 12, 64006, fn_Lat2_Terminus12x6_6x12
       00 00 06 FA 
       00 8D 1E 04 
041D4A 08 00 00 0E 0038*  	dl 8, 14, 64007, fn_Lat2_TerminusBold14_8x14
       00 00 07 FA 
       00 AF 1E 04 
041D56 08 00 00 0E 0039*  	dl 8, 14, 64008, fn_Lat2_VGA14_8x14
       00 00 08 FA 
       00 D3 1E 04 
041D62 08 00 00 10 0040*  	dl 8, 16, 64009, fn_Lat2_VGA16_8x16
       00 00 09 FA 
       00 EE 1E 04 
041D6E 08 00 00 08 0041*  	dl 8, 8, 64010, fn_Lat2_VGA8_8x8
       00 00 0A FA 
       00 09 1F 04 
041D7A 08 00 00 0D 0042*  	dl 8, 13, 64011, fn_Lat7_Fixed13_8x13
       00 00 0B FA 
       00 22 1F 04 
041D86 06 00 00 0C 0043*  	dl 6, 12, 64012, fn_Lat7_Terminus12x6_6x12
       00 00 0C FA 
       00 3F 1F 04 
041D92 08 00 00 10 0044*  	dl 8, 16, 64013, fn_Lat7_TerminusBold16_8x16
       00 00 0D FA 
       00 61 1F 04 
041D9E 08 00 00 0E 0045*  	dl 8, 14, 64014, fn_Lat7_VGA14_8x14
       00 00 0E FA 
       00 85 1F 04 
041DAA 08 00 00 08 0046*  	dl 8, 8, 64015, fn_Lat7_VGA8_8x8
       00 00 0F FA 
       00 A0 1F 04 
041DB6 0C 00 00 0E 0047*  	dl 12, 14, 64016, fn_scriptorium_12x14
       00 00 10 FA 
       00 B9 1F 04 
041DC2 08 00 00 0C 0048*  	dl 8, 12, 64017, fn_Squarewave_Bold_8x12
       00 00 11 FA 
       00 D6 1F 04 
041DCE             0049*  
041DCE             0050*  ; files_list: ; filename:
041DCE 66 6F 6E 74 0051*  fn_amiga_forever_16x24: db "fonts/amiga_forever_16x24.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       31 36 78 32 
       34 2E 66 6F 
       6E 74 00    
041DED 66 6F 6E 74 0052*  fn_amiga_forever_8x16: db "fonts/amiga_forever_8x16.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       38 78 31 36 
       2E 66 6F 6E 
       74 00       
041E0B 66 6F 6E 74 0053*  fn_amiga_forever_8x8: db "fonts/amiga_forever_8x8.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
041E28 66 6F 6E 74 0054*  fn_computer_pixel_7_10x15: db "fonts/computer_pixel_7_10x15.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 31 
       30 78 31 35 
       2E 66 6F 6E 
       74 00       
041E4A 66 6F 6E 74 0055*  fn_computer_pixel_7_10x24: db "fonts/computer_pixel_7_10x24.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 31 
       30 78 32 34 
       2E 66 6F 6E 
       74 00       
041E6C 66 6F 6E 74 0056*  fn_computer_pixel_7_8x16: db "fonts/computer_pixel_7_8x16.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 38 
       78 31 36 2E 
       66 6F 6E 74 
       00          
041E8D 66 6F 6E 74 0057*  fn_Lat2_Terminus12x6_6x12: db "fonts/Lat2-Terminus12x6_6x12.font",0
       73 2F 4C 61 
       74 32 2D 54 
       65 72 6D 69 
       6E 75 73 31 
       32 78 36 5F 
       36 78 31 32 
       2E 66 6F 6E 
       74 00       
041EAF 66 6F 6E 74 0058*  fn_Lat2_TerminusBold14_8x14: db "fonts/Lat2-TerminusBold14_8x14.font",0
       73 2F 4C 61 
       74 32 2D 54 
       65 72 6D 69 
       6E 75 73 42 
       6F 6C 64 31 
       34 5F 38 78 
       31 34 2E 66 
       6F 6E 74 00 
041ED3 66 6F 6E 74 0059*  fn_Lat2_VGA14_8x14: db "fonts/Lat2-VGA14_8x14.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 31 34 
       5F 38 78 31 
       34 2E 66 6F 
       6E 74 00    
041EEE 66 6F 6E 74 0060*  fn_Lat2_VGA16_8x16: db "fonts/Lat2-VGA16_8x16.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 31 36 
       5F 38 78 31 
       36 2E 66 6F 
       6E 74 00    
041F09 66 6F 6E 74 0061*  fn_Lat2_VGA8_8x8: db "fonts/Lat2-VGA8_8x8.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 38 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
041F22 66 6F 6E 74 0062*  fn_Lat7_Fixed13_8x13: db "fonts/Lat7-Fixed13_8x13.font",0
       73 2F 4C 61 
       74 37 2D 46 
       69 78 65 64 
       31 33 5F 38 
       78 31 33 2E 
       66 6F 6E 74 
       00          
041F3F 66 6F 6E 74 0063*  fn_Lat7_Terminus12x6_6x12: db "fonts/Lat7-Terminus12x6_6x12.font",0
       73 2F 4C 61 
       74 37 2D 54 
       65 72 6D 69 
       6E 75 73 31 
       32 78 36 5F 
       36 78 31 32 
       2E 66 6F 6E 
       74 00       
041F61 66 6F 6E 74 0064*  fn_Lat7_TerminusBold16_8x16: db "fonts/Lat7-TerminusBold16_8x16.font",0
       73 2F 4C 61 
       74 37 2D 54 
       65 72 6D 69 
       6E 75 73 42 
       6F 6C 64 31 
       36 5F 38 78 
       31 36 2E 66 
       6F 6E 74 00 
041F85 66 6F 6E 74 0065*  fn_Lat7_VGA14_8x14: db "fonts/Lat7-VGA14_8x14.font",0
       73 2F 4C 61 
       74 37 2D 56 
       47 41 31 34 
       5F 38 78 31 
       34 2E 66 6F 
       6E 74 00    
041FA0 66 6F 6E 74 0066*  fn_Lat7_VGA8_8x8: db "fonts/Lat7-VGA8_8x8.font",0
       73 2F 4C 61 
       74 37 2D 56 
       47 41 38 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
041FB9 66 6F 6E 74 0067*  fn_scriptorium_12x14: db "fonts/scriptorium_12x14.font",0
       73 2F 73 63 
       72 69 70 74 
       6F 72 69 75 
       6D 5F 31 32 
       78 31 34 2E 
       66 6F 6E 74 
       00          
041FD6 66 6F 6E 74 0068*  fn_Squarewave_Bold_8x12: db "fonts/Squarewave_Bold_8x12.font",0
       73 2F 53 71 
       75 61 72 65 
       77 61 76 65 
       5F 42 6F 6C 
       64 5F 38 78 
       31 32 2E 66 
       6F 6E 74 00 
041FF6             0046       ; include "images_tiles_dg.inc"
041FF6             0047       include "images_tiles_xevious.inc"
041FF6             0001*  ; Generated by tiles_xevious.py
041FF6             0002*  
041FF6             0003*  tiles_xevious_num_images: equ 799
041FF6             0004*  
041FF6             0005*  ; buffer_ids:
041FF6             0006*  BUF_XEVIOUS_0_00: equ 512
041FF6             0007*  BUF_XEVIOUS_0_01: equ 513
041FF6             0008*  BUF_XEVIOUS_0_02: equ 514
041FF6             0009*  BUF_XEVIOUS_0_03: equ 515
041FF6             0010*  BUF_XEVIOUS_0_04: equ 516
041FF6             0011*  BUF_XEVIOUS_0_05: equ 517
041FF6             0012*  BUF_XEVIOUS_0_06: equ 518
041FF6             0013*  BUF_XEVIOUS_0_07: equ 519
041FF6             0014*  BUF_XEVIOUS_0_08: equ 520
041FF6             0015*  BUF_XEVIOUS_0_09: equ 521
041FF6             0016*  BUF_XEVIOUS_0_0A: equ 522
041FF6             0017*  BUF_XEVIOUS_0_0B: equ 523
041FF6             0018*  BUF_XEVIOUS_0_0C: equ 524
041FF6             0019*  BUF_XEVIOUS_0_0D: equ 525
041FF6             0020*  BUF_XEVIOUS_0_0E: equ 526
041FF6             0021*  BUF_XEVIOUS_0_0F: equ 527
041FF6             0022*  BUF_XEVIOUS_0_10: equ 528
041FF6             0023*  BUF_XEVIOUS_0_11: equ 529
041FF6             0024*  BUF_XEVIOUS_0_12: equ 530
041FF6             0025*  BUF_XEVIOUS_0_13: equ 531
041FF6             0026*  BUF_XEVIOUS_0_14: equ 532
041FF6             0027*  BUF_XEVIOUS_0_15: equ 533
041FF6             0028*  BUF_XEVIOUS_0_16: equ 534
041FF6             0029*  BUF_XEVIOUS_0_17: equ 535
041FF6             0030*  BUF_XEVIOUS_0_18: equ 536
041FF6             0031*  BUF_XEVIOUS_0_19: equ 537
041FF6             0032*  BUF_XEVIOUS_0_1A: equ 538
041FF6             0033*  BUF_XEVIOUS_0_1B: equ 539
041FF6             0034*  BUF_XEVIOUS_0_1C: equ 540
041FF6             0035*  BUF_XEVIOUS_0_1D: equ 541
041FF6             0036*  BUF_XEVIOUS_0_1E: equ 542
041FF6             0037*  BUF_XEVIOUS_0_1F: equ 543
041FF6             0038*  BUF_XEVIOUS_0_20: equ 544
041FF6             0039*  BUF_XEVIOUS_0_21: equ 545
041FF6             0040*  BUF_XEVIOUS_0_22: equ 546
041FF6             0041*  BUF_XEVIOUS_0_23: equ 547
041FF6             0042*  BUF_XEVIOUS_0_24: equ 548
041FF6             0043*  BUF_XEVIOUS_0_25: equ 549
041FF6             0044*  BUF_XEVIOUS_0_26: equ 550
041FF6             0045*  BUF_XEVIOUS_0_27: equ 551
041FF6             0046*  BUF_XEVIOUS_0_28: equ 552
041FF6             0047*  BUF_XEVIOUS_0_29: equ 553
041FF6             0048*  BUF_XEVIOUS_0_2A: equ 554
041FF6             0049*  BUF_XEVIOUS_0_2B: equ 555
041FF6             0050*  BUF_XEVIOUS_0_2C: equ 556
041FF6             0051*  BUF_XEVIOUS_0_2D: equ 557
041FF6             0052*  BUF_XEVIOUS_0_2E: equ 558
041FF6             0053*  BUF_XEVIOUS_0_2F: equ 559
041FF6             0054*  BUF_XEVIOUS_0_30: equ 560
041FF6             0055*  BUF_XEVIOUS_0_31: equ 561
041FF6             0056*  BUF_XEVIOUS_0_32: equ 562
041FF6             0057*  BUF_XEVIOUS_0_33: equ 563
041FF6             0058*  BUF_XEVIOUS_0_34: equ 564
041FF6             0059*  BUF_XEVIOUS_0_35: equ 565
041FF6             0060*  BUF_XEVIOUS_0_36: equ 566
041FF6             0061*  BUF_XEVIOUS_0_37: equ 567
041FF6             0062*  BUF_XEVIOUS_0_38: equ 568
041FF6             0063*  BUF_XEVIOUS_0_39: equ 569
041FF6             0064*  BUF_XEVIOUS_0_3A: equ 570
041FF6             0065*  BUF_XEVIOUS_0_3B: equ 571
041FF6             0066*  BUF_XEVIOUS_0_3C: equ 572
041FF6             0067*  BUF_XEVIOUS_0_3D: equ 573
041FF6             0068*  BUF_XEVIOUS_0_3E: equ 574
041FF6             0069*  BUF_XEVIOUS_0_3F: equ 575
041FF6             0070*  BUF_XEVIOUS_0_40: equ 576
041FF6             0071*  BUF_XEVIOUS_0_41: equ 577
041FF6             0072*  BUF_XEVIOUS_0_42: equ 578
041FF6             0073*  BUF_XEVIOUS_0_43: equ 579
041FF6             0074*  BUF_XEVIOUS_0_44: equ 580
041FF6             0075*  BUF_XEVIOUS_0_45: equ 581
041FF6             0076*  BUF_XEVIOUS_0_46: equ 582
041FF6             0077*  BUF_XEVIOUS_0_47: equ 583
041FF6             0078*  BUF_XEVIOUS_0_48: equ 584
041FF6             0079*  BUF_XEVIOUS_0_49: equ 585
041FF6             0080*  BUF_XEVIOUS_0_4A: equ 586
041FF6             0081*  BUF_XEVIOUS_0_4B: equ 587
041FF6             0082*  BUF_XEVIOUS_0_4C: equ 588
041FF6             0083*  BUF_XEVIOUS_0_4D: equ 589
041FF6             0084*  BUF_XEVIOUS_0_4E: equ 590
041FF6             0085*  BUF_XEVIOUS_0_4F: equ 591
041FF6             0086*  BUF_XEVIOUS_0_50: equ 592
041FF6             0087*  BUF_XEVIOUS_0_51: equ 593
041FF6             0088*  BUF_XEVIOUS_0_52: equ 594
041FF6             0089*  BUF_XEVIOUS_0_53: equ 595
041FF6             0090*  BUF_XEVIOUS_0_54: equ 596
041FF6             0091*  BUF_XEVIOUS_0_55: equ 597
041FF6             0092*  BUF_XEVIOUS_0_56: equ 598
041FF6             0093*  BUF_XEVIOUS_0_57: equ 599
041FF6             0094*  BUF_XEVIOUS_0_58: equ 600
041FF6             0095*  BUF_XEVIOUS_0_59: equ 601
041FF6             0096*  BUF_XEVIOUS_0_5A: equ 602
041FF6             0097*  BUF_XEVIOUS_0_5B: equ 603
041FF6             0098*  BUF_XEVIOUS_0_5C: equ 604
041FF6             0099*  BUF_XEVIOUS_0_5D: equ 605
041FF6             0100*  BUF_XEVIOUS_0_5E: equ 606
041FF6             0101*  BUF_XEVIOUS_0_5F: equ 607
041FF6             0102*  BUF_XEVIOUS_0_60: equ 608
041FF6             0103*  BUF_XEVIOUS_0_61: equ 609
041FF6             0104*  BUF_XEVIOUS_0_62: equ 610
041FF6             0105*  BUF_XEVIOUS_0_63: equ 611
041FF6             0106*  BUF_XEVIOUS_0_64: equ 612
041FF6             0107*  BUF_XEVIOUS_0_65: equ 613
041FF6             0108*  BUF_XEVIOUS_0_66: equ 614
041FF6             0109*  BUF_XEVIOUS_0_67: equ 615
041FF6             0110*  BUF_XEVIOUS_0_68: equ 616
041FF6             0111*  BUF_XEVIOUS_0_69: equ 617
041FF6             0112*  BUF_XEVIOUS_0_6A: equ 618
041FF6             0113*  BUF_XEVIOUS_0_6B: equ 619
041FF6             0114*  BUF_XEVIOUS_0_6C: equ 620
041FF6             0115*  BUF_XEVIOUS_0_6D: equ 621
041FF6             0116*  BUF_XEVIOUS_0_6E: equ 622
041FF6             0117*  BUF_XEVIOUS_0_6F: equ 623
041FF6             0118*  BUF_XEVIOUS_0_70: equ 624
041FF6             0119*  BUF_XEVIOUS_0_71: equ 625
041FF6             0120*  BUF_XEVIOUS_0_72: equ 626
041FF6             0121*  BUF_XEVIOUS_0_73: equ 627
041FF6             0122*  BUF_XEVIOUS_0_74: equ 628
041FF6             0123*  BUF_XEVIOUS_0_75: equ 629
041FF6             0124*  BUF_XEVIOUS_0_76: equ 630
041FF6             0125*  BUF_XEVIOUS_0_77: equ 631
041FF6             0126*  BUF_XEVIOUS_0_78: equ 632
041FF6             0127*  BUF_XEVIOUS_0_79: equ 633
041FF6             0128*  BUF_XEVIOUS_0_7A: equ 634
041FF6             0129*  BUF_XEVIOUS_0_7B: equ 635
041FF6             0130*  BUF_XEVIOUS_0_7C: equ 636
041FF6             0131*  BUF_XEVIOUS_0_7D: equ 637
041FF6             0132*  BUF_XEVIOUS_0_7E: equ 638
041FF6             0133*  BUF_XEVIOUS_0_7F: equ 639
041FF6             0134*  BUF_XEVIOUS_0_80: equ 640
041FF6             0135*  BUF_XEVIOUS_0_81: equ 641
041FF6             0136*  BUF_XEVIOUS_0_82: equ 642
041FF6             0137*  BUF_XEVIOUS_0_83: equ 643
041FF6             0138*  BUF_XEVIOUS_0_84: equ 644
041FF6             0139*  BUF_XEVIOUS_1_00: equ 768
041FF6             0140*  BUF_XEVIOUS_1_01: equ 769
041FF6             0141*  BUF_XEVIOUS_1_02: equ 770
041FF6             0142*  BUF_XEVIOUS_1_03: equ 771
041FF6             0143*  BUF_XEVIOUS_1_04: equ 772
041FF6             0144*  BUF_XEVIOUS_1_05: equ 773
041FF6             0145*  BUF_XEVIOUS_1_06: equ 774
041FF6             0146*  BUF_XEVIOUS_1_07: equ 775
041FF6             0147*  BUF_XEVIOUS_1_08: equ 776
041FF6             0148*  BUF_XEVIOUS_1_09: equ 777
041FF6             0149*  BUF_XEVIOUS_1_0A: equ 778
041FF6             0150*  BUF_XEVIOUS_1_0B: equ 779
041FF6             0151*  BUF_XEVIOUS_1_0C: equ 780
041FF6             0152*  BUF_XEVIOUS_1_0D: equ 781
041FF6             0153*  BUF_XEVIOUS_1_0E: equ 782
041FF6             0154*  BUF_XEVIOUS_1_0F: equ 783
041FF6             0155*  BUF_XEVIOUS_1_10: equ 784
041FF6             0156*  BUF_XEVIOUS_1_11: equ 785
041FF6             0157*  BUF_XEVIOUS_1_12: equ 786
041FF6             0158*  BUF_XEVIOUS_1_13: equ 787
041FF6             0159*  BUF_XEVIOUS_1_14: equ 788
041FF6             0160*  BUF_XEVIOUS_1_15: equ 789
041FF6             0161*  BUF_XEVIOUS_1_16: equ 790
041FF6             0162*  BUF_XEVIOUS_1_17: equ 791
041FF6             0163*  BUF_XEVIOUS_1_18: equ 792
041FF6             0164*  BUF_XEVIOUS_1_19: equ 793
041FF6             0165*  BUF_XEVIOUS_1_1A: equ 794
041FF6             0166*  BUF_XEVIOUS_1_1B: equ 795
041FF6             0167*  BUF_XEVIOUS_1_1C: equ 796
041FF6             0168*  BUF_XEVIOUS_1_1D: equ 797
041FF6             0169*  BUF_XEVIOUS_1_1E: equ 798
041FF6             0170*  BUF_XEVIOUS_1_1F: equ 799
041FF6             0171*  BUF_XEVIOUS_1_20: equ 800
041FF6             0172*  BUF_XEVIOUS_1_21: equ 801
041FF6             0173*  BUF_XEVIOUS_1_22: equ 802
041FF6             0174*  BUF_XEVIOUS_1_23: equ 803
041FF6             0175*  BUF_XEVIOUS_1_24: equ 804
041FF6             0176*  BUF_XEVIOUS_1_25: equ 805
041FF6             0177*  BUF_XEVIOUS_1_26: equ 806
041FF6             0178*  BUF_XEVIOUS_1_27: equ 807
041FF6             0179*  BUF_XEVIOUS_1_28: equ 808
041FF6             0180*  BUF_XEVIOUS_1_29: equ 809
041FF6             0181*  BUF_XEVIOUS_1_2A: equ 810
041FF6             0182*  BUF_XEVIOUS_1_2B: equ 811
041FF6             0183*  BUF_XEVIOUS_1_2C: equ 812
041FF6             0184*  BUF_XEVIOUS_1_2D: equ 813
041FF6             0185*  BUF_XEVIOUS_1_2E: equ 814
041FF6             0186*  BUF_XEVIOUS_1_2F: equ 815
041FF6             0187*  BUF_XEVIOUS_1_30: equ 816
041FF6             0188*  BUF_XEVIOUS_1_31: equ 817
041FF6             0189*  BUF_XEVIOUS_1_32: equ 818
041FF6             0190*  BUF_XEVIOUS_1_33: equ 819
041FF6             0191*  BUF_XEVIOUS_1_34: equ 820
041FF6             0192*  BUF_XEVIOUS_1_35: equ 821
041FF6             0193*  BUF_XEVIOUS_1_36: equ 822
041FF6             0194*  BUF_XEVIOUS_1_37: equ 823
041FF6             0195*  BUF_XEVIOUS_1_38: equ 824
041FF6             0196*  BUF_XEVIOUS_1_39: equ 825
041FF6             0197*  BUF_XEVIOUS_1_3A: equ 826
041FF6             0198*  BUF_XEVIOUS_1_3B: equ 827
041FF6             0199*  BUF_XEVIOUS_1_3C: equ 828
041FF6             0200*  BUF_XEVIOUS_1_3D: equ 829
041FF6             0201*  BUF_XEVIOUS_1_3E: equ 830
041FF6             0202*  BUF_XEVIOUS_1_3F: equ 831
041FF6             0203*  BUF_XEVIOUS_1_40: equ 832
041FF6             0204*  BUF_XEVIOUS_1_41: equ 833
041FF6             0205*  BUF_XEVIOUS_1_42: equ 834
041FF6             0206*  BUF_XEVIOUS_1_43: equ 835
041FF6             0207*  BUF_XEVIOUS_1_44: equ 836
041FF6             0208*  BUF_XEVIOUS_1_45: equ 837
041FF6             0209*  BUF_XEVIOUS_1_46: equ 838
041FF6             0210*  BUF_XEVIOUS_1_47: equ 839
041FF6             0211*  BUF_XEVIOUS_1_48: equ 840
041FF6             0212*  BUF_XEVIOUS_1_49: equ 841
041FF6             0213*  BUF_XEVIOUS_1_4A: equ 842
041FF6             0214*  BUF_XEVIOUS_1_4B: equ 843
041FF6             0215*  BUF_XEVIOUS_1_4C: equ 844
041FF6             0216*  BUF_XEVIOUS_1_4D: equ 845
041FF6             0217*  BUF_XEVIOUS_1_4E: equ 846
041FF6             0218*  BUF_XEVIOUS_1_4F: equ 847
041FF6             0219*  BUF_XEVIOUS_1_50: equ 848
041FF6             0220*  BUF_XEVIOUS_1_51: equ 849
041FF6             0221*  BUF_XEVIOUS_1_52: equ 850
041FF6             0222*  BUF_XEVIOUS_1_53: equ 851
041FF6             0223*  BUF_XEVIOUS_1_54: equ 852
041FF6             0224*  BUF_XEVIOUS_1_55: equ 853
041FF6             0225*  BUF_XEVIOUS_1_56: equ 854
041FF6             0226*  BUF_XEVIOUS_1_57: equ 855
041FF6             0227*  BUF_XEVIOUS_1_58: equ 856
041FF6             0228*  BUF_XEVIOUS_1_59: equ 857
041FF6             0229*  BUF_XEVIOUS_1_5A: equ 858
041FF6             0230*  BUF_XEVIOUS_1_5B: equ 859
041FF6             0231*  BUF_XEVIOUS_1_5C: equ 860
041FF6             0232*  BUF_XEVIOUS_1_5D: equ 861
041FF6             0233*  BUF_XEVIOUS_1_5E: equ 862
041FF6             0234*  BUF_XEVIOUS_1_5F: equ 863
041FF6             0235*  BUF_XEVIOUS_1_60: equ 864
041FF6             0236*  BUF_XEVIOUS_1_61: equ 865
041FF6             0237*  BUF_XEVIOUS_1_62: equ 866
041FF6             0238*  BUF_XEVIOUS_1_63: equ 867
041FF6             0239*  BUF_XEVIOUS_1_64: equ 868
041FF6             0240*  BUF_XEVIOUS_1_65: equ 869
041FF6             0241*  BUF_XEVIOUS_1_66: equ 870
041FF6             0242*  BUF_XEVIOUS_1_67: equ 871
041FF6             0243*  BUF_XEVIOUS_1_68: equ 872
041FF6             0244*  BUF_XEVIOUS_1_69: equ 873
041FF6             0245*  BUF_XEVIOUS_1_6A: equ 874
041FF6             0246*  BUF_XEVIOUS_1_6B: equ 875
041FF6             0247*  BUF_XEVIOUS_1_6C: equ 876
041FF6             0248*  BUF_XEVIOUS_1_6D: equ 877
041FF6             0249*  BUF_XEVIOUS_1_6E: equ 878
041FF6             0250*  BUF_XEVIOUS_1_6F: equ 879
041FF6             0251*  BUF_XEVIOUS_1_70: equ 880
041FF6             0252*  BUF_XEVIOUS_1_71: equ 881
041FF6             0253*  BUF_XEVIOUS_1_72: equ 882
041FF6             0254*  BUF_XEVIOUS_1_73: equ 883
041FF6             0255*  BUF_XEVIOUS_1_74: equ 884
041FF6             0256*  BUF_XEVIOUS_1_75: equ 885
041FF6             0257*  BUF_XEVIOUS_1_76: equ 886
041FF6             0258*  BUF_XEVIOUS_1_77: equ 887
041FF6             0259*  BUF_XEVIOUS_1_78: equ 888
041FF6             0260*  BUF_XEVIOUS_1_79: equ 889
041FF6             0261*  BUF_XEVIOUS_1_7A: equ 890
041FF6             0262*  BUF_XEVIOUS_1_7B: equ 891
041FF6             0263*  BUF_XEVIOUS_1_7C: equ 892
041FF6             0264*  BUF_XEVIOUS_1_7D: equ 893
041FF6             0265*  BUF_XEVIOUS_1_7E: equ 894
041FF6             0266*  BUF_XEVIOUS_1_7F: equ 895
041FF6             0267*  BUF_XEVIOUS_1_80: equ 896
041FF6             0268*  BUF_XEVIOUS_1_81: equ 897
041FF6             0269*  BUF_XEVIOUS_1_82: equ 898
041FF6             0270*  BUF_XEVIOUS_1_83: equ 899
041FF6             0271*  BUF_XEVIOUS_1_84: equ 900
041FF6             0272*  BUF_XEVIOUS_1_85: equ 901
041FF6             0273*  BUF_XEVIOUS_1_86: equ 902
041FF6             0274*  BUF_XEVIOUS_1_87: equ 903
041FF6             0275*  BUF_XEVIOUS_1_88: equ 904
041FF6             0276*  BUF_XEVIOUS_1_89: equ 905
041FF6             0277*  BUF_XEVIOUS_1_8A: equ 906
041FF6             0278*  BUF_XEVIOUS_1_8B: equ 907
041FF6             0279*  BUF_XEVIOUS_1_8C: equ 908
041FF6             0280*  BUF_XEVIOUS_1_8D: equ 909
041FF6             0281*  BUF_XEVIOUS_1_8E: equ 910
041FF6             0282*  BUF_XEVIOUS_1_8F: equ 911
041FF6             0283*  BUF_XEVIOUS_1_90: equ 912
041FF6             0284*  BUF_XEVIOUS_1_91: equ 913
041FF6             0285*  BUF_XEVIOUS_1_92: equ 914
041FF6             0286*  BUF_XEVIOUS_1_93: equ 915
041FF6             0287*  BUF_XEVIOUS_1_94: equ 916
041FF6             0288*  BUF_XEVIOUS_1_95: equ 917
041FF6             0289*  BUF_XEVIOUS_1_96: equ 918
041FF6             0290*  BUF_XEVIOUS_1_97: equ 919
041FF6             0291*  BUF_XEVIOUS_1_98: equ 920
041FF6             0292*  BUF_XEVIOUS_1_99: equ 921
041FF6             0293*  BUF_XEVIOUS_1_9A: equ 922
041FF6             0294*  BUF_XEVIOUS_1_9B: equ 923
041FF6             0295*  BUF_XEVIOUS_1_9C: equ 924
041FF6             0296*  BUF_XEVIOUS_1_9D: equ 925
041FF6             0297*  BUF_XEVIOUS_1_9E: equ 926
041FF6             0298*  BUF_XEVIOUS_1_9F: equ 927
041FF6             0299*  BUF_XEVIOUS_1_A0: equ 928
041FF6             0300*  BUF_XEVIOUS_1_A1: equ 929
041FF6             0301*  BUF_XEVIOUS_1_A2: equ 930
041FF6             0302*  BUF_XEVIOUS_1_A3: equ 931
041FF6             0303*  BUF_XEVIOUS_1_A4: equ 932
041FF6             0304*  BUF_XEVIOUS_1_A5: equ 933
041FF6             0305*  BUF_XEVIOUS_1_A6: equ 934
041FF6             0306*  BUF_XEVIOUS_1_A7: equ 935
041FF6             0307*  BUF_XEVIOUS_1_A8: equ 936
041FF6             0308*  BUF_XEVIOUS_1_A9: equ 937
041FF6             0309*  BUF_XEVIOUS_1_AA: equ 938
041FF6             0310*  BUF_XEVIOUS_1_AB: equ 939
041FF6             0311*  BUF_XEVIOUS_1_AC: equ 940
041FF6             0312*  BUF_XEVIOUS_1_AD: equ 941
041FF6             0313*  BUF_XEVIOUS_1_AE: equ 942
041FF6             0314*  BUF_XEVIOUS_1_AF: equ 943
041FF6             0315*  BUF_XEVIOUS_1_B0: equ 944
041FF6             0316*  BUF_XEVIOUS_1_B1: equ 945
041FF6             0317*  BUF_XEVIOUS_1_B2: equ 946
041FF6             0318*  BUF_XEVIOUS_1_B3: equ 947
041FF6             0319*  BUF_XEVIOUS_1_B4: equ 948
041FF6             0320*  BUF_XEVIOUS_1_B5: equ 949
041FF6             0321*  BUF_XEVIOUS_1_B6: equ 950
041FF6             0322*  BUF_XEVIOUS_1_B7: equ 951
041FF6             0323*  BUF_XEVIOUS_1_B8: equ 952
041FF6             0324*  BUF_XEVIOUS_1_B9: equ 953
041FF6             0325*  BUF_XEVIOUS_1_BA: equ 954
041FF6             0326*  BUF_XEVIOUS_1_BB: equ 955
041FF6             0327*  BUF_XEVIOUS_1_BC: equ 956
041FF6             0328*  BUF_XEVIOUS_1_BD: equ 957
041FF6             0329*  BUF_XEVIOUS_1_BE: equ 958
041FF6             0330*  BUF_XEVIOUS_1_BF: equ 959
041FF6             0331*  BUF_XEVIOUS_1_C0: equ 960
041FF6             0332*  BUF_XEVIOUS_1_C1: equ 961
041FF6             0333*  BUF_XEVIOUS_1_C2: equ 962
041FF6             0334*  BUF_XEVIOUS_1_C3: equ 963
041FF6             0335*  BUF_XEVIOUS_1_C4: equ 964
041FF6             0336*  BUF_XEVIOUS_1_C5: equ 965
041FF6             0337*  BUF_XEVIOUS_1_C6: equ 966
041FF6             0338*  BUF_XEVIOUS_1_C7: equ 967
041FF6             0339*  BUF_XEVIOUS_1_C8: equ 968
041FF6             0340*  BUF_XEVIOUS_1_C9: equ 969
041FF6             0341*  BUF_XEVIOUS_1_CA: equ 970
041FF6             0342*  BUF_XEVIOUS_1_CB: equ 971
041FF6             0343*  BUF_XEVIOUS_1_CC: equ 972
041FF6             0344*  BUF_XEVIOUS_1_CD: equ 973
041FF6             0345*  BUF_XEVIOUS_1_CE: equ 974
041FF6             0346*  BUF_XEVIOUS_1_CF: equ 975
041FF6             0347*  BUF_XEVIOUS_1_D0: equ 976
041FF6             0348*  BUF_XEVIOUS_1_D1: equ 977
041FF6             0349*  BUF_XEVIOUS_1_D2: equ 978
041FF6             0350*  BUF_XEVIOUS_1_D3: equ 979
041FF6             0351*  BUF_XEVIOUS_1_D4: equ 980
041FF6             0352*  BUF_XEVIOUS_1_D5: equ 981
041FF6             0353*  BUF_XEVIOUS_1_D6: equ 982
041FF6             0354*  BUF_XEVIOUS_1_D7: equ 983
041FF6             0355*  BUF_XEVIOUS_1_D8: equ 984
041FF6             0356*  BUF_XEVIOUS_1_D9: equ 985
041FF6             0357*  BUF_XEVIOUS_1_DA: equ 986
041FF6             0358*  BUF_XEVIOUS_1_DB: equ 987
041FF6             0359*  BUF_XEVIOUS_1_DC: equ 988
041FF6             0360*  BUF_XEVIOUS_1_DD: equ 989
041FF6             0361*  BUF_XEVIOUS_1_DE: equ 990
041FF6             0362*  BUF_XEVIOUS_1_DF: equ 991
041FF6             0363*  BUF_XEVIOUS_1_E0: equ 992
041FF6             0364*  BUF_XEVIOUS_1_E1: equ 993
041FF6             0365*  BUF_XEVIOUS_2_00: equ 1024
041FF6             0366*  BUF_XEVIOUS_2_01: equ 1025
041FF6             0367*  BUF_XEVIOUS_2_02: equ 1026
041FF6             0368*  BUF_XEVIOUS_2_03: equ 1027
041FF6             0369*  BUF_XEVIOUS_2_04: equ 1028
041FF6             0370*  BUF_XEVIOUS_2_05: equ 1029
041FF6             0371*  BUF_XEVIOUS_2_06: equ 1030
041FF6             0372*  BUF_XEVIOUS_2_07: equ 1031
041FF6             0373*  BUF_XEVIOUS_2_08: equ 1032
041FF6             0374*  BUF_XEVIOUS_2_09: equ 1033
041FF6             0375*  BUF_XEVIOUS_2_0A: equ 1034
041FF6             0376*  BUF_XEVIOUS_2_0B: equ 1035
041FF6             0377*  BUF_XEVIOUS_2_0C: equ 1036
041FF6             0378*  BUF_XEVIOUS_2_0D: equ 1037
041FF6             0379*  BUF_XEVIOUS_2_0E: equ 1038
041FF6             0380*  BUF_XEVIOUS_2_0F: equ 1039
041FF6             0381*  BUF_XEVIOUS_2_10: equ 1040
041FF6             0382*  BUF_XEVIOUS_2_11: equ 1041
041FF6             0383*  BUF_XEVIOUS_2_12: equ 1042
041FF6             0384*  BUF_XEVIOUS_2_13: equ 1043
041FF6             0385*  BUF_XEVIOUS_2_14: equ 1044
041FF6             0386*  BUF_XEVIOUS_2_15: equ 1045
041FF6             0387*  BUF_XEVIOUS_2_16: equ 1046
041FF6             0388*  BUF_XEVIOUS_2_17: equ 1047
041FF6             0389*  BUF_XEVIOUS_2_18: equ 1048
041FF6             0390*  BUF_XEVIOUS_2_19: equ 1049
041FF6             0391*  BUF_XEVIOUS_2_1A: equ 1050
041FF6             0392*  BUF_XEVIOUS_2_1B: equ 1051
041FF6             0393*  BUF_XEVIOUS_2_1C: equ 1052
041FF6             0394*  BUF_XEVIOUS_2_1D: equ 1053
041FF6             0395*  BUF_XEVIOUS_2_1E: equ 1054
041FF6             0396*  BUF_XEVIOUS_2_1F: equ 1055
041FF6             0397*  BUF_XEVIOUS_2_20: equ 1056
041FF6             0398*  BUF_XEVIOUS_2_21: equ 1057
041FF6             0399*  BUF_XEVIOUS_2_22: equ 1058
041FF6             0400*  BUF_XEVIOUS_2_23: equ 1059
041FF6             0401*  BUF_XEVIOUS_2_24: equ 1060
041FF6             0402*  BUF_XEVIOUS_2_25: equ 1061
041FF6             0403*  BUF_XEVIOUS_2_26: equ 1062
041FF6             0404*  BUF_XEVIOUS_2_27: equ 1063
041FF6             0405*  BUF_XEVIOUS_2_28: equ 1064
041FF6             0406*  BUF_XEVIOUS_2_29: equ 1065
041FF6             0407*  BUF_XEVIOUS_2_2A: equ 1066
041FF6             0408*  BUF_XEVIOUS_2_2B: equ 1067
041FF6             0409*  BUF_XEVIOUS_2_2C: equ 1068
041FF6             0410*  BUF_XEVIOUS_2_2D: equ 1069
041FF6             0411*  BUF_XEVIOUS_2_2E: equ 1070
041FF6             0412*  BUF_XEVIOUS_2_2F: equ 1071
041FF6             0413*  BUF_XEVIOUS_2_30: equ 1072
041FF6             0414*  BUF_XEVIOUS_2_31: equ 1073
041FF6             0415*  BUF_XEVIOUS_2_32: equ 1074
041FF6             0416*  BUF_XEVIOUS_2_33: equ 1075
041FF6             0417*  BUF_XEVIOUS_2_34: equ 1076
041FF6             0418*  BUF_XEVIOUS_2_35: equ 1077
041FF6             0419*  BUF_XEVIOUS_2_36: equ 1078
041FF6             0420*  BUF_XEVIOUS_2_37: equ 1079
041FF6             0421*  BUF_XEVIOUS_2_38: equ 1080
041FF6             0422*  BUF_XEVIOUS_2_39: equ 1081
041FF6             0423*  BUF_XEVIOUS_2_3A: equ 1082
041FF6             0424*  BUF_XEVIOUS_2_3B: equ 1083
041FF6             0425*  BUF_XEVIOUS_2_3C: equ 1084
041FF6             0426*  BUF_XEVIOUS_2_3D: equ 1085
041FF6             0427*  BUF_XEVIOUS_2_3E: equ 1086
041FF6             0428*  BUF_XEVIOUS_2_3F: equ 1087
041FF6             0429*  BUF_XEVIOUS_2_40: equ 1088
041FF6             0430*  BUF_XEVIOUS_2_41: equ 1089
041FF6             0431*  BUF_XEVIOUS_2_42: equ 1090
041FF6             0432*  BUF_XEVIOUS_2_43: equ 1091
041FF6             0433*  BUF_XEVIOUS_2_44: equ 1092
041FF6             0434*  BUF_XEVIOUS_2_45: equ 1093
041FF6             0435*  BUF_XEVIOUS_2_46: equ 1094
041FF6             0436*  BUF_XEVIOUS_2_47: equ 1095
041FF6             0437*  BUF_XEVIOUS_2_48: equ 1096
041FF6             0438*  BUF_XEVIOUS_2_49: equ 1097
041FF6             0439*  BUF_XEVIOUS_2_4A: equ 1098
041FF6             0440*  BUF_XEVIOUS_2_4B: equ 1099
041FF6             0441*  BUF_XEVIOUS_2_4C: equ 1100
041FF6             0442*  BUF_XEVIOUS_2_4D: equ 1101
041FF6             0443*  BUF_XEVIOUS_2_4E: equ 1102
041FF6             0444*  BUF_XEVIOUS_2_4F: equ 1103
041FF6             0445*  BUF_XEVIOUS_2_50: equ 1104
041FF6             0446*  BUF_XEVIOUS_2_51: equ 1105
041FF6             0447*  BUF_XEVIOUS_2_52: equ 1106
041FF6             0448*  BUF_XEVIOUS_2_53: equ 1107
041FF6             0449*  BUF_XEVIOUS_2_54: equ 1108
041FF6             0450*  BUF_XEVIOUS_2_55: equ 1109
041FF6             0451*  BUF_XEVIOUS_2_56: equ 1110
041FF6             0452*  BUF_XEVIOUS_2_57: equ 1111
041FF6             0453*  BUF_XEVIOUS_2_58: equ 1112
041FF6             0454*  BUF_XEVIOUS_2_59: equ 1113
041FF6             0455*  BUF_XEVIOUS_2_5A: equ 1114
041FF6             0456*  BUF_XEVIOUS_2_5B: equ 1115
041FF6             0457*  BUF_XEVIOUS_2_5C: equ 1116
041FF6             0458*  BUF_XEVIOUS_2_5D: equ 1117
041FF6             0459*  BUF_XEVIOUS_2_5E: equ 1118
041FF6             0460*  BUF_XEVIOUS_2_5F: equ 1119
041FF6             0461*  BUF_XEVIOUS_2_60: equ 1120
041FF6             0462*  BUF_XEVIOUS_2_61: equ 1121
041FF6             0463*  BUF_XEVIOUS_2_62: equ 1122
041FF6             0464*  BUF_XEVIOUS_2_63: equ 1123
041FF6             0465*  BUF_XEVIOUS_2_64: equ 1124
041FF6             0466*  BUF_XEVIOUS_2_65: equ 1125
041FF6             0467*  BUF_XEVIOUS_2_66: equ 1126
041FF6             0468*  BUF_XEVIOUS_2_67: equ 1127
041FF6             0469*  BUF_XEVIOUS_2_68: equ 1128
041FF6             0470*  BUF_XEVIOUS_2_69: equ 1129
041FF6             0471*  BUF_XEVIOUS_2_6A: equ 1130
041FF6             0472*  BUF_XEVIOUS_2_6B: equ 1131
041FF6             0473*  BUF_XEVIOUS_2_6C: equ 1132
041FF6             0474*  BUF_XEVIOUS_2_6D: equ 1133
041FF6             0475*  BUF_XEVIOUS_2_6E: equ 1134
041FF6             0476*  BUF_XEVIOUS_2_6F: equ 1135
041FF6             0477*  BUF_XEVIOUS_2_70: equ 1136
041FF6             0478*  BUF_XEVIOUS_2_71: equ 1137
041FF6             0479*  BUF_XEVIOUS_2_72: equ 1138
041FF6             0480*  BUF_XEVIOUS_2_73: equ 1139
041FF6             0481*  BUF_XEVIOUS_2_74: equ 1140
041FF6             0482*  BUF_XEVIOUS_2_75: equ 1141
041FF6             0483*  BUF_XEVIOUS_2_76: equ 1142
041FF6             0484*  BUF_XEVIOUS_2_77: equ 1143
041FF6             0485*  BUF_XEVIOUS_2_78: equ 1144
041FF6             0486*  BUF_XEVIOUS_2_79: equ 1145
041FF6             0487*  BUF_XEVIOUS_2_7A: equ 1146
041FF6             0488*  BUF_XEVIOUS_2_7B: equ 1147
041FF6             0489*  BUF_XEVIOUS_2_7C: equ 1148
041FF6             0490*  BUF_XEVIOUS_2_7D: equ 1149
041FF6             0491*  BUF_XEVIOUS_2_7E: equ 1150
041FF6             0492*  BUF_XEVIOUS_2_7F: equ 1151
041FF6             0493*  BUF_XEVIOUS_2_80: equ 1152
041FF6             0494*  BUF_XEVIOUS_2_81: equ 1153
041FF6             0495*  BUF_XEVIOUS_2_82: equ 1154
041FF6             0496*  BUF_XEVIOUS_2_83: equ 1155
041FF6             0497*  BUF_XEVIOUS_2_84: equ 1156
041FF6             0498*  BUF_XEVIOUS_2_85: equ 1157
041FF6             0499*  BUF_XEVIOUS_2_86: equ 1158
041FF6             0500*  BUF_XEVIOUS_2_87: equ 1159
041FF6             0501*  BUF_XEVIOUS_2_88: equ 1160
041FF6             0502*  BUF_XEVIOUS_2_89: equ 1161
041FF6             0503*  BUF_XEVIOUS_2_8A: equ 1162
041FF6             0504*  BUF_XEVIOUS_2_8B: equ 1163
041FF6             0505*  BUF_XEVIOUS_2_8C: equ 1164
041FF6             0506*  BUF_XEVIOUS_2_8D: equ 1165
041FF6             0507*  BUF_XEVIOUS_2_8E: equ 1166
041FF6             0508*  BUF_XEVIOUS_2_8F: equ 1167
041FF6             0509*  BUF_XEVIOUS_2_90: equ 1168
041FF6             0510*  BUF_XEVIOUS_2_91: equ 1169
041FF6             0511*  BUF_XEVIOUS_2_92: equ 1170
041FF6             0512*  BUF_XEVIOUS_2_93: equ 1171
041FF6             0513*  BUF_XEVIOUS_2_94: equ 1172
041FF6             0514*  BUF_XEVIOUS_2_95: equ 1173
041FF6             0515*  BUF_XEVIOUS_2_96: equ 1174
041FF6             0516*  BUF_XEVIOUS_2_97: equ 1175
041FF6             0517*  BUF_XEVIOUS_2_98: equ 1176
041FF6             0518*  BUF_XEVIOUS_2_99: equ 1177
041FF6             0519*  BUF_XEVIOUS_2_9A: equ 1178
041FF6             0520*  BUF_XEVIOUS_2_9B: equ 1179
041FF6             0521*  BUF_XEVIOUS_2_9C: equ 1180
041FF6             0522*  BUF_XEVIOUS_2_9D: equ 1181
041FF6             0523*  BUF_XEVIOUS_2_9E: equ 1182
041FF6             0524*  BUF_XEVIOUS_2_9F: equ 1183
041FF6             0525*  BUF_XEVIOUS_2_A0: equ 1184
041FF6             0526*  BUF_XEVIOUS_2_A1: equ 1185
041FF6             0527*  BUF_XEVIOUS_2_A2: equ 1186
041FF6             0528*  BUF_XEVIOUS_2_A3: equ 1187
041FF6             0529*  BUF_XEVIOUS_2_A4: equ 1188
041FF6             0530*  BUF_XEVIOUS_2_A5: equ 1189
041FF6             0531*  BUF_XEVIOUS_2_A6: equ 1190
041FF6             0532*  BUF_XEVIOUS_2_A7: equ 1191
041FF6             0533*  BUF_XEVIOUS_2_A8: equ 1192
041FF6             0534*  BUF_XEVIOUS_2_A9: equ 1193
041FF6             0535*  BUF_XEVIOUS_2_AA: equ 1194
041FF6             0536*  BUF_XEVIOUS_2_AB: equ 1195
041FF6             0537*  BUF_XEVIOUS_2_AC: equ 1196
041FF6             0538*  BUF_XEVIOUS_2_AD: equ 1197
041FF6             0539*  BUF_XEVIOUS_2_AE: equ 1198
041FF6             0540*  BUF_XEVIOUS_2_AF: equ 1199
041FF6             0541*  BUF_XEVIOUS_2_B0: equ 1200
041FF6             0542*  BUF_XEVIOUS_2_B1: equ 1201
041FF6             0543*  BUF_XEVIOUS_2_B2: equ 1202
041FF6             0544*  BUF_XEVIOUS_2_B3: equ 1203
041FF6             0545*  BUF_XEVIOUS_2_B4: equ 1204
041FF6             0546*  BUF_XEVIOUS_2_B5: equ 1205
041FF6             0547*  BUF_XEVIOUS_2_B6: equ 1206
041FF6             0548*  BUF_XEVIOUS_2_B7: equ 1207
041FF6             0549*  BUF_XEVIOUS_3_00: equ 1280
041FF6             0550*  BUF_XEVIOUS_3_01: equ 1281
041FF6             0551*  BUF_XEVIOUS_3_02: equ 1282
041FF6             0552*  BUF_XEVIOUS_3_03: equ 1283
041FF6             0553*  BUF_XEVIOUS_3_04: equ 1284
041FF6             0554*  BUF_XEVIOUS_3_05: equ 1285
041FF6             0555*  BUF_XEVIOUS_3_06: equ 1286
041FF6             0556*  BUF_XEVIOUS_3_07: equ 1287
041FF6             0557*  BUF_XEVIOUS_3_08: equ 1288
041FF6             0558*  BUF_XEVIOUS_3_09: equ 1289
041FF6             0559*  BUF_XEVIOUS_3_0A: equ 1290
041FF6             0560*  BUF_XEVIOUS_3_0B: equ 1291
041FF6             0561*  BUF_XEVIOUS_3_0C: equ 1292
041FF6             0562*  BUF_XEVIOUS_3_0D: equ 1293
041FF6             0563*  BUF_XEVIOUS_3_0E: equ 1294
041FF6             0564*  BUF_XEVIOUS_3_0F: equ 1295
041FF6             0565*  BUF_XEVIOUS_3_10: equ 1296
041FF6             0566*  BUF_XEVIOUS_3_11: equ 1297
041FF6             0567*  BUF_XEVIOUS_3_12: equ 1298
041FF6             0568*  BUF_XEVIOUS_3_13: equ 1299
041FF6             0569*  BUF_XEVIOUS_3_14: equ 1300
041FF6             0570*  BUF_XEVIOUS_3_15: equ 1301
041FF6             0571*  BUF_XEVIOUS_3_16: equ 1302
041FF6             0572*  BUF_XEVIOUS_3_17: equ 1303
041FF6             0573*  BUF_XEVIOUS_3_18: equ 1304
041FF6             0574*  BUF_XEVIOUS_3_19: equ 1305
041FF6             0575*  BUF_XEVIOUS_3_1A: equ 1306
041FF6             0576*  BUF_XEVIOUS_3_1B: equ 1307
041FF6             0577*  BUF_XEVIOUS_3_1C: equ 1308
041FF6             0578*  BUF_XEVIOUS_3_1D: equ 1309
041FF6             0579*  BUF_XEVIOUS_3_1E: equ 1310
041FF6             0580*  BUF_XEVIOUS_3_1F: equ 1311
041FF6             0581*  BUF_XEVIOUS_3_20: equ 1312
041FF6             0582*  BUF_XEVIOUS_3_21: equ 1313
041FF6             0583*  BUF_XEVIOUS_3_22: equ 1314
041FF6             0584*  BUF_XEVIOUS_3_23: equ 1315
041FF6             0585*  BUF_XEVIOUS_3_24: equ 1316
041FF6             0586*  BUF_XEVIOUS_3_25: equ 1317
041FF6             0587*  BUF_XEVIOUS_3_26: equ 1318
041FF6             0588*  BUF_XEVIOUS_3_27: equ 1319
041FF6             0589*  BUF_XEVIOUS_3_28: equ 1320
041FF6             0590*  BUF_XEVIOUS_3_29: equ 1321
041FF6             0591*  BUF_XEVIOUS_3_2A: equ 1322
041FF6             0592*  BUF_XEVIOUS_3_2B: equ 1323
041FF6             0593*  BUF_XEVIOUS_3_2C: equ 1324
041FF6             0594*  BUF_XEVIOUS_3_2D: equ 1325
041FF6             0595*  BUF_XEVIOUS_3_2E: equ 1326
041FF6             0596*  BUF_XEVIOUS_3_2F: equ 1327
041FF6             0597*  BUF_XEVIOUS_3_30: equ 1328
041FF6             0598*  BUF_XEVIOUS_3_31: equ 1329
041FF6             0599*  BUF_XEVIOUS_3_32: equ 1330
041FF6             0600*  BUF_XEVIOUS_3_33: equ 1331
041FF6             0601*  BUF_XEVIOUS_3_34: equ 1332
041FF6             0602*  BUF_XEVIOUS_3_35: equ 1333
041FF6             0603*  BUF_XEVIOUS_3_36: equ 1334
041FF6             0604*  BUF_XEVIOUS_3_37: equ 1335
041FF6             0605*  BUF_XEVIOUS_3_38: equ 1336
041FF6             0606*  BUF_XEVIOUS_3_39: equ 1337
041FF6             0607*  BUF_XEVIOUS_3_3A: equ 1338
041FF6             0608*  BUF_XEVIOUS_3_3B: equ 1339
041FF6             0609*  BUF_XEVIOUS_3_3C: equ 1340
041FF6             0610*  BUF_XEVIOUS_3_3D: equ 1341
041FF6             0611*  BUF_XEVIOUS_3_3E: equ 1342
041FF6             0612*  BUF_XEVIOUS_3_3F: equ 1343
041FF6             0613*  BUF_XEVIOUS_3_40: equ 1344
041FF6             0614*  BUF_XEVIOUS_3_41: equ 1345
041FF6             0615*  BUF_XEVIOUS_3_42: equ 1346
041FF6             0616*  BUF_XEVIOUS_3_43: equ 1347
041FF6             0617*  BUF_XEVIOUS_3_44: equ 1348
041FF6             0618*  BUF_XEVIOUS_3_45: equ 1349
041FF6             0619*  BUF_XEVIOUS_3_46: equ 1350
041FF6             0620*  BUF_XEVIOUS_3_47: equ 1351
041FF6             0621*  BUF_XEVIOUS_3_48: equ 1352
041FF6             0622*  BUF_XEVIOUS_3_49: equ 1353
041FF6             0623*  BUF_XEVIOUS_3_4A: equ 1354
041FF6             0624*  BUF_XEVIOUS_3_4B: equ 1355
041FF6             0625*  BUF_XEVIOUS_3_4C: equ 1356
041FF6             0626*  BUF_XEVIOUS_3_4D: equ 1357
041FF6             0627*  BUF_XEVIOUS_3_4E: equ 1358
041FF6             0628*  BUF_XEVIOUS_3_4F: equ 1359
041FF6             0629*  BUF_XEVIOUS_3_50: equ 1360
041FF6             0630*  BUF_XEVIOUS_3_51: equ 1361
041FF6             0631*  BUF_XEVIOUS_3_52: equ 1362
041FF6             0632*  BUF_XEVIOUS_3_53: equ 1363
041FF6             0633*  BUF_XEVIOUS_3_54: equ 1364
041FF6             0634*  BUF_XEVIOUS_3_55: equ 1365
041FF6             0635*  BUF_XEVIOUS_3_56: equ 1366
041FF6             0636*  BUF_XEVIOUS_3_57: equ 1367
041FF6             0637*  BUF_XEVIOUS_3_58: equ 1368
041FF6             0638*  BUF_XEVIOUS_3_59: equ 1369
041FF6             0639*  BUF_XEVIOUS_3_5A: equ 1370
041FF6             0640*  BUF_XEVIOUS_3_5B: equ 1371
041FF6             0641*  BUF_XEVIOUS_3_5C: equ 1372
041FF6             0642*  BUF_XEVIOUS_3_5D: equ 1373
041FF6             0643*  BUF_XEVIOUS_3_5E: equ 1374
041FF6             0644*  BUF_XEVIOUS_3_5F: equ 1375
041FF6             0645*  BUF_XEVIOUS_3_60: equ 1376
041FF6             0646*  BUF_XEVIOUS_3_61: equ 1377
041FF6             0647*  BUF_XEVIOUS_3_62: equ 1378
041FF6             0648*  BUF_XEVIOUS_3_63: equ 1379
041FF6             0649*  BUF_XEVIOUS_3_64: equ 1380
041FF6             0650*  BUF_XEVIOUS_3_65: equ 1381
041FF6             0651*  BUF_XEVIOUS_3_66: equ 1382
041FF6             0652*  BUF_XEVIOUS_3_67: equ 1383
041FF6             0653*  BUF_XEVIOUS_3_68: equ 1384
041FF6             0654*  BUF_XEVIOUS_3_69: equ 1385
041FF6             0655*  BUF_XEVIOUS_3_6A: equ 1386
041FF6             0656*  BUF_XEVIOUS_3_6B: equ 1387
041FF6             0657*  BUF_XEVIOUS_3_6C: equ 1388
041FF6             0658*  BUF_XEVIOUS_3_6D: equ 1389
041FF6             0659*  BUF_XEVIOUS_3_6E: equ 1390
041FF6             0660*  BUF_XEVIOUS_3_6F: equ 1391
041FF6             0661*  BUF_XEVIOUS_3_70: equ 1392
041FF6             0662*  BUF_XEVIOUS_3_71: equ 1393
041FF6             0663*  BUF_XEVIOUS_3_72: equ 1394
041FF6             0664*  BUF_XEVIOUS_3_73: equ 1395
041FF6             0665*  BUF_XEVIOUS_3_74: equ 1396
041FF6             0666*  BUF_XEVIOUS_3_75: equ 1397
041FF6             0667*  BUF_XEVIOUS_3_76: equ 1398
041FF6             0668*  BUF_XEVIOUS_3_77: equ 1399
041FF6             0669*  BUF_XEVIOUS_3_78: equ 1400
041FF6             0670*  BUF_XEVIOUS_3_79: equ 1401
041FF6             0671*  BUF_XEVIOUS_3_7A: equ 1402
041FF6             0672*  BUF_XEVIOUS_3_7B: equ 1403
041FF6             0673*  BUF_XEVIOUS_3_7C: equ 1404
041FF6             0674*  BUF_XEVIOUS_3_7D: equ 1405
041FF6             0675*  BUF_XEVIOUS_3_7E: equ 1406
041FF6             0676*  BUF_XEVIOUS_3_7F: equ 1407
041FF6             0677*  BUF_XEVIOUS_3_80: equ 1408
041FF6             0678*  BUF_XEVIOUS_3_81: equ 1409
041FF6             0679*  BUF_XEVIOUS_3_82: equ 1410
041FF6             0680*  BUF_XEVIOUS_3_83: equ 1411
041FF6             0681*  BUF_XEVIOUS_3_84: equ 1412
041FF6             0682*  BUF_XEVIOUS_3_85: equ 1413
041FF6             0683*  BUF_XEVIOUS_3_86: equ 1414
041FF6             0684*  BUF_XEVIOUS_3_87: equ 1415
041FF6             0685*  BUF_XEVIOUS_3_88: equ 1416
041FF6             0686*  BUF_XEVIOUS_3_89: equ 1417
041FF6             0687*  BUF_XEVIOUS_3_8A: equ 1418
041FF6             0688*  BUF_XEVIOUS_3_8B: equ 1419
041FF6             0689*  BUF_XEVIOUS_3_8C: equ 1420
041FF6             0690*  BUF_XEVIOUS_3_8D: equ 1421
041FF6             0691*  BUF_XEVIOUS_3_8E: equ 1422
041FF6             0692*  BUF_XEVIOUS_3_8F: equ 1423
041FF6             0693*  BUF_XEVIOUS_3_90: equ 1424
041FF6             0694*  BUF_XEVIOUS_3_91: equ 1425
041FF6             0695*  BUF_XEVIOUS_3_92: equ 1426
041FF6             0696*  BUF_XEVIOUS_3_93: equ 1427
041FF6             0697*  BUF_XEVIOUS_3_94: equ 1428
041FF6             0698*  BUF_XEVIOUS_3_95: equ 1429
041FF6             0699*  BUF_XEVIOUS_3_96: equ 1430
041FF6             0700*  BUF_XEVIOUS_3_97: equ 1431
041FF6             0701*  BUF_XEVIOUS_3_98: equ 1432
041FF6             0702*  BUF_XEVIOUS_3_99: equ 1433
041FF6             0703*  BUF_XEVIOUS_3_9A: equ 1434
041FF6             0704*  BUF_XEVIOUS_3_9B: equ 1435
041FF6             0705*  BUF_XEVIOUS_3_9C: equ 1436
041FF6             0706*  BUF_XEVIOUS_3_9D: equ 1437
041FF6             0707*  BUF_XEVIOUS_3_9E: equ 1438
041FF6             0708*  BUF_XEVIOUS_3_9F: equ 1439
041FF6             0709*  BUF_XEVIOUS_3_A0: equ 1440
041FF6             0710*  BUF_XEVIOUS_3_A1: equ 1441
041FF6             0711*  BUF_XEVIOUS_3_A2: equ 1442
041FF6             0712*  BUF_XEVIOUS_3_A3: equ 1443
041FF6             0713*  BUF_XEVIOUS_3_A4: equ 1444
041FF6             0714*  BUF_XEVIOUS_3_A5: equ 1445
041FF6             0715*  BUF_XEVIOUS_3_A6: equ 1446
041FF6             0716*  BUF_XEVIOUS_3_A7: equ 1447
041FF6             0717*  BUF_XEVIOUS_3_A8: equ 1448
041FF6             0718*  BUF_XEVIOUS_3_A9: equ 1449
041FF6             0719*  BUF_XEVIOUS_3_AA: equ 1450
041FF6             0720*  BUF_XEVIOUS_3_AB: equ 1451
041FF6             0721*  BUF_XEVIOUS_3_AC: equ 1452
041FF6             0722*  BUF_XEVIOUS_3_AD: equ 1453
041FF6             0723*  BUF_XEVIOUS_3_AE: equ 1454
041FF6             0724*  BUF_XEVIOUS_3_AF: equ 1455
041FF6             0725*  BUF_XEVIOUS_3_B0: equ 1456
041FF6             0726*  BUF_XEVIOUS_3_B1: equ 1457
041FF6             0727*  BUF_XEVIOUS_3_B2: equ 1458
041FF6             0728*  BUF_XEVIOUS_3_B3: equ 1459
041FF6             0729*  BUF_XEVIOUS_3_B4: equ 1460
041FF6             0730*  BUF_XEVIOUS_3_B5: equ 1461
041FF6             0731*  BUF_XEVIOUS_3_B6: equ 1462
041FF6             0732*  BUF_XEVIOUS_3_B7: equ 1463
041FF6             0733*  BUF_XEVIOUS_3_B8: equ 1464
041FF6             0734*  BUF_XEVIOUS_3_B9: equ 1465
041FF6             0735*  BUF_XEVIOUS_3_BA: equ 1466
041FF6             0736*  BUF_XEVIOUS_3_BB: equ 1467
041FF6             0737*  BUF_XEVIOUS_3_BC: equ 1468
041FF6             0738*  BUF_XEVIOUS_3_BD: equ 1469
041FF6             0739*  BUF_XEVIOUS_3_BE: equ 1470
041FF6             0740*  BUF_XEVIOUS_3_BF: equ 1471
041FF6             0741*  BUF_XEVIOUS_3_C0: equ 1472
041FF6             0742*  BUF_XEVIOUS_3_C1: equ 1473
041FF6             0743*  BUF_XEVIOUS_3_C2: equ 1474
041FF6             0744*  BUF_XEVIOUS_3_C3: equ 1475
041FF6             0745*  BUF_XEVIOUS_3_C4: equ 1476
041FF6             0746*  BUF_XEVIOUS_3_C5: equ 1477
041FF6             0747*  BUF_XEVIOUS_3_C6: equ 1478
041FF6             0748*  BUF_XEVIOUS_3_C7: equ 1479
041FF6             0749*  BUF_XEVIOUS_3_C8: equ 1480
041FF6             0750*  BUF_XEVIOUS_3_C9: equ 1481
041FF6             0751*  BUF_XEVIOUS_3_CA: equ 1482
041FF6             0752*  BUF_XEVIOUS_3_CB: equ 1483
041FF6             0753*  BUF_XEVIOUS_3_CC: equ 1484
041FF6             0754*  BUF_XEVIOUS_3_CD: equ 1485
041FF6             0755*  BUF_XEVIOUS_3_CE: equ 1486
041FF6             0756*  BUF_XEVIOUS_3_CF: equ 1487
041FF6             0757*  BUF_XEVIOUS_3_D0: equ 1488
041FF6             0758*  BUF_XEVIOUS_3_D1: equ 1489
041FF6             0759*  BUF_XEVIOUS_3_D2: equ 1490
041FF6             0760*  BUF_XEVIOUS_3_D3: equ 1491
041FF6             0761*  BUF_XEVIOUS_3_D4: equ 1492
041FF6             0762*  BUF_XEVIOUS_3_D5: equ 1493
041FF6             0763*  BUF_XEVIOUS_3_D6: equ 1494
041FF6             0764*  BUF_XEVIOUS_3_D7: equ 1495
041FF6             0765*  BUF_XEVIOUS_3_D8: equ 1496
041FF6             0766*  BUF_XEVIOUS_3_D9: equ 1497
041FF6             0767*  BUF_XEVIOUS_3_DA: equ 1498
041FF6             0768*  BUF_XEVIOUS_3_DB: equ 1499
041FF6             0769*  BUF_XEVIOUS_3_DC: equ 1500
041FF6             0770*  BUF_XEVIOUS_3_DD: equ 1501
041FF6             0771*  BUF_XEVIOUS_3_DE: equ 1502
041FF6             0772*  BUF_XEVIOUS_3_DF: equ 1503
041FF6             0773*  BUF_XEVIOUS_3_E0: equ 1504
041FF6             0774*  BUF_XEVIOUS_3_E1: equ 1505
041FF6             0775*  BUF_XEVIOUS_3_E2: equ 1506
041FF6             0776*  BUF_XEVIOUS_3_E3: equ 1507
041FF6             0777*  BUF_XEVIOUS_3_E4: equ 1508
041FF6             0778*  BUF_XEVIOUS_3_E5: equ 1509
041FF6             0779*  BUF_XEVIOUS_3_E6: equ 1510
041FF6             0780*  BUF_XEVIOUS_3_E7: equ 1511
041FF6             0781*  BUF_XEVIOUS_3_E8: equ 1512
041FF6             0782*  BUF_XEVIOUS_3_E9: equ 1513
041FF6             0783*  BUF_XEVIOUS_3_EA: equ 1514
041FF6             0784*  BUF_XEVIOUS_3_EB: equ 1515
041FF6             0785*  BUF_XEVIOUS_3_EC: equ 1516
041FF6             0786*  BUF_XEVIOUS_3_ED: equ 1517
041FF6             0787*  BUF_XEVIOUS_3_EE: equ 1518
041FF6             0788*  BUF_XEVIOUS_3_EF: equ 1519
041FF6             0789*  BUF_XEVIOUS_3_F0: equ 1520
041FF6             0790*  BUF_XEVIOUS_3_F1: equ 1521
041FF6             0791*  BUF_XEVIOUS_3_F2: equ 1522
041FF6             0792*  BUF_XEVIOUS_3_F3: equ 1523
041FF6             0793*  BUF_XEVIOUS_3_F4: equ 1524
041FF6             0794*  BUF_XEVIOUS_3_F5: equ 1525
041FF6             0795*  BUF_XEVIOUS_3_F6: equ 1526
041FF6             0796*  BUF_XEVIOUS_3_F7: equ 1527
041FF6             0797*  BUF_XEVIOUS_3_F8: equ 1528
041FF6             0798*  BUF_XEVIOUS_3_F9: equ 1529
041FF6             0799*  BUF_XEVIOUS_3_FA: equ 1530
041FF6             0800*  BUF_XEVIOUS_3_FB: equ 1531
041FF6             0801*  BUF_XEVIOUS_3_FC: equ 1532
041FF6             0802*  BUF_XEVIOUS_3_FD: equ 1533
041FF6             0803*  BUF_XEVIOUS_3_FE: equ 1534
041FF6             0804*  BUF_XEVIOUS_3_FF: equ 1535
041FF6             0805*  
041FF6             0806*  tiles_xevious_image_list: ; type; width; height; size; filename; bufferId:
041FF6 01 00 00 10 0807*  	dl 1, 16, 16, 256, fn_xevious_0_00, 512
       00 00 10 00 
       00 00 01 00 
       24 58 04 00 
       02 00       
042008 01 00 00 10 0808*  	dl 1, 16, 16, 256, fn_xevious_0_01, 513
       00 00 10 00 
       00 00 01 00 
       45 58 04 01 
       02 00       
04201A 01 00 00 10 0809*  	dl 1, 16, 16, 256, fn_xevious_0_02, 514
       00 00 10 00 
       00 00 01 00 
       66 58 04 02 
       02 00       
04202C 01 00 00 10 0810*  	dl 1, 16, 16, 256, fn_xevious_0_03, 515
       00 00 10 00 
       00 00 01 00 
       87 58 04 03 
       02 00       
04203E 01 00 00 10 0811*  	dl 1, 16, 16, 256, fn_xevious_0_04, 516
       00 00 10 00 
       00 00 01 00 
       A8 58 04 04 
       02 00       
042050 01 00 00 10 0812*  	dl 1, 16, 16, 256, fn_xevious_0_05, 517
       00 00 10 00 
       00 00 01 00 
       C9 58 04 05 
       02 00       
042062 01 00 00 10 0813*  	dl 1, 16, 16, 256, fn_xevious_0_06, 518
       00 00 10 00 
       00 00 01 00 
       EA 58 04 06 
       02 00       
042074 01 00 00 10 0814*  	dl 1, 16, 16, 256, fn_xevious_0_07, 519
       00 00 10 00 
       00 00 01 00 
       0B 59 04 07 
       02 00       
042086 01 00 00 10 0815*  	dl 1, 16, 16, 256, fn_xevious_0_08, 520
       00 00 10 00 
       00 00 01 00 
       2C 59 04 08 
       02 00       
042098 01 00 00 10 0816*  	dl 1, 16, 16, 256, fn_xevious_0_09, 521
       00 00 10 00 
       00 00 01 00 
       4D 59 04 09 
       02 00       
0420AA 01 00 00 10 0817*  	dl 1, 16, 16, 256, fn_xevious_0_0A, 522
       00 00 10 00 
       00 00 01 00 
       6E 59 04 0A 
       02 00       
0420BC 01 00 00 10 0818*  	dl 1, 16, 16, 256, fn_xevious_0_0B, 523
       00 00 10 00 
       00 00 01 00 
       8F 59 04 0B 
       02 00       
0420CE 01 00 00 10 0819*  	dl 1, 16, 16, 256, fn_xevious_0_0C, 524
       00 00 10 00 
       00 00 01 00 
       B0 59 04 0C 
       02 00       
0420E0 01 00 00 10 0820*  	dl 1, 16, 16, 256, fn_xevious_0_0D, 525
       00 00 10 00 
       00 00 01 00 
       D1 59 04 0D 
       02 00       
0420F2 01 00 00 10 0821*  	dl 1, 16, 16, 256, fn_xevious_0_0E, 526
       00 00 10 00 
       00 00 01 00 
       F2 59 04 0E 
       02 00       
042104 01 00 00 10 0822*  	dl 1, 16, 16, 256, fn_xevious_0_0F, 527
       00 00 10 00 
       00 00 01 00 
       13 5A 04 0F 
       02 00       
042116 01 00 00 10 0823*  	dl 1, 16, 16, 256, fn_xevious_0_10, 528
       00 00 10 00 
       00 00 01 00 
       34 5A 04 10 
       02 00       
042128 01 00 00 10 0824*  	dl 1, 16, 16, 256, fn_xevious_0_11, 529
       00 00 10 00 
       00 00 01 00 
       55 5A 04 11 
       02 00       
04213A 01 00 00 10 0825*  	dl 1, 16, 16, 256, fn_xevious_0_12, 530
       00 00 10 00 
       00 00 01 00 
       76 5A 04 12 
       02 00       
04214C 01 00 00 10 0826*  	dl 1, 16, 16, 256, fn_xevious_0_13, 531
       00 00 10 00 
       00 00 01 00 
       97 5A 04 13 
       02 00       
04215E 01 00 00 10 0827*  	dl 1, 16, 16, 256, fn_xevious_0_14, 532
       00 00 10 00 
       00 00 01 00 
       B8 5A 04 14 
       02 00       
042170 01 00 00 10 0828*  	dl 1, 16, 16, 256, fn_xevious_0_15, 533
       00 00 10 00 
       00 00 01 00 
       D9 5A 04 15 
       02 00       
042182 01 00 00 10 0829*  	dl 1, 16, 16, 256, fn_xevious_0_16, 534
       00 00 10 00 
       00 00 01 00 
       FA 5A 04 16 
       02 00       
042194 01 00 00 10 0830*  	dl 1, 16, 16, 256, fn_xevious_0_17, 535
       00 00 10 00 
       00 00 01 00 
       1B 5B 04 17 
       02 00       
0421A6 01 00 00 10 0831*  	dl 1, 16, 16, 256, fn_xevious_0_18, 536
       00 00 10 00 
       00 00 01 00 
       3C 5B 04 18 
       02 00       
0421B8 01 00 00 10 0832*  	dl 1, 16, 16, 256, fn_xevious_0_19, 537
       00 00 10 00 
       00 00 01 00 
       5D 5B 04 19 
       02 00       
0421CA 01 00 00 10 0833*  	dl 1, 16, 16, 256, fn_xevious_0_1A, 538
       00 00 10 00 
       00 00 01 00 
       7E 5B 04 1A 
       02 00       
0421DC 01 00 00 10 0834*  	dl 1, 16, 16, 256, fn_xevious_0_1B, 539
       00 00 10 00 
       00 00 01 00 
       9F 5B 04 1B 
       02 00       
0421EE 01 00 00 10 0835*  	dl 1, 16, 16, 256, fn_xevious_0_1C, 540
       00 00 10 00 
       00 00 01 00 
       C0 5B 04 1C 
       02 00       
042200 01 00 00 10 0836*  	dl 1, 16, 16, 256, fn_xevious_0_1D, 541
       00 00 10 00 
       00 00 01 00 
       E1 5B 04 1D 
       02 00       
042212 01 00 00 10 0837*  	dl 1, 16, 16, 256, fn_xevious_0_1E, 542
       00 00 10 00 
       00 00 01 00 
       02 5C 04 1E 
       02 00       
042224 01 00 00 10 0838*  	dl 1, 16, 16, 256, fn_xevious_0_1F, 543
       00 00 10 00 
       00 00 01 00 
       23 5C 04 1F 
       02 00       
042236 01 00 00 10 0839*  	dl 1, 16, 16, 256, fn_xevious_0_20, 544
       00 00 10 00 
       00 00 01 00 
       44 5C 04 20 
       02 00       
042248 01 00 00 10 0840*  	dl 1, 16, 16, 256, fn_xevious_0_21, 545
       00 00 10 00 
       00 00 01 00 
       65 5C 04 21 
       02 00       
04225A 01 00 00 10 0841*  	dl 1, 16, 16, 256, fn_xevious_0_22, 546
       00 00 10 00 
       00 00 01 00 
       86 5C 04 22 
       02 00       
04226C 01 00 00 10 0842*  	dl 1, 16, 16, 256, fn_xevious_0_23, 547
       00 00 10 00 
       00 00 01 00 
       A7 5C 04 23 
       02 00       
04227E 01 00 00 10 0843*  	dl 1, 16, 16, 256, fn_xevious_0_24, 548
       00 00 10 00 
       00 00 01 00 
       C8 5C 04 24 
       02 00       
042290 01 00 00 10 0844*  	dl 1, 16, 16, 256, fn_xevious_0_25, 549
       00 00 10 00 
       00 00 01 00 
       E9 5C 04 25 
       02 00       
0422A2 01 00 00 10 0845*  	dl 1, 16, 16, 256, fn_xevious_0_26, 550
       00 00 10 00 
       00 00 01 00 
       0A 5D 04 26 
       02 00       
0422B4 01 00 00 10 0846*  	dl 1, 16, 16, 256, fn_xevious_0_27, 551
       00 00 10 00 
       00 00 01 00 
       2B 5D 04 27 
       02 00       
0422C6 01 00 00 10 0847*  	dl 1, 16, 16, 256, fn_xevious_0_28, 552
       00 00 10 00 
       00 00 01 00 
       4C 5D 04 28 
       02 00       
0422D8 01 00 00 10 0848*  	dl 1, 16, 16, 256, fn_xevious_0_29, 553
       00 00 10 00 
       00 00 01 00 
       6D 5D 04 29 
       02 00       
0422EA 01 00 00 10 0849*  	dl 1, 16, 16, 256, fn_xevious_0_2A, 554
       00 00 10 00 
       00 00 01 00 
       8E 5D 04 2A 
       02 00       
0422FC 01 00 00 10 0850*  	dl 1, 16, 16, 256, fn_xevious_0_2B, 555
       00 00 10 00 
       00 00 01 00 
       AF 5D 04 2B 
       02 00       
04230E 01 00 00 10 0851*  	dl 1, 16, 16, 256, fn_xevious_0_2C, 556
       00 00 10 00 
       00 00 01 00 
       D0 5D 04 2C 
       02 00       
042320 01 00 00 10 0852*  	dl 1, 16, 16, 256, fn_xevious_0_2D, 557
       00 00 10 00 
       00 00 01 00 
       F1 5D 04 2D 
       02 00       
042332 01 00 00 10 0853*  	dl 1, 16, 16, 256, fn_xevious_0_2E, 558
       00 00 10 00 
       00 00 01 00 
       12 5E 04 2E 
       02 00       
042344 01 00 00 10 0854*  	dl 1, 16, 16, 256, fn_xevious_0_2F, 559
       00 00 10 00 
       00 00 01 00 
       33 5E 04 2F 
       02 00       
042356 01 00 00 10 0855*  	dl 1, 16, 16, 256, fn_xevious_0_30, 560
       00 00 10 00 
       00 00 01 00 
       54 5E 04 30 
       02 00       
042368 01 00 00 10 0856*  	dl 1, 16, 16, 256, fn_xevious_0_31, 561
       00 00 10 00 
       00 00 01 00 
       75 5E 04 31 
       02 00       
04237A 01 00 00 10 0857*  	dl 1, 16, 16, 256, fn_xevious_0_32, 562
       00 00 10 00 
       00 00 01 00 
       96 5E 04 32 
       02 00       
04238C 01 00 00 10 0858*  	dl 1, 16, 16, 256, fn_xevious_0_33, 563
       00 00 10 00 
       00 00 01 00 
       B7 5E 04 33 
       02 00       
04239E 01 00 00 10 0859*  	dl 1, 16, 16, 256, fn_xevious_0_34, 564
       00 00 10 00 
       00 00 01 00 
       D8 5E 04 34 
       02 00       
0423B0 01 00 00 10 0860*  	dl 1, 16, 16, 256, fn_xevious_0_35, 565
       00 00 10 00 
       00 00 01 00 
       F9 5E 04 35 
       02 00       
0423C2 01 00 00 10 0861*  	dl 1, 16, 16, 256, fn_xevious_0_36, 566
       00 00 10 00 
       00 00 01 00 
       1A 5F 04 36 
       02 00       
0423D4 01 00 00 10 0862*  	dl 1, 16, 16, 256, fn_xevious_0_37, 567
       00 00 10 00 
       00 00 01 00 
       3B 5F 04 37 
       02 00       
0423E6 01 00 00 10 0863*  	dl 1, 16, 16, 256, fn_xevious_0_38, 568
       00 00 10 00 
       00 00 01 00 
       5C 5F 04 38 
       02 00       
0423F8 01 00 00 10 0864*  	dl 1, 16, 16, 256, fn_xevious_0_39, 569
       00 00 10 00 
       00 00 01 00 
       7D 5F 04 39 
       02 00       
04240A 01 00 00 10 0865*  	dl 1, 16, 16, 256, fn_xevious_0_3A, 570
       00 00 10 00 
       00 00 01 00 
       9E 5F 04 3A 
       02 00       
04241C 01 00 00 10 0866*  	dl 1, 16, 16, 256, fn_xevious_0_3B, 571
       00 00 10 00 
       00 00 01 00 
       BF 5F 04 3B 
       02 00       
04242E 01 00 00 10 0867*  	dl 1, 16, 16, 256, fn_xevious_0_3C, 572
       00 00 10 00 
       00 00 01 00 
       E0 5F 04 3C 
       02 00       
042440 01 00 00 10 0868*  	dl 1, 16, 16, 256, fn_xevious_0_3D, 573
       00 00 10 00 
       00 00 01 00 
       01 60 04 3D 
       02 00       
042452 01 00 00 10 0869*  	dl 1, 16, 16, 256, fn_xevious_0_3E, 574
       00 00 10 00 
       00 00 01 00 
       22 60 04 3E 
       02 00       
042464 01 00 00 10 0870*  	dl 1, 16, 16, 256, fn_xevious_0_3F, 575
       00 00 10 00 
       00 00 01 00 
       43 60 04 3F 
       02 00       
042476 01 00 00 10 0871*  	dl 1, 16, 16, 256, fn_xevious_0_40, 576
       00 00 10 00 
       00 00 01 00 
       64 60 04 40 
       02 00       
042488 01 00 00 10 0872*  	dl 1, 16, 16, 256, fn_xevious_0_41, 577
       00 00 10 00 
       00 00 01 00 
       85 60 04 41 
       02 00       
04249A 01 00 00 10 0873*  	dl 1, 16, 16, 256, fn_xevious_0_42, 578
       00 00 10 00 
       00 00 01 00 
       A6 60 04 42 
       02 00       
0424AC 01 00 00 10 0874*  	dl 1, 16, 16, 256, fn_xevious_0_43, 579
       00 00 10 00 
       00 00 01 00 
       C7 60 04 43 
       02 00       
0424BE 01 00 00 10 0875*  	dl 1, 16, 16, 256, fn_xevious_0_44, 580
       00 00 10 00 
       00 00 01 00 
       E8 60 04 44 
       02 00       
0424D0 01 00 00 10 0876*  	dl 1, 16, 16, 256, fn_xevious_0_45, 581
       00 00 10 00 
       00 00 01 00 
       09 61 04 45 
       02 00       
0424E2 01 00 00 10 0877*  	dl 1, 16, 16, 256, fn_xevious_0_46, 582
       00 00 10 00 
       00 00 01 00 
       2A 61 04 46 
       02 00       
0424F4 01 00 00 10 0878*  	dl 1, 16, 16, 256, fn_xevious_0_47, 583
       00 00 10 00 
       00 00 01 00 
       4B 61 04 47 
       02 00       
042506 01 00 00 10 0879*  	dl 1, 16, 16, 256, fn_xevious_0_48, 584
       00 00 10 00 
       00 00 01 00 
       6C 61 04 48 
       02 00       
042518 01 00 00 10 0880*  	dl 1, 16, 16, 256, fn_xevious_0_49, 585
       00 00 10 00 
       00 00 01 00 
       8D 61 04 49 
       02 00       
04252A 01 00 00 10 0881*  	dl 1, 16, 16, 256, fn_xevious_0_4A, 586
       00 00 10 00 
       00 00 01 00 
       AE 61 04 4A 
       02 00       
04253C 01 00 00 10 0882*  	dl 1, 16, 16, 256, fn_xevious_0_4B, 587
       00 00 10 00 
       00 00 01 00 
       CF 61 04 4B 
       02 00       
04254E 01 00 00 10 0883*  	dl 1, 16, 16, 256, fn_xevious_0_4C, 588
       00 00 10 00 
       00 00 01 00 
       F0 61 04 4C 
       02 00       
042560 01 00 00 10 0884*  	dl 1, 16, 16, 256, fn_xevious_0_4D, 589
       00 00 10 00 
       00 00 01 00 
       11 62 04 4D 
       02 00       
042572 01 00 00 10 0885*  	dl 1, 16, 16, 256, fn_xevious_0_4E, 590
       00 00 10 00 
       00 00 01 00 
       32 62 04 4E 
       02 00       
042584 01 00 00 10 0886*  	dl 1, 16, 16, 256, fn_xevious_0_4F, 591
       00 00 10 00 
       00 00 01 00 
       53 62 04 4F 
       02 00       
042596 01 00 00 10 0887*  	dl 1, 16, 16, 256, fn_xevious_0_50, 592
       00 00 10 00 
       00 00 01 00 
       74 62 04 50 
       02 00       
0425A8 01 00 00 10 0888*  	dl 1, 16, 16, 256, fn_xevious_0_51, 593
       00 00 10 00 
       00 00 01 00 
       95 62 04 51 
       02 00       
0425BA 01 00 00 10 0889*  	dl 1, 16, 16, 256, fn_xevious_0_52, 594
       00 00 10 00 
       00 00 01 00 
       B6 62 04 52 
       02 00       
0425CC 01 00 00 10 0890*  	dl 1, 16, 16, 256, fn_xevious_0_53, 595
       00 00 10 00 
       00 00 01 00 
       D7 62 04 53 
       02 00       
0425DE 01 00 00 10 0891*  	dl 1, 16, 16, 256, fn_xevious_0_54, 596
       00 00 10 00 
       00 00 01 00 
       F8 62 04 54 
       02 00       
0425F0 01 00 00 10 0892*  	dl 1, 16, 16, 256, fn_xevious_0_55, 597
       00 00 10 00 
       00 00 01 00 
       19 63 04 55 
       02 00       
042602 01 00 00 10 0893*  	dl 1, 16, 16, 256, fn_xevious_0_56, 598
       00 00 10 00 
       00 00 01 00 
       3A 63 04 56 
       02 00       
042614 01 00 00 10 0894*  	dl 1, 16, 16, 256, fn_xevious_0_57, 599
       00 00 10 00 
       00 00 01 00 
       5B 63 04 57 
       02 00       
042626 01 00 00 10 0895*  	dl 1, 16, 16, 256, fn_xevious_0_58, 600
       00 00 10 00 
       00 00 01 00 
       7C 63 04 58 
       02 00       
042638 01 00 00 10 0896*  	dl 1, 16, 16, 256, fn_xevious_0_59, 601
       00 00 10 00 
       00 00 01 00 
       9D 63 04 59 
       02 00       
04264A 01 00 00 10 0897*  	dl 1, 16, 16, 256, fn_xevious_0_5A, 602
       00 00 10 00 
       00 00 01 00 
       BE 63 04 5A 
       02 00       
04265C 01 00 00 10 0898*  	dl 1, 16, 16, 256, fn_xevious_0_5B, 603
       00 00 10 00 
       00 00 01 00 
       DF 63 04 5B 
       02 00       
04266E 01 00 00 10 0899*  	dl 1, 16, 16, 256, fn_xevious_0_5C, 604
       00 00 10 00 
       00 00 01 00 
       00 64 04 5C 
       02 00       
042680 01 00 00 10 0900*  	dl 1, 16, 16, 256, fn_xevious_0_5D, 605
       00 00 10 00 
       00 00 01 00 
       21 64 04 5D 
       02 00       
042692 01 00 00 10 0901*  	dl 1, 16, 16, 256, fn_xevious_0_5E, 606
       00 00 10 00 
       00 00 01 00 
       42 64 04 5E 
       02 00       
0426A4 01 00 00 10 0902*  	dl 1, 16, 16, 256, fn_xevious_0_5F, 607
       00 00 10 00 
       00 00 01 00 
       63 64 04 5F 
       02 00       
0426B6 01 00 00 10 0903*  	dl 1, 16, 16, 256, fn_xevious_0_60, 608
       00 00 10 00 
       00 00 01 00 
       84 64 04 60 
       02 00       
0426C8 01 00 00 10 0904*  	dl 1, 16, 16, 256, fn_xevious_0_61, 609
       00 00 10 00 
       00 00 01 00 
       A5 64 04 61 
       02 00       
0426DA 01 00 00 10 0905*  	dl 1, 16, 16, 256, fn_xevious_0_62, 610
       00 00 10 00 
       00 00 01 00 
       C6 64 04 62 
       02 00       
0426EC 01 00 00 10 0906*  	dl 1, 16, 16, 256, fn_xevious_0_63, 611
       00 00 10 00 
       00 00 01 00 
       E7 64 04 63 
       02 00       
0426FE 01 00 00 10 0907*  	dl 1, 16, 16, 256, fn_xevious_0_64, 612
       00 00 10 00 
       00 00 01 00 
       08 65 04 64 
       02 00       
042710 01 00 00 10 0908*  	dl 1, 16, 16, 256, fn_xevious_0_65, 613
       00 00 10 00 
       00 00 01 00 
       29 65 04 65 
       02 00       
042722 01 00 00 10 0909*  	dl 1, 16, 16, 256, fn_xevious_0_66, 614
       00 00 10 00 
       00 00 01 00 
       4A 65 04 66 
       02 00       
042734 01 00 00 10 0910*  	dl 1, 16, 16, 256, fn_xevious_0_67, 615
       00 00 10 00 
       00 00 01 00 
       6B 65 04 67 
       02 00       
042746 01 00 00 10 0911*  	dl 1, 16, 16, 256, fn_xevious_0_68, 616
       00 00 10 00 
       00 00 01 00 
       8C 65 04 68 
       02 00       
042758 01 00 00 10 0912*  	dl 1, 16, 16, 256, fn_xevious_0_69, 617
       00 00 10 00 
       00 00 01 00 
       AD 65 04 69 
       02 00       
04276A 01 00 00 10 0913*  	dl 1, 16, 16, 256, fn_xevious_0_6A, 618
       00 00 10 00 
       00 00 01 00 
       CE 65 04 6A 
       02 00       
04277C 01 00 00 10 0914*  	dl 1, 16, 16, 256, fn_xevious_0_6B, 619
       00 00 10 00 
       00 00 01 00 
       EF 65 04 6B 
       02 00       
04278E 01 00 00 10 0915*  	dl 1, 16, 16, 256, fn_xevious_0_6C, 620
       00 00 10 00 
       00 00 01 00 
       10 66 04 6C 
       02 00       
0427A0 01 00 00 10 0916*  	dl 1, 16, 16, 256, fn_xevious_0_6D, 621
       00 00 10 00 
       00 00 01 00 
       31 66 04 6D 
       02 00       
0427B2 01 00 00 10 0917*  	dl 1, 16, 16, 256, fn_xevious_0_6E, 622
       00 00 10 00 
       00 00 01 00 
       52 66 04 6E 
       02 00       
0427C4 01 00 00 10 0918*  	dl 1, 16, 16, 256, fn_xevious_0_6F, 623
       00 00 10 00 
       00 00 01 00 
       73 66 04 6F 
       02 00       
0427D6 01 00 00 10 0919*  	dl 1, 16, 16, 256, fn_xevious_0_70, 624
       00 00 10 00 
       00 00 01 00 
       94 66 04 70 
       02 00       
0427E8 01 00 00 10 0920*  	dl 1, 16, 16, 256, fn_xevious_0_71, 625
       00 00 10 00 
       00 00 01 00 
       B5 66 04 71 
       02 00       
0427FA 01 00 00 10 0921*  	dl 1, 16, 16, 256, fn_xevious_0_72, 626
       00 00 10 00 
       00 00 01 00 
       D6 66 04 72 
       02 00       
04280C 01 00 00 10 0922*  	dl 1, 16, 16, 256, fn_xevious_0_73, 627
       00 00 10 00 
       00 00 01 00 
       F7 66 04 73 
       02 00       
04281E 01 00 00 10 0923*  	dl 1, 16, 16, 256, fn_xevious_0_74, 628
       00 00 10 00 
       00 00 01 00 
       18 67 04 74 
       02 00       
042830 01 00 00 10 0924*  	dl 1, 16, 16, 256, fn_xevious_0_75, 629
       00 00 10 00 
       00 00 01 00 
       39 67 04 75 
       02 00       
042842 01 00 00 10 0925*  	dl 1, 16, 16, 256, fn_xevious_0_76, 630
       00 00 10 00 
       00 00 01 00 
       5A 67 04 76 
       02 00       
042854 01 00 00 10 0926*  	dl 1, 16, 16, 256, fn_xevious_0_77, 631
       00 00 10 00 
       00 00 01 00 
       7B 67 04 77 
       02 00       
042866 01 00 00 10 0927*  	dl 1, 16, 16, 256, fn_xevious_0_78, 632
       00 00 10 00 
       00 00 01 00 
       9C 67 04 78 
       02 00       
042878 01 00 00 10 0928*  	dl 1, 16, 16, 256, fn_xevious_0_79, 633
       00 00 10 00 
       00 00 01 00 
       BD 67 04 79 
       02 00       
04288A 01 00 00 10 0929*  	dl 1, 16, 16, 256, fn_xevious_0_7A, 634
       00 00 10 00 
       00 00 01 00 
       DE 67 04 7A 
       02 00       
04289C 01 00 00 10 0930*  	dl 1, 16, 16, 256, fn_xevious_0_7B, 635
       00 00 10 00 
       00 00 01 00 
       FF 67 04 7B 
       02 00       
0428AE 01 00 00 10 0931*  	dl 1, 16, 16, 256, fn_xevious_0_7C, 636
       00 00 10 00 
       00 00 01 00 
       20 68 04 7C 
       02 00       
0428C0 01 00 00 10 0932*  	dl 1, 16, 16, 256, fn_xevious_0_7D, 637
       00 00 10 00 
       00 00 01 00 
       41 68 04 7D 
       02 00       
0428D2 01 00 00 10 0933*  	dl 1, 16, 16, 256, fn_xevious_0_7E, 638
       00 00 10 00 
       00 00 01 00 
       62 68 04 7E 
       02 00       
0428E4 01 00 00 10 0934*  	dl 1, 16, 16, 256, fn_xevious_0_7F, 639
       00 00 10 00 
       00 00 01 00 
       83 68 04 7F 
       02 00       
0428F6 01 00 00 10 0935*  	dl 1, 16, 16, 256, fn_xevious_0_80, 640
       00 00 10 00 
       00 00 01 00 
       A4 68 04 80 
       02 00       
042908 01 00 00 10 0936*  	dl 1, 16, 16, 256, fn_xevious_0_81, 641
       00 00 10 00 
       00 00 01 00 
       C5 68 04 81 
       02 00       
04291A 01 00 00 10 0937*  	dl 1, 16, 16, 256, fn_xevious_0_82, 642
       00 00 10 00 
       00 00 01 00 
       E6 68 04 82 
       02 00       
04292C 01 00 00 10 0938*  	dl 1, 16, 16, 256, fn_xevious_0_83, 643
       00 00 10 00 
       00 00 01 00 
       07 69 04 83 
       02 00       
04293E 01 00 00 10 0939*  	dl 1, 16, 16, 256, fn_xevious_0_84, 644
       00 00 10 00 
       00 00 01 00 
       28 69 04 84 
       02 00       
042950 01 00 00 10 0940*  	dl 1, 16, 16, 256, fn_xevious_1_00, 768
       00 00 10 00 
       00 00 01 00 
       49 69 04 00 
       03 00       
042962 01 00 00 10 0941*  	dl 1, 16, 16, 256, fn_xevious_1_01, 769
       00 00 10 00 
       00 00 01 00 
       6A 69 04 01 
       03 00       
042974 01 00 00 10 0942*  	dl 1, 16, 16, 256, fn_xevious_1_02, 770
       00 00 10 00 
       00 00 01 00 
       8B 69 04 02 
       03 00       
042986 01 00 00 10 0943*  	dl 1, 16, 16, 256, fn_xevious_1_03, 771
       00 00 10 00 
       00 00 01 00 
       AC 69 04 03 
       03 00       
042998 01 00 00 10 0944*  	dl 1, 16, 16, 256, fn_xevious_1_04, 772
       00 00 10 00 
       00 00 01 00 
       CD 69 04 04 
       03 00       
0429AA 01 00 00 10 0945*  	dl 1, 16, 16, 256, fn_xevious_1_05, 773
       00 00 10 00 
       00 00 01 00 
       EE 69 04 05 
       03 00       
0429BC 01 00 00 10 0946*  	dl 1, 16, 16, 256, fn_xevious_1_06, 774
       00 00 10 00 
       00 00 01 00 
       0F 6A 04 06 
       03 00       
0429CE 01 00 00 10 0947*  	dl 1, 16, 16, 256, fn_xevious_1_07, 775
       00 00 10 00 
       00 00 01 00 
       30 6A 04 07 
       03 00       
0429E0 01 00 00 10 0948*  	dl 1, 16, 16, 256, fn_xevious_1_08, 776
       00 00 10 00 
       00 00 01 00 
       51 6A 04 08 
       03 00       
0429F2 01 00 00 10 0949*  	dl 1, 16, 16, 256, fn_xevious_1_09, 777
       00 00 10 00 
       00 00 01 00 
       72 6A 04 09 
       03 00       
042A04 01 00 00 10 0950*  	dl 1, 16, 16, 256, fn_xevious_1_0A, 778
       00 00 10 00 
       00 00 01 00 
       93 6A 04 0A 
       03 00       
042A16 01 00 00 10 0951*  	dl 1, 16, 16, 256, fn_xevious_1_0B, 779
       00 00 10 00 
       00 00 01 00 
       B4 6A 04 0B 
       03 00       
042A28 01 00 00 10 0952*  	dl 1, 16, 16, 256, fn_xevious_1_0C, 780
       00 00 10 00 
       00 00 01 00 
       D5 6A 04 0C 
       03 00       
042A3A 01 00 00 10 0953*  	dl 1, 16, 16, 256, fn_xevious_1_0D, 781
       00 00 10 00 
       00 00 01 00 
       F6 6A 04 0D 
       03 00       
042A4C 01 00 00 10 0954*  	dl 1, 16, 16, 256, fn_xevious_1_0E, 782
       00 00 10 00 
       00 00 01 00 
       17 6B 04 0E 
       03 00       
042A5E 01 00 00 10 0955*  	dl 1, 16, 16, 256, fn_xevious_1_0F, 783
       00 00 10 00 
       00 00 01 00 
       38 6B 04 0F 
       03 00       
042A70 01 00 00 10 0956*  	dl 1, 16, 16, 256, fn_xevious_1_10, 784
       00 00 10 00 
       00 00 01 00 
       59 6B 04 10 
       03 00       
042A82 01 00 00 10 0957*  	dl 1, 16, 16, 256, fn_xevious_1_11, 785
       00 00 10 00 
       00 00 01 00 
       7A 6B 04 11 
       03 00       
042A94 01 00 00 10 0958*  	dl 1, 16, 16, 256, fn_xevious_1_12, 786
       00 00 10 00 
       00 00 01 00 
       9B 6B 04 12 
       03 00       
042AA6 01 00 00 10 0959*  	dl 1, 16, 16, 256, fn_xevious_1_13, 787
       00 00 10 00 
       00 00 01 00 
       BC 6B 04 13 
       03 00       
042AB8 01 00 00 10 0960*  	dl 1, 16, 16, 256, fn_xevious_1_14, 788
       00 00 10 00 
       00 00 01 00 
       DD 6B 04 14 
       03 00       
042ACA 01 00 00 10 0961*  	dl 1, 16, 16, 256, fn_xevious_1_15, 789
       00 00 10 00 
       00 00 01 00 
       FE 6B 04 15 
       03 00       
042ADC 01 00 00 10 0962*  	dl 1, 16, 16, 256, fn_xevious_1_16, 790
       00 00 10 00 
       00 00 01 00 
       1F 6C 04 16 
       03 00       
042AEE 01 00 00 10 0963*  	dl 1, 16, 16, 256, fn_xevious_1_17, 791
       00 00 10 00 
       00 00 01 00 
       40 6C 04 17 
       03 00       
042B00 01 00 00 10 0964*  	dl 1, 16, 16, 256, fn_xevious_1_18, 792
       00 00 10 00 
       00 00 01 00 
       61 6C 04 18 
       03 00       
042B12 01 00 00 10 0965*  	dl 1, 16, 16, 256, fn_xevious_1_19, 793
       00 00 10 00 
       00 00 01 00 
       82 6C 04 19 
       03 00       
042B24 01 00 00 10 0966*  	dl 1, 16, 16, 256, fn_xevious_1_1A, 794
       00 00 10 00 
       00 00 01 00 
       A3 6C 04 1A 
       03 00       
042B36 01 00 00 10 0967*  	dl 1, 16, 16, 256, fn_xevious_1_1B, 795
       00 00 10 00 
       00 00 01 00 
       C4 6C 04 1B 
       03 00       
042B48 01 00 00 10 0968*  	dl 1, 16, 16, 256, fn_xevious_1_1C, 796
       00 00 10 00 
       00 00 01 00 
       E5 6C 04 1C 
       03 00       
042B5A 01 00 00 10 0969*  	dl 1, 16, 16, 256, fn_xevious_1_1D, 797
       00 00 10 00 
       00 00 01 00 
       06 6D 04 1D 
       03 00       
042B6C 01 00 00 10 0970*  	dl 1, 16, 16, 256, fn_xevious_1_1E, 798
       00 00 10 00 
       00 00 01 00 
       27 6D 04 1E 
       03 00       
042B7E 01 00 00 10 0971*  	dl 1, 16, 16, 256, fn_xevious_1_1F, 799
       00 00 10 00 
       00 00 01 00 
       48 6D 04 1F 
       03 00       
042B90 01 00 00 10 0972*  	dl 1, 16, 16, 256, fn_xevious_1_20, 800
       00 00 10 00 
       00 00 01 00 
       69 6D 04 20 
       03 00       
042BA2 01 00 00 10 0973*  	dl 1, 16, 16, 256, fn_xevious_1_21, 801
       00 00 10 00 
       00 00 01 00 
       8A 6D 04 21 
       03 00       
042BB4 01 00 00 10 0974*  	dl 1, 16, 16, 256, fn_xevious_1_22, 802
       00 00 10 00 
       00 00 01 00 
       AB 6D 04 22 
       03 00       
042BC6 01 00 00 10 0975*  	dl 1, 16, 16, 256, fn_xevious_1_23, 803
       00 00 10 00 
       00 00 01 00 
       CC 6D 04 23 
       03 00       
042BD8 01 00 00 10 0976*  	dl 1, 16, 16, 256, fn_xevious_1_24, 804
       00 00 10 00 
       00 00 01 00 
       ED 6D 04 24 
       03 00       
042BEA 01 00 00 10 0977*  	dl 1, 16, 16, 256, fn_xevious_1_25, 805
       00 00 10 00 
       00 00 01 00 
       0E 6E 04 25 
       03 00       
042BFC 01 00 00 10 0978*  	dl 1, 16, 16, 256, fn_xevious_1_26, 806
       00 00 10 00 
       00 00 01 00 
       2F 6E 04 26 
       03 00       
042C0E 01 00 00 10 0979*  	dl 1, 16, 16, 256, fn_xevious_1_27, 807
       00 00 10 00 
       00 00 01 00 
       50 6E 04 27 
       03 00       
042C20 01 00 00 10 0980*  	dl 1, 16, 16, 256, fn_xevious_1_28, 808
       00 00 10 00 
       00 00 01 00 
       71 6E 04 28 
       03 00       
042C32 01 00 00 10 0981*  	dl 1, 16, 16, 256, fn_xevious_1_29, 809
       00 00 10 00 
       00 00 01 00 
       92 6E 04 29 
       03 00       
042C44 01 00 00 10 0982*  	dl 1, 16, 16, 256, fn_xevious_1_2A, 810
       00 00 10 00 
       00 00 01 00 
       B3 6E 04 2A 
       03 00       
042C56 01 00 00 10 0983*  	dl 1, 16, 16, 256, fn_xevious_1_2B, 811
       00 00 10 00 
       00 00 01 00 
       D4 6E 04 2B 
       03 00       
042C68 01 00 00 10 0984*  	dl 1, 16, 16, 256, fn_xevious_1_2C, 812
       00 00 10 00 
       00 00 01 00 
       F5 6E 04 2C 
       03 00       
042C7A 01 00 00 10 0985*  	dl 1, 16, 16, 256, fn_xevious_1_2D, 813
       00 00 10 00 
       00 00 01 00 
       16 6F 04 2D 
       03 00       
042C8C 01 00 00 10 0986*  	dl 1, 16, 16, 256, fn_xevious_1_2E, 814
       00 00 10 00 
       00 00 01 00 
       37 6F 04 2E 
       03 00       
042C9E 01 00 00 10 0987*  	dl 1, 16, 16, 256, fn_xevious_1_2F, 815
       00 00 10 00 
       00 00 01 00 
       58 6F 04 2F 
       03 00       
042CB0 01 00 00 10 0988*  	dl 1, 16, 16, 256, fn_xevious_1_30, 816
       00 00 10 00 
       00 00 01 00 
       79 6F 04 30 
       03 00       
042CC2 01 00 00 10 0989*  	dl 1, 16, 16, 256, fn_xevious_1_31, 817
       00 00 10 00 
       00 00 01 00 
       9A 6F 04 31 
       03 00       
042CD4 01 00 00 10 0990*  	dl 1, 16, 16, 256, fn_xevious_1_32, 818
       00 00 10 00 
       00 00 01 00 
       BB 6F 04 32 
       03 00       
042CE6 01 00 00 10 0991*  	dl 1, 16, 16, 256, fn_xevious_1_33, 819
       00 00 10 00 
       00 00 01 00 
       DC 6F 04 33 
       03 00       
042CF8 01 00 00 10 0992*  	dl 1, 16, 16, 256, fn_xevious_1_34, 820
       00 00 10 00 
       00 00 01 00 
       FD 6F 04 34 
       03 00       
042D0A 01 00 00 10 0993*  	dl 1, 16, 16, 256, fn_xevious_1_35, 821
       00 00 10 00 
       00 00 01 00 
       1E 70 04 35 
       03 00       
042D1C 01 00 00 10 0994*  	dl 1, 16, 16, 256, fn_xevious_1_36, 822
       00 00 10 00 
       00 00 01 00 
       3F 70 04 36 
       03 00       
042D2E 01 00 00 10 0995*  	dl 1, 16, 16, 256, fn_xevious_1_37, 823
       00 00 10 00 
       00 00 01 00 
       60 70 04 37 
       03 00       
042D40 01 00 00 10 0996*  	dl 1, 16, 16, 256, fn_xevious_1_38, 824
       00 00 10 00 
       00 00 01 00 
       81 70 04 38 
       03 00       
042D52 01 00 00 10 0997*  	dl 1, 16, 16, 256, fn_xevious_1_39, 825
       00 00 10 00 
       00 00 01 00 
       A2 70 04 39 
       03 00       
042D64 01 00 00 10 0998*  	dl 1, 16, 16, 256, fn_xevious_1_3A, 826
       00 00 10 00 
       00 00 01 00 
       C3 70 04 3A 
       03 00       
042D76 01 00 00 10 0999*  	dl 1, 16, 16, 256, fn_xevious_1_3B, 827
       00 00 10 00 
       00 00 01 00 
       E4 70 04 3B 
       03 00       
042D88 01 00 00 10 1000*  	dl 1, 16, 16, 256, fn_xevious_1_3C, 828
       00 00 10 00 
       00 00 01 00 
       05 71 04 3C 
       03 00       
042D9A 01 00 00 10 1001*  	dl 1, 16, 16, 256, fn_xevious_1_3D, 829
       00 00 10 00 
       00 00 01 00 
       26 71 04 3D 
       03 00       
042DAC 01 00 00 10 1002*  	dl 1, 16, 16, 256, fn_xevious_1_3E, 830
       00 00 10 00 
       00 00 01 00 
       47 71 04 3E 
       03 00       
042DBE 01 00 00 10 1003*  	dl 1, 16, 16, 256, fn_xevious_1_3F, 831
       00 00 10 00 
       00 00 01 00 
       68 71 04 3F 
       03 00       
042DD0 01 00 00 10 1004*  	dl 1, 16, 16, 256, fn_xevious_1_40, 832
       00 00 10 00 
       00 00 01 00 
       89 71 04 40 
       03 00       
042DE2 01 00 00 10 1005*  	dl 1, 16, 16, 256, fn_xevious_1_41, 833
       00 00 10 00 
       00 00 01 00 
       AA 71 04 41 
       03 00       
042DF4 01 00 00 10 1006*  	dl 1, 16, 16, 256, fn_xevious_1_42, 834
       00 00 10 00 
       00 00 01 00 
       CB 71 04 42 
       03 00       
042E06 01 00 00 10 1007*  	dl 1, 16, 16, 256, fn_xevious_1_43, 835
       00 00 10 00 
       00 00 01 00 
       EC 71 04 43 
       03 00       
042E18 01 00 00 10 1008*  	dl 1, 16, 16, 256, fn_xevious_1_44, 836
       00 00 10 00 
       00 00 01 00 
       0D 72 04 44 
       03 00       
042E2A 01 00 00 10 1009*  	dl 1, 16, 16, 256, fn_xevious_1_45, 837
       00 00 10 00 
       00 00 01 00 
       2E 72 04 45 
       03 00       
042E3C 01 00 00 10 1010*  	dl 1, 16, 16, 256, fn_xevious_1_46, 838
       00 00 10 00 
       00 00 01 00 
       4F 72 04 46 
       03 00       
042E4E 01 00 00 10 1011*  	dl 1, 16, 16, 256, fn_xevious_1_47, 839
       00 00 10 00 
       00 00 01 00 
       70 72 04 47 
       03 00       
042E60 01 00 00 10 1012*  	dl 1, 16, 16, 256, fn_xevious_1_48, 840
       00 00 10 00 
       00 00 01 00 
       91 72 04 48 
       03 00       
042E72 01 00 00 10 1013*  	dl 1, 16, 16, 256, fn_xevious_1_49, 841
       00 00 10 00 
       00 00 01 00 
       B2 72 04 49 
       03 00       
042E84 01 00 00 10 1014*  	dl 1, 16, 16, 256, fn_xevious_1_4A, 842
       00 00 10 00 
       00 00 01 00 
       D3 72 04 4A 
       03 00       
042E96 01 00 00 10 1015*  	dl 1, 16, 16, 256, fn_xevious_1_4B, 843
       00 00 10 00 
       00 00 01 00 
       F4 72 04 4B 
       03 00       
042EA8 01 00 00 10 1016*  	dl 1, 16, 16, 256, fn_xevious_1_4C, 844
       00 00 10 00 
       00 00 01 00 
       15 73 04 4C 
       03 00       
042EBA 01 00 00 10 1017*  	dl 1, 16, 16, 256, fn_xevious_1_4D, 845
       00 00 10 00 
       00 00 01 00 
       36 73 04 4D 
       03 00       
042ECC 01 00 00 10 1018*  	dl 1, 16, 16, 256, fn_xevious_1_4E, 846
       00 00 10 00 
       00 00 01 00 
       57 73 04 4E 
       03 00       
042EDE 01 00 00 10 1019*  	dl 1, 16, 16, 256, fn_xevious_1_4F, 847
       00 00 10 00 
       00 00 01 00 
       78 73 04 4F 
       03 00       
042EF0 01 00 00 10 1020*  	dl 1, 16, 16, 256, fn_xevious_1_50, 848
       00 00 10 00 
       00 00 01 00 
       99 73 04 50 
       03 00       
042F02 01 00 00 10 1021*  	dl 1, 16, 16, 256, fn_xevious_1_51, 849
       00 00 10 00 
       00 00 01 00 
       BA 73 04 51 
       03 00       
042F14 01 00 00 10 1022*  	dl 1, 16, 16, 256, fn_xevious_1_52, 850
       00 00 10 00 
       00 00 01 00 
       DB 73 04 52 
       03 00       
042F26 01 00 00 10 1023*  	dl 1, 16, 16, 256, fn_xevious_1_53, 851
       00 00 10 00 
       00 00 01 00 
       FC 73 04 53 
       03 00       
042F38 01 00 00 10 1024*  	dl 1, 16, 16, 256, fn_xevious_1_54, 852
       00 00 10 00 
       00 00 01 00 
       1D 74 04 54 
       03 00       
042F4A 01 00 00 10 1025*  	dl 1, 16, 16, 256, fn_xevious_1_55, 853
       00 00 10 00 
       00 00 01 00 
       3E 74 04 55 
       03 00       
042F5C 01 00 00 10 1026*  	dl 1, 16, 16, 256, fn_xevious_1_56, 854
       00 00 10 00 
       00 00 01 00 
       5F 74 04 56 
       03 00       
042F6E 01 00 00 10 1027*  	dl 1, 16, 16, 256, fn_xevious_1_57, 855
       00 00 10 00 
       00 00 01 00 
       80 74 04 57 
       03 00       
042F80 01 00 00 10 1028*  	dl 1, 16, 16, 256, fn_xevious_1_58, 856
       00 00 10 00 
       00 00 01 00 
       A1 74 04 58 
       03 00       
042F92 01 00 00 10 1029*  	dl 1, 16, 16, 256, fn_xevious_1_59, 857
       00 00 10 00 
       00 00 01 00 
       C2 74 04 59 
       03 00       
042FA4 01 00 00 10 1030*  	dl 1, 16, 16, 256, fn_xevious_1_5A, 858
       00 00 10 00 
       00 00 01 00 
       E3 74 04 5A 
       03 00       
042FB6 01 00 00 10 1031*  	dl 1, 16, 16, 256, fn_xevious_1_5B, 859
       00 00 10 00 
       00 00 01 00 
       04 75 04 5B 
       03 00       
042FC8 01 00 00 10 1032*  	dl 1, 16, 16, 256, fn_xevious_1_5C, 860
       00 00 10 00 
       00 00 01 00 
       25 75 04 5C 
       03 00       
042FDA 01 00 00 10 1033*  	dl 1, 16, 16, 256, fn_xevious_1_5D, 861
       00 00 10 00 
       00 00 01 00 
       46 75 04 5D 
       03 00       
042FEC 01 00 00 10 1034*  	dl 1, 16, 16, 256, fn_xevious_1_5E, 862
       00 00 10 00 
       00 00 01 00 
       67 75 04 5E 
       03 00       
042FFE 01 00 00 10 1035*  	dl 1, 16, 16, 256, fn_xevious_1_5F, 863
       00 00 10 00 
       00 00 01 00 
       88 75 04 5F 
       03 00       
043010 01 00 00 10 1036*  	dl 1, 16, 16, 256, fn_xevious_1_60, 864
       00 00 10 00 
       00 00 01 00 
       A9 75 04 60 
       03 00       
043022 01 00 00 10 1037*  	dl 1, 16, 16, 256, fn_xevious_1_61, 865
       00 00 10 00 
       00 00 01 00 
       CA 75 04 61 
       03 00       
043034 01 00 00 10 1038*  	dl 1, 16, 16, 256, fn_xevious_1_62, 866
       00 00 10 00 
       00 00 01 00 
       EB 75 04 62 
       03 00       
043046 01 00 00 10 1039*  	dl 1, 16, 16, 256, fn_xevious_1_63, 867
       00 00 10 00 
       00 00 01 00 
       0C 76 04 63 
       03 00       
043058 01 00 00 10 1040*  	dl 1, 16, 16, 256, fn_xevious_1_64, 868
       00 00 10 00 
       00 00 01 00 
       2D 76 04 64 
       03 00       
04306A 01 00 00 10 1041*  	dl 1, 16, 16, 256, fn_xevious_1_65, 869
       00 00 10 00 
       00 00 01 00 
       4E 76 04 65 
       03 00       
04307C 01 00 00 10 1042*  	dl 1, 16, 16, 256, fn_xevious_1_66, 870
       00 00 10 00 
       00 00 01 00 
       6F 76 04 66 
       03 00       
04308E 01 00 00 10 1043*  	dl 1, 16, 16, 256, fn_xevious_1_67, 871
       00 00 10 00 
       00 00 01 00 
       90 76 04 67 
       03 00       
0430A0 01 00 00 10 1044*  	dl 1, 16, 16, 256, fn_xevious_1_68, 872
       00 00 10 00 
       00 00 01 00 
       B1 76 04 68 
       03 00       
0430B2 01 00 00 10 1045*  	dl 1, 16, 16, 256, fn_xevious_1_69, 873
       00 00 10 00 
       00 00 01 00 
       D2 76 04 69 
       03 00       
0430C4 01 00 00 10 1046*  	dl 1, 16, 16, 256, fn_xevious_1_6A, 874
       00 00 10 00 
       00 00 01 00 
       F3 76 04 6A 
       03 00       
0430D6 01 00 00 10 1047*  	dl 1, 16, 16, 256, fn_xevious_1_6B, 875
       00 00 10 00 
       00 00 01 00 
       14 77 04 6B 
       03 00       
0430E8 01 00 00 10 1048*  	dl 1, 16, 16, 256, fn_xevious_1_6C, 876
       00 00 10 00 
       00 00 01 00 
       35 77 04 6C 
       03 00       
0430FA 01 00 00 10 1049*  	dl 1, 16, 16, 256, fn_xevious_1_6D, 877
       00 00 10 00 
       00 00 01 00 
       56 77 04 6D 
       03 00       
04310C 01 00 00 10 1050*  	dl 1, 16, 16, 256, fn_xevious_1_6E, 878
       00 00 10 00 
       00 00 01 00 
       77 77 04 6E 
       03 00       
04311E 01 00 00 10 1051*  	dl 1, 16, 16, 256, fn_xevious_1_6F, 879
       00 00 10 00 
       00 00 01 00 
       98 77 04 6F 
       03 00       
043130 01 00 00 10 1052*  	dl 1, 16, 16, 256, fn_xevious_1_70, 880
       00 00 10 00 
       00 00 01 00 
       B9 77 04 70 
       03 00       
043142 01 00 00 10 1053*  	dl 1, 16, 16, 256, fn_xevious_1_71, 881
       00 00 10 00 
       00 00 01 00 
       DA 77 04 71 
       03 00       
043154 01 00 00 10 1054*  	dl 1, 16, 16, 256, fn_xevious_1_72, 882
       00 00 10 00 
       00 00 01 00 
       FB 77 04 72 
       03 00       
043166 01 00 00 10 1055*  	dl 1, 16, 16, 256, fn_xevious_1_73, 883
       00 00 10 00 
       00 00 01 00 
       1C 78 04 73 
       03 00       
043178 01 00 00 10 1056*  	dl 1, 16, 16, 256, fn_xevious_1_74, 884
       00 00 10 00 
       00 00 01 00 
       3D 78 04 74 
       03 00       
04318A 01 00 00 10 1057*  	dl 1, 16, 16, 256, fn_xevious_1_75, 885
       00 00 10 00 
       00 00 01 00 
       5E 78 04 75 
       03 00       
04319C 01 00 00 10 1058*  	dl 1, 16, 16, 256, fn_xevious_1_76, 886
       00 00 10 00 
       00 00 01 00 
       7F 78 04 76 
       03 00       
0431AE 01 00 00 10 1059*  	dl 1, 16, 16, 256, fn_xevious_1_77, 887
       00 00 10 00 
       00 00 01 00 
       A0 78 04 77 
       03 00       
0431C0 01 00 00 10 1060*  	dl 1, 16, 16, 256, fn_xevious_1_78, 888
       00 00 10 00 
       00 00 01 00 
       C1 78 04 78 
       03 00       
0431D2 01 00 00 10 1061*  	dl 1, 16, 16, 256, fn_xevious_1_79, 889
       00 00 10 00 
       00 00 01 00 
       E2 78 04 79 
       03 00       
0431E4 01 00 00 10 1062*  	dl 1, 16, 16, 256, fn_xevious_1_7A, 890
       00 00 10 00 
       00 00 01 00 
       03 79 04 7A 
       03 00       
0431F6 01 00 00 10 1063*  	dl 1, 16, 16, 256, fn_xevious_1_7B, 891
       00 00 10 00 
       00 00 01 00 
       24 79 04 7B 
       03 00       
043208 01 00 00 10 1064*  	dl 1, 16, 16, 256, fn_xevious_1_7C, 892
       00 00 10 00 
       00 00 01 00 
       45 79 04 7C 
       03 00       
04321A 01 00 00 10 1065*  	dl 1, 16, 16, 256, fn_xevious_1_7D, 893
       00 00 10 00 
       00 00 01 00 
       66 79 04 7D 
       03 00       
04322C 01 00 00 10 1066*  	dl 1, 16, 16, 256, fn_xevious_1_7E, 894
       00 00 10 00 
       00 00 01 00 
       87 79 04 7E 
       03 00       
04323E 01 00 00 10 1067*  	dl 1, 16, 16, 256, fn_xevious_1_7F, 895
       00 00 10 00 
       00 00 01 00 
       A8 79 04 7F 
       03 00       
043250 01 00 00 10 1068*  	dl 1, 16, 16, 256, fn_xevious_1_80, 896
       00 00 10 00 
       00 00 01 00 
       C9 79 04 80 
       03 00       
043262 01 00 00 10 1069*  	dl 1, 16, 16, 256, fn_xevious_1_81, 897
       00 00 10 00 
       00 00 01 00 
       EA 79 04 81 
       03 00       
043274 01 00 00 10 1070*  	dl 1, 16, 16, 256, fn_xevious_1_82, 898
       00 00 10 00 
       00 00 01 00 
       0B 7A 04 82 
       03 00       
043286 01 00 00 10 1071*  	dl 1, 16, 16, 256, fn_xevious_1_83, 899
       00 00 10 00 
       00 00 01 00 
       2C 7A 04 83 
       03 00       
043298 01 00 00 10 1072*  	dl 1, 16, 16, 256, fn_xevious_1_84, 900
       00 00 10 00 
       00 00 01 00 
       4D 7A 04 84 
       03 00       
0432AA 01 00 00 10 1073*  	dl 1, 16, 16, 256, fn_xevious_1_85, 901
       00 00 10 00 
       00 00 01 00 
       6E 7A 04 85 
       03 00       
0432BC 01 00 00 10 1074*  	dl 1, 16, 16, 256, fn_xevious_1_86, 902
       00 00 10 00 
       00 00 01 00 
       8F 7A 04 86 
       03 00       
0432CE 01 00 00 10 1075*  	dl 1, 16, 16, 256, fn_xevious_1_87, 903
       00 00 10 00 
       00 00 01 00 
       B0 7A 04 87 
       03 00       
0432E0 01 00 00 10 1076*  	dl 1, 16, 16, 256, fn_xevious_1_88, 904
       00 00 10 00 
       00 00 01 00 
       D1 7A 04 88 
       03 00       
0432F2 01 00 00 10 1077*  	dl 1, 16, 16, 256, fn_xevious_1_89, 905
       00 00 10 00 
       00 00 01 00 
       F2 7A 04 89 
       03 00       
043304 01 00 00 10 1078*  	dl 1, 16, 16, 256, fn_xevious_1_8A, 906
       00 00 10 00 
       00 00 01 00 
       13 7B 04 8A 
       03 00       
043316 01 00 00 10 1079*  	dl 1, 16, 16, 256, fn_xevious_1_8B, 907
       00 00 10 00 
       00 00 01 00 
       34 7B 04 8B 
       03 00       
043328 01 00 00 10 1080*  	dl 1, 16, 16, 256, fn_xevious_1_8C, 908
       00 00 10 00 
       00 00 01 00 
       55 7B 04 8C 
       03 00       
04333A 01 00 00 10 1081*  	dl 1, 16, 16, 256, fn_xevious_1_8D, 909
       00 00 10 00 
       00 00 01 00 
       76 7B 04 8D 
       03 00       
04334C 01 00 00 10 1082*  	dl 1, 16, 16, 256, fn_xevious_1_8E, 910
       00 00 10 00 
       00 00 01 00 
       97 7B 04 8E 
       03 00       
04335E 01 00 00 10 1083*  	dl 1, 16, 16, 256, fn_xevious_1_8F, 911
       00 00 10 00 
       00 00 01 00 
       B8 7B 04 8F 
       03 00       
043370 01 00 00 10 1084*  	dl 1, 16, 16, 256, fn_xevious_1_90, 912
       00 00 10 00 
       00 00 01 00 
       D9 7B 04 90 
       03 00       
043382 01 00 00 10 1085*  	dl 1, 16, 16, 256, fn_xevious_1_91, 913
       00 00 10 00 
       00 00 01 00 
       FA 7B 04 91 
       03 00       
043394 01 00 00 10 1086*  	dl 1, 16, 16, 256, fn_xevious_1_92, 914
       00 00 10 00 
       00 00 01 00 
       1B 7C 04 92 
       03 00       
0433A6 01 00 00 10 1087*  	dl 1, 16, 16, 256, fn_xevious_1_93, 915
       00 00 10 00 
       00 00 01 00 
       3C 7C 04 93 
       03 00       
0433B8 01 00 00 10 1088*  	dl 1, 16, 16, 256, fn_xevious_1_94, 916
       00 00 10 00 
       00 00 01 00 
       5D 7C 04 94 
       03 00       
0433CA 01 00 00 10 1089*  	dl 1, 16, 16, 256, fn_xevious_1_95, 917
       00 00 10 00 
       00 00 01 00 
       7E 7C 04 95 
       03 00       
0433DC 01 00 00 10 1090*  	dl 1, 16, 16, 256, fn_xevious_1_96, 918
       00 00 10 00 
       00 00 01 00 
       9F 7C 04 96 
       03 00       
0433EE 01 00 00 10 1091*  	dl 1, 16, 16, 256, fn_xevious_1_97, 919
       00 00 10 00 
       00 00 01 00 
       C0 7C 04 97 
       03 00       
043400 01 00 00 10 1092*  	dl 1, 16, 16, 256, fn_xevious_1_98, 920
       00 00 10 00 
       00 00 01 00 
       E1 7C 04 98 
       03 00       
043412 01 00 00 10 1093*  	dl 1, 16, 16, 256, fn_xevious_1_99, 921
       00 00 10 00 
       00 00 01 00 
       02 7D 04 99 
       03 00       
043424 01 00 00 10 1094*  	dl 1, 16, 16, 256, fn_xevious_1_9A, 922
       00 00 10 00 
       00 00 01 00 
       23 7D 04 9A 
       03 00       
043436 01 00 00 10 1095*  	dl 1, 16, 16, 256, fn_xevious_1_9B, 923
       00 00 10 00 
       00 00 01 00 
       44 7D 04 9B 
       03 00       
043448 01 00 00 10 1096*  	dl 1, 16, 16, 256, fn_xevious_1_9C, 924
       00 00 10 00 
       00 00 01 00 
       65 7D 04 9C 
       03 00       
04345A 01 00 00 10 1097*  	dl 1, 16, 16, 256, fn_xevious_1_9D, 925
       00 00 10 00 
       00 00 01 00 
       86 7D 04 9D 
       03 00       
04346C 01 00 00 10 1098*  	dl 1, 16, 16, 256, fn_xevious_1_9E, 926
       00 00 10 00 
       00 00 01 00 
       A7 7D 04 9E 
       03 00       
04347E 01 00 00 10 1099*  	dl 1, 16, 16, 256, fn_xevious_1_9F, 927
       00 00 10 00 
       00 00 01 00 
       C8 7D 04 9F 
       03 00       
043490 01 00 00 10 1100*  	dl 1, 16, 16, 256, fn_xevious_1_A0, 928
       00 00 10 00 
       00 00 01 00 
       E9 7D 04 A0 
       03 00       
0434A2 01 00 00 10 1101*  	dl 1, 16, 16, 256, fn_xevious_1_A1, 929
       00 00 10 00 
       00 00 01 00 
       0A 7E 04 A1 
       03 00       
0434B4 01 00 00 10 1102*  	dl 1, 16, 16, 256, fn_xevious_1_A2, 930
       00 00 10 00 
       00 00 01 00 
       2B 7E 04 A2 
       03 00       
0434C6 01 00 00 10 1103*  	dl 1, 16, 16, 256, fn_xevious_1_A3, 931
       00 00 10 00 
       00 00 01 00 
       4C 7E 04 A3 
       03 00       
0434D8 01 00 00 10 1104*  	dl 1, 16, 16, 256, fn_xevious_1_A4, 932
       00 00 10 00 
       00 00 01 00 
       6D 7E 04 A4 
       03 00       
0434EA 01 00 00 10 1105*  	dl 1, 16, 16, 256, fn_xevious_1_A5, 933
       00 00 10 00 
       00 00 01 00 
       8E 7E 04 A5 
       03 00       
0434FC 01 00 00 10 1106*  	dl 1, 16, 16, 256, fn_xevious_1_A6, 934
       00 00 10 00 
       00 00 01 00 
       AF 7E 04 A6 
       03 00       
04350E 01 00 00 10 1107*  	dl 1, 16, 16, 256, fn_xevious_1_A7, 935
       00 00 10 00 
       00 00 01 00 
       D0 7E 04 A7 
       03 00       
043520 01 00 00 10 1108*  	dl 1, 16, 16, 256, fn_xevious_1_A8, 936
       00 00 10 00 
       00 00 01 00 
       F1 7E 04 A8 
       03 00       
043532 01 00 00 10 1109*  	dl 1, 16, 16, 256, fn_xevious_1_A9, 937
       00 00 10 00 
       00 00 01 00 
       12 7F 04 A9 
       03 00       
043544 01 00 00 10 1110*  	dl 1, 16, 16, 256, fn_xevious_1_AA, 938
       00 00 10 00 
       00 00 01 00 
       33 7F 04 AA 
       03 00       
043556 01 00 00 10 1111*  	dl 1, 16, 16, 256, fn_xevious_1_AB, 939
       00 00 10 00 
       00 00 01 00 
       54 7F 04 AB 
       03 00       
043568 01 00 00 10 1112*  	dl 1, 16, 16, 256, fn_xevious_1_AC, 940
       00 00 10 00 
       00 00 01 00 
       75 7F 04 AC 
       03 00       
04357A 01 00 00 10 1113*  	dl 1, 16, 16, 256, fn_xevious_1_AD, 941
       00 00 10 00 
       00 00 01 00 
       96 7F 04 AD 
       03 00       
04358C 01 00 00 10 1114*  	dl 1, 16, 16, 256, fn_xevious_1_AE, 942
       00 00 10 00 
       00 00 01 00 
       B7 7F 04 AE 
       03 00       
04359E 01 00 00 10 1115*  	dl 1, 16, 16, 256, fn_xevious_1_AF, 943
       00 00 10 00 
       00 00 01 00 
       D8 7F 04 AF 
       03 00       
0435B0 01 00 00 10 1116*  	dl 1, 16, 16, 256, fn_xevious_1_B0, 944
       00 00 10 00 
       00 00 01 00 
       F9 7F 04 B0 
       03 00       
0435C2 01 00 00 10 1117*  	dl 1, 16, 16, 256, fn_xevious_1_B1, 945
       00 00 10 00 
       00 00 01 00 
       1A 80 04 B1 
       03 00       
0435D4 01 00 00 10 1118*  	dl 1, 16, 16, 256, fn_xevious_1_B2, 946
       00 00 10 00 
       00 00 01 00 
       3B 80 04 B2 
       03 00       
0435E6 01 00 00 10 1119*  	dl 1, 16, 16, 256, fn_xevious_1_B3, 947
       00 00 10 00 
       00 00 01 00 
       5C 80 04 B3 
       03 00       
0435F8 01 00 00 10 1120*  	dl 1, 16, 16, 256, fn_xevious_1_B4, 948
       00 00 10 00 
       00 00 01 00 
       7D 80 04 B4 
       03 00       
04360A 01 00 00 10 1121*  	dl 1, 16, 16, 256, fn_xevious_1_B5, 949
       00 00 10 00 
       00 00 01 00 
       9E 80 04 B5 
       03 00       
04361C 01 00 00 10 1122*  	dl 1, 16, 16, 256, fn_xevious_1_B6, 950
       00 00 10 00 
       00 00 01 00 
       BF 80 04 B6 
       03 00       
04362E 01 00 00 10 1123*  	dl 1, 16, 16, 256, fn_xevious_1_B7, 951
       00 00 10 00 
       00 00 01 00 
       E0 80 04 B7 
       03 00       
043640 01 00 00 10 1124*  	dl 1, 16, 16, 256, fn_xevious_1_B8, 952
       00 00 10 00 
       00 00 01 00 
       01 81 04 B8 
       03 00       
043652 01 00 00 10 1125*  	dl 1, 16, 16, 256, fn_xevious_1_B9, 953
       00 00 10 00 
       00 00 01 00 
       22 81 04 B9 
       03 00       
043664 01 00 00 10 1126*  	dl 1, 16, 16, 256, fn_xevious_1_BA, 954
       00 00 10 00 
       00 00 01 00 
       43 81 04 BA 
       03 00       
043676 01 00 00 10 1127*  	dl 1, 16, 16, 256, fn_xevious_1_BB, 955
       00 00 10 00 
       00 00 01 00 
       64 81 04 BB 
       03 00       
043688 01 00 00 10 1128*  	dl 1, 16, 16, 256, fn_xevious_1_BC, 956
       00 00 10 00 
       00 00 01 00 
       85 81 04 BC 
       03 00       
04369A 01 00 00 10 1129*  	dl 1, 16, 16, 256, fn_xevious_1_BD, 957
       00 00 10 00 
       00 00 01 00 
       A6 81 04 BD 
       03 00       
0436AC 01 00 00 10 1130*  	dl 1, 16, 16, 256, fn_xevious_1_BE, 958
       00 00 10 00 
       00 00 01 00 
       C7 81 04 BE 
       03 00       
0436BE 01 00 00 10 1131*  	dl 1, 16, 16, 256, fn_xevious_1_BF, 959
       00 00 10 00 
       00 00 01 00 
       E8 81 04 BF 
       03 00       
0436D0 01 00 00 10 1132*  	dl 1, 16, 16, 256, fn_xevious_1_C0, 960
       00 00 10 00 
       00 00 01 00 
       09 82 04 C0 
       03 00       
0436E2 01 00 00 10 1133*  	dl 1, 16, 16, 256, fn_xevious_1_C1, 961
       00 00 10 00 
       00 00 01 00 
       2A 82 04 C1 
       03 00       
0436F4 01 00 00 10 1134*  	dl 1, 16, 16, 256, fn_xevious_1_C2, 962
       00 00 10 00 
       00 00 01 00 
       4B 82 04 C2 
       03 00       
043706 01 00 00 10 1135*  	dl 1, 16, 16, 256, fn_xevious_1_C3, 963
       00 00 10 00 
       00 00 01 00 
       6C 82 04 C3 
       03 00       
043718 01 00 00 10 1136*  	dl 1, 16, 16, 256, fn_xevious_1_C4, 964
       00 00 10 00 
       00 00 01 00 
       8D 82 04 C4 
       03 00       
04372A 01 00 00 10 1137*  	dl 1, 16, 16, 256, fn_xevious_1_C5, 965
       00 00 10 00 
       00 00 01 00 
       AE 82 04 C5 
       03 00       
04373C 01 00 00 10 1138*  	dl 1, 16, 16, 256, fn_xevious_1_C6, 966
       00 00 10 00 
       00 00 01 00 
       CF 82 04 C6 
       03 00       
04374E 01 00 00 10 1139*  	dl 1, 16, 16, 256, fn_xevious_1_C7, 967
       00 00 10 00 
       00 00 01 00 
       F0 82 04 C7 
       03 00       
043760 01 00 00 10 1140*  	dl 1, 16, 16, 256, fn_xevious_1_C8, 968
       00 00 10 00 
       00 00 01 00 
       11 83 04 C8 
       03 00       
043772 01 00 00 10 1141*  	dl 1, 16, 16, 256, fn_xevious_1_C9, 969
       00 00 10 00 
       00 00 01 00 
       32 83 04 C9 
       03 00       
043784 01 00 00 10 1142*  	dl 1, 16, 16, 256, fn_xevious_1_CA, 970
       00 00 10 00 
       00 00 01 00 
       53 83 04 CA 
       03 00       
043796 01 00 00 10 1143*  	dl 1, 16, 16, 256, fn_xevious_1_CB, 971
       00 00 10 00 
       00 00 01 00 
       74 83 04 CB 
       03 00       
0437A8 01 00 00 10 1144*  	dl 1, 16, 16, 256, fn_xevious_1_CC, 972
       00 00 10 00 
       00 00 01 00 
       95 83 04 CC 
       03 00       
0437BA 01 00 00 10 1145*  	dl 1, 16, 16, 256, fn_xevious_1_CD, 973
       00 00 10 00 
       00 00 01 00 
       B6 83 04 CD 
       03 00       
0437CC 01 00 00 10 1146*  	dl 1, 16, 16, 256, fn_xevious_1_CE, 974
       00 00 10 00 
       00 00 01 00 
       D7 83 04 CE 
       03 00       
0437DE 01 00 00 10 1147*  	dl 1, 16, 16, 256, fn_xevious_1_CF, 975
       00 00 10 00 
       00 00 01 00 
       F8 83 04 CF 
       03 00       
0437F0 01 00 00 10 1148*  	dl 1, 16, 16, 256, fn_xevious_1_D0, 976
       00 00 10 00 
       00 00 01 00 
       19 84 04 D0 
       03 00       
043802 01 00 00 10 1149*  	dl 1, 16, 16, 256, fn_xevious_1_D1, 977
       00 00 10 00 
       00 00 01 00 
       3A 84 04 D1 
       03 00       
043814 01 00 00 10 1150*  	dl 1, 16, 16, 256, fn_xevious_1_D2, 978
       00 00 10 00 
       00 00 01 00 
       5B 84 04 D2 
       03 00       
043826 01 00 00 10 1151*  	dl 1, 16, 16, 256, fn_xevious_1_D3, 979
       00 00 10 00 
       00 00 01 00 
       7C 84 04 D3 
       03 00       
043838 01 00 00 10 1152*  	dl 1, 16, 16, 256, fn_xevious_1_D4, 980
       00 00 10 00 
       00 00 01 00 
       9D 84 04 D4 
       03 00       
04384A 01 00 00 10 1153*  	dl 1, 16, 16, 256, fn_xevious_1_D5, 981
       00 00 10 00 
       00 00 01 00 
       BE 84 04 D5 
       03 00       
04385C 01 00 00 10 1154*  	dl 1, 16, 16, 256, fn_xevious_1_D6, 982
       00 00 10 00 
       00 00 01 00 
       DF 84 04 D6 
       03 00       
04386E 01 00 00 10 1155*  	dl 1, 16, 16, 256, fn_xevious_1_D7, 983
       00 00 10 00 
       00 00 01 00 
       00 85 04 D7 
       03 00       
043880 01 00 00 10 1156*  	dl 1, 16, 16, 256, fn_xevious_1_D8, 984
       00 00 10 00 
       00 00 01 00 
       21 85 04 D8 
       03 00       
043892 01 00 00 10 1157*  	dl 1, 16, 16, 256, fn_xevious_1_D9, 985
       00 00 10 00 
       00 00 01 00 
       42 85 04 D9 
       03 00       
0438A4 01 00 00 10 1158*  	dl 1, 16, 16, 256, fn_xevious_1_DA, 986
       00 00 10 00 
       00 00 01 00 
       63 85 04 DA 
       03 00       
0438B6 01 00 00 10 1159*  	dl 1, 16, 16, 256, fn_xevious_1_DB, 987
       00 00 10 00 
       00 00 01 00 
       84 85 04 DB 
       03 00       
0438C8 01 00 00 10 1160*  	dl 1, 16, 16, 256, fn_xevious_1_DC, 988
       00 00 10 00 
       00 00 01 00 
       A5 85 04 DC 
       03 00       
0438DA 01 00 00 10 1161*  	dl 1, 16, 16, 256, fn_xevious_1_DD, 989
       00 00 10 00 
       00 00 01 00 
       C6 85 04 DD 
       03 00       
0438EC 01 00 00 10 1162*  	dl 1, 16, 16, 256, fn_xevious_1_DE, 990
       00 00 10 00 
       00 00 01 00 
       E7 85 04 DE 
       03 00       
0438FE 01 00 00 10 1163*  	dl 1, 16, 16, 256, fn_xevious_1_DF, 991
       00 00 10 00 
       00 00 01 00 
       08 86 04 DF 
       03 00       
043910 01 00 00 10 1164*  	dl 1, 16, 16, 256, fn_xevious_1_E0, 992
       00 00 10 00 
       00 00 01 00 
       29 86 04 E0 
       03 00       
043922 01 00 00 10 1165*  	dl 1, 16, 16, 256, fn_xevious_1_E1, 993
       00 00 10 00 
       00 00 01 00 
       4A 86 04 E1 
       03 00       
043934 01 00 00 10 1166*  	dl 1, 16, 16, 256, fn_xevious_2_00, 1024
       00 00 10 00 
       00 00 01 00 
       6B 86 04 00 
       04 00       
043946 01 00 00 10 1167*  	dl 1, 16, 16, 256, fn_xevious_2_01, 1025
       00 00 10 00 
       00 00 01 00 
       8C 86 04 01 
       04 00       
043958 01 00 00 10 1168*  	dl 1, 16, 16, 256, fn_xevious_2_02, 1026
       00 00 10 00 
       00 00 01 00 
       AD 86 04 02 
       04 00       
04396A 01 00 00 10 1169*  	dl 1, 16, 16, 256, fn_xevious_2_03, 1027
       00 00 10 00 
       00 00 01 00 
       CE 86 04 03 
       04 00       
04397C 01 00 00 10 1170*  	dl 1, 16, 16, 256, fn_xevious_2_04, 1028
       00 00 10 00 
       00 00 01 00 
       EF 86 04 04 
       04 00       
04398E 01 00 00 10 1171*  	dl 1, 16, 16, 256, fn_xevious_2_05, 1029
       00 00 10 00 
       00 00 01 00 
       10 87 04 05 
       04 00       
0439A0 01 00 00 10 1172*  	dl 1, 16, 16, 256, fn_xevious_2_06, 1030
       00 00 10 00 
       00 00 01 00 
       31 87 04 06 
       04 00       
0439B2 01 00 00 10 1173*  	dl 1, 16, 16, 256, fn_xevious_2_07, 1031
       00 00 10 00 
       00 00 01 00 
       52 87 04 07 
       04 00       
0439C4 01 00 00 10 1174*  	dl 1, 16, 16, 256, fn_xevious_2_08, 1032
       00 00 10 00 
       00 00 01 00 
       73 87 04 08 
       04 00       
0439D6 01 00 00 10 1175*  	dl 1, 16, 16, 256, fn_xevious_2_09, 1033
       00 00 10 00 
       00 00 01 00 
       94 87 04 09 
       04 00       
0439E8 01 00 00 10 1176*  	dl 1, 16, 16, 256, fn_xevious_2_0A, 1034
       00 00 10 00 
       00 00 01 00 
       B5 87 04 0A 
       04 00       
0439FA 01 00 00 10 1177*  	dl 1, 16, 16, 256, fn_xevious_2_0B, 1035
       00 00 10 00 
       00 00 01 00 
       D6 87 04 0B 
       04 00       
043A0C 01 00 00 10 1178*  	dl 1, 16, 16, 256, fn_xevious_2_0C, 1036
       00 00 10 00 
       00 00 01 00 
       F7 87 04 0C 
       04 00       
043A1E 01 00 00 10 1179*  	dl 1, 16, 16, 256, fn_xevious_2_0D, 1037
       00 00 10 00 
       00 00 01 00 
       18 88 04 0D 
       04 00       
043A30 01 00 00 10 1180*  	dl 1, 16, 16, 256, fn_xevious_2_0E, 1038
       00 00 10 00 
       00 00 01 00 
       39 88 04 0E 
       04 00       
043A42 01 00 00 10 1181*  	dl 1, 16, 16, 256, fn_xevious_2_0F, 1039
       00 00 10 00 
       00 00 01 00 
       5A 88 04 0F 
       04 00       
043A54 01 00 00 10 1182*  	dl 1, 16, 16, 256, fn_xevious_2_10, 1040
       00 00 10 00 
       00 00 01 00 
       7B 88 04 10 
       04 00       
043A66 01 00 00 10 1183*  	dl 1, 16, 16, 256, fn_xevious_2_11, 1041
       00 00 10 00 
       00 00 01 00 
       9C 88 04 11 
       04 00       
043A78 01 00 00 10 1184*  	dl 1, 16, 16, 256, fn_xevious_2_12, 1042
       00 00 10 00 
       00 00 01 00 
       BD 88 04 12 
       04 00       
043A8A 01 00 00 10 1185*  	dl 1, 16, 16, 256, fn_xevious_2_13, 1043
       00 00 10 00 
       00 00 01 00 
       DE 88 04 13 
       04 00       
043A9C 01 00 00 10 1186*  	dl 1, 16, 16, 256, fn_xevious_2_14, 1044
       00 00 10 00 
       00 00 01 00 
       FF 88 04 14 
       04 00       
043AAE 01 00 00 10 1187*  	dl 1, 16, 16, 256, fn_xevious_2_15, 1045
       00 00 10 00 
       00 00 01 00 
       20 89 04 15 
       04 00       
043AC0 01 00 00 10 1188*  	dl 1, 16, 16, 256, fn_xevious_2_16, 1046
       00 00 10 00 
       00 00 01 00 
       41 89 04 16 
       04 00       
043AD2 01 00 00 10 1189*  	dl 1, 16, 16, 256, fn_xevious_2_17, 1047
       00 00 10 00 
       00 00 01 00 
       62 89 04 17 
       04 00       
043AE4 01 00 00 10 1190*  	dl 1, 16, 16, 256, fn_xevious_2_18, 1048
       00 00 10 00 
       00 00 01 00 
       83 89 04 18 
       04 00       
043AF6 01 00 00 10 1191*  	dl 1, 16, 16, 256, fn_xevious_2_19, 1049
       00 00 10 00 
       00 00 01 00 
       A4 89 04 19 
       04 00       
043B08 01 00 00 10 1192*  	dl 1, 16, 16, 256, fn_xevious_2_1A, 1050
       00 00 10 00 
       00 00 01 00 
       C5 89 04 1A 
       04 00       
043B1A 01 00 00 10 1193*  	dl 1, 16, 16, 256, fn_xevious_2_1B, 1051
       00 00 10 00 
       00 00 01 00 
       E6 89 04 1B 
       04 00       
043B2C 01 00 00 10 1194*  	dl 1, 16, 16, 256, fn_xevious_2_1C, 1052
       00 00 10 00 
       00 00 01 00 
       07 8A 04 1C 
       04 00       
043B3E 01 00 00 10 1195*  	dl 1, 16, 16, 256, fn_xevious_2_1D, 1053
       00 00 10 00 
       00 00 01 00 
       28 8A 04 1D 
       04 00       
043B50 01 00 00 10 1196*  	dl 1, 16, 16, 256, fn_xevious_2_1E, 1054
       00 00 10 00 
       00 00 01 00 
       49 8A 04 1E 
       04 00       
043B62 01 00 00 10 1197*  	dl 1, 16, 16, 256, fn_xevious_2_1F, 1055
       00 00 10 00 
       00 00 01 00 
       6A 8A 04 1F 
       04 00       
043B74 01 00 00 10 1198*  	dl 1, 16, 16, 256, fn_xevious_2_20, 1056
       00 00 10 00 
       00 00 01 00 
       8B 8A 04 20 
       04 00       
043B86 01 00 00 10 1199*  	dl 1, 16, 16, 256, fn_xevious_2_21, 1057
       00 00 10 00 
       00 00 01 00 
       AC 8A 04 21 
       04 00       
043B98 01 00 00 10 1200*  	dl 1, 16, 16, 256, fn_xevious_2_22, 1058
       00 00 10 00 
       00 00 01 00 
       CD 8A 04 22 
       04 00       
043BAA 01 00 00 10 1201*  	dl 1, 16, 16, 256, fn_xevious_2_23, 1059
       00 00 10 00 
       00 00 01 00 
       EE 8A 04 23 
       04 00       
043BBC 01 00 00 10 1202*  	dl 1, 16, 16, 256, fn_xevious_2_24, 1060
       00 00 10 00 
       00 00 01 00 
       0F 8B 04 24 
       04 00       
043BCE 01 00 00 10 1203*  	dl 1, 16, 16, 256, fn_xevious_2_25, 1061
       00 00 10 00 
       00 00 01 00 
       30 8B 04 25 
       04 00       
043BE0 01 00 00 10 1204*  	dl 1, 16, 16, 256, fn_xevious_2_26, 1062
       00 00 10 00 
       00 00 01 00 
       51 8B 04 26 
       04 00       
043BF2 01 00 00 10 1205*  	dl 1, 16, 16, 256, fn_xevious_2_27, 1063
       00 00 10 00 
       00 00 01 00 
       72 8B 04 27 
       04 00       
043C04 01 00 00 10 1206*  	dl 1, 16, 16, 256, fn_xevious_2_28, 1064
       00 00 10 00 
       00 00 01 00 
       93 8B 04 28 
       04 00       
043C16 01 00 00 10 1207*  	dl 1, 16, 16, 256, fn_xevious_2_29, 1065
       00 00 10 00 
       00 00 01 00 
       B4 8B 04 29 
       04 00       
043C28 01 00 00 10 1208*  	dl 1, 16, 16, 256, fn_xevious_2_2A, 1066
       00 00 10 00 
       00 00 01 00 
       D5 8B 04 2A 
       04 00       
043C3A 01 00 00 10 1209*  	dl 1, 16, 16, 256, fn_xevious_2_2B, 1067
       00 00 10 00 
       00 00 01 00 
       F6 8B 04 2B 
       04 00       
043C4C 01 00 00 10 1210*  	dl 1, 16, 16, 256, fn_xevious_2_2C, 1068
       00 00 10 00 
       00 00 01 00 
       17 8C 04 2C 
       04 00       
043C5E 01 00 00 10 1211*  	dl 1, 16, 16, 256, fn_xevious_2_2D, 1069
       00 00 10 00 
       00 00 01 00 
       38 8C 04 2D 
       04 00       
043C70 01 00 00 10 1212*  	dl 1, 16, 16, 256, fn_xevious_2_2E, 1070
       00 00 10 00 
       00 00 01 00 
       59 8C 04 2E 
       04 00       
043C82 01 00 00 10 1213*  	dl 1, 16, 16, 256, fn_xevious_2_2F, 1071
       00 00 10 00 
       00 00 01 00 
       7A 8C 04 2F 
       04 00       
043C94 01 00 00 10 1214*  	dl 1, 16, 16, 256, fn_xevious_2_30, 1072
       00 00 10 00 
       00 00 01 00 
       9B 8C 04 30 
       04 00       
043CA6 01 00 00 10 1215*  	dl 1, 16, 16, 256, fn_xevious_2_31, 1073
       00 00 10 00 
       00 00 01 00 
       BC 8C 04 31 
       04 00       
043CB8 01 00 00 10 1216*  	dl 1, 16, 16, 256, fn_xevious_2_32, 1074
       00 00 10 00 
       00 00 01 00 
       DD 8C 04 32 
       04 00       
043CCA 01 00 00 10 1217*  	dl 1, 16, 16, 256, fn_xevious_2_33, 1075
       00 00 10 00 
       00 00 01 00 
       FE 8C 04 33 
       04 00       
043CDC 01 00 00 10 1218*  	dl 1, 16, 16, 256, fn_xevious_2_34, 1076
       00 00 10 00 
       00 00 01 00 
       1F 8D 04 34 
       04 00       
043CEE 01 00 00 10 1219*  	dl 1, 16, 16, 256, fn_xevious_2_35, 1077
       00 00 10 00 
       00 00 01 00 
       40 8D 04 35 
       04 00       
043D00 01 00 00 10 1220*  	dl 1, 16, 16, 256, fn_xevious_2_36, 1078
       00 00 10 00 
       00 00 01 00 
       61 8D 04 36 
       04 00       
043D12 01 00 00 10 1221*  	dl 1, 16, 16, 256, fn_xevious_2_37, 1079
       00 00 10 00 
       00 00 01 00 
       82 8D 04 37 
       04 00       
043D24 01 00 00 10 1222*  	dl 1, 16, 16, 256, fn_xevious_2_38, 1080
       00 00 10 00 
       00 00 01 00 
       A3 8D 04 38 
       04 00       
043D36 01 00 00 10 1223*  	dl 1, 16, 16, 256, fn_xevious_2_39, 1081
       00 00 10 00 
       00 00 01 00 
       C4 8D 04 39 
       04 00       
043D48 01 00 00 10 1224*  	dl 1, 16, 16, 256, fn_xevious_2_3A, 1082
       00 00 10 00 
       00 00 01 00 
       E5 8D 04 3A 
       04 00       
043D5A 01 00 00 10 1225*  	dl 1, 16, 16, 256, fn_xevious_2_3B, 1083
       00 00 10 00 
       00 00 01 00 
       06 8E 04 3B 
       04 00       
043D6C 01 00 00 10 1226*  	dl 1, 16, 16, 256, fn_xevious_2_3C, 1084
       00 00 10 00 
       00 00 01 00 
       27 8E 04 3C 
       04 00       
043D7E 01 00 00 10 1227*  	dl 1, 16, 16, 256, fn_xevious_2_3D, 1085
       00 00 10 00 
       00 00 01 00 
       48 8E 04 3D 
       04 00       
043D90 01 00 00 10 1228*  	dl 1, 16, 16, 256, fn_xevious_2_3E, 1086
       00 00 10 00 
       00 00 01 00 
       69 8E 04 3E 
       04 00       
043DA2 01 00 00 10 1229*  	dl 1, 16, 16, 256, fn_xevious_2_3F, 1087
       00 00 10 00 
       00 00 01 00 
       8A 8E 04 3F 
       04 00       
043DB4 01 00 00 10 1230*  	dl 1, 16, 16, 256, fn_xevious_2_40, 1088
       00 00 10 00 
       00 00 01 00 
       AB 8E 04 40 
       04 00       
043DC6 01 00 00 10 1231*  	dl 1, 16, 16, 256, fn_xevious_2_41, 1089
       00 00 10 00 
       00 00 01 00 
       CC 8E 04 41 
       04 00       
043DD8 01 00 00 10 1232*  	dl 1, 16, 16, 256, fn_xevious_2_42, 1090
       00 00 10 00 
       00 00 01 00 
       ED 8E 04 42 
       04 00       
043DEA 01 00 00 10 1233*  	dl 1, 16, 16, 256, fn_xevious_2_43, 1091
       00 00 10 00 
       00 00 01 00 
       0E 8F 04 43 
       04 00       
043DFC 01 00 00 10 1234*  	dl 1, 16, 16, 256, fn_xevious_2_44, 1092
       00 00 10 00 
       00 00 01 00 
       2F 8F 04 44 
       04 00       
043E0E 01 00 00 10 1235*  	dl 1, 16, 16, 256, fn_xevious_2_45, 1093
       00 00 10 00 
       00 00 01 00 
       50 8F 04 45 
       04 00       
043E20 01 00 00 10 1236*  	dl 1, 16, 16, 256, fn_xevious_2_46, 1094
       00 00 10 00 
       00 00 01 00 
       71 8F 04 46 
       04 00       
043E32 01 00 00 10 1237*  	dl 1, 16, 16, 256, fn_xevious_2_47, 1095
       00 00 10 00 
       00 00 01 00 
       92 8F 04 47 
       04 00       
043E44 01 00 00 10 1238*  	dl 1, 16, 16, 256, fn_xevious_2_48, 1096
       00 00 10 00 
       00 00 01 00 
       B3 8F 04 48 
       04 00       
043E56 01 00 00 10 1239*  	dl 1, 16, 16, 256, fn_xevious_2_49, 1097
       00 00 10 00 
       00 00 01 00 
       D4 8F 04 49 
       04 00       
043E68 01 00 00 10 1240*  	dl 1, 16, 16, 256, fn_xevious_2_4A, 1098
       00 00 10 00 
       00 00 01 00 
       F5 8F 04 4A 
       04 00       
043E7A 01 00 00 10 1241*  	dl 1, 16, 16, 256, fn_xevious_2_4B, 1099
       00 00 10 00 
       00 00 01 00 
       16 90 04 4B 
       04 00       
043E8C 01 00 00 10 1242*  	dl 1, 16, 16, 256, fn_xevious_2_4C, 1100
       00 00 10 00 
       00 00 01 00 
       37 90 04 4C 
       04 00       
043E9E 01 00 00 10 1243*  	dl 1, 16, 16, 256, fn_xevious_2_4D, 1101
       00 00 10 00 
       00 00 01 00 
       58 90 04 4D 
       04 00       
043EB0 01 00 00 10 1244*  	dl 1, 16, 16, 256, fn_xevious_2_4E, 1102
       00 00 10 00 
       00 00 01 00 
       79 90 04 4E 
       04 00       
043EC2 01 00 00 10 1245*  	dl 1, 16, 16, 256, fn_xevious_2_4F, 1103
       00 00 10 00 
       00 00 01 00 
       9A 90 04 4F 
       04 00       
043ED4 01 00 00 10 1246*  	dl 1, 16, 16, 256, fn_xevious_2_50, 1104
       00 00 10 00 
       00 00 01 00 
       BB 90 04 50 
       04 00       
043EE6 01 00 00 10 1247*  	dl 1, 16, 16, 256, fn_xevious_2_51, 1105
       00 00 10 00 
       00 00 01 00 
       DC 90 04 51 
       04 00       
043EF8 01 00 00 10 1248*  	dl 1, 16, 16, 256, fn_xevious_2_52, 1106
       00 00 10 00 
       00 00 01 00 
       FD 90 04 52 
       04 00       
043F0A 01 00 00 10 1249*  	dl 1, 16, 16, 256, fn_xevious_2_53, 1107
       00 00 10 00 
       00 00 01 00 
       1E 91 04 53 
       04 00       
043F1C 01 00 00 10 1250*  	dl 1, 16, 16, 256, fn_xevious_2_54, 1108
       00 00 10 00 
       00 00 01 00 
       3F 91 04 54 
       04 00       
043F2E 01 00 00 10 1251*  	dl 1, 16, 16, 256, fn_xevious_2_55, 1109
       00 00 10 00 
       00 00 01 00 
       60 91 04 55 
       04 00       
043F40 01 00 00 10 1252*  	dl 1, 16, 16, 256, fn_xevious_2_56, 1110
       00 00 10 00 
       00 00 01 00 
       81 91 04 56 
       04 00       
043F52 01 00 00 10 1253*  	dl 1, 16, 16, 256, fn_xevious_2_57, 1111
       00 00 10 00 
       00 00 01 00 
       A2 91 04 57 
       04 00       
043F64 01 00 00 10 1254*  	dl 1, 16, 16, 256, fn_xevious_2_58, 1112
       00 00 10 00 
       00 00 01 00 
       C3 91 04 58 
       04 00       
043F76 01 00 00 10 1255*  	dl 1, 16, 16, 256, fn_xevious_2_59, 1113
       00 00 10 00 
       00 00 01 00 
       E4 91 04 59 
       04 00       
043F88 01 00 00 10 1256*  	dl 1, 16, 16, 256, fn_xevious_2_5A, 1114
       00 00 10 00 
       00 00 01 00 
       05 92 04 5A 
       04 00       
043F9A 01 00 00 10 1257*  	dl 1, 16, 16, 256, fn_xevious_2_5B, 1115
       00 00 10 00 
       00 00 01 00 
       26 92 04 5B 
       04 00       
043FAC 01 00 00 10 1258*  	dl 1, 16, 16, 256, fn_xevious_2_5C, 1116
       00 00 10 00 
       00 00 01 00 
       47 92 04 5C 
       04 00       
043FBE 01 00 00 10 1259*  	dl 1, 16, 16, 256, fn_xevious_2_5D, 1117
       00 00 10 00 
       00 00 01 00 
       68 92 04 5D 
       04 00       
043FD0 01 00 00 10 1260*  	dl 1, 16, 16, 256, fn_xevious_2_5E, 1118
       00 00 10 00 
       00 00 01 00 
       89 92 04 5E 
       04 00       
043FE2 01 00 00 10 1261*  	dl 1, 16, 16, 256, fn_xevious_2_5F, 1119
       00 00 10 00 
       00 00 01 00 
       AA 92 04 5F 
       04 00       
043FF4 01 00 00 10 1262*  	dl 1, 16, 16, 256, fn_xevious_2_60, 1120
       00 00 10 00 
       00 00 01 00 
       CB 92 04 60 
       04 00       
044006 01 00 00 10 1263*  	dl 1, 16, 16, 256, fn_xevious_2_61, 1121
       00 00 10 00 
       00 00 01 00 
       EC 92 04 61 
       04 00       
044018 01 00 00 10 1264*  	dl 1, 16, 16, 256, fn_xevious_2_62, 1122
       00 00 10 00 
       00 00 01 00 
       0D 93 04 62 
       04 00       
04402A 01 00 00 10 1265*  	dl 1, 16, 16, 256, fn_xevious_2_63, 1123
       00 00 10 00 
       00 00 01 00 
       2E 93 04 63 
       04 00       
04403C 01 00 00 10 1266*  	dl 1, 16, 16, 256, fn_xevious_2_64, 1124
       00 00 10 00 
       00 00 01 00 
       4F 93 04 64 
       04 00       
04404E 01 00 00 10 1267*  	dl 1, 16, 16, 256, fn_xevious_2_65, 1125
       00 00 10 00 
       00 00 01 00 
       70 93 04 65 
       04 00       
044060 01 00 00 10 1268*  	dl 1, 16, 16, 256, fn_xevious_2_66, 1126
       00 00 10 00 
       00 00 01 00 
       91 93 04 66 
       04 00       
044072 01 00 00 10 1269*  	dl 1, 16, 16, 256, fn_xevious_2_67, 1127
       00 00 10 00 
       00 00 01 00 
       B2 93 04 67 
       04 00       
044084 01 00 00 10 1270*  	dl 1, 16, 16, 256, fn_xevious_2_68, 1128
       00 00 10 00 
       00 00 01 00 
       D3 93 04 68 
       04 00       
044096 01 00 00 10 1271*  	dl 1, 16, 16, 256, fn_xevious_2_69, 1129
       00 00 10 00 
       00 00 01 00 
       F4 93 04 69 
       04 00       
0440A8 01 00 00 10 1272*  	dl 1, 16, 16, 256, fn_xevious_2_6A, 1130
       00 00 10 00 
       00 00 01 00 
       15 94 04 6A 
       04 00       
0440BA 01 00 00 10 1273*  	dl 1, 16, 16, 256, fn_xevious_2_6B, 1131
       00 00 10 00 
       00 00 01 00 
       36 94 04 6B 
       04 00       
0440CC 01 00 00 10 1274*  	dl 1, 16, 16, 256, fn_xevious_2_6C, 1132
       00 00 10 00 
       00 00 01 00 
       57 94 04 6C 
       04 00       
0440DE 01 00 00 10 1275*  	dl 1, 16, 16, 256, fn_xevious_2_6D, 1133
       00 00 10 00 
       00 00 01 00 
       78 94 04 6D 
       04 00       
0440F0 01 00 00 10 1276*  	dl 1, 16, 16, 256, fn_xevious_2_6E, 1134
       00 00 10 00 
       00 00 01 00 
       99 94 04 6E 
       04 00       
044102 01 00 00 10 1277*  	dl 1, 16, 16, 256, fn_xevious_2_6F, 1135
       00 00 10 00 
       00 00 01 00 
       BA 94 04 6F 
       04 00       
044114 01 00 00 10 1278*  	dl 1, 16, 16, 256, fn_xevious_2_70, 1136
       00 00 10 00 
       00 00 01 00 
       DB 94 04 70 
       04 00       
044126 01 00 00 10 1279*  	dl 1, 16, 16, 256, fn_xevious_2_71, 1137
       00 00 10 00 
       00 00 01 00 
       FC 94 04 71 
       04 00       
044138 01 00 00 10 1280*  	dl 1, 16, 16, 256, fn_xevious_2_72, 1138
       00 00 10 00 
       00 00 01 00 
       1D 95 04 72 
       04 00       
04414A 01 00 00 10 1281*  	dl 1, 16, 16, 256, fn_xevious_2_73, 1139
       00 00 10 00 
       00 00 01 00 
       3E 95 04 73 
       04 00       
04415C 01 00 00 10 1282*  	dl 1, 16, 16, 256, fn_xevious_2_74, 1140
       00 00 10 00 
       00 00 01 00 
       5F 95 04 74 
       04 00       
04416E 01 00 00 10 1283*  	dl 1, 16, 16, 256, fn_xevious_2_75, 1141
       00 00 10 00 
       00 00 01 00 
       80 95 04 75 
       04 00       
044180 01 00 00 10 1284*  	dl 1, 16, 16, 256, fn_xevious_2_76, 1142
       00 00 10 00 
       00 00 01 00 
       A1 95 04 76 
       04 00       
044192 01 00 00 10 1285*  	dl 1, 16, 16, 256, fn_xevious_2_77, 1143
       00 00 10 00 
       00 00 01 00 
       C2 95 04 77 
       04 00       
0441A4 01 00 00 10 1286*  	dl 1, 16, 16, 256, fn_xevious_2_78, 1144
       00 00 10 00 
       00 00 01 00 
       E3 95 04 78 
       04 00       
0441B6 01 00 00 10 1287*  	dl 1, 16, 16, 256, fn_xevious_2_79, 1145
       00 00 10 00 
       00 00 01 00 
       04 96 04 79 
       04 00       
0441C8 01 00 00 10 1288*  	dl 1, 16, 16, 256, fn_xevious_2_7A, 1146
       00 00 10 00 
       00 00 01 00 
       25 96 04 7A 
       04 00       
0441DA 01 00 00 10 1289*  	dl 1, 16, 16, 256, fn_xevious_2_7B, 1147
       00 00 10 00 
       00 00 01 00 
       46 96 04 7B 
       04 00       
0441EC 01 00 00 10 1290*  	dl 1, 16, 16, 256, fn_xevious_2_7C, 1148
       00 00 10 00 
       00 00 01 00 
       67 96 04 7C 
       04 00       
0441FE 01 00 00 10 1291*  	dl 1, 16, 16, 256, fn_xevious_2_7D, 1149
       00 00 10 00 
       00 00 01 00 
       88 96 04 7D 
       04 00       
044210 01 00 00 10 1292*  	dl 1, 16, 16, 256, fn_xevious_2_7E, 1150
       00 00 10 00 
       00 00 01 00 
       A9 96 04 7E 
       04 00       
044222 01 00 00 10 1293*  	dl 1, 16, 16, 256, fn_xevious_2_7F, 1151
       00 00 10 00 
       00 00 01 00 
       CA 96 04 7F 
       04 00       
044234 01 00 00 10 1294*  	dl 1, 16, 16, 256, fn_xevious_2_80, 1152
       00 00 10 00 
       00 00 01 00 
       EB 96 04 80 
       04 00       
044246 01 00 00 10 1295*  	dl 1, 16, 16, 256, fn_xevious_2_81, 1153
       00 00 10 00 
       00 00 01 00 
       0C 97 04 81 
       04 00       
044258 01 00 00 10 1296*  	dl 1, 16, 16, 256, fn_xevious_2_82, 1154
       00 00 10 00 
       00 00 01 00 
       2D 97 04 82 
       04 00       
04426A 01 00 00 10 1297*  	dl 1, 16, 16, 256, fn_xevious_2_83, 1155
       00 00 10 00 
       00 00 01 00 
       4E 97 04 83 
       04 00       
04427C 01 00 00 10 1298*  	dl 1, 16, 16, 256, fn_xevious_2_84, 1156
       00 00 10 00 
       00 00 01 00 
       6F 97 04 84 
       04 00       
04428E 01 00 00 10 1299*  	dl 1, 16, 16, 256, fn_xevious_2_85, 1157
       00 00 10 00 
       00 00 01 00 
       90 97 04 85 
       04 00       
0442A0 01 00 00 10 1300*  	dl 1, 16, 16, 256, fn_xevious_2_86, 1158
       00 00 10 00 
       00 00 01 00 
       B1 97 04 86 
       04 00       
0442B2 01 00 00 10 1301*  	dl 1, 16, 16, 256, fn_xevious_2_87, 1159
       00 00 10 00 
       00 00 01 00 
       D2 97 04 87 
       04 00       
0442C4 01 00 00 10 1302*  	dl 1, 16, 16, 256, fn_xevious_2_88, 1160
       00 00 10 00 
       00 00 01 00 
       F3 97 04 88 
       04 00       
0442D6 01 00 00 10 1303*  	dl 1, 16, 16, 256, fn_xevious_2_89, 1161
       00 00 10 00 
       00 00 01 00 
       14 98 04 89 
       04 00       
0442E8 01 00 00 10 1304*  	dl 1, 16, 16, 256, fn_xevious_2_8A, 1162
       00 00 10 00 
       00 00 01 00 
       35 98 04 8A 
       04 00       
0442FA 01 00 00 10 1305*  	dl 1, 16, 16, 256, fn_xevious_2_8B, 1163
       00 00 10 00 
       00 00 01 00 
       56 98 04 8B 
       04 00       
04430C 01 00 00 10 1306*  	dl 1, 16, 16, 256, fn_xevious_2_8C, 1164
       00 00 10 00 
       00 00 01 00 
       77 98 04 8C 
       04 00       
04431E 01 00 00 10 1307*  	dl 1, 16, 16, 256, fn_xevious_2_8D, 1165
       00 00 10 00 
       00 00 01 00 
       98 98 04 8D 
       04 00       
044330 01 00 00 10 1308*  	dl 1, 16, 16, 256, fn_xevious_2_8E, 1166
       00 00 10 00 
       00 00 01 00 
       B9 98 04 8E 
       04 00       
044342 01 00 00 10 1309*  	dl 1, 16, 16, 256, fn_xevious_2_8F, 1167
       00 00 10 00 
       00 00 01 00 
       DA 98 04 8F 
       04 00       
044354 01 00 00 10 1310*  	dl 1, 16, 16, 256, fn_xevious_2_90, 1168
       00 00 10 00 
       00 00 01 00 
       FB 98 04 90 
       04 00       
044366 01 00 00 10 1311*  	dl 1, 16, 16, 256, fn_xevious_2_91, 1169
       00 00 10 00 
       00 00 01 00 
       1C 99 04 91 
       04 00       
044378 01 00 00 10 1312*  	dl 1, 16, 16, 256, fn_xevious_2_92, 1170
       00 00 10 00 
       00 00 01 00 
       3D 99 04 92 
       04 00       
04438A 01 00 00 10 1313*  	dl 1, 16, 16, 256, fn_xevious_2_93, 1171
       00 00 10 00 
       00 00 01 00 
       5E 99 04 93 
       04 00       
04439C 01 00 00 10 1314*  	dl 1, 16, 16, 256, fn_xevious_2_94, 1172
       00 00 10 00 
       00 00 01 00 
       7F 99 04 94 
       04 00       
0443AE 01 00 00 10 1315*  	dl 1, 16, 16, 256, fn_xevious_2_95, 1173
       00 00 10 00 
       00 00 01 00 
       A0 99 04 95 
       04 00       
0443C0 01 00 00 10 1316*  	dl 1, 16, 16, 256, fn_xevious_2_96, 1174
       00 00 10 00 
       00 00 01 00 
       C1 99 04 96 
       04 00       
0443D2 01 00 00 10 1317*  	dl 1, 16, 16, 256, fn_xevious_2_97, 1175
       00 00 10 00 
       00 00 01 00 
       E2 99 04 97 
       04 00       
0443E4 01 00 00 10 1318*  	dl 1, 16, 16, 256, fn_xevious_2_98, 1176
       00 00 10 00 
       00 00 01 00 
       03 9A 04 98 
       04 00       
0443F6 01 00 00 10 1319*  	dl 1, 16, 16, 256, fn_xevious_2_99, 1177
       00 00 10 00 
       00 00 01 00 
       24 9A 04 99 
       04 00       
044408 01 00 00 10 1320*  	dl 1, 16, 16, 256, fn_xevious_2_9A, 1178
       00 00 10 00 
       00 00 01 00 
       45 9A 04 9A 
       04 00       
04441A 01 00 00 10 1321*  	dl 1, 16, 16, 256, fn_xevious_2_9B, 1179
       00 00 10 00 
       00 00 01 00 
       66 9A 04 9B 
       04 00       
04442C 01 00 00 10 1322*  	dl 1, 16, 16, 256, fn_xevious_2_9C, 1180
       00 00 10 00 
       00 00 01 00 
       87 9A 04 9C 
       04 00       
04443E 01 00 00 10 1323*  	dl 1, 16, 16, 256, fn_xevious_2_9D, 1181
       00 00 10 00 
       00 00 01 00 
       A8 9A 04 9D 
       04 00       
044450 01 00 00 10 1324*  	dl 1, 16, 16, 256, fn_xevious_2_9E, 1182
       00 00 10 00 
       00 00 01 00 
       C9 9A 04 9E 
       04 00       
044462 01 00 00 10 1325*  	dl 1, 16, 16, 256, fn_xevious_2_9F, 1183
       00 00 10 00 
       00 00 01 00 
       EA 9A 04 9F 
       04 00       
044474 01 00 00 10 1326*  	dl 1, 16, 16, 256, fn_xevious_2_A0, 1184
       00 00 10 00 
       00 00 01 00 
       0B 9B 04 A0 
       04 00       
044486 01 00 00 10 1327*  	dl 1, 16, 16, 256, fn_xevious_2_A1, 1185
       00 00 10 00 
       00 00 01 00 
       2C 9B 04 A1 
       04 00       
044498 01 00 00 10 1328*  	dl 1, 16, 16, 256, fn_xevious_2_A2, 1186
       00 00 10 00 
       00 00 01 00 
       4D 9B 04 A2 
       04 00       
0444AA 01 00 00 10 1329*  	dl 1, 16, 16, 256, fn_xevious_2_A3, 1187
       00 00 10 00 
       00 00 01 00 
       6E 9B 04 A3 
       04 00       
0444BC 01 00 00 10 1330*  	dl 1, 16, 16, 256, fn_xevious_2_A4, 1188
       00 00 10 00 
       00 00 01 00 
       8F 9B 04 A4 
       04 00       
0444CE 01 00 00 10 1331*  	dl 1, 16, 16, 256, fn_xevious_2_A5, 1189
       00 00 10 00 
       00 00 01 00 
       B0 9B 04 A5 
       04 00       
0444E0 01 00 00 10 1332*  	dl 1, 16, 16, 256, fn_xevious_2_A6, 1190
       00 00 10 00 
       00 00 01 00 
       D1 9B 04 A6 
       04 00       
0444F2 01 00 00 10 1333*  	dl 1, 16, 16, 256, fn_xevious_2_A7, 1191
       00 00 10 00 
       00 00 01 00 
       F2 9B 04 A7 
       04 00       
044504 01 00 00 10 1334*  	dl 1, 16, 16, 256, fn_xevious_2_A8, 1192
       00 00 10 00 
       00 00 01 00 
       13 9C 04 A8 
       04 00       
044516 01 00 00 10 1335*  	dl 1, 16, 16, 256, fn_xevious_2_A9, 1193
       00 00 10 00 
       00 00 01 00 
       34 9C 04 A9 
       04 00       
044528 01 00 00 10 1336*  	dl 1, 16, 16, 256, fn_xevious_2_AA, 1194
       00 00 10 00 
       00 00 01 00 
       55 9C 04 AA 
       04 00       
04453A 01 00 00 10 1337*  	dl 1, 16, 16, 256, fn_xevious_2_AB, 1195
       00 00 10 00 
       00 00 01 00 
       76 9C 04 AB 
       04 00       
04454C 01 00 00 10 1338*  	dl 1, 16, 16, 256, fn_xevious_2_AC, 1196
       00 00 10 00 
       00 00 01 00 
       97 9C 04 AC 
       04 00       
04455E 01 00 00 10 1339*  	dl 1, 16, 16, 256, fn_xevious_2_AD, 1197
       00 00 10 00 
       00 00 01 00 
       B8 9C 04 AD 
       04 00       
044570 01 00 00 10 1340*  	dl 1, 16, 16, 256, fn_xevious_2_AE, 1198
       00 00 10 00 
       00 00 01 00 
       D9 9C 04 AE 
       04 00       
044582 01 00 00 10 1341*  	dl 1, 16, 16, 256, fn_xevious_2_AF, 1199
       00 00 10 00 
       00 00 01 00 
       FA 9C 04 AF 
       04 00       
044594 01 00 00 10 1342*  	dl 1, 16, 16, 256, fn_xevious_2_B0, 1200
       00 00 10 00 
       00 00 01 00 
       1B 9D 04 B0 
       04 00       
0445A6 01 00 00 10 1343*  	dl 1, 16, 16, 256, fn_xevious_2_B1, 1201
       00 00 10 00 
       00 00 01 00 
       3C 9D 04 B1 
       04 00       
0445B8 01 00 00 10 1344*  	dl 1, 16, 16, 256, fn_xevious_2_B2, 1202
       00 00 10 00 
       00 00 01 00 
       5D 9D 04 B2 
       04 00       
0445CA 01 00 00 10 1345*  	dl 1, 16, 16, 256, fn_xevious_2_B3, 1203
       00 00 10 00 
       00 00 01 00 
       7E 9D 04 B3 
       04 00       
0445DC 01 00 00 10 1346*  	dl 1, 16, 16, 256, fn_xevious_2_B4, 1204
       00 00 10 00 
       00 00 01 00 
       9F 9D 04 B4 
       04 00       
0445EE 01 00 00 10 1347*  	dl 1, 16, 16, 256, fn_xevious_2_B5, 1205
       00 00 10 00 
       00 00 01 00 
       C0 9D 04 B5 
       04 00       
044600 01 00 00 10 1348*  	dl 1, 16, 16, 256, fn_xevious_2_B6, 1206
       00 00 10 00 
       00 00 01 00 
       E1 9D 04 B6 
       04 00       
044612 01 00 00 10 1349*  	dl 1, 16, 16, 256, fn_xevious_2_B7, 1207
       00 00 10 00 
       00 00 01 00 
       02 9E 04 B7 
       04 00       
044624 01 00 00 10 1350*  	dl 1, 16, 16, 256, fn_xevious_3_00, 1280
       00 00 10 00 
       00 00 01 00 
       23 9E 04 00 
       05 00       
044636 01 00 00 10 1351*  	dl 1, 16, 16, 256, fn_xevious_3_01, 1281
       00 00 10 00 
       00 00 01 00 
       44 9E 04 01 
       05 00       
044648 01 00 00 10 1352*  	dl 1, 16, 16, 256, fn_xevious_3_02, 1282
       00 00 10 00 
       00 00 01 00 
       65 9E 04 02 
       05 00       
04465A 01 00 00 10 1353*  	dl 1, 16, 16, 256, fn_xevious_3_03, 1283
       00 00 10 00 
       00 00 01 00 
       86 9E 04 03 
       05 00       
04466C 01 00 00 10 1354*  	dl 1, 16, 16, 256, fn_xevious_3_04, 1284
       00 00 10 00 
       00 00 01 00 
       A7 9E 04 04 
       05 00       
04467E 01 00 00 10 1355*  	dl 1, 16, 16, 256, fn_xevious_3_05, 1285
       00 00 10 00 
       00 00 01 00 
       C8 9E 04 05 
       05 00       
044690 01 00 00 10 1356*  	dl 1, 16, 16, 256, fn_xevious_3_06, 1286
       00 00 10 00 
       00 00 01 00 
       E9 9E 04 06 
       05 00       
0446A2 01 00 00 10 1357*  	dl 1, 16, 16, 256, fn_xevious_3_07, 1287
       00 00 10 00 
       00 00 01 00 
       0A 9F 04 07 
       05 00       
0446B4 01 00 00 10 1358*  	dl 1, 16, 16, 256, fn_xevious_3_08, 1288
       00 00 10 00 
       00 00 01 00 
       2B 9F 04 08 
       05 00       
0446C6 01 00 00 10 1359*  	dl 1, 16, 16, 256, fn_xevious_3_09, 1289
       00 00 10 00 
       00 00 01 00 
       4C 9F 04 09 
       05 00       
0446D8 01 00 00 10 1360*  	dl 1, 16, 16, 256, fn_xevious_3_0A, 1290
       00 00 10 00 
       00 00 01 00 
       6D 9F 04 0A 
       05 00       
0446EA 01 00 00 10 1361*  	dl 1, 16, 16, 256, fn_xevious_3_0B, 1291
       00 00 10 00 
       00 00 01 00 
       8E 9F 04 0B 
       05 00       
0446FC 01 00 00 10 1362*  	dl 1, 16, 16, 256, fn_xevious_3_0C, 1292
       00 00 10 00 
       00 00 01 00 
       AF 9F 04 0C 
       05 00       
04470E 01 00 00 10 1363*  	dl 1, 16, 16, 256, fn_xevious_3_0D, 1293
       00 00 10 00 
       00 00 01 00 
       D0 9F 04 0D 
       05 00       
044720 01 00 00 10 1364*  	dl 1, 16, 16, 256, fn_xevious_3_0E, 1294
       00 00 10 00 
       00 00 01 00 
       F1 9F 04 0E 
       05 00       
044732 01 00 00 10 1365*  	dl 1, 16, 16, 256, fn_xevious_3_0F, 1295
       00 00 10 00 
       00 00 01 00 
       12 A0 04 0F 
       05 00       
044744 01 00 00 10 1366*  	dl 1, 16, 16, 256, fn_xevious_3_10, 1296
       00 00 10 00 
       00 00 01 00 
       33 A0 04 10 
       05 00       
044756 01 00 00 10 1367*  	dl 1, 16, 16, 256, fn_xevious_3_11, 1297
       00 00 10 00 
       00 00 01 00 
       54 A0 04 11 
       05 00       
044768 01 00 00 10 1368*  	dl 1, 16, 16, 256, fn_xevious_3_12, 1298
       00 00 10 00 
       00 00 01 00 
       75 A0 04 12 
       05 00       
04477A 01 00 00 10 1369*  	dl 1, 16, 16, 256, fn_xevious_3_13, 1299
       00 00 10 00 
       00 00 01 00 
       96 A0 04 13 
       05 00       
04478C 01 00 00 10 1370*  	dl 1, 16, 16, 256, fn_xevious_3_14, 1300
       00 00 10 00 
       00 00 01 00 
       B7 A0 04 14 
       05 00       
04479E 01 00 00 10 1371*  	dl 1, 16, 16, 256, fn_xevious_3_15, 1301
       00 00 10 00 
       00 00 01 00 
       D8 A0 04 15 
       05 00       
0447B0 01 00 00 10 1372*  	dl 1, 16, 16, 256, fn_xevious_3_16, 1302
       00 00 10 00 
       00 00 01 00 
       F9 A0 04 16 
       05 00       
0447C2 01 00 00 10 1373*  	dl 1, 16, 16, 256, fn_xevious_3_17, 1303
       00 00 10 00 
       00 00 01 00 
       1A A1 04 17 
       05 00       
0447D4 01 00 00 10 1374*  	dl 1, 16, 16, 256, fn_xevious_3_18, 1304
       00 00 10 00 
       00 00 01 00 
       3B A1 04 18 
       05 00       
0447E6 01 00 00 10 1375*  	dl 1, 16, 16, 256, fn_xevious_3_19, 1305
       00 00 10 00 
       00 00 01 00 
       5C A1 04 19 
       05 00       
0447F8 01 00 00 10 1376*  	dl 1, 16, 16, 256, fn_xevious_3_1A, 1306
       00 00 10 00 
       00 00 01 00 
       7D A1 04 1A 
       05 00       
04480A 01 00 00 10 1377*  	dl 1, 16, 16, 256, fn_xevious_3_1B, 1307
       00 00 10 00 
       00 00 01 00 
       9E A1 04 1B 
       05 00       
04481C 01 00 00 10 1378*  	dl 1, 16, 16, 256, fn_xevious_3_1C, 1308
       00 00 10 00 
       00 00 01 00 
       BF A1 04 1C 
       05 00       
04482E 01 00 00 10 1379*  	dl 1, 16, 16, 256, fn_xevious_3_1D, 1309
       00 00 10 00 
       00 00 01 00 
       E0 A1 04 1D 
       05 00       
044840 01 00 00 10 1380*  	dl 1, 16, 16, 256, fn_xevious_3_1E, 1310
       00 00 10 00 
       00 00 01 00 
       01 A2 04 1E 
       05 00       
044852 01 00 00 10 1381*  	dl 1, 16, 16, 256, fn_xevious_3_1F, 1311
       00 00 10 00 
       00 00 01 00 
       22 A2 04 1F 
       05 00       
044864 01 00 00 10 1382*  	dl 1, 16, 16, 256, fn_xevious_3_20, 1312
       00 00 10 00 
       00 00 01 00 
       43 A2 04 20 
       05 00       
044876 01 00 00 10 1383*  	dl 1, 16, 16, 256, fn_xevious_3_21, 1313
       00 00 10 00 
       00 00 01 00 
       64 A2 04 21 
       05 00       
044888 01 00 00 10 1384*  	dl 1, 16, 16, 256, fn_xevious_3_22, 1314
       00 00 10 00 
       00 00 01 00 
       85 A2 04 22 
       05 00       
04489A 01 00 00 10 1385*  	dl 1, 16, 16, 256, fn_xevious_3_23, 1315
       00 00 10 00 
       00 00 01 00 
       A6 A2 04 23 
       05 00       
0448AC 01 00 00 10 1386*  	dl 1, 16, 16, 256, fn_xevious_3_24, 1316
       00 00 10 00 
       00 00 01 00 
       C7 A2 04 24 
       05 00       
0448BE 01 00 00 10 1387*  	dl 1, 16, 16, 256, fn_xevious_3_25, 1317
       00 00 10 00 
       00 00 01 00 
       E8 A2 04 25 
       05 00       
0448D0 01 00 00 10 1388*  	dl 1, 16, 16, 256, fn_xevious_3_26, 1318
       00 00 10 00 
       00 00 01 00 
       09 A3 04 26 
       05 00       
0448E2 01 00 00 10 1389*  	dl 1, 16, 16, 256, fn_xevious_3_27, 1319
       00 00 10 00 
       00 00 01 00 
       2A A3 04 27 
       05 00       
0448F4 01 00 00 10 1390*  	dl 1, 16, 16, 256, fn_xevious_3_28, 1320
       00 00 10 00 
       00 00 01 00 
       4B A3 04 28 
       05 00       
044906 01 00 00 10 1391*  	dl 1, 16, 16, 256, fn_xevious_3_29, 1321
       00 00 10 00 
       00 00 01 00 
       6C A3 04 29 
       05 00       
044918 01 00 00 10 1392*  	dl 1, 16, 16, 256, fn_xevious_3_2A, 1322
       00 00 10 00 
       00 00 01 00 
       8D A3 04 2A 
       05 00       
04492A 01 00 00 10 1393*  	dl 1, 16, 16, 256, fn_xevious_3_2B, 1323
       00 00 10 00 
       00 00 01 00 
       AE A3 04 2B 
       05 00       
04493C 01 00 00 10 1394*  	dl 1, 16, 16, 256, fn_xevious_3_2C, 1324
       00 00 10 00 
       00 00 01 00 
       CF A3 04 2C 
       05 00       
04494E 01 00 00 10 1395*  	dl 1, 16, 16, 256, fn_xevious_3_2D, 1325
       00 00 10 00 
       00 00 01 00 
       F0 A3 04 2D 
       05 00       
044960 01 00 00 10 1396*  	dl 1, 16, 16, 256, fn_xevious_3_2E, 1326
       00 00 10 00 
       00 00 01 00 
       11 A4 04 2E 
       05 00       
044972 01 00 00 10 1397*  	dl 1, 16, 16, 256, fn_xevious_3_2F, 1327
       00 00 10 00 
       00 00 01 00 
       32 A4 04 2F 
       05 00       
044984 01 00 00 10 1398*  	dl 1, 16, 16, 256, fn_xevious_3_30, 1328
       00 00 10 00 
       00 00 01 00 
       53 A4 04 30 
       05 00       
044996 01 00 00 10 1399*  	dl 1, 16, 16, 256, fn_xevious_3_31, 1329
       00 00 10 00 
       00 00 01 00 
       74 A4 04 31 
       05 00       
0449A8 01 00 00 10 1400*  	dl 1, 16, 16, 256, fn_xevious_3_32, 1330
       00 00 10 00 
       00 00 01 00 
       95 A4 04 32 
       05 00       
0449BA 01 00 00 10 1401*  	dl 1, 16, 16, 256, fn_xevious_3_33, 1331
       00 00 10 00 
       00 00 01 00 
       B6 A4 04 33 
       05 00       
0449CC 01 00 00 10 1402*  	dl 1, 16, 16, 256, fn_xevious_3_34, 1332
       00 00 10 00 
       00 00 01 00 
       D7 A4 04 34 
       05 00       
0449DE 01 00 00 10 1403*  	dl 1, 16, 16, 256, fn_xevious_3_35, 1333
       00 00 10 00 
       00 00 01 00 
       F8 A4 04 35 
       05 00       
0449F0 01 00 00 10 1404*  	dl 1, 16, 16, 256, fn_xevious_3_36, 1334
       00 00 10 00 
       00 00 01 00 
       19 A5 04 36 
       05 00       
044A02 01 00 00 10 1405*  	dl 1, 16, 16, 256, fn_xevious_3_37, 1335
       00 00 10 00 
       00 00 01 00 
       3A A5 04 37 
       05 00       
044A14 01 00 00 10 1406*  	dl 1, 16, 16, 256, fn_xevious_3_38, 1336
       00 00 10 00 
       00 00 01 00 
       5B A5 04 38 
       05 00       
044A26 01 00 00 10 1407*  	dl 1, 16, 16, 256, fn_xevious_3_39, 1337
       00 00 10 00 
       00 00 01 00 
       7C A5 04 39 
       05 00       
044A38 01 00 00 10 1408*  	dl 1, 16, 16, 256, fn_xevious_3_3A, 1338
       00 00 10 00 
       00 00 01 00 
       9D A5 04 3A 
       05 00       
044A4A 01 00 00 10 1409*  	dl 1, 16, 16, 256, fn_xevious_3_3B, 1339
       00 00 10 00 
       00 00 01 00 
       BE A5 04 3B 
       05 00       
044A5C 01 00 00 10 1410*  	dl 1, 16, 16, 256, fn_xevious_3_3C, 1340
       00 00 10 00 
       00 00 01 00 
       DF A5 04 3C 
       05 00       
044A6E 01 00 00 10 1411*  	dl 1, 16, 16, 256, fn_xevious_3_3D, 1341
       00 00 10 00 
       00 00 01 00 
       00 A6 04 3D 
       05 00       
044A80 01 00 00 10 1412*  	dl 1, 16, 16, 256, fn_xevious_3_3E, 1342
       00 00 10 00 
       00 00 01 00 
       21 A6 04 3E 
       05 00       
044A92 01 00 00 10 1413*  	dl 1, 16, 16, 256, fn_xevious_3_3F, 1343
       00 00 10 00 
       00 00 01 00 
       42 A6 04 3F 
       05 00       
044AA4 01 00 00 10 1414*  	dl 1, 16, 16, 256, fn_xevious_3_40, 1344
       00 00 10 00 
       00 00 01 00 
       63 A6 04 40 
       05 00       
044AB6 01 00 00 10 1415*  	dl 1, 16, 16, 256, fn_xevious_3_41, 1345
       00 00 10 00 
       00 00 01 00 
       84 A6 04 41 
       05 00       
044AC8 01 00 00 10 1416*  	dl 1, 16, 16, 256, fn_xevious_3_42, 1346
       00 00 10 00 
       00 00 01 00 
       A5 A6 04 42 
       05 00       
044ADA 01 00 00 10 1417*  	dl 1, 16, 16, 256, fn_xevious_3_43, 1347
       00 00 10 00 
       00 00 01 00 
       C6 A6 04 43 
       05 00       
044AEC 01 00 00 10 1418*  	dl 1, 16, 16, 256, fn_xevious_3_44, 1348
       00 00 10 00 
       00 00 01 00 
       E7 A6 04 44 
       05 00       
044AFE 01 00 00 10 1419*  	dl 1, 16, 16, 256, fn_xevious_3_45, 1349
       00 00 10 00 
       00 00 01 00 
       08 A7 04 45 
       05 00       
044B10 01 00 00 10 1420*  	dl 1, 16, 16, 256, fn_xevious_3_46, 1350
       00 00 10 00 
       00 00 01 00 
       29 A7 04 46 
       05 00       
044B22 01 00 00 10 1421*  	dl 1, 16, 16, 256, fn_xevious_3_47, 1351
       00 00 10 00 
       00 00 01 00 
       4A A7 04 47 
       05 00       
044B34 01 00 00 10 1422*  	dl 1, 16, 16, 256, fn_xevious_3_48, 1352
       00 00 10 00 
       00 00 01 00 
       6B A7 04 48 
       05 00       
044B46 01 00 00 10 1423*  	dl 1, 16, 16, 256, fn_xevious_3_49, 1353
       00 00 10 00 
       00 00 01 00 
       8C A7 04 49 
       05 00       
044B58 01 00 00 10 1424*  	dl 1, 16, 16, 256, fn_xevious_3_4A, 1354
       00 00 10 00 
       00 00 01 00 
       AD A7 04 4A 
       05 00       
044B6A 01 00 00 10 1425*  	dl 1, 16, 16, 256, fn_xevious_3_4B, 1355
       00 00 10 00 
       00 00 01 00 
       CE A7 04 4B 
       05 00       
044B7C 01 00 00 10 1426*  	dl 1, 16, 16, 256, fn_xevious_3_4C, 1356
       00 00 10 00 
       00 00 01 00 
       EF A7 04 4C 
       05 00       
044B8E 01 00 00 10 1427*  	dl 1, 16, 16, 256, fn_xevious_3_4D, 1357
       00 00 10 00 
       00 00 01 00 
       10 A8 04 4D 
       05 00       
044BA0 01 00 00 10 1428*  	dl 1, 16, 16, 256, fn_xevious_3_4E, 1358
       00 00 10 00 
       00 00 01 00 
       31 A8 04 4E 
       05 00       
044BB2 01 00 00 10 1429*  	dl 1, 16, 16, 256, fn_xevious_3_4F, 1359
       00 00 10 00 
       00 00 01 00 
       52 A8 04 4F 
       05 00       
044BC4 01 00 00 10 1430*  	dl 1, 16, 16, 256, fn_xevious_3_50, 1360
       00 00 10 00 
       00 00 01 00 
       73 A8 04 50 
       05 00       
044BD6 01 00 00 10 1431*  	dl 1, 16, 16, 256, fn_xevious_3_51, 1361
       00 00 10 00 
       00 00 01 00 
       94 A8 04 51 
       05 00       
044BE8 01 00 00 10 1432*  	dl 1, 16, 16, 256, fn_xevious_3_52, 1362
       00 00 10 00 
       00 00 01 00 
       B5 A8 04 52 
       05 00       
044BFA 01 00 00 10 1433*  	dl 1, 16, 16, 256, fn_xevious_3_53, 1363
       00 00 10 00 
       00 00 01 00 
       D6 A8 04 53 
       05 00       
044C0C 01 00 00 10 1434*  	dl 1, 16, 16, 256, fn_xevious_3_54, 1364
       00 00 10 00 
       00 00 01 00 
       F7 A8 04 54 
       05 00       
044C1E 01 00 00 10 1435*  	dl 1, 16, 16, 256, fn_xevious_3_55, 1365
       00 00 10 00 
       00 00 01 00 
       18 A9 04 55 
       05 00       
044C30 01 00 00 10 1436*  	dl 1, 16, 16, 256, fn_xevious_3_56, 1366
       00 00 10 00 
       00 00 01 00 
       39 A9 04 56 
       05 00       
044C42 01 00 00 10 1437*  	dl 1, 16, 16, 256, fn_xevious_3_57, 1367
       00 00 10 00 
       00 00 01 00 
       5A A9 04 57 
       05 00       
044C54 01 00 00 10 1438*  	dl 1, 16, 16, 256, fn_xevious_3_58, 1368
       00 00 10 00 
       00 00 01 00 
       7B A9 04 58 
       05 00       
044C66 01 00 00 10 1439*  	dl 1, 16, 16, 256, fn_xevious_3_59, 1369
       00 00 10 00 
       00 00 01 00 
       9C A9 04 59 
       05 00       
044C78 01 00 00 10 1440*  	dl 1, 16, 16, 256, fn_xevious_3_5A, 1370
       00 00 10 00 
       00 00 01 00 
       BD A9 04 5A 
       05 00       
044C8A 01 00 00 10 1441*  	dl 1, 16, 16, 256, fn_xevious_3_5B, 1371
       00 00 10 00 
       00 00 01 00 
       DE A9 04 5B 
       05 00       
044C9C 01 00 00 10 1442*  	dl 1, 16, 16, 256, fn_xevious_3_5C, 1372
       00 00 10 00 
       00 00 01 00 
       FF A9 04 5C 
       05 00       
044CAE 01 00 00 10 1443*  	dl 1, 16, 16, 256, fn_xevious_3_5D, 1373
       00 00 10 00 
       00 00 01 00 
       20 AA 04 5D 
       05 00       
044CC0 01 00 00 10 1444*  	dl 1, 16, 16, 256, fn_xevious_3_5E, 1374
       00 00 10 00 
       00 00 01 00 
       41 AA 04 5E 
       05 00       
044CD2 01 00 00 10 1445*  	dl 1, 16, 16, 256, fn_xevious_3_5F, 1375
       00 00 10 00 
       00 00 01 00 
       62 AA 04 5F 
       05 00       
044CE4 01 00 00 10 1446*  	dl 1, 16, 16, 256, fn_xevious_3_60, 1376
       00 00 10 00 
       00 00 01 00 
       83 AA 04 60 
       05 00       
044CF6 01 00 00 10 1447*  	dl 1, 16, 16, 256, fn_xevious_3_61, 1377
       00 00 10 00 
       00 00 01 00 
       A4 AA 04 61 
       05 00       
044D08 01 00 00 10 1448*  	dl 1, 16, 16, 256, fn_xevious_3_62, 1378
       00 00 10 00 
       00 00 01 00 
       C5 AA 04 62 
       05 00       
044D1A 01 00 00 10 1449*  	dl 1, 16, 16, 256, fn_xevious_3_63, 1379
       00 00 10 00 
       00 00 01 00 
       E6 AA 04 63 
       05 00       
044D2C 01 00 00 10 1450*  	dl 1, 16, 16, 256, fn_xevious_3_64, 1380
       00 00 10 00 
       00 00 01 00 
       07 AB 04 64 
       05 00       
044D3E 01 00 00 10 1451*  	dl 1, 16, 16, 256, fn_xevious_3_65, 1381
       00 00 10 00 
       00 00 01 00 
       28 AB 04 65 
       05 00       
044D50 01 00 00 10 1452*  	dl 1, 16, 16, 256, fn_xevious_3_66, 1382
       00 00 10 00 
       00 00 01 00 
       49 AB 04 66 
       05 00       
044D62 01 00 00 10 1453*  	dl 1, 16, 16, 256, fn_xevious_3_67, 1383
       00 00 10 00 
       00 00 01 00 
       6A AB 04 67 
       05 00       
044D74 01 00 00 10 1454*  	dl 1, 16, 16, 256, fn_xevious_3_68, 1384
       00 00 10 00 
       00 00 01 00 
       8B AB 04 68 
       05 00       
044D86 01 00 00 10 1455*  	dl 1, 16, 16, 256, fn_xevious_3_69, 1385
       00 00 10 00 
       00 00 01 00 
       AC AB 04 69 
       05 00       
044D98 01 00 00 10 1456*  	dl 1, 16, 16, 256, fn_xevious_3_6A, 1386
       00 00 10 00 
       00 00 01 00 
       CD AB 04 6A 
       05 00       
044DAA 01 00 00 10 1457*  	dl 1, 16, 16, 256, fn_xevious_3_6B, 1387
       00 00 10 00 
       00 00 01 00 
       EE AB 04 6B 
       05 00       
044DBC 01 00 00 10 1458*  	dl 1, 16, 16, 256, fn_xevious_3_6C, 1388
       00 00 10 00 
       00 00 01 00 
       0F AC 04 6C 
       05 00       
044DCE 01 00 00 10 1459*  	dl 1, 16, 16, 256, fn_xevious_3_6D, 1389
       00 00 10 00 
       00 00 01 00 
       30 AC 04 6D 
       05 00       
044DE0 01 00 00 10 1460*  	dl 1, 16, 16, 256, fn_xevious_3_6E, 1390
       00 00 10 00 
       00 00 01 00 
       51 AC 04 6E 
       05 00       
044DF2 01 00 00 10 1461*  	dl 1, 16, 16, 256, fn_xevious_3_6F, 1391
       00 00 10 00 
       00 00 01 00 
       72 AC 04 6F 
       05 00       
044E04 01 00 00 10 1462*  	dl 1, 16, 16, 256, fn_xevious_3_70, 1392
       00 00 10 00 
       00 00 01 00 
       93 AC 04 70 
       05 00       
044E16 01 00 00 10 1463*  	dl 1, 16, 16, 256, fn_xevious_3_71, 1393
       00 00 10 00 
       00 00 01 00 
       B4 AC 04 71 
       05 00       
044E28 01 00 00 10 1464*  	dl 1, 16, 16, 256, fn_xevious_3_72, 1394
       00 00 10 00 
       00 00 01 00 
       D5 AC 04 72 
       05 00       
044E3A 01 00 00 10 1465*  	dl 1, 16, 16, 256, fn_xevious_3_73, 1395
       00 00 10 00 
       00 00 01 00 
       F6 AC 04 73 
       05 00       
044E4C 01 00 00 10 1466*  	dl 1, 16, 16, 256, fn_xevious_3_74, 1396
       00 00 10 00 
       00 00 01 00 
       17 AD 04 74 
       05 00       
044E5E 01 00 00 10 1467*  	dl 1, 16, 16, 256, fn_xevious_3_75, 1397
       00 00 10 00 
       00 00 01 00 
       38 AD 04 75 
       05 00       
044E70 01 00 00 10 1468*  	dl 1, 16, 16, 256, fn_xevious_3_76, 1398
       00 00 10 00 
       00 00 01 00 
       59 AD 04 76 
       05 00       
044E82 01 00 00 10 1469*  	dl 1, 16, 16, 256, fn_xevious_3_77, 1399
       00 00 10 00 
       00 00 01 00 
       7A AD 04 77 
       05 00       
044E94 01 00 00 10 1470*  	dl 1, 16, 16, 256, fn_xevious_3_78, 1400
       00 00 10 00 
       00 00 01 00 
       9B AD 04 78 
       05 00       
044EA6 01 00 00 10 1471*  	dl 1, 16, 16, 256, fn_xevious_3_79, 1401
       00 00 10 00 
       00 00 01 00 
       BC AD 04 79 
       05 00       
044EB8 01 00 00 10 1472*  	dl 1, 16, 16, 256, fn_xevious_3_7A, 1402
       00 00 10 00 
       00 00 01 00 
       DD AD 04 7A 
       05 00       
044ECA 01 00 00 10 1473*  	dl 1, 16, 16, 256, fn_xevious_3_7B, 1403
       00 00 10 00 
       00 00 01 00 
       FE AD 04 7B 
       05 00       
044EDC 01 00 00 10 1474*  	dl 1, 16, 16, 256, fn_xevious_3_7C, 1404
       00 00 10 00 
       00 00 01 00 
       1F AE 04 7C 
       05 00       
044EEE 01 00 00 10 1475*  	dl 1, 16, 16, 256, fn_xevious_3_7D, 1405
       00 00 10 00 
       00 00 01 00 
       40 AE 04 7D 
       05 00       
044F00 01 00 00 10 1476*  	dl 1, 16, 16, 256, fn_xevious_3_7E, 1406
       00 00 10 00 
       00 00 01 00 
       61 AE 04 7E 
       05 00       
044F12 01 00 00 10 1477*  	dl 1, 16, 16, 256, fn_xevious_3_7F, 1407
       00 00 10 00 
       00 00 01 00 
       82 AE 04 7F 
       05 00       
044F24 01 00 00 10 1478*  	dl 1, 16, 16, 256, fn_xevious_3_80, 1408
       00 00 10 00 
       00 00 01 00 
       A3 AE 04 80 
       05 00       
044F36 01 00 00 10 1479*  	dl 1, 16, 16, 256, fn_xevious_3_81, 1409
       00 00 10 00 
       00 00 01 00 
       C4 AE 04 81 
       05 00       
044F48 01 00 00 10 1480*  	dl 1, 16, 16, 256, fn_xevious_3_82, 1410
       00 00 10 00 
       00 00 01 00 
       E5 AE 04 82 
       05 00       
044F5A 01 00 00 10 1481*  	dl 1, 16, 16, 256, fn_xevious_3_83, 1411
       00 00 10 00 
       00 00 01 00 
       06 AF 04 83 
       05 00       
044F6C 01 00 00 10 1482*  	dl 1, 16, 16, 256, fn_xevious_3_84, 1412
       00 00 10 00 
       00 00 01 00 
       27 AF 04 84 
       05 00       
044F7E 01 00 00 10 1483*  	dl 1, 16, 16, 256, fn_xevious_3_85, 1413
       00 00 10 00 
       00 00 01 00 
       48 AF 04 85 
       05 00       
044F90 01 00 00 10 1484*  	dl 1, 16, 16, 256, fn_xevious_3_86, 1414
       00 00 10 00 
       00 00 01 00 
       69 AF 04 86 
       05 00       
044FA2 01 00 00 10 1485*  	dl 1, 16, 16, 256, fn_xevious_3_87, 1415
       00 00 10 00 
       00 00 01 00 
       8A AF 04 87 
       05 00       
044FB4 01 00 00 10 1486*  	dl 1, 16, 16, 256, fn_xevious_3_88, 1416
       00 00 10 00 
       00 00 01 00 
       AB AF 04 88 
       05 00       
044FC6 01 00 00 10 1487*  	dl 1, 16, 16, 256, fn_xevious_3_89, 1417
       00 00 10 00 
       00 00 01 00 
       CC AF 04 89 
       05 00       
044FD8 01 00 00 10 1488*  	dl 1, 16, 16, 256, fn_xevious_3_8A, 1418
       00 00 10 00 
       00 00 01 00 
       ED AF 04 8A 
       05 00       
044FEA 01 00 00 10 1489*  	dl 1, 16, 16, 256, fn_xevious_3_8B, 1419
       00 00 10 00 
       00 00 01 00 
       0E B0 04 8B 
       05 00       
044FFC 01 00 00 10 1490*  	dl 1, 16, 16, 256, fn_xevious_3_8C, 1420
       00 00 10 00 
       00 00 01 00 
       2F B0 04 8C 
       05 00       
04500E 01 00 00 10 1491*  	dl 1, 16, 16, 256, fn_xevious_3_8D, 1421
       00 00 10 00 
       00 00 01 00 
       50 B0 04 8D 
       05 00       
045020 01 00 00 10 1492*  	dl 1, 16, 16, 256, fn_xevious_3_8E, 1422
       00 00 10 00 
       00 00 01 00 
       71 B0 04 8E 
       05 00       
045032 01 00 00 10 1493*  	dl 1, 16, 16, 256, fn_xevious_3_8F, 1423
       00 00 10 00 
       00 00 01 00 
       92 B0 04 8F 
       05 00       
045044 01 00 00 10 1494*  	dl 1, 16, 16, 256, fn_xevious_3_90, 1424
       00 00 10 00 
       00 00 01 00 
       B3 B0 04 90 
       05 00       
045056 01 00 00 10 1495*  	dl 1, 16, 16, 256, fn_xevious_3_91, 1425
       00 00 10 00 
       00 00 01 00 
       D4 B0 04 91 
       05 00       
045068 01 00 00 10 1496*  	dl 1, 16, 16, 256, fn_xevious_3_92, 1426
       00 00 10 00 
       00 00 01 00 
       F5 B0 04 92 
       05 00       
04507A 01 00 00 10 1497*  	dl 1, 16, 16, 256, fn_xevious_3_93, 1427
       00 00 10 00 
       00 00 01 00 
       16 B1 04 93 
       05 00       
04508C 01 00 00 10 1498*  	dl 1, 16, 16, 256, fn_xevious_3_94, 1428
       00 00 10 00 
       00 00 01 00 
       37 B1 04 94 
       05 00       
04509E 01 00 00 10 1499*  	dl 1, 16, 16, 256, fn_xevious_3_95, 1429
       00 00 10 00 
       00 00 01 00 
       58 B1 04 95 
       05 00       
0450B0 01 00 00 10 1500*  	dl 1, 16, 16, 256, fn_xevious_3_96, 1430
       00 00 10 00 
       00 00 01 00 
       79 B1 04 96 
       05 00       
0450C2 01 00 00 10 1501*  	dl 1, 16, 16, 256, fn_xevious_3_97, 1431
       00 00 10 00 
       00 00 01 00 
       9A B1 04 97 
       05 00       
0450D4 01 00 00 10 1502*  	dl 1, 16, 16, 256, fn_xevious_3_98, 1432
       00 00 10 00 
       00 00 01 00 
       BB B1 04 98 
       05 00       
0450E6 01 00 00 10 1503*  	dl 1, 16, 16, 256, fn_xevious_3_99, 1433
       00 00 10 00 
       00 00 01 00 
       DC B1 04 99 
       05 00       
0450F8 01 00 00 10 1504*  	dl 1, 16, 16, 256, fn_xevious_3_9A, 1434
       00 00 10 00 
       00 00 01 00 
       FD B1 04 9A 
       05 00       
04510A 01 00 00 10 1505*  	dl 1, 16, 16, 256, fn_xevious_3_9B, 1435
       00 00 10 00 
       00 00 01 00 
       1E B2 04 9B 
       05 00       
04511C 01 00 00 10 1506*  	dl 1, 16, 16, 256, fn_xevious_3_9C, 1436
       00 00 10 00 
       00 00 01 00 
       3F B2 04 9C 
       05 00       
04512E 01 00 00 10 1507*  	dl 1, 16, 16, 256, fn_xevious_3_9D, 1437
       00 00 10 00 
       00 00 01 00 
       60 B2 04 9D 
       05 00       
045140 01 00 00 10 1508*  	dl 1, 16, 16, 256, fn_xevious_3_9E, 1438
       00 00 10 00 
       00 00 01 00 
       81 B2 04 9E 
       05 00       
045152 01 00 00 10 1509*  	dl 1, 16, 16, 256, fn_xevious_3_9F, 1439
       00 00 10 00 
       00 00 01 00 
       A2 B2 04 9F 
       05 00       
045164 01 00 00 10 1510*  	dl 1, 16, 16, 256, fn_xevious_3_A0, 1440
       00 00 10 00 
       00 00 01 00 
       C3 B2 04 A0 
       05 00       
045176 01 00 00 10 1511*  	dl 1, 16, 16, 256, fn_xevious_3_A1, 1441
       00 00 10 00 
       00 00 01 00 
       E4 B2 04 A1 
       05 00       
045188 01 00 00 10 1512*  	dl 1, 16, 16, 256, fn_xevious_3_A2, 1442
       00 00 10 00 
       00 00 01 00 
       05 B3 04 A2 
       05 00       
04519A 01 00 00 10 1513*  	dl 1, 16, 16, 256, fn_xevious_3_A3, 1443
       00 00 10 00 
       00 00 01 00 
       26 B3 04 A3 
       05 00       
0451AC 01 00 00 10 1514*  	dl 1, 16, 16, 256, fn_xevious_3_A4, 1444
       00 00 10 00 
       00 00 01 00 
       47 B3 04 A4 
       05 00       
0451BE 01 00 00 10 1515*  	dl 1, 16, 16, 256, fn_xevious_3_A5, 1445
       00 00 10 00 
       00 00 01 00 
       68 B3 04 A5 
       05 00       
0451D0 01 00 00 10 1516*  	dl 1, 16, 16, 256, fn_xevious_3_A6, 1446
       00 00 10 00 
       00 00 01 00 
       89 B3 04 A6 
       05 00       
0451E2 01 00 00 10 1517*  	dl 1, 16, 16, 256, fn_xevious_3_A7, 1447
       00 00 10 00 
       00 00 01 00 
       AA B3 04 A7 
       05 00       
0451F4 01 00 00 10 1518*  	dl 1, 16, 16, 256, fn_xevious_3_A8, 1448
       00 00 10 00 
       00 00 01 00 
       CB B3 04 A8 
       05 00       
045206 01 00 00 10 1519*  	dl 1, 16, 16, 256, fn_xevious_3_A9, 1449
       00 00 10 00 
       00 00 01 00 
       EC B3 04 A9 
       05 00       
045218 01 00 00 10 1520*  	dl 1, 16, 16, 256, fn_xevious_3_AA, 1450
       00 00 10 00 
       00 00 01 00 
       0D B4 04 AA 
       05 00       
04522A 01 00 00 10 1521*  	dl 1, 16, 16, 256, fn_xevious_3_AB, 1451
       00 00 10 00 
       00 00 01 00 
       2E B4 04 AB 
       05 00       
04523C 01 00 00 10 1522*  	dl 1, 16, 16, 256, fn_xevious_3_AC, 1452
       00 00 10 00 
       00 00 01 00 
       4F B4 04 AC 
       05 00       
04524E 01 00 00 10 1523*  	dl 1, 16, 16, 256, fn_xevious_3_AD, 1453
       00 00 10 00 
       00 00 01 00 
       70 B4 04 AD 
       05 00       
045260 01 00 00 10 1524*  	dl 1, 16, 16, 256, fn_xevious_3_AE, 1454
       00 00 10 00 
       00 00 01 00 
       91 B4 04 AE 
       05 00       
045272 01 00 00 10 1525*  	dl 1, 16, 16, 256, fn_xevious_3_AF, 1455
       00 00 10 00 
       00 00 01 00 
       B2 B4 04 AF 
       05 00       
045284 01 00 00 10 1526*  	dl 1, 16, 16, 256, fn_xevious_3_B0, 1456
       00 00 10 00 
       00 00 01 00 
       D3 B4 04 B0 
       05 00       
045296 01 00 00 10 1527*  	dl 1, 16, 16, 256, fn_xevious_3_B1, 1457
       00 00 10 00 
       00 00 01 00 
       F4 B4 04 B1 
       05 00       
0452A8 01 00 00 10 1528*  	dl 1, 16, 16, 256, fn_xevious_3_B2, 1458
       00 00 10 00 
       00 00 01 00 
       15 B5 04 B2 
       05 00       
0452BA 01 00 00 10 1529*  	dl 1, 16, 16, 256, fn_xevious_3_B3, 1459
       00 00 10 00 
       00 00 01 00 
       36 B5 04 B3 
       05 00       
0452CC 01 00 00 10 1530*  	dl 1, 16, 16, 256, fn_xevious_3_B4, 1460
       00 00 10 00 
       00 00 01 00 
       57 B5 04 B4 
       05 00       
0452DE 01 00 00 10 1531*  	dl 1, 16, 16, 256, fn_xevious_3_B5, 1461
       00 00 10 00 
       00 00 01 00 
       78 B5 04 B5 
       05 00       
0452F0 01 00 00 10 1532*  	dl 1, 16, 16, 256, fn_xevious_3_B6, 1462
       00 00 10 00 
       00 00 01 00 
       99 B5 04 B6 
       05 00       
045302 01 00 00 10 1533*  	dl 1, 16, 16, 256, fn_xevious_3_B7, 1463
       00 00 10 00 
       00 00 01 00 
       BA B5 04 B7 
       05 00       
045314 01 00 00 10 1534*  	dl 1, 16, 16, 256, fn_xevious_3_B8, 1464
       00 00 10 00 
       00 00 01 00 
       DB B5 04 B8 
       05 00       
045326 01 00 00 10 1535*  	dl 1, 16, 16, 256, fn_xevious_3_B9, 1465
       00 00 10 00 
       00 00 01 00 
       FC B5 04 B9 
       05 00       
045338 01 00 00 10 1536*  	dl 1, 16, 16, 256, fn_xevious_3_BA, 1466
       00 00 10 00 
       00 00 01 00 
       1D B6 04 BA 
       05 00       
04534A 01 00 00 10 1537*  	dl 1, 16, 16, 256, fn_xevious_3_BB, 1467
       00 00 10 00 
       00 00 01 00 
       3E B6 04 BB 
       05 00       
04535C 01 00 00 10 1538*  	dl 1, 16, 16, 256, fn_xevious_3_BC, 1468
       00 00 10 00 
       00 00 01 00 
       5F B6 04 BC 
       05 00       
04536E 01 00 00 10 1539*  	dl 1, 16, 16, 256, fn_xevious_3_BD, 1469
       00 00 10 00 
       00 00 01 00 
       80 B6 04 BD 
       05 00       
045380 01 00 00 10 1540*  	dl 1, 16, 16, 256, fn_xevious_3_BE, 1470
       00 00 10 00 
       00 00 01 00 
       A1 B6 04 BE 
       05 00       
045392 01 00 00 10 1541*  	dl 1, 16, 16, 256, fn_xevious_3_BF, 1471
       00 00 10 00 
       00 00 01 00 
       C2 B6 04 BF 
       05 00       
0453A4 01 00 00 10 1542*  	dl 1, 16, 16, 256, fn_xevious_3_C0, 1472
       00 00 10 00 
       00 00 01 00 
       E3 B6 04 C0 
       05 00       
0453B6 01 00 00 10 1543*  	dl 1, 16, 16, 256, fn_xevious_3_C1, 1473
       00 00 10 00 
       00 00 01 00 
       04 B7 04 C1 
       05 00       
0453C8 01 00 00 10 1544*  	dl 1, 16, 16, 256, fn_xevious_3_C2, 1474
       00 00 10 00 
       00 00 01 00 
       25 B7 04 C2 
       05 00       
0453DA 01 00 00 10 1545*  	dl 1, 16, 16, 256, fn_xevious_3_C3, 1475
       00 00 10 00 
       00 00 01 00 
       46 B7 04 C3 
       05 00       
0453EC 01 00 00 10 1546*  	dl 1, 16, 16, 256, fn_xevious_3_C4, 1476
       00 00 10 00 
       00 00 01 00 
       67 B7 04 C4 
       05 00       
0453FE 01 00 00 10 1547*  	dl 1, 16, 16, 256, fn_xevious_3_C5, 1477
       00 00 10 00 
       00 00 01 00 
       88 B7 04 C5 
       05 00       
045410 01 00 00 10 1548*  	dl 1, 16, 16, 256, fn_xevious_3_C6, 1478
       00 00 10 00 
       00 00 01 00 
       A9 B7 04 C6 
       05 00       
045422 01 00 00 10 1549*  	dl 1, 16, 16, 256, fn_xevious_3_C7, 1479
       00 00 10 00 
       00 00 01 00 
       CA B7 04 C7 
       05 00       
045434 01 00 00 10 1550*  	dl 1, 16, 16, 256, fn_xevious_3_C8, 1480
       00 00 10 00 
       00 00 01 00 
       EB B7 04 C8 
       05 00       
045446 01 00 00 10 1551*  	dl 1, 16, 16, 256, fn_xevious_3_C9, 1481
       00 00 10 00 
       00 00 01 00 
       0C B8 04 C9 
       05 00       
045458 01 00 00 10 1552*  	dl 1, 16, 16, 256, fn_xevious_3_CA, 1482
       00 00 10 00 
       00 00 01 00 
       2D B8 04 CA 
       05 00       
04546A 01 00 00 10 1553*  	dl 1, 16, 16, 256, fn_xevious_3_CB, 1483
       00 00 10 00 
       00 00 01 00 
       4E B8 04 CB 
       05 00       
04547C 01 00 00 10 1554*  	dl 1, 16, 16, 256, fn_xevious_3_CC, 1484
       00 00 10 00 
       00 00 01 00 
       6F B8 04 CC 
       05 00       
04548E 01 00 00 10 1555*  	dl 1, 16, 16, 256, fn_xevious_3_CD, 1485
       00 00 10 00 
       00 00 01 00 
       90 B8 04 CD 
       05 00       
0454A0 01 00 00 10 1556*  	dl 1, 16, 16, 256, fn_xevious_3_CE, 1486
       00 00 10 00 
       00 00 01 00 
       B1 B8 04 CE 
       05 00       
0454B2 01 00 00 10 1557*  	dl 1, 16, 16, 256, fn_xevious_3_CF, 1487
       00 00 10 00 
       00 00 01 00 
       D2 B8 04 CF 
       05 00       
0454C4 01 00 00 10 1558*  	dl 1, 16, 16, 256, fn_xevious_3_D0, 1488
       00 00 10 00 
       00 00 01 00 
       F3 B8 04 D0 
       05 00       
0454D6 01 00 00 10 1559*  	dl 1, 16, 16, 256, fn_xevious_3_D1, 1489
       00 00 10 00 
       00 00 01 00 
       14 B9 04 D1 
       05 00       
0454E8 01 00 00 10 1560*  	dl 1, 16, 16, 256, fn_xevious_3_D2, 1490
       00 00 10 00 
       00 00 01 00 
       35 B9 04 D2 
       05 00       
0454FA 01 00 00 10 1561*  	dl 1, 16, 16, 256, fn_xevious_3_D3, 1491
       00 00 10 00 
       00 00 01 00 
       56 B9 04 D3 
       05 00       
04550C 01 00 00 10 1562*  	dl 1, 16, 16, 256, fn_xevious_3_D4, 1492
       00 00 10 00 
       00 00 01 00 
       77 B9 04 D4 
       05 00       
04551E 01 00 00 10 1563*  	dl 1, 16, 16, 256, fn_xevious_3_D5, 1493
       00 00 10 00 
       00 00 01 00 
       98 B9 04 D5 
       05 00       
045530 01 00 00 10 1564*  	dl 1, 16, 16, 256, fn_xevious_3_D6, 1494
       00 00 10 00 
       00 00 01 00 
       B9 B9 04 D6 
       05 00       
045542 01 00 00 10 1565*  	dl 1, 16, 16, 256, fn_xevious_3_D7, 1495
       00 00 10 00 
       00 00 01 00 
       DA B9 04 D7 
       05 00       
045554 01 00 00 10 1566*  	dl 1, 16, 16, 256, fn_xevious_3_D8, 1496
       00 00 10 00 
       00 00 01 00 
       FB B9 04 D8 
       05 00       
045566 01 00 00 10 1567*  	dl 1, 16, 16, 256, fn_xevious_3_D9, 1497
       00 00 10 00 
       00 00 01 00 
       1C BA 04 D9 
       05 00       
045578 01 00 00 10 1568*  	dl 1, 16, 16, 256, fn_xevious_3_DA, 1498
       00 00 10 00 
       00 00 01 00 
       3D BA 04 DA 
       05 00       
04558A 01 00 00 10 1569*  	dl 1, 16, 16, 256, fn_xevious_3_DB, 1499
       00 00 10 00 
       00 00 01 00 
       5E BA 04 DB 
       05 00       
04559C 01 00 00 10 1570*  	dl 1, 16, 16, 256, fn_xevious_3_DC, 1500
       00 00 10 00 
       00 00 01 00 
       7F BA 04 DC 
       05 00       
0455AE 01 00 00 10 1571*  	dl 1, 16, 16, 256, fn_xevious_3_DD, 1501
       00 00 10 00 
       00 00 01 00 
       A0 BA 04 DD 
       05 00       
0455C0 01 00 00 10 1572*  	dl 1, 16, 16, 256, fn_xevious_3_DE, 1502
       00 00 10 00 
       00 00 01 00 
       C1 BA 04 DE 
       05 00       
0455D2 01 00 00 10 1573*  	dl 1, 16, 16, 256, fn_xevious_3_DF, 1503
       00 00 10 00 
       00 00 01 00 
       E2 BA 04 DF 
       05 00       
0455E4 01 00 00 10 1574*  	dl 1, 16, 16, 256, fn_xevious_3_E0, 1504
       00 00 10 00 
       00 00 01 00 
       03 BB 04 E0 
       05 00       
0455F6 01 00 00 10 1575*  	dl 1, 16, 16, 256, fn_xevious_3_E1, 1505
       00 00 10 00 
       00 00 01 00 
       24 BB 04 E1 
       05 00       
045608 01 00 00 10 1576*  	dl 1, 16, 16, 256, fn_xevious_3_E2, 1506
       00 00 10 00 
       00 00 01 00 
       45 BB 04 E2 
       05 00       
04561A 01 00 00 10 1577*  	dl 1, 16, 16, 256, fn_xevious_3_E3, 1507
       00 00 10 00 
       00 00 01 00 
       66 BB 04 E3 
       05 00       
04562C 01 00 00 10 1578*  	dl 1, 16, 16, 256, fn_xevious_3_E4, 1508
       00 00 10 00 
       00 00 01 00 
       87 BB 04 E4 
       05 00       
04563E 01 00 00 10 1579*  	dl 1, 16, 16, 256, fn_xevious_3_E5, 1509
       00 00 10 00 
       00 00 01 00 
       A8 BB 04 E5 
       05 00       
045650 01 00 00 10 1580*  	dl 1, 16, 16, 256, fn_xevious_3_E6, 1510
       00 00 10 00 
       00 00 01 00 
       C9 BB 04 E6 
       05 00       
045662 01 00 00 10 1581*  	dl 1, 16, 16, 256, fn_xevious_3_E7, 1511
       00 00 10 00 
       00 00 01 00 
       EA BB 04 E7 
       05 00       
045674 01 00 00 10 1582*  	dl 1, 16, 16, 256, fn_xevious_3_E8, 1512
       00 00 10 00 
       00 00 01 00 
       0B BC 04 E8 
       05 00       
045686 01 00 00 10 1583*  	dl 1, 16, 16, 256, fn_xevious_3_E9, 1513
       00 00 10 00 
       00 00 01 00 
       2C BC 04 E9 
       05 00       
045698 01 00 00 10 1584*  	dl 1, 16, 16, 256, fn_xevious_3_EA, 1514
       00 00 10 00 
       00 00 01 00 
       4D BC 04 EA 
       05 00       
0456AA 01 00 00 10 1585*  	dl 1, 16, 16, 256, fn_xevious_3_EB, 1515
       00 00 10 00 
       00 00 01 00 
       6E BC 04 EB 
       05 00       
0456BC 01 00 00 10 1586*  	dl 1, 16, 16, 256, fn_xevious_3_EC, 1516
       00 00 10 00 
       00 00 01 00 
       8F BC 04 EC 
       05 00       
0456CE 01 00 00 10 1587*  	dl 1, 16, 16, 256, fn_xevious_3_ED, 1517
       00 00 10 00 
       00 00 01 00 
       B0 BC 04 ED 
       05 00       
0456E0 01 00 00 10 1588*  	dl 1, 16, 16, 256, fn_xevious_3_EE, 1518
       00 00 10 00 
       00 00 01 00 
       D1 BC 04 EE 
       05 00       
0456F2 01 00 00 10 1589*  	dl 1, 16, 16, 256, fn_xevious_3_EF, 1519
       00 00 10 00 
       00 00 01 00 
       F2 BC 04 EF 
       05 00       
045704 01 00 00 10 1590*  	dl 1, 16, 16, 256, fn_xevious_3_F0, 1520
       00 00 10 00 
       00 00 01 00 
       13 BD 04 F0 
       05 00       
045716 01 00 00 10 1591*  	dl 1, 16, 16, 256, fn_xevious_3_F1, 1521
       00 00 10 00 
       00 00 01 00 
       34 BD 04 F1 
       05 00       
045728 01 00 00 10 1592*  	dl 1, 16, 16, 256, fn_xevious_3_F2, 1522
       00 00 10 00 
       00 00 01 00 
       55 BD 04 F2 
       05 00       
04573A 01 00 00 10 1593*  	dl 1, 16, 16, 256, fn_xevious_3_F3, 1523
       00 00 10 00 
       00 00 01 00 
       76 BD 04 F3 
       05 00       
04574C 01 00 00 10 1594*  	dl 1, 16, 16, 256, fn_xevious_3_F4, 1524
       00 00 10 00 
       00 00 01 00 
       97 BD 04 F4 
       05 00       
04575E 01 00 00 10 1595*  	dl 1, 16, 16, 256, fn_xevious_3_F5, 1525
       00 00 10 00 
       00 00 01 00 
       B8 BD 04 F5 
       05 00       
045770 01 00 00 10 1596*  	dl 1, 16, 16, 256, fn_xevious_3_F6, 1526
       00 00 10 00 
       00 00 01 00 
       D9 BD 04 F6 
       05 00       
045782 01 00 00 10 1597*  	dl 1, 16, 16, 256, fn_xevious_3_F7, 1527
       00 00 10 00 
       00 00 01 00 
       FA BD 04 F7 
       05 00       
045794 01 00 00 10 1598*  	dl 1, 16, 16, 256, fn_xevious_3_F8, 1528
       00 00 10 00 
       00 00 01 00 
       1B BE 04 F8 
       05 00       
0457A6 01 00 00 10 1599*  	dl 1, 16, 16, 256, fn_xevious_3_F9, 1529
       00 00 10 00 
       00 00 01 00 
       3C BE 04 F9 
       05 00       
0457B8 01 00 00 10 1600*  	dl 1, 16, 16, 256, fn_xevious_3_FA, 1530
       00 00 10 00 
       00 00 01 00 
       5D BE 04 FA 
       05 00       
0457CA 01 00 00 10 1601*  	dl 1, 16, 16, 256, fn_xevious_3_FB, 1531
       00 00 10 00 
       00 00 01 00 
       7E BE 04 FB 
       05 00       
0457DC 01 00 00 10 1602*  	dl 1, 16, 16, 256, fn_xevious_3_FC, 1532
       00 00 10 00 
       00 00 01 00 
       9F BE 04 FC 
       05 00       
0457EE 01 00 00 10 1603*  	dl 1, 16, 16, 256, fn_xevious_3_FD, 1533
       00 00 10 00 
       00 00 01 00 
       C0 BE 04 FD 
       05 00       
045800 01 00 00 10 1604*  	dl 1, 16, 16, 256, fn_xevious_3_FE, 1534
       00 00 10 00 
       00 00 01 00 
       E1 BE 04 FE 
       05 00       
045812 01 00 00 10 1605*  	dl 1, 16, 16, 256, fn_xevious_3_FF, 1535
       00 00 10 00 
       00 00 01 00 
       02 BF 04 FF 
       05 00       
045824             1606*  
045824             1607*  tiles_xevious_files_list: ; filename:
045824 74 69 6C 65 1608*  fn_xevious_0_00: db "tiles/xevious/xevious_0_00.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
045845 74 69 6C 65 1609*  fn_xevious_0_01: db "tiles/xevious/xevious_0_01.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
045866 74 69 6C 65 1610*  fn_xevious_0_02: db "tiles/xevious/xevious_0_02.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
045887 74 69 6C 65 1611*  fn_xevious_0_03: db "tiles/xevious/xevious_0_03.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
0458A8 74 69 6C 65 1612*  fn_xevious_0_04: db "tiles/xevious/xevious_0_04.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
0458C9 74 69 6C 65 1613*  fn_xevious_0_05: db "tiles/xevious/xevious_0_05.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 35 2E 72 
       67 62 61 32 
       00          
0458EA 74 69 6C 65 1614*  fn_xevious_0_06: db "tiles/xevious/xevious_0_06.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 36 2E 72 
       67 62 61 32 
       00          
04590B 74 69 6C 65 1615*  fn_xevious_0_07: db "tiles/xevious/xevious_0_07.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 37 2E 72 
       67 62 61 32 
       00          
04592C 74 69 6C 65 1616*  fn_xevious_0_08: db "tiles/xevious/xevious_0_08.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 38 2E 72 
       67 62 61 32 
       00          
04594D 74 69 6C 65 1617*  fn_xevious_0_09: db "tiles/xevious/xevious_0_09.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 39 2E 72 
       67 62 61 32 
       00          
04596E 74 69 6C 65 1618*  fn_xevious_0_0A: db "tiles/xevious/xevious_0_0A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 41 2E 72 
       67 62 61 32 
       00          
04598F 74 69 6C 65 1619*  fn_xevious_0_0B: db "tiles/xevious/xevious_0_0B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 42 2E 72 
       67 62 61 32 
       00          
0459B0 74 69 6C 65 1620*  fn_xevious_0_0C: db "tiles/xevious/xevious_0_0C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 43 2E 72 
       67 62 61 32 
       00          
0459D1 74 69 6C 65 1621*  fn_xevious_0_0D: db "tiles/xevious/xevious_0_0D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 44 2E 72 
       67 62 61 32 
       00          
0459F2 74 69 6C 65 1622*  fn_xevious_0_0E: db "tiles/xevious/xevious_0_0E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 45 2E 72 
       67 62 61 32 
       00          
045A13 74 69 6C 65 1623*  fn_xevious_0_0F: db "tiles/xevious/xevious_0_0F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       30 46 2E 72 
       67 62 61 32 
       00          
045A34 74 69 6C 65 1624*  fn_xevious_0_10: db "tiles/xevious/xevious_0_10.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 30 2E 72 
       67 62 61 32 
       00          
045A55 74 69 6C 65 1625*  fn_xevious_0_11: db "tiles/xevious/xevious_0_11.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 31 2E 72 
       67 62 61 32 
       00          
045A76 74 69 6C 65 1626*  fn_xevious_0_12: db "tiles/xevious/xevious_0_12.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 32 2E 72 
       67 62 61 32 
       00          
045A97 74 69 6C 65 1627*  fn_xevious_0_13: db "tiles/xevious/xevious_0_13.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 33 2E 72 
       67 62 61 32 
       00          
045AB8 74 69 6C 65 1628*  fn_xevious_0_14: db "tiles/xevious/xevious_0_14.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 34 2E 72 
       67 62 61 32 
       00          
045AD9 74 69 6C 65 1629*  fn_xevious_0_15: db "tiles/xevious/xevious_0_15.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 35 2E 72 
       67 62 61 32 
       00          
045AFA 74 69 6C 65 1630*  fn_xevious_0_16: db "tiles/xevious/xevious_0_16.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 36 2E 72 
       67 62 61 32 
       00          
045B1B 74 69 6C 65 1631*  fn_xevious_0_17: db "tiles/xevious/xevious_0_17.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 37 2E 72 
       67 62 61 32 
       00          
045B3C 74 69 6C 65 1632*  fn_xevious_0_18: db "tiles/xevious/xevious_0_18.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 38 2E 72 
       67 62 61 32 
       00          
045B5D 74 69 6C 65 1633*  fn_xevious_0_19: db "tiles/xevious/xevious_0_19.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 39 2E 72 
       67 62 61 32 
       00          
045B7E 74 69 6C 65 1634*  fn_xevious_0_1A: db "tiles/xevious/xevious_0_1A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 41 2E 72 
       67 62 61 32 
       00          
045B9F 74 69 6C 65 1635*  fn_xevious_0_1B: db "tiles/xevious/xevious_0_1B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 42 2E 72 
       67 62 61 32 
       00          
045BC0 74 69 6C 65 1636*  fn_xevious_0_1C: db "tiles/xevious/xevious_0_1C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 43 2E 72 
       67 62 61 32 
       00          
045BE1 74 69 6C 65 1637*  fn_xevious_0_1D: db "tiles/xevious/xevious_0_1D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 44 2E 72 
       67 62 61 32 
       00          
045C02 74 69 6C 65 1638*  fn_xevious_0_1E: db "tiles/xevious/xevious_0_1E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 45 2E 72 
       67 62 61 32 
       00          
045C23 74 69 6C 65 1639*  fn_xevious_0_1F: db "tiles/xevious/xevious_0_1F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       31 46 2E 72 
       67 62 61 32 
       00          
045C44 74 69 6C 65 1640*  fn_xevious_0_20: db "tiles/xevious/xevious_0_20.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 30 2E 72 
       67 62 61 32 
       00          
045C65 74 69 6C 65 1641*  fn_xevious_0_21: db "tiles/xevious/xevious_0_21.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 31 2E 72 
       67 62 61 32 
       00          
045C86 74 69 6C 65 1642*  fn_xevious_0_22: db "tiles/xevious/xevious_0_22.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 32 2E 72 
       67 62 61 32 
       00          
045CA7 74 69 6C 65 1643*  fn_xevious_0_23: db "tiles/xevious/xevious_0_23.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 33 2E 72 
       67 62 61 32 
       00          
045CC8 74 69 6C 65 1644*  fn_xevious_0_24: db "tiles/xevious/xevious_0_24.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 34 2E 72 
       67 62 61 32 
       00          
045CE9 74 69 6C 65 1645*  fn_xevious_0_25: db "tiles/xevious/xevious_0_25.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 35 2E 72 
       67 62 61 32 
       00          
045D0A 74 69 6C 65 1646*  fn_xevious_0_26: db "tiles/xevious/xevious_0_26.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 36 2E 72 
       67 62 61 32 
       00          
045D2B 74 69 6C 65 1647*  fn_xevious_0_27: db "tiles/xevious/xevious_0_27.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 37 2E 72 
       67 62 61 32 
       00          
045D4C 74 69 6C 65 1648*  fn_xevious_0_28: db "tiles/xevious/xevious_0_28.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 38 2E 72 
       67 62 61 32 
       00          
045D6D 74 69 6C 65 1649*  fn_xevious_0_29: db "tiles/xevious/xevious_0_29.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 39 2E 72 
       67 62 61 32 
       00          
045D8E 74 69 6C 65 1650*  fn_xevious_0_2A: db "tiles/xevious/xevious_0_2A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 41 2E 72 
       67 62 61 32 
       00          
045DAF 74 69 6C 65 1651*  fn_xevious_0_2B: db "tiles/xevious/xevious_0_2B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 42 2E 72 
       67 62 61 32 
       00          
045DD0 74 69 6C 65 1652*  fn_xevious_0_2C: db "tiles/xevious/xevious_0_2C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 43 2E 72 
       67 62 61 32 
       00          
045DF1 74 69 6C 65 1653*  fn_xevious_0_2D: db "tiles/xevious/xevious_0_2D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 44 2E 72 
       67 62 61 32 
       00          
045E12 74 69 6C 65 1654*  fn_xevious_0_2E: db "tiles/xevious/xevious_0_2E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 45 2E 72 
       67 62 61 32 
       00          
045E33 74 69 6C 65 1655*  fn_xevious_0_2F: db "tiles/xevious/xevious_0_2F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       32 46 2E 72 
       67 62 61 32 
       00          
045E54 74 69 6C 65 1656*  fn_xevious_0_30: db "tiles/xevious/xevious_0_30.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 30 2E 72 
       67 62 61 32 
       00          
045E75 74 69 6C 65 1657*  fn_xevious_0_31: db "tiles/xevious/xevious_0_31.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 31 2E 72 
       67 62 61 32 
       00          
045E96 74 69 6C 65 1658*  fn_xevious_0_32: db "tiles/xevious/xevious_0_32.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 32 2E 72 
       67 62 61 32 
       00          
045EB7 74 69 6C 65 1659*  fn_xevious_0_33: db "tiles/xevious/xevious_0_33.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 33 2E 72 
       67 62 61 32 
       00          
045ED8 74 69 6C 65 1660*  fn_xevious_0_34: db "tiles/xevious/xevious_0_34.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 34 2E 72 
       67 62 61 32 
       00          
045EF9 74 69 6C 65 1661*  fn_xevious_0_35: db "tiles/xevious/xevious_0_35.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 35 2E 72 
       67 62 61 32 
       00          
045F1A 74 69 6C 65 1662*  fn_xevious_0_36: db "tiles/xevious/xevious_0_36.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 36 2E 72 
       67 62 61 32 
       00          
045F3B 74 69 6C 65 1663*  fn_xevious_0_37: db "tiles/xevious/xevious_0_37.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 37 2E 72 
       67 62 61 32 
       00          
045F5C 74 69 6C 65 1664*  fn_xevious_0_38: db "tiles/xevious/xevious_0_38.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 38 2E 72 
       67 62 61 32 
       00          
045F7D 74 69 6C 65 1665*  fn_xevious_0_39: db "tiles/xevious/xevious_0_39.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 39 2E 72 
       67 62 61 32 
       00          
045F9E 74 69 6C 65 1666*  fn_xevious_0_3A: db "tiles/xevious/xevious_0_3A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 41 2E 72 
       67 62 61 32 
       00          
045FBF 74 69 6C 65 1667*  fn_xevious_0_3B: db "tiles/xevious/xevious_0_3B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 42 2E 72 
       67 62 61 32 
       00          
045FE0 74 69 6C 65 1668*  fn_xevious_0_3C: db "tiles/xevious/xevious_0_3C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 43 2E 72 
       67 62 61 32 
       00          
046001 74 69 6C 65 1669*  fn_xevious_0_3D: db "tiles/xevious/xevious_0_3D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 44 2E 72 
       67 62 61 32 
       00          
046022 74 69 6C 65 1670*  fn_xevious_0_3E: db "tiles/xevious/xevious_0_3E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 45 2E 72 
       67 62 61 32 
       00          
046043 74 69 6C 65 1671*  fn_xevious_0_3F: db "tiles/xevious/xevious_0_3F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       33 46 2E 72 
       67 62 61 32 
       00          
046064 74 69 6C 65 1672*  fn_xevious_0_40: db "tiles/xevious/xevious_0_40.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 30 2E 72 
       67 62 61 32 
       00          
046085 74 69 6C 65 1673*  fn_xevious_0_41: db "tiles/xevious/xevious_0_41.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 31 2E 72 
       67 62 61 32 
       00          
0460A6 74 69 6C 65 1674*  fn_xevious_0_42: db "tiles/xevious/xevious_0_42.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 32 2E 72 
       67 62 61 32 
       00          
0460C7 74 69 6C 65 1675*  fn_xevious_0_43: db "tiles/xevious/xevious_0_43.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 33 2E 72 
       67 62 61 32 
       00          
0460E8 74 69 6C 65 1676*  fn_xevious_0_44: db "tiles/xevious/xevious_0_44.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 34 2E 72 
       67 62 61 32 
       00          
046109 74 69 6C 65 1677*  fn_xevious_0_45: db "tiles/xevious/xevious_0_45.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 35 2E 72 
       67 62 61 32 
       00          
04612A 74 69 6C 65 1678*  fn_xevious_0_46: db "tiles/xevious/xevious_0_46.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 36 2E 72 
       67 62 61 32 
       00          
04614B 74 69 6C 65 1679*  fn_xevious_0_47: db "tiles/xevious/xevious_0_47.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 37 2E 72 
       67 62 61 32 
       00          
04616C 74 69 6C 65 1680*  fn_xevious_0_48: db "tiles/xevious/xevious_0_48.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 38 2E 72 
       67 62 61 32 
       00          
04618D 74 69 6C 65 1681*  fn_xevious_0_49: db "tiles/xevious/xevious_0_49.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 39 2E 72 
       67 62 61 32 
       00          
0461AE 74 69 6C 65 1682*  fn_xevious_0_4A: db "tiles/xevious/xevious_0_4A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 41 2E 72 
       67 62 61 32 
       00          
0461CF 74 69 6C 65 1683*  fn_xevious_0_4B: db "tiles/xevious/xevious_0_4B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 42 2E 72 
       67 62 61 32 
       00          
0461F0 74 69 6C 65 1684*  fn_xevious_0_4C: db "tiles/xevious/xevious_0_4C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 43 2E 72 
       67 62 61 32 
       00          
046211 74 69 6C 65 1685*  fn_xevious_0_4D: db "tiles/xevious/xevious_0_4D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 44 2E 72 
       67 62 61 32 
       00          
046232 74 69 6C 65 1686*  fn_xevious_0_4E: db "tiles/xevious/xevious_0_4E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 45 2E 72 
       67 62 61 32 
       00          
046253 74 69 6C 65 1687*  fn_xevious_0_4F: db "tiles/xevious/xevious_0_4F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       34 46 2E 72 
       67 62 61 32 
       00          
046274 74 69 6C 65 1688*  fn_xevious_0_50: db "tiles/xevious/xevious_0_50.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 30 2E 72 
       67 62 61 32 
       00          
046295 74 69 6C 65 1689*  fn_xevious_0_51: db "tiles/xevious/xevious_0_51.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 31 2E 72 
       67 62 61 32 
       00          
0462B6 74 69 6C 65 1690*  fn_xevious_0_52: db "tiles/xevious/xevious_0_52.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 32 2E 72 
       67 62 61 32 
       00          
0462D7 74 69 6C 65 1691*  fn_xevious_0_53: db "tiles/xevious/xevious_0_53.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 33 2E 72 
       67 62 61 32 
       00          
0462F8 74 69 6C 65 1692*  fn_xevious_0_54: db "tiles/xevious/xevious_0_54.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 34 2E 72 
       67 62 61 32 
       00          
046319 74 69 6C 65 1693*  fn_xevious_0_55: db "tiles/xevious/xevious_0_55.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 35 2E 72 
       67 62 61 32 
       00          
04633A 74 69 6C 65 1694*  fn_xevious_0_56: db "tiles/xevious/xevious_0_56.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 36 2E 72 
       67 62 61 32 
       00          
04635B 74 69 6C 65 1695*  fn_xevious_0_57: db "tiles/xevious/xevious_0_57.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 37 2E 72 
       67 62 61 32 
       00          
04637C 74 69 6C 65 1696*  fn_xevious_0_58: db "tiles/xevious/xevious_0_58.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 38 2E 72 
       67 62 61 32 
       00          
04639D 74 69 6C 65 1697*  fn_xevious_0_59: db "tiles/xevious/xevious_0_59.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 39 2E 72 
       67 62 61 32 
       00          
0463BE 74 69 6C 65 1698*  fn_xevious_0_5A: db "tiles/xevious/xevious_0_5A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 41 2E 72 
       67 62 61 32 
       00          
0463DF 74 69 6C 65 1699*  fn_xevious_0_5B: db "tiles/xevious/xevious_0_5B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 42 2E 72 
       67 62 61 32 
       00          
046400 74 69 6C 65 1700*  fn_xevious_0_5C: db "tiles/xevious/xevious_0_5C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 43 2E 72 
       67 62 61 32 
       00          
046421 74 69 6C 65 1701*  fn_xevious_0_5D: db "tiles/xevious/xevious_0_5D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 44 2E 72 
       67 62 61 32 
       00          
046442 74 69 6C 65 1702*  fn_xevious_0_5E: db "tiles/xevious/xevious_0_5E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 45 2E 72 
       67 62 61 32 
       00          
046463 74 69 6C 65 1703*  fn_xevious_0_5F: db "tiles/xevious/xevious_0_5F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       35 46 2E 72 
       67 62 61 32 
       00          
046484 74 69 6C 65 1704*  fn_xevious_0_60: db "tiles/xevious/xevious_0_60.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 30 2E 72 
       67 62 61 32 
       00          
0464A5 74 69 6C 65 1705*  fn_xevious_0_61: db "tiles/xevious/xevious_0_61.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 31 2E 72 
       67 62 61 32 
       00          
0464C6 74 69 6C 65 1706*  fn_xevious_0_62: db "tiles/xevious/xevious_0_62.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 32 2E 72 
       67 62 61 32 
       00          
0464E7 74 69 6C 65 1707*  fn_xevious_0_63: db "tiles/xevious/xevious_0_63.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 33 2E 72 
       67 62 61 32 
       00          
046508 74 69 6C 65 1708*  fn_xevious_0_64: db "tiles/xevious/xevious_0_64.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 34 2E 72 
       67 62 61 32 
       00          
046529 74 69 6C 65 1709*  fn_xevious_0_65: db "tiles/xevious/xevious_0_65.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 35 2E 72 
       67 62 61 32 
       00          
04654A 74 69 6C 65 1710*  fn_xevious_0_66: db "tiles/xevious/xevious_0_66.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 36 2E 72 
       67 62 61 32 
       00          
04656B 74 69 6C 65 1711*  fn_xevious_0_67: db "tiles/xevious/xevious_0_67.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 37 2E 72 
       67 62 61 32 
       00          
04658C 74 69 6C 65 1712*  fn_xevious_0_68: db "tiles/xevious/xevious_0_68.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 38 2E 72 
       67 62 61 32 
       00          
0465AD 74 69 6C 65 1713*  fn_xevious_0_69: db "tiles/xevious/xevious_0_69.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 39 2E 72 
       67 62 61 32 
       00          
0465CE 74 69 6C 65 1714*  fn_xevious_0_6A: db "tiles/xevious/xevious_0_6A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 41 2E 72 
       67 62 61 32 
       00          
0465EF 74 69 6C 65 1715*  fn_xevious_0_6B: db "tiles/xevious/xevious_0_6B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 42 2E 72 
       67 62 61 32 
       00          
046610 74 69 6C 65 1716*  fn_xevious_0_6C: db "tiles/xevious/xevious_0_6C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 43 2E 72 
       67 62 61 32 
       00          
046631 74 69 6C 65 1717*  fn_xevious_0_6D: db "tiles/xevious/xevious_0_6D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 44 2E 72 
       67 62 61 32 
       00          
046652 74 69 6C 65 1718*  fn_xevious_0_6E: db "tiles/xevious/xevious_0_6E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 45 2E 72 
       67 62 61 32 
       00          
046673 74 69 6C 65 1719*  fn_xevious_0_6F: db "tiles/xevious/xevious_0_6F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       36 46 2E 72 
       67 62 61 32 
       00          
046694 74 69 6C 65 1720*  fn_xevious_0_70: db "tiles/xevious/xevious_0_70.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 30 2E 72 
       67 62 61 32 
       00          
0466B5 74 69 6C 65 1721*  fn_xevious_0_71: db "tiles/xevious/xevious_0_71.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 31 2E 72 
       67 62 61 32 
       00          
0466D6 74 69 6C 65 1722*  fn_xevious_0_72: db "tiles/xevious/xevious_0_72.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 32 2E 72 
       67 62 61 32 
       00          
0466F7 74 69 6C 65 1723*  fn_xevious_0_73: db "tiles/xevious/xevious_0_73.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 33 2E 72 
       67 62 61 32 
       00          
046718 74 69 6C 65 1724*  fn_xevious_0_74: db "tiles/xevious/xevious_0_74.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 34 2E 72 
       67 62 61 32 
       00          
046739 74 69 6C 65 1725*  fn_xevious_0_75: db "tiles/xevious/xevious_0_75.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 35 2E 72 
       67 62 61 32 
       00          
04675A 74 69 6C 65 1726*  fn_xevious_0_76: db "tiles/xevious/xevious_0_76.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 36 2E 72 
       67 62 61 32 
       00          
04677B 74 69 6C 65 1727*  fn_xevious_0_77: db "tiles/xevious/xevious_0_77.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 37 2E 72 
       67 62 61 32 
       00          
04679C 74 69 6C 65 1728*  fn_xevious_0_78: db "tiles/xevious/xevious_0_78.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 38 2E 72 
       67 62 61 32 
       00          
0467BD 74 69 6C 65 1729*  fn_xevious_0_79: db "tiles/xevious/xevious_0_79.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 39 2E 72 
       67 62 61 32 
       00          
0467DE 74 69 6C 65 1730*  fn_xevious_0_7A: db "tiles/xevious/xevious_0_7A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 41 2E 72 
       67 62 61 32 
       00          
0467FF 74 69 6C 65 1731*  fn_xevious_0_7B: db "tiles/xevious/xevious_0_7B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 42 2E 72 
       67 62 61 32 
       00          
046820 74 69 6C 65 1732*  fn_xevious_0_7C: db "tiles/xevious/xevious_0_7C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 43 2E 72 
       67 62 61 32 
       00          
046841 74 69 6C 65 1733*  fn_xevious_0_7D: db "tiles/xevious/xevious_0_7D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 44 2E 72 
       67 62 61 32 
       00          
046862 74 69 6C 65 1734*  fn_xevious_0_7E: db "tiles/xevious/xevious_0_7E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 45 2E 72 
       67 62 61 32 
       00          
046883 74 69 6C 65 1735*  fn_xevious_0_7F: db "tiles/xevious/xevious_0_7F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       37 46 2E 72 
       67 62 61 32 
       00          
0468A4 74 69 6C 65 1736*  fn_xevious_0_80: db "tiles/xevious/xevious_0_80.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       38 30 2E 72 
       67 62 61 32 
       00          
0468C5 74 69 6C 65 1737*  fn_xevious_0_81: db "tiles/xevious/xevious_0_81.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       38 31 2E 72 
       67 62 61 32 
       00          
0468E6 74 69 6C 65 1738*  fn_xevious_0_82: db "tiles/xevious/xevious_0_82.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       38 32 2E 72 
       67 62 61 32 
       00          
046907 74 69 6C 65 1739*  fn_xevious_0_83: db "tiles/xevious/xevious_0_83.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       38 33 2E 72 
       67 62 61 32 
       00          
046928 74 69 6C 65 1740*  fn_xevious_0_84: db "tiles/xevious/xevious_0_84.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 30 5F 
       38 34 2E 72 
       67 62 61 32 
       00          
046949 74 69 6C 65 1741*  fn_xevious_1_00: db "tiles/xevious/xevious_1_00.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
04696A 74 69 6C 65 1742*  fn_xevious_1_01: db "tiles/xevious/xevious_1_01.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
04698B 74 69 6C 65 1743*  fn_xevious_1_02: db "tiles/xevious/xevious_1_02.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
0469AC 74 69 6C 65 1744*  fn_xevious_1_03: db "tiles/xevious/xevious_1_03.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
0469CD 74 69 6C 65 1745*  fn_xevious_1_04: db "tiles/xevious/xevious_1_04.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
0469EE 74 69 6C 65 1746*  fn_xevious_1_05: db "tiles/xevious/xevious_1_05.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 35 2E 72 
       67 62 61 32 
       00          
046A0F 74 69 6C 65 1747*  fn_xevious_1_06: db "tiles/xevious/xevious_1_06.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 36 2E 72 
       67 62 61 32 
       00          
046A30 74 69 6C 65 1748*  fn_xevious_1_07: db "tiles/xevious/xevious_1_07.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 37 2E 72 
       67 62 61 32 
       00          
046A51 74 69 6C 65 1749*  fn_xevious_1_08: db "tiles/xevious/xevious_1_08.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 38 2E 72 
       67 62 61 32 
       00          
046A72 74 69 6C 65 1750*  fn_xevious_1_09: db "tiles/xevious/xevious_1_09.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 39 2E 72 
       67 62 61 32 
       00          
046A93 74 69 6C 65 1751*  fn_xevious_1_0A: db "tiles/xevious/xevious_1_0A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 41 2E 72 
       67 62 61 32 
       00          
046AB4 74 69 6C 65 1752*  fn_xevious_1_0B: db "tiles/xevious/xevious_1_0B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 42 2E 72 
       67 62 61 32 
       00          
046AD5 74 69 6C 65 1753*  fn_xevious_1_0C: db "tiles/xevious/xevious_1_0C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 43 2E 72 
       67 62 61 32 
       00          
046AF6 74 69 6C 65 1754*  fn_xevious_1_0D: db "tiles/xevious/xevious_1_0D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 44 2E 72 
       67 62 61 32 
       00          
046B17 74 69 6C 65 1755*  fn_xevious_1_0E: db "tiles/xevious/xevious_1_0E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 45 2E 72 
       67 62 61 32 
       00          
046B38 74 69 6C 65 1756*  fn_xevious_1_0F: db "tiles/xevious/xevious_1_0F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       30 46 2E 72 
       67 62 61 32 
       00          
046B59 74 69 6C 65 1757*  fn_xevious_1_10: db "tiles/xevious/xevious_1_10.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 30 2E 72 
       67 62 61 32 
       00          
046B7A 74 69 6C 65 1758*  fn_xevious_1_11: db "tiles/xevious/xevious_1_11.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 31 2E 72 
       67 62 61 32 
       00          
046B9B 74 69 6C 65 1759*  fn_xevious_1_12: db "tiles/xevious/xevious_1_12.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 32 2E 72 
       67 62 61 32 
       00          
046BBC 74 69 6C 65 1760*  fn_xevious_1_13: db "tiles/xevious/xevious_1_13.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 33 2E 72 
       67 62 61 32 
       00          
046BDD 74 69 6C 65 1761*  fn_xevious_1_14: db "tiles/xevious/xevious_1_14.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 34 2E 72 
       67 62 61 32 
       00          
046BFE 74 69 6C 65 1762*  fn_xevious_1_15: db "tiles/xevious/xevious_1_15.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 35 2E 72 
       67 62 61 32 
       00          
046C1F 74 69 6C 65 1763*  fn_xevious_1_16: db "tiles/xevious/xevious_1_16.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 36 2E 72 
       67 62 61 32 
       00          
046C40 74 69 6C 65 1764*  fn_xevious_1_17: db "tiles/xevious/xevious_1_17.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 37 2E 72 
       67 62 61 32 
       00          
046C61 74 69 6C 65 1765*  fn_xevious_1_18: db "tiles/xevious/xevious_1_18.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 38 2E 72 
       67 62 61 32 
       00          
046C82 74 69 6C 65 1766*  fn_xevious_1_19: db "tiles/xevious/xevious_1_19.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 39 2E 72 
       67 62 61 32 
       00          
046CA3 74 69 6C 65 1767*  fn_xevious_1_1A: db "tiles/xevious/xevious_1_1A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 41 2E 72 
       67 62 61 32 
       00          
046CC4 74 69 6C 65 1768*  fn_xevious_1_1B: db "tiles/xevious/xevious_1_1B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 42 2E 72 
       67 62 61 32 
       00          
046CE5 74 69 6C 65 1769*  fn_xevious_1_1C: db "tiles/xevious/xevious_1_1C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 43 2E 72 
       67 62 61 32 
       00          
046D06 74 69 6C 65 1770*  fn_xevious_1_1D: db "tiles/xevious/xevious_1_1D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 44 2E 72 
       67 62 61 32 
       00          
046D27 74 69 6C 65 1771*  fn_xevious_1_1E: db "tiles/xevious/xevious_1_1E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 45 2E 72 
       67 62 61 32 
       00          
046D48 74 69 6C 65 1772*  fn_xevious_1_1F: db "tiles/xevious/xevious_1_1F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       31 46 2E 72 
       67 62 61 32 
       00          
046D69 74 69 6C 65 1773*  fn_xevious_1_20: db "tiles/xevious/xevious_1_20.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 30 2E 72 
       67 62 61 32 
       00          
046D8A 74 69 6C 65 1774*  fn_xevious_1_21: db "tiles/xevious/xevious_1_21.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 31 2E 72 
       67 62 61 32 
       00          
046DAB 74 69 6C 65 1775*  fn_xevious_1_22: db "tiles/xevious/xevious_1_22.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 32 2E 72 
       67 62 61 32 
       00          
046DCC 74 69 6C 65 1776*  fn_xevious_1_23: db "tiles/xevious/xevious_1_23.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 33 2E 72 
       67 62 61 32 
       00          
046DED 74 69 6C 65 1777*  fn_xevious_1_24: db "tiles/xevious/xevious_1_24.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 34 2E 72 
       67 62 61 32 
       00          
046E0E 74 69 6C 65 1778*  fn_xevious_1_25: db "tiles/xevious/xevious_1_25.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 35 2E 72 
       67 62 61 32 
       00          
046E2F 74 69 6C 65 1779*  fn_xevious_1_26: db "tiles/xevious/xevious_1_26.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 36 2E 72 
       67 62 61 32 
       00          
046E50 74 69 6C 65 1780*  fn_xevious_1_27: db "tiles/xevious/xevious_1_27.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 37 2E 72 
       67 62 61 32 
       00          
046E71 74 69 6C 65 1781*  fn_xevious_1_28: db "tiles/xevious/xevious_1_28.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 38 2E 72 
       67 62 61 32 
       00          
046E92 74 69 6C 65 1782*  fn_xevious_1_29: db "tiles/xevious/xevious_1_29.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 39 2E 72 
       67 62 61 32 
       00          
046EB3 74 69 6C 65 1783*  fn_xevious_1_2A: db "tiles/xevious/xevious_1_2A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 41 2E 72 
       67 62 61 32 
       00          
046ED4 74 69 6C 65 1784*  fn_xevious_1_2B: db "tiles/xevious/xevious_1_2B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 42 2E 72 
       67 62 61 32 
       00          
046EF5 74 69 6C 65 1785*  fn_xevious_1_2C: db "tiles/xevious/xevious_1_2C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 43 2E 72 
       67 62 61 32 
       00          
046F16 74 69 6C 65 1786*  fn_xevious_1_2D: db "tiles/xevious/xevious_1_2D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 44 2E 72 
       67 62 61 32 
       00          
046F37 74 69 6C 65 1787*  fn_xevious_1_2E: db "tiles/xevious/xevious_1_2E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 45 2E 72 
       67 62 61 32 
       00          
046F58 74 69 6C 65 1788*  fn_xevious_1_2F: db "tiles/xevious/xevious_1_2F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       32 46 2E 72 
       67 62 61 32 
       00          
046F79 74 69 6C 65 1789*  fn_xevious_1_30: db "tiles/xevious/xevious_1_30.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 30 2E 72 
       67 62 61 32 
       00          
046F9A 74 69 6C 65 1790*  fn_xevious_1_31: db "tiles/xevious/xevious_1_31.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 31 2E 72 
       67 62 61 32 
       00          
046FBB 74 69 6C 65 1791*  fn_xevious_1_32: db "tiles/xevious/xevious_1_32.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 32 2E 72 
       67 62 61 32 
       00          
046FDC 74 69 6C 65 1792*  fn_xevious_1_33: db "tiles/xevious/xevious_1_33.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 33 2E 72 
       67 62 61 32 
       00          
046FFD 74 69 6C 65 1793*  fn_xevious_1_34: db "tiles/xevious/xevious_1_34.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 34 2E 72 
       67 62 61 32 
       00          
04701E 74 69 6C 65 1794*  fn_xevious_1_35: db "tiles/xevious/xevious_1_35.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 35 2E 72 
       67 62 61 32 
       00          
04703F 74 69 6C 65 1795*  fn_xevious_1_36: db "tiles/xevious/xevious_1_36.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 36 2E 72 
       67 62 61 32 
       00          
047060 74 69 6C 65 1796*  fn_xevious_1_37: db "tiles/xevious/xevious_1_37.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 37 2E 72 
       67 62 61 32 
       00          
047081 74 69 6C 65 1797*  fn_xevious_1_38: db "tiles/xevious/xevious_1_38.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 38 2E 72 
       67 62 61 32 
       00          
0470A2 74 69 6C 65 1798*  fn_xevious_1_39: db "tiles/xevious/xevious_1_39.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 39 2E 72 
       67 62 61 32 
       00          
0470C3 74 69 6C 65 1799*  fn_xevious_1_3A: db "tiles/xevious/xevious_1_3A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 41 2E 72 
       67 62 61 32 
       00          
0470E4 74 69 6C 65 1800*  fn_xevious_1_3B: db "tiles/xevious/xevious_1_3B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 42 2E 72 
       67 62 61 32 
       00          
047105 74 69 6C 65 1801*  fn_xevious_1_3C: db "tiles/xevious/xevious_1_3C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 43 2E 72 
       67 62 61 32 
       00          
047126 74 69 6C 65 1802*  fn_xevious_1_3D: db "tiles/xevious/xevious_1_3D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 44 2E 72 
       67 62 61 32 
       00          
047147 74 69 6C 65 1803*  fn_xevious_1_3E: db "tiles/xevious/xevious_1_3E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 45 2E 72 
       67 62 61 32 
       00          
047168 74 69 6C 65 1804*  fn_xevious_1_3F: db "tiles/xevious/xevious_1_3F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       33 46 2E 72 
       67 62 61 32 
       00          
047189 74 69 6C 65 1805*  fn_xevious_1_40: db "tiles/xevious/xevious_1_40.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 30 2E 72 
       67 62 61 32 
       00          
0471AA 74 69 6C 65 1806*  fn_xevious_1_41: db "tiles/xevious/xevious_1_41.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 31 2E 72 
       67 62 61 32 
       00          
0471CB 74 69 6C 65 1807*  fn_xevious_1_42: db "tiles/xevious/xevious_1_42.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 32 2E 72 
       67 62 61 32 
       00          
0471EC 74 69 6C 65 1808*  fn_xevious_1_43: db "tiles/xevious/xevious_1_43.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 33 2E 72 
       67 62 61 32 
       00          
04720D 74 69 6C 65 1809*  fn_xevious_1_44: db "tiles/xevious/xevious_1_44.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 34 2E 72 
       67 62 61 32 
       00          
04722E 74 69 6C 65 1810*  fn_xevious_1_45: db "tiles/xevious/xevious_1_45.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 35 2E 72 
       67 62 61 32 
       00          
04724F 74 69 6C 65 1811*  fn_xevious_1_46: db "tiles/xevious/xevious_1_46.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 36 2E 72 
       67 62 61 32 
       00          
047270 74 69 6C 65 1812*  fn_xevious_1_47: db "tiles/xevious/xevious_1_47.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 37 2E 72 
       67 62 61 32 
       00          
047291 74 69 6C 65 1813*  fn_xevious_1_48: db "tiles/xevious/xevious_1_48.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 38 2E 72 
       67 62 61 32 
       00          
0472B2 74 69 6C 65 1814*  fn_xevious_1_49: db "tiles/xevious/xevious_1_49.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 39 2E 72 
       67 62 61 32 
       00          
0472D3 74 69 6C 65 1815*  fn_xevious_1_4A: db "tiles/xevious/xevious_1_4A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 41 2E 72 
       67 62 61 32 
       00          
0472F4 74 69 6C 65 1816*  fn_xevious_1_4B: db "tiles/xevious/xevious_1_4B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 42 2E 72 
       67 62 61 32 
       00          
047315 74 69 6C 65 1817*  fn_xevious_1_4C: db "tiles/xevious/xevious_1_4C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 43 2E 72 
       67 62 61 32 
       00          
047336 74 69 6C 65 1818*  fn_xevious_1_4D: db "tiles/xevious/xevious_1_4D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 44 2E 72 
       67 62 61 32 
       00          
047357 74 69 6C 65 1819*  fn_xevious_1_4E: db "tiles/xevious/xevious_1_4E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 45 2E 72 
       67 62 61 32 
       00          
047378 74 69 6C 65 1820*  fn_xevious_1_4F: db "tiles/xevious/xevious_1_4F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       34 46 2E 72 
       67 62 61 32 
       00          
047399 74 69 6C 65 1821*  fn_xevious_1_50: db "tiles/xevious/xevious_1_50.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 30 2E 72 
       67 62 61 32 
       00          
0473BA 74 69 6C 65 1822*  fn_xevious_1_51: db "tiles/xevious/xevious_1_51.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 31 2E 72 
       67 62 61 32 
       00          
0473DB 74 69 6C 65 1823*  fn_xevious_1_52: db "tiles/xevious/xevious_1_52.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 32 2E 72 
       67 62 61 32 
       00          
0473FC 74 69 6C 65 1824*  fn_xevious_1_53: db "tiles/xevious/xevious_1_53.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 33 2E 72 
       67 62 61 32 
       00          
04741D 74 69 6C 65 1825*  fn_xevious_1_54: db "tiles/xevious/xevious_1_54.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 34 2E 72 
       67 62 61 32 
       00          
04743E 74 69 6C 65 1826*  fn_xevious_1_55: db "tiles/xevious/xevious_1_55.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 35 2E 72 
       67 62 61 32 
       00          
04745F 74 69 6C 65 1827*  fn_xevious_1_56: db "tiles/xevious/xevious_1_56.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 36 2E 72 
       67 62 61 32 
       00          
047480 74 69 6C 65 1828*  fn_xevious_1_57: db "tiles/xevious/xevious_1_57.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 37 2E 72 
       67 62 61 32 
       00          
0474A1 74 69 6C 65 1829*  fn_xevious_1_58: db "tiles/xevious/xevious_1_58.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 38 2E 72 
       67 62 61 32 
       00          
0474C2 74 69 6C 65 1830*  fn_xevious_1_59: db "tiles/xevious/xevious_1_59.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 39 2E 72 
       67 62 61 32 
       00          
0474E3 74 69 6C 65 1831*  fn_xevious_1_5A: db "tiles/xevious/xevious_1_5A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 41 2E 72 
       67 62 61 32 
       00          
047504 74 69 6C 65 1832*  fn_xevious_1_5B: db "tiles/xevious/xevious_1_5B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 42 2E 72 
       67 62 61 32 
       00          
047525 74 69 6C 65 1833*  fn_xevious_1_5C: db "tiles/xevious/xevious_1_5C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 43 2E 72 
       67 62 61 32 
       00          
047546 74 69 6C 65 1834*  fn_xevious_1_5D: db "tiles/xevious/xevious_1_5D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 44 2E 72 
       67 62 61 32 
       00          
047567 74 69 6C 65 1835*  fn_xevious_1_5E: db "tiles/xevious/xevious_1_5E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 45 2E 72 
       67 62 61 32 
       00          
047588 74 69 6C 65 1836*  fn_xevious_1_5F: db "tiles/xevious/xevious_1_5F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       35 46 2E 72 
       67 62 61 32 
       00          
0475A9 74 69 6C 65 1837*  fn_xevious_1_60: db "tiles/xevious/xevious_1_60.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 30 2E 72 
       67 62 61 32 
       00          
0475CA 74 69 6C 65 1838*  fn_xevious_1_61: db "tiles/xevious/xevious_1_61.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 31 2E 72 
       67 62 61 32 
       00          
0475EB 74 69 6C 65 1839*  fn_xevious_1_62: db "tiles/xevious/xevious_1_62.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 32 2E 72 
       67 62 61 32 
       00          
04760C 74 69 6C 65 1840*  fn_xevious_1_63: db "tiles/xevious/xevious_1_63.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 33 2E 72 
       67 62 61 32 
       00          
04762D 74 69 6C 65 1841*  fn_xevious_1_64: db "tiles/xevious/xevious_1_64.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 34 2E 72 
       67 62 61 32 
       00          
04764E 74 69 6C 65 1842*  fn_xevious_1_65: db "tiles/xevious/xevious_1_65.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 35 2E 72 
       67 62 61 32 
       00          
04766F 74 69 6C 65 1843*  fn_xevious_1_66: db "tiles/xevious/xevious_1_66.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 36 2E 72 
       67 62 61 32 
       00          
047690 74 69 6C 65 1844*  fn_xevious_1_67: db "tiles/xevious/xevious_1_67.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 37 2E 72 
       67 62 61 32 
       00          
0476B1 74 69 6C 65 1845*  fn_xevious_1_68: db "tiles/xevious/xevious_1_68.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 38 2E 72 
       67 62 61 32 
       00          
0476D2 74 69 6C 65 1846*  fn_xevious_1_69: db "tiles/xevious/xevious_1_69.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 39 2E 72 
       67 62 61 32 
       00          
0476F3 74 69 6C 65 1847*  fn_xevious_1_6A: db "tiles/xevious/xevious_1_6A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 41 2E 72 
       67 62 61 32 
       00          
047714 74 69 6C 65 1848*  fn_xevious_1_6B: db "tiles/xevious/xevious_1_6B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 42 2E 72 
       67 62 61 32 
       00          
047735 74 69 6C 65 1849*  fn_xevious_1_6C: db "tiles/xevious/xevious_1_6C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 43 2E 72 
       67 62 61 32 
       00          
047756 74 69 6C 65 1850*  fn_xevious_1_6D: db "tiles/xevious/xevious_1_6D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 44 2E 72 
       67 62 61 32 
       00          
047777 74 69 6C 65 1851*  fn_xevious_1_6E: db "tiles/xevious/xevious_1_6E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 45 2E 72 
       67 62 61 32 
       00          
047798 74 69 6C 65 1852*  fn_xevious_1_6F: db "tiles/xevious/xevious_1_6F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       36 46 2E 72 
       67 62 61 32 
       00          
0477B9 74 69 6C 65 1853*  fn_xevious_1_70: db "tiles/xevious/xevious_1_70.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 30 2E 72 
       67 62 61 32 
       00          
0477DA 74 69 6C 65 1854*  fn_xevious_1_71: db "tiles/xevious/xevious_1_71.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 31 2E 72 
       67 62 61 32 
       00          
0477FB 74 69 6C 65 1855*  fn_xevious_1_72: db "tiles/xevious/xevious_1_72.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 32 2E 72 
       67 62 61 32 
       00          
04781C 74 69 6C 65 1856*  fn_xevious_1_73: db "tiles/xevious/xevious_1_73.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 33 2E 72 
       67 62 61 32 
       00          
04783D 74 69 6C 65 1857*  fn_xevious_1_74: db "tiles/xevious/xevious_1_74.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 34 2E 72 
       67 62 61 32 
       00          
04785E 74 69 6C 65 1858*  fn_xevious_1_75: db "tiles/xevious/xevious_1_75.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 35 2E 72 
       67 62 61 32 
       00          
04787F 74 69 6C 65 1859*  fn_xevious_1_76: db "tiles/xevious/xevious_1_76.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 36 2E 72 
       67 62 61 32 
       00          
0478A0 74 69 6C 65 1860*  fn_xevious_1_77: db "tiles/xevious/xevious_1_77.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 37 2E 72 
       67 62 61 32 
       00          
0478C1 74 69 6C 65 1861*  fn_xevious_1_78: db "tiles/xevious/xevious_1_78.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 38 2E 72 
       67 62 61 32 
       00          
0478E2 74 69 6C 65 1862*  fn_xevious_1_79: db "tiles/xevious/xevious_1_79.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 39 2E 72 
       67 62 61 32 
       00          
047903 74 69 6C 65 1863*  fn_xevious_1_7A: db "tiles/xevious/xevious_1_7A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 41 2E 72 
       67 62 61 32 
       00          
047924 74 69 6C 65 1864*  fn_xevious_1_7B: db "tiles/xevious/xevious_1_7B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 42 2E 72 
       67 62 61 32 
       00          
047945 74 69 6C 65 1865*  fn_xevious_1_7C: db "tiles/xevious/xevious_1_7C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 43 2E 72 
       67 62 61 32 
       00          
047966 74 69 6C 65 1866*  fn_xevious_1_7D: db "tiles/xevious/xevious_1_7D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 44 2E 72 
       67 62 61 32 
       00          
047987 74 69 6C 65 1867*  fn_xevious_1_7E: db "tiles/xevious/xevious_1_7E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 45 2E 72 
       67 62 61 32 
       00          
0479A8 74 69 6C 65 1868*  fn_xevious_1_7F: db "tiles/xevious/xevious_1_7F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       37 46 2E 72 
       67 62 61 32 
       00          
0479C9 74 69 6C 65 1869*  fn_xevious_1_80: db "tiles/xevious/xevious_1_80.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 30 2E 72 
       67 62 61 32 
       00          
0479EA 74 69 6C 65 1870*  fn_xevious_1_81: db "tiles/xevious/xevious_1_81.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 31 2E 72 
       67 62 61 32 
       00          
047A0B 74 69 6C 65 1871*  fn_xevious_1_82: db "tiles/xevious/xevious_1_82.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 32 2E 72 
       67 62 61 32 
       00          
047A2C 74 69 6C 65 1872*  fn_xevious_1_83: db "tiles/xevious/xevious_1_83.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 33 2E 72 
       67 62 61 32 
       00          
047A4D 74 69 6C 65 1873*  fn_xevious_1_84: db "tiles/xevious/xevious_1_84.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 34 2E 72 
       67 62 61 32 
       00          
047A6E 74 69 6C 65 1874*  fn_xevious_1_85: db "tiles/xevious/xevious_1_85.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 35 2E 72 
       67 62 61 32 
       00          
047A8F 74 69 6C 65 1875*  fn_xevious_1_86: db "tiles/xevious/xevious_1_86.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 36 2E 72 
       67 62 61 32 
       00          
047AB0 74 69 6C 65 1876*  fn_xevious_1_87: db "tiles/xevious/xevious_1_87.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 37 2E 72 
       67 62 61 32 
       00          
047AD1 74 69 6C 65 1877*  fn_xevious_1_88: db "tiles/xevious/xevious_1_88.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 38 2E 72 
       67 62 61 32 
       00          
047AF2 74 69 6C 65 1878*  fn_xevious_1_89: db "tiles/xevious/xevious_1_89.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 39 2E 72 
       67 62 61 32 
       00          
047B13 74 69 6C 65 1879*  fn_xevious_1_8A: db "tiles/xevious/xevious_1_8A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 41 2E 72 
       67 62 61 32 
       00          
047B34 74 69 6C 65 1880*  fn_xevious_1_8B: db "tiles/xevious/xevious_1_8B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 42 2E 72 
       67 62 61 32 
       00          
047B55 74 69 6C 65 1881*  fn_xevious_1_8C: db "tiles/xevious/xevious_1_8C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 43 2E 72 
       67 62 61 32 
       00          
047B76 74 69 6C 65 1882*  fn_xevious_1_8D: db "tiles/xevious/xevious_1_8D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 44 2E 72 
       67 62 61 32 
       00          
047B97 74 69 6C 65 1883*  fn_xevious_1_8E: db "tiles/xevious/xevious_1_8E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 45 2E 72 
       67 62 61 32 
       00          
047BB8 74 69 6C 65 1884*  fn_xevious_1_8F: db "tiles/xevious/xevious_1_8F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       38 46 2E 72 
       67 62 61 32 
       00          
047BD9 74 69 6C 65 1885*  fn_xevious_1_90: db "tiles/xevious/xevious_1_90.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 30 2E 72 
       67 62 61 32 
       00          
047BFA 74 69 6C 65 1886*  fn_xevious_1_91: db "tiles/xevious/xevious_1_91.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 31 2E 72 
       67 62 61 32 
       00          
047C1B 74 69 6C 65 1887*  fn_xevious_1_92: db "tiles/xevious/xevious_1_92.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 32 2E 72 
       67 62 61 32 
       00          
047C3C 74 69 6C 65 1888*  fn_xevious_1_93: db "tiles/xevious/xevious_1_93.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 33 2E 72 
       67 62 61 32 
       00          
047C5D 74 69 6C 65 1889*  fn_xevious_1_94: db "tiles/xevious/xevious_1_94.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 34 2E 72 
       67 62 61 32 
       00          
047C7E 74 69 6C 65 1890*  fn_xevious_1_95: db "tiles/xevious/xevious_1_95.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 35 2E 72 
       67 62 61 32 
       00          
047C9F 74 69 6C 65 1891*  fn_xevious_1_96: db "tiles/xevious/xevious_1_96.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 36 2E 72 
       67 62 61 32 
       00          
047CC0 74 69 6C 65 1892*  fn_xevious_1_97: db "tiles/xevious/xevious_1_97.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 37 2E 72 
       67 62 61 32 
       00          
047CE1 74 69 6C 65 1893*  fn_xevious_1_98: db "tiles/xevious/xevious_1_98.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 38 2E 72 
       67 62 61 32 
       00          
047D02 74 69 6C 65 1894*  fn_xevious_1_99: db "tiles/xevious/xevious_1_99.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 39 2E 72 
       67 62 61 32 
       00          
047D23 74 69 6C 65 1895*  fn_xevious_1_9A: db "tiles/xevious/xevious_1_9A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 41 2E 72 
       67 62 61 32 
       00          
047D44 74 69 6C 65 1896*  fn_xevious_1_9B: db "tiles/xevious/xevious_1_9B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 42 2E 72 
       67 62 61 32 
       00          
047D65 74 69 6C 65 1897*  fn_xevious_1_9C: db "tiles/xevious/xevious_1_9C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 43 2E 72 
       67 62 61 32 
       00          
047D86 74 69 6C 65 1898*  fn_xevious_1_9D: db "tiles/xevious/xevious_1_9D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 44 2E 72 
       67 62 61 32 
       00          
047DA7 74 69 6C 65 1899*  fn_xevious_1_9E: db "tiles/xevious/xevious_1_9E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 45 2E 72 
       67 62 61 32 
       00          
047DC8 74 69 6C 65 1900*  fn_xevious_1_9F: db "tiles/xevious/xevious_1_9F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       39 46 2E 72 
       67 62 61 32 
       00          
047DE9 74 69 6C 65 1901*  fn_xevious_1_A0: db "tiles/xevious/xevious_1_A0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 30 2E 72 
       67 62 61 32 
       00          
047E0A 74 69 6C 65 1902*  fn_xevious_1_A1: db "tiles/xevious/xevious_1_A1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 31 2E 72 
       67 62 61 32 
       00          
047E2B 74 69 6C 65 1903*  fn_xevious_1_A2: db "tiles/xevious/xevious_1_A2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 32 2E 72 
       67 62 61 32 
       00          
047E4C 74 69 6C 65 1904*  fn_xevious_1_A3: db "tiles/xevious/xevious_1_A3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 33 2E 72 
       67 62 61 32 
       00          
047E6D 74 69 6C 65 1905*  fn_xevious_1_A4: db "tiles/xevious/xevious_1_A4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 34 2E 72 
       67 62 61 32 
       00          
047E8E 74 69 6C 65 1906*  fn_xevious_1_A5: db "tiles/xevious/xevious_1_A5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 35 2E 72 
       67 62 61 32 
       00          
047EAF 74 69 6C 65 1907*  fn_xevious_1_A6: db "tiles/xevious/xevious_1_A6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 36 2E 72 
       67 62 61 32 
       00          
047ED0 74 69 6C 65 1908*  fn_xevious_1_A7: db "tiles/xevious/xevious_1_A7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 37 2E 72 
       67 62 61 32 
       00          
047EF1 74 69 6C 65 1909*  fn_xevious_1_A8: db "tiles/xevious/xevious_1_A8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 38 2E 72 
       67 62 61 32 
       00          
047F12 74 69 6C 65 1910*  fn_xevious_1_A9: db "tiles/xevious/xevious_1_A9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 39 2E 72 
       67 62 61 32 
       00          
047F33 74 69 6C 65 1911*  fn_xevious_1_AA: db "tiles/xevious/xevious_1_AA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 41 2E 72 
       67 62 61 32 
       00          
047F54 74 69 6C 65 1912*  fn_xevious_1_AB: db "tiles/xevious/xevious_1_AB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 42 2E 72 
       67 62 61 32 
       00          
047F75 74 69 6C 65 1913*  fn_xevious_1_AC: db "tiles/xevious/xevious_1_AC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 43 2E 72 
       67 62 61 32 
       00          
047F96 74 69 6C 65 1914*  fn_xevious_1_AD: db "tiles/xevious/xevious_1_AD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 44 2E 72 
       67 62 61 32 
       00          
047FB7 74 69 6C 65 1915*  fn_xevious_1_AE: db "tiles/xevious/xevious_1_AE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 45 2E 72 
       67 62 61 32 
       00          
047FD8 74 69 6C 65 1916*  fn_xevious_1_AF: db "tiles/xevious/xevious_1_AF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       41 46 2E 72 
       67 62 61 32 
       00          
047FF9 74 69 6C 65 1917*  fn_xevious_1_B0: db "tiles/xevious/xevious_1_B0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 30 2E 72 
       67 62 61 32 
       00          
04801A 74 69 6C 65 1918*  fn_xevious_1_B1: db "tiles/xevious/xevious_1_B1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 31 2E 72 
       67 62 61 32 
       00          
04803B 74 69 6C 65 1919*  fn_xevious_1_B2: db "tiles/xevious/xevious_1_B2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 32 2E 72 
       67 62 61 32 
       00          
04805C 74 69 6C 65 1920*  fn_xevious_1_B3: db "tiles/xevious/xevious_1_B3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 33 2E 72 
       67 62 61 32 
       00          
04807D 74 69 6C 65 1921*  fn_xevious_1_B4: db "tiles/xevious/xevious_1_B4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 34 2E 72 
       67 62 61 32 
       00          
04809E 74 69 6C 65 1922*  fn_xevious_1_B5: db "tiles/xevious/xevious_1_B5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 35 2E 72 
       67 62 61 32 
       00          
0480BF 74 69 6C 65 1923*  fn_xevious_1_B6: db "tiles/xevious/xevious_1_B6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 36 2E 72 
       67 62 61 32 
       00          
0480E0 74 69 6C 65 1924*  fn_xevious_1_B7: db "tiles/xevious/xevious_1_B7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 37 2E 72 
       67 62 61 32 
       00          
048101 74 69 6C 65 1925*  fn_xevious_1_B8: db "tiles/xevious/xevious_1_B8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 38 2E 72 
       67 62 61 32 
       00          
048122 74 69 6C 65 1926*  fn_xevious_1_B9: db "tiles/xevious/xevious_1_B9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 39 2E 72 
       67 62 61 32 
       00          
048143 74 69 6C 65 1927*  fn_xevious_1_BA: db "tiles/xevious/xevious_1_BA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 41 2E 72 
       67 62 61 32 
       00          
048164 74 69 6C 65 1928*  fn_xevious_1_BB: db "tiles/xevious/xevious_1_BB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 42 2E 72 
       67 62 61 32 
       00          
048185 74 69 6C 65 1929*  fn_xevious_1_BC: db "tiles/xevious/xevious_1_BC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 43 2E 72 
       67 62 61 32 
       00          
0481A6 74 69 6C 65 1930*  fn_xevious_1_BD: db "tiles/xevious/xevious_1_BD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 44 2E 72 
       67 62 61 32 
       00          
0481C7 74 69 6C 65 1931*  fn_xevious_1_BE: db "tiles/xevious/xevious_1_BE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 45 2E 72 
       67 62 61 32 
       00          
0481E8 74 69 6C 65 1932*  fn_xevious_1_BF: db "tiles/xevious/xevious_1_BF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       42 46 2E 72 
       67 62 61 32 
       00          
048209 74 69 6C 65 1933*  fn_xevious_1_C0: db "tiles/xevious/xevious_1_C0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 30 2E 72 
       67 62 61 32 
       00          
04822A 74 69 6C 65 1934*  fn_xevious_1_C1: db "tiles/xevious/xevious_1_C1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 31 2E 72 
       67 62 61 32 
       00          
04824B 74 69 6C 65 1935*  fn_xevious_1_C2: db "tiles/xevious/xevious_1_C2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 32 2E 72 
       67 62 61 32 
       00          
04826C 74 69 6C 65 1936*  fn_xevious_1_C3: db "tiles/xevious/xevious_1_C3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 33 2E 72 
       67 62 61 32 
       00          
04828D 74 69 6C 65 1937*  fn_xevious_1_C4: db "tiles/xevious/xevious_1_C4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 34 2E 72 
       67 62 61 32 
       00          
0482AE 74 69 6C 65 1938*  fn_xevious_1_C5: db "tiles/xevious/xevious_1_C5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 35 2E 72 
       67 62 61 32 
       00          
0482CF 74 69 6C 65 1939*  fn_xevious_1_C6: db "tiles/xevious/xevious_1_C6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 36 2E 72 
       67 62 61 32 
       00          
0482F0 74 69 6C 65 1940*  fn_xevious_1_C7: db "tiles/xevious/xevious_1_C7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 37 2E 72 
       67 62 61 32 
       00          
048311 74 69 6C 65 1941*  fn_xevious_1_C8: db "tiles/xevious/xevious_1_C8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 38 2E 72 
       67 62 61 32 
       00          
048332 74 69 6C 65 1942*  fn_xevious_1_C9: db "tiles/xevious/xevious_1_C9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 39 2E 72 
       67 62 61 32 
       00          
048353 74 69 6C 65 1943*  fn_xevious_1_CA: db "tiles/xevious/xevious_1_CA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 41 2E 72 
       67 62 61 32 
       00          
048374 74 69 6C 65 1944*  fn_xevious_1_CB: db "tiles/xevious/xevious_1_CB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 42 2E 72 
       67 62 61 32 
       00          
048395 74 69 6C 65 1945*  fn_xevious_1_CC: db "tiles/xevious/xevious_1_CC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 43 2E 72 
       67 62 61 32 
       00          
0483B6 74 69 6C 65 1946*  fn_xevious_1_CD: db "tiles/xevious/xevious_1_CD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 44 2E 72 
       67 62 61 32 
       00          
0483D7 74 69 6C 65 1947*  fn_xevious_1_CE: db "tiles/xevious/xevious_1_CE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 45 2E 72 
       67 62 61 32 
       00          
0483F8 74 69 6C 65 1948*  fn_xevious_1_CF: db "tiles/xevious/xevious_1_CF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       43 46 2E 72 
       67 62 61 32 
       00          
048419 74 69 6C 65 1949*  fn_xevious_1_D0: db "tiles/xevious/xevious_1_D0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 30 2E 72 
       67 62 61 32 
       00          
04843A 74 69 6C 65 1950*  fn_xevious_1_D1: db "tiles/xevious/xevious_1_D1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 31 2E 72 
       67 62 61 32 
       00          
04845B 74 69 6C 65 1951*  fn_xevious_1_D2: db "tiles/xevious/xevious_1_D2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 32 2E 72 
       67 62 61 32 
       00          
04847C 74 69 6C 65 1952*  fn_xevious_1_D3: db "tiles/xevious/xevious_1_D3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 33 2E 72 
       67 62 61 32 
       00          
04849D 74 69 6C 65 1953*  fn_xevious_1_D4: db "tiles/xevious/xevious_1_D4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 34 2E 72 
       67 62 61 32 
       00          
0484BE 74 69 6C 65 1954*  fn_xevious_1_D5: db "tiles/xevious/xevious_1_D5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 35 2E 72 
       67 62 61 32 
       00          
0484DF 74 69 6C 65 1955*  fn_xevious_1_D6: db "tiles/xevious/xevious_1_D6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 36 2E 72 
       67 62 61 32 
       00          
048500 74 69 6C 65 1956*  fn_xevious_1_D7: db "tiles/xevious/xevious_1_D7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 37 2E 72 
       67 62 61 32 
       00          
048521 74 69 6C 65 1957*  fn_xevious_1_D8: db "tiles/xevious/xevious_1_D8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 38 2E 72 
       67 62 61 32 
       00          
048542 74 69 6C 65 1958*  fn_xevious_1_D9: db "tiles/xevious/xevious_1_D9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 39 2E 72 
       67 62 61 32 
       00          
048563 74 69 6C 65 1959*  fn_xevious_1_DA: db "tiles/xevious/xevious_1_DA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 41 2E 72 
       67 62 61 32 
       00          
048584 74 69 6C 65 1960*  fn_xevious_1_DB: db "tiles/xevious/xevious_1_DB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 42 2E 72 
       67 62 61 32 
       00          
0485A5 74 69 6C 65 1961*  fn_xevious_1_DC: db "tiles/xevious/xevious_1_DC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 43 2E 72 
       67 62 61 32 
       00          
0485C6 74 69 6C 65 1962*  fn_xevious_1_DD: db "tiles/xevious/xevious_1_DD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 44 2E 72 
       67 62 61 32 
       00          
0485E7 74 69 6C 65 1963*  fn_xevious_1_DE: db "tiles/xevious/xevious_1_DE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 45 2E 72 
       67 62 61 32 
       00          
048608 74 69 6C 65 1964*  fn_xevious_1_DF: db "tiles/xevious/xevious_1_DF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       44 46 2E 72 
       67 62 61 32 
       00          
048629 74 69 6C 65 1965*  fn_xevious_1_E0: db "tiles/xevious/xevious_1_E0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       45 30 2E 72 
       67 62 61 32 
       00          
04864A 74 69 6C 65 1966*  fn_xevious_1_E1: db "tiles/xevious/xevious_1_E1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 31 5F 
       45 31 2E 72 
       67 62 61 32 
       00          
04866B 74 69 6C 65 1967*  fn_xevious_2_00: db "tiles/xevious/xevious_2_00.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
04868C 74 69 6C 65 1968*  fn_xevious_2_01: db "tiles/xevious/xevious_2_01.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
0486AD 74 69 6C 65 1969*  fn_xevious_2_02: db "tiles/xevious/xevious_2_02.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
0486CE 74 69 6C 65 1970*  fn_xevious_2_03: db "tiles/xevious/xevious_2_03.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
0486EF 74 69 6C 65 1971*  fn_xevious_2_04: db "tiles/xevious/xevious_2_04.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
048710 74 69 6C 65 1972*  fn_xevious_2_05: db "tiles/xevious/xevious_2_05.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 35 2E 72 
       67 62 61 32 
       00          
048731 74 69 6C 65 1973*  fn_xevious_2_06: db "tiles/xevious/xevious_2_06.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 36 2E 72 
       67 62 61 32 
       00          
048752 74 69 6C 65 1974*  fn_xevious_2_07: db "tiles/xevious/xevious_2_07.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 37 2E 72 
       67 62 61 32 
       00          
048773 74 69 6C 65 1975*  fn_xevious_2_08: db "tiles/xevious/xevious_2_08.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 38 2E 72 
       67 62 61 32 
       00          
048794 74 69 6C 65 1976*  fn_xevious_2_09: db "tiles/xevious/xevious_2_09.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 39 2E 72 
       67 62 61 32 
       00          
0487B5 74 69 6C 65 1977*  fn_xevious_2_0A: db "tiles/xevious/xevious_2_0A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 41 2E 72 
       67 62 61 32 
       00          
0487D6 74 69 6C 65 1978*  fn_xevious_2_0B: db "tiles/xevious/xevious_2_0B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 42 2E 72 
       67 62 61 32 
       00          
0487F7 74 69 6C 65 1979*  fn_xevious_2_0C: db "tiles/xevious/xevious_2_0C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 43 2E 72 
       67 62 61 32 
       00          
048818 74 69 6C 65 1980*  fn_xevious_2_0D: db "tiles/xevious/xevious_2_0D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 44 2E 72 
       67 62 61 32 
       00          
048839 74 69 6C 65 1981*  fn_xevious_2_0E: db "tiles/xevious/xevious_2_0E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 45 2E 72 
       67 62 61 32 
       00          
04885A 74 69 6C 65 1982*  fn_xevious_2_0F: db "tiles/xevious/xevious_2_0F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       30 46 2E 72 
       67 62 61 32 
       00          
04887B 74 69 6C 65 1983*  fn_xevious_2_10: db "tiles/xevious/xevious_2_10.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 30 2E 72 
       67 62 61 32 
       00          
04889C 74 69 6C 65 1984*  fn_xevious_2_11: db "tiles/xevious/xevious_2_11.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 31 2E 72 
       67 62 61 32 
       00          
0488BD 74 69 6C 65 1985*  fn_xevious_2_12: db "tiles/xevious/xevious_2_12.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 32 2E 72 
       67 62 61 32 
       00          
0488DE 74 69 6C 65 1986*  fn_xevious_2_13: db "tiles/xevious/xevious_2_13.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 33 2E 72 
       67 62 61 32 
       00          
0488FF 74 69 6C 65 1987*  fn_xevious_2_14: db "tiles/xevious/xevious_2_14.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 34 2E 72 
       67 62 61 32 
       00          
048920 74 69 6C 65 1988*  fn_xevious_2_15: db "tiles/xevious/xevious_2_15.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 35 2E 72 
       67 62 61 32 
       00          
048941 74 69 6C 65 1989*  fn_xevious_2_16: db "tiles/xevious/xevious_2_16.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 36 2E 72 
       67 62 61 32 
       00          
048962 74 69 6C 65 1990*  fn_xevious_2_17: db "tiles/xevious/xevious_2_17.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 37 2E 72 
       67 62 61 32 
       00          
048983 74 69 6C 65 1991*  fn_xevious_2_18: db "tiles/xevious/xevious_2_18.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 38 2E 72 
       67 62 61 32 
       00          
0489A4 74 69 6C 65 1992*  fn_xevious_2_19: db "tiles/xevious/xevious_2_19.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 39 2E 72 
       67 62 61 32 
       00          
0489C5 74 69 6C 65 1993*  fn_xevious_2_1A: db "tiles/xevious/xevious_2_1A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 41 2E 72 
       67 62 61 32 
       00          
0489E6 74 69 6C 65 1994*  fn_xevious_2_1B: db "tiles/xevious/xevious_2_1B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 42 2E 72 
       67 62 61 32 
       00          
048A07 74 69 6C 65 1995*  fn_xevious_2_1C: db "tiles/xevious/xevious_2_1C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 43 2E 72 
       67 62 61 32 
       00          
048A28 74 69 6C 65 1996*  fn_xevious_2_1D: db "tiles/xevious/xevious_2_1D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 44 2E 72 
       67 62 61 32 
       00          
048A49 74 69 6C 65 1997*  fn_xevious_2_1E: db "tiles/xevious/xevious_2_1E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 45 2E 72 
       67 62 61 32 
       00          
048A6A 74 69 6C 65 1998*  fn_xevious_2_1F: db "tiles/xevious/xevious_2_1F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       31 46 2E 72 
       67 62 61 32 
       00          
048A8B 74 69 6C 65 1999*  fn_xevious_2_20: db "tiles/xevious/xevious_2_20.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 30 2E 72 
       67 62 61 32 
       00          
048AAC 74 69 6C 65 2000*  fn_xevious_2_21: db "tiles/xevious/xevious_2_21.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 31 2E 72 
       67 62 61 32 
       00          
048ACD 74 69 6C 65 2001*  fn_xevious_2_22: db "tiles/xevious/xevious_2_22.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 32 2E 72 
       67 62 61 32 
       00          
048AEE 74 69 6C 65 2002*  fn_xevious_2_23: db "tiles/xevious/xevious_2_23.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 33 2E 72 
       67 62 61 32 
       00          
048B0F 74 69 6C 65 2003*  fn_xevious_2_24: db "tiles/xevious/xevious_2_24.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 34 2E 72 
       67 62 61 32 
       00          
048B30 74 69 6C 65 2004*  fn_xevious_2_25: db "tiles/xevious/xevious_2_25.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 35 2E 72 
       67 62 61 32 
       00          
048B51 74 69 6C 65 2005*  fn_xevious_2_26: db "tiles/xevious/xevious_2_26.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 36 2E 72 
       67 62 61 32 
       00          
048B72 74 69 6C 65 2006*  fn_xevious_2_27: db "tiles/xevious/xevious_2_27.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 37 2E 72 
       67 62 61 32 
       00          
048B93 74 69 6C 65 2007*  fn_xevious_2_28: db "tiles/xevious/xevious_2_28.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 38 2E 72 
       67 62 61 32 
       00          
048BB4 74 69 6C 65 2008*  fn_xevious_2_29: db "tiles/xevious/xevious_2_29.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 39 2E 72 
       67 62 61 32 
       00          
048BD5 74 69 6C 65 2009*  fn_xevious_2_2A: db "tiles/xevious/xevious_2_2A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 41 2E 72 
       67 62 61 32 
       00          
048BF6 74 69 6C 65 2010*  fn_xevious_2_2B: db "tiles/xevious/xevious_2_2B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 42 2E 72 
       67 62 61 32 
       00          
048C17 74 69 6C 65 2011*  fn_xevious_2_2C: db "tiles/xevious/xevious_2_2C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 43 2E 72 
       67 62 61 32 
       00          
048C38 74 69 6C 65 2012*  fn_xevious_2_2D: db "tiles/xevious/xevious_2_2D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 44 2E 72 
       67 62 61 32 
       00          
048C59 74 69 6C 65 2013*  fn_xevious_2_2E: db "tiles/xevious/xevious_2_2E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 45 2E 72 
       67 62 61 32 
       00          
048C7A 74 69 6C 65 2014*  fn_xevious_2_2F: db "tiles/xevious/xevious_2_2F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       32 46 2E 72 
       67 62 61 32 
       00          
048C9B 74 69 6C 65 2015*  fn_xevious_2_30: db "tiles/xevious/xevious_2_30.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 30 2E 72 
       67 62 61 32 
       00          
048CBC 74 69 6C 65 2016*  fn_xevious_2_31: db "tiles/xevious/xevious_2_31.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 31 2E 72 
       67 62 61 32 
       00          
048CDD 74 69 6C 65 2017*  fn_xevious_2_32: db "tiles/xevious/xevious_2_32.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 32 2E 72 
       67 62 61 32 
       00          
048CFE 74 69 6C 65 2018*  fn_xevious_2_33: db "tiles/xevious/xevious_2_33.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 33 2E 72 
       67 62 61 32 
       00          
048D1F 74 69 6C 65 2019*  fn_xevious_2_34: db "tiles/xevious/xevious_2_34.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 34 2E 72 
       67 62 61 32 
       00          
048D40 74 69 6C 65 2020*  fn_xevious_2_35: db "tiles/xevious/xevious_2_35.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 35 2E 72 
       67 62 61 32 
       00          
048D61 74 69 6C 65 2021*  fn_xevious_2_36: db "tiles/xevious/xevious_2_36.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 36 2E 72 
       67 62 61 32 
       00          
048D82 74 69 6C 65 2022*  fn_xevious_2_37: db "tiles/xevious/xevious_2_37.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 37 2E 72 
       67 62 61 32 
       00          
048DA3 74 69 6C 65 2023*  fn_xevious_2_38: db "tiles/xevious/xevious_2_38.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 38 2E 72 
       67 62 61 32 
       00          
048DC4 74 69 6C 65 2024*  fn_xevious_2_39: db "tiles/xevious/xevious_2_39.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 39 2E 72 
       67 62 61 32 
       00          
048DE5 74 69 6C 65 2025*  fn_xevious_2_3A: db "tiles/xevious/xevious_2_3A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 41 2E 72 
       67 62 61 32 
       00          
048E06 74 69 6C 65 2026*  fn_xevious_2_3B: db "tiles/xevious/xevious_2_3B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 42 2E 72 
       67 62 61 32 
       00          
048E27 74 69 6C 65 2027*  fn_xevious_2_3C: db "tiles/xevious/xevious_2_3C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 43 2E 72 
       67 62 61 32 
       00          
048E48 74 69 6C 65 2028*  fn_xevious_2_3D: db "tiles/xevious/xevious_2_3D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 44 2E 72 
       67 62 61 32 
       00          
048E69 74 69 6C 65 2029*  fn_xevious_2_3E: db "tiles/xevious/xevious_2_3E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 45 2E 72 
       67 62 61 32 
       00          
048E8A 74 69 6C 65 2030*  fn_xevious_2_3F: db "tiles/xevious/xevious_2_3F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       33 46 2E 72 
       67 62 61 32 
       00          
048EAB 74 69 6C 65 2031*  fn_xevious_2_40: db "tiles/xevious/xevious_2_40.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 30 2E 72 
       67 62 61 32 
       00          
048ECC 74 69 6C 65 2032*  fn_xevious_2_41: db "tiles/xevious/xevious_2_41.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 31 2E 72 
       67 62 61 32 
       00          
048EED 74 69 6C 65 2033*  fn_xevious_2_42: db "tiles/xevious/xevious_2_42.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 32 2E 72 
       67 62 61 32 
       00          
048F0E 74 69 6C 65 2034*  fn_xevious_2_43: db "tiles/xevious/xevious_2_43.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 33 2E 72 
       67 62 61 32 
       00          
048F2F 74 69 6C 65 2035*  fn_xevious_2_44: db "tiles/xevious/xevious_2_44.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 34 2E 72 
       67 62 61 32 
       00          
048F50 74 69 6C 65 2036*  fn_xevious_2_45: db "tiles/xevious/xevious_2_45.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 35 2E 72 
       67 62 61 32 
       00          
048F71 74 69 6C 65 2037*  fn_xevious_2_46: db "tiles/xevious/xevious_2_46.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 36 2E 72 
       67 62 61 32 
       00          
048F92 74 69 6C 65 2038*  fn_xevious_2_47: db "tiles/xevious/xevious_2_47.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 37 2E 72 
       67 62 61 32 
       00          
048FB3 74 69 6C 65 2039*  fn_xevious_2_48: db "tiles/xevious/xevious_2_48.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 38 2E 72 
       67 62 61 32 
       00          
048FD4 74 69 6C 65 2040*  fn_xevious_2_49: db "tiles/xevious/xevious_2_49.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 39 2E 72 
       67 62 61 32 
       00          
048FF5 74 69 6C 65 2041*  fn_xevious_2_4A: db "tiles/xevious/xevious_2_4A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 41 2E 72 
       67 62 61 32 
       00          
049016 74 69 6C 65 2042*  fn_xevious_2_4B: db "tiles/xevious/xevious_2_4B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 42 2E 72 
       67 62 61 32 
       00          
049037 74 69 6C 65 2043*  fn_xevious_2_4C: db "tiles/xevious/xevious_2_4C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 43 2E 72 
       67 62 61 32 
       00          
049058 74 69 6C 65 2044*  fn_xevious_2_4D: db "tiles/xevious/xevious_2_4D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 44 2E 72 
       67 62 61 32 
       00          
049079 74 69 6C 65 2045*  fn_xevious_2_4E: db "tiles/xevious/xevious_2_4E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 45 2E 72 
       67 62 61 32 
       00          
04909A 74 69 6C 65 2046*  fn_xevious_2_4F: db "tiles/xevious/xevious_2_4F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       34 46 2E 72 
       67 62 61 32 
       00          
0490BB 74 69 6C 65 2047*  fn_xevious_2_50: db "tiles/xevious/xevious_2_50.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 30 2E 72 
       67 62 61 32 
       00          
0490DC 74 69 6C 65 2048*  fn_xevious_2_51: db "tiles/xevious/xevious_2_51.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 31 2E 72 
       67 62 61 32 
       00          
0490FD 74 69 6C 65 2049*  fn_xevious_2_52: db "tiles/xevious/xevious_2_52.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 32 2E 72 
       67 62 61 32 
       00          
04911E 74 69 6C 65 2050*  fn_xevious_2_53: db "tiles/xevious/xevious_2_53.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 33 2E 72 
       67 62 61 32 
       00          
04913F 74 69 6C 65 2051*  fn_xevious_2_54: db "tiles/xevious/xevious_2_54.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 34 2E 72 
       67 62 61 32 
       00          
049160 74 69 6C 65 2052*  fn_xevious_2_55: db "tiles/xevious/xevious_2_55.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 35 2E 72 
       67 62 61 32 
       00          
049181 74 69 6C 65 2053*  fn_xevious_2_56: db "tiles/xevious/xevious_2_56.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 36 2E 72 
       67 62 61 32 
       00          
0491A2 74 69 6C 65 2054*  fn_xevious_2_57: db "tiles/xevious/xevious_2_57.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 37 2E 72 
       67 62 61 32 
       00          
0491C3 74 69 6C 65 2055*  fn_xevious_2_58: db "tiles/xevious/xevious_2_58.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 38 2E 72 
       67 62 61 32 
       00          
0491E4 74 69 6C 65 2056*  fn_xevious_2_59: db "tiles/xevious/xevious_2_59.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 39 2E 72 
       67 62 61 32 
       00          
049205 74 69 6C 65 2057*  fn_xevious_2_5A: db "tiles/xevious/xevious_2_5A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 41 2E 72 
       67 62 61 32 
       00          
049226 74 69 6C 65 2058*  fn_xevious_2_5B: db "tiles/xevious/xevious_2_5B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 42 2E 72 
       67 62 61 32 
       00          
049247 74 69 6C 65 2059*  fn_xevious_2_5C: db "tiles/xevious/xevious_2_5C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 43 2E 72 
       67 62 61 32 
       00          
049268 74 69 6C 65 2060*  fn_xevious_2_5D: db "tiles/xevious/xevious_2_5D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 44 2E 72 
       67 62 61 32 
       00          
049289 74 69 6C 65 2061*  fn_xevious_2_5E: db "tiles/xevious/xevious_2_5E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 45 2E 72 
       67 62 61 32 
       00          
0492AA 74 69 6C 65 2062*  fn_xevious_2_5F: db "tiles/xevious/xevious_2_5F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       35 46 2E 72 
       67 62 61 32 
       00          
0492CB 74 69 6C 65 2063*  fn_xevious_2_60: db "tiles/xevious/xevious_2_60.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 30 2E 72 
       67 62 61 32 
       00          
0492EC 74 69 6C 65 2064*  fn_xevious_2_61: db "tiles/xevious/xevious_2_61.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 31 2E 72 
       67 62 61 32 
       00          
04930D 74 69 6C 65 2065*  fn_xevious_2_62: db "tiles/xevious/xevious_2_62.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 32 2E 72 
       67 62 61 32 
       00          
04932E 74 69 6C 65 2066*  fn_xevious_2_63: db "tiles/xevious/xevious_2_63.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 33 2E 72 
       67 62 61 32 
       00          
04934F 74 69 6C 65 2067*  fn_xevious_2_64: db "tiles/xevious/xevious_2_64.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 34 2E 72 
       67 62 61 32 
       00          
049370 74 69 6C 65 2068*  fn_xevious_2_65: db "tiles/xevious/xevious_2_65.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 35 2E 72 
       67 62 61 32 
       00          
049391 74 69 6C 65 2069*  fn_xevious_2_66: db "tiles/xevious/xevious_2_66.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 36 2E 72 
       67 62 61 32 
       00          
0493B2 74 69 6C 65 2070*  fn_xevious_2_67: db "tiles/xevious/xevious_2_67.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 37 2E 72 
       67 62 61 32 
       00          
0493D3 74 69 6C 65 2071*  fn_xevious_2_68: db "tiles/xevious/xevious_2_68.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 38 2E 72 
       67 62 61 32 
       00          
0493F4 74 69 6C 65 2072*  fn_xevious_2_69: db "tiles/xevious/xevious_2_69.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 39 2E 72 
       67 62 61 32 
       00          
049415 74 69 6C 65 2073*  fn_xevious_2_6A: db "tiles/xevious/xevious_2_6A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 41 2E 72 
       67 62 61 32 
       00          
049436 74 69 6C 65 2074*  fn_xevious_2_6B: db "tiles/xevious/xevious_2_6B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 42 2E 72 
       67 62 61 32 
       00          
049457 74 69 6C 65 2075*  fn_xevious_2_6C: db "tiles/xevious/xevious_2_6C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 43 2E 72 
       67 62 61 32 
       00          
049478 74 69 6C 65 2076*  fn_xevious_2_6D: db "tiles/xevious/xevious_2_6D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 44 2E 72 
       67 62 61 32 
       00          
049499 74 69 6C 65 2077*  fn_xevious_2_6E: db "tiles/xevious/xevious_2_6E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 45 2E 72 
       67 62 61 32 
       00          
0494BA 74 69 6C 65 2078*  fn_xevious_2_6F: db "tiles/xevious/xevious_2_6F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       36 46 2E 72 
       67 62 61 32 
       00          
0494DB 74 69 6C 65 2079*  fn_xevious_2_70: db "tiles/xevious/xevious_2_70.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 30 2E 72 
       67 62 61 32 
       00          
0494FC 74 69 6C 65 2080*  fn_xevious_2_71: db "tiles/xevious/xevious_2_71.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 31 2E 72 
       67 62 61 32 
       00          
04951D 74 69 6C 65 2081*  fn_xevious_2_72: db "tiles/xevious/xevious_2_72.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 32 2E 72 
       67 62 61 32 
       00          
04953E 74 69 6C 65 2082*  fn_xevious_2_73: db "tiles/xevious/xevious_2_73.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 33 2E 72 
       67 62 61 32 
       00          
04955F 74 69 6C 65 2083*  fn_xevious_2_74: db "tiles/xevious/xevious_2_74.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 34 2E 72 
       67 62 61 32 
       00          
049580 74 69 6C 65 2084*  fn_xevious_2_75: db "tiles/xevious/xevious_2_75.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 35 2E 72 
       67 62 61 32 
       00          
0495A1 74 69 6C 65 2085*  fn_xevious_2_76: db "tiles/xevious/xevious_2_76.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 36 2E 72 
       67 62 61 32 
       00          
0495C2 74 69 6C 65 2086*  fn_xevious_2_77: db "tiles/xevious/xevious_2_77.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 37 2E 72 
       67 62 61 32 
       00          
0495E3 74 69 6C 65 2087*  fn_xevious_2_78: db "tiles/xevious/xevious_2_78.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 38 2E 72 
       67 62 61 32 
       00          
049604 74 69 6C 65 2088*  fn_xevious_2_79: db "tiles/xevious/xevious_2_79.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 39 2E 72 
       67 62 61 32 
       00          
049625 74 69 6C 65 2089*  fn_xevious_2_7A: db "tiles/xevious/xevious_2_7A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 41 2E 72 
       67 62 61 32 
       00          
049646 74 69 6C 65 2090*  fn_xevious_2_7B: db "tiles/xevious/xevious_2_7B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 42 2E 72 
       67 62 61 32 
       00          
049667 74 69 6C 65 2091*  fn_xevious_2_7C: db "tiles/xevious/xevious_2_7C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 43 2E 72 
       67 62 61 32 
       00          
049688 74 69 6C 65 2092*  fn_xevious_2_7D: db "tiles/xevious/xevious_2_7D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 44 2E 72 
       67 62 61 32 
       00          
0496A9 74 69 6C 65 2093*  fn_xevious_2_7E: db "tiles/xevious/xevious_2_7E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 45 2E 72 
       67 62 61 32 
       00          
0496CA 74 69 6C 65 2094*  fn_xevious_2_7F: db "tiles/xevious/xevious_2_7F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       37 46 2E 72 
       67 62 61 32 
       00          
0496EB 74 69 6C 65 2095*  fn_xevious_2_80: db "tiles/xevious/xevious_2_80.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 30 2E 72 
       67 62 61 32 
       00          
04970C 74 69 6C 65 2096*  fn_xevious_2_81: db "tiles/xevious/xevious_2_81.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 31 2E 72 
       67 62 61 32 
       00          
04972D 74 69 6C 65 2097*  fn_xevious_2_82: db "tiles/xevious/xevious_2_82.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 32 2E 72 
       67 62 61 32 
       00          
04974E 74 69 6C 65 2098*  fn_xevious_2_83: db "tiles/xevious/xevious_2_83.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 33 2E 72 
       67 62 61 32 
       00          
04976F 74 69 6C 65 2099*  fn_xevious_2_84: db "tiles/xevious/xevious_2_84.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 34 2E 72 
       67 62 61 32 
       00          
049790 74 69 6C 65 2100*  fn_xevious_2_85: db "tiles/xevious/xevious_2_85.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 35 2E 72 
       67 62 61 32 
       00          
0497B1 74 69 6C 65 2101*  fn_xevious_2_86: db "tiles/xevious/xevious_2_86.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 36 2E 72 
       67 62 61 32 
       00          
0497D2 74 69 6C 65 2102*  fn_xevious_2_87: db "tiles/xevious/xevious_2_87.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 37 2E 72 
       67 62 61 32 
       00          
0497F3 74 69 6C 65 2103*  fn_xevious_2_88: db "tiles/xevious/xevious_2_88.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 38 2E 72 
       67 62 61 32 
       00          
049814 74 69 6C 65 2104*  fn_xevious_2_89: db "tiles/xevious/xevious_2_89.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 39 2E 72 
       67 62 61 32 
       00          
049835 74 69 6C 65 2105*  fn_xevious_2_8A: db "tiles/xevious/xevious_2_8A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 41 2E 72 
       67 62 61 32 
       00          
049856 74 69 6C 65 2106*  fn_xevious_2_8B: db "tiles/xevious/xevious_2_8B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 42 2E 72 
       67 62 61 32 
       00          
049877 74 69 6C 65 2107*  fn_xevious_2_8C: db "tiles/xevious/xevious_2_8C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 43 2E 72 
       67 62 61 32 
       00          
049898 74 69 6C 65 2108*  fn_xevious_2_8D: db "tiles/xevious/xevious_2_8D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 44 2E 72 
       67 62 61 32 
       00          
0498B9 74 69 6C 65 2109*  fn_xevious_2_8E: db "tiles/xevious/xevious_2_8E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 45 2E 72 
       67 62 61 32 
       00          
0498DA 74 69 6C 65 2110*  fn_xevious_2_8F: db "tiles/xevious/xevious_2_8F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       38 46 2E 72 
       67 62 61 32 
       00          
0498FB 74 69 6C 65 2111*  fn_xevious_2_90: db "tiles/xevious/xevious_2_90.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 30 2E 72 
       67 62 61 32 
       00          
04991C 74 69 6C 65 2112*  fn_xevious_2_91: db "tiles/xevious/xevious_2_91.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 31 2E 72 
       67 62 61 32 
       00          
04993D 74 69 6C 65 2113*  fn_xevious_2_92: db "tiles/xevious/xevious_2_92.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 32 2E 72 
       67 62 61 32 
       00          
04995E 74 69 6C 65 2114*  fn_xevious_2_93: db "tiles/xevious/xevious_2_93.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 33 2E 72 
       67 62 61 32 
       00          
04997F 74 69 6C 65 2115*  fn_xevious_2_94: db "tiles/xevious/xevious_2_94.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 34 2E 72 
       67 62 61 32 
       00          
0499A0 74 69 6C 65 2116*  fn_xevious_2_95: db "tiles/xevious/xevious_2_95.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 35 2E 72 
       67 62 61 32 
       00          
0499C1 74 69 6C 65 2117*  fn_xevious_2_96: db "tiles/xevious/xevious_2_96.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 36 2E 72 
       67 62 61 32 
       00          
0499E2 74 69 6C 65 2118*  fn_xevious_2_97: db "tiles/xevious/xevious_2_97.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 37 2E 72 
       67 62 61 32 
       00          
049A03 74 69 6C 65 2119*  fn_xevious_2_98: db "tiles/xevious/xevious_2_98.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 38 2E 72 
       67 62 61 32 
       00          
049A24 74 69 6C 65 2120*  fn_xevious_2_99: db "tiles/xevious/xevious_2_99.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 39 2E 72 
       67 62 61 32 
       00          
049A45 74 69 6C 65 2121*  fn_xevious_2_9A: db "tiles/xevious/xevious_2_9A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 41 2E 72 
       67 62 61 32 
       00          
049A66 74 69 6C 65 2122*  fn_xevious_2_9B: db "tiles/xevious/xevious_2_9B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 42 2E 72 
       67 62 61 32 
       00          
049A87 74 69 6C 65 2123*  fn_xevious_2_9C: db "tiles/xevious/xevious_2_9C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 43 2E 72 
       67 62 61 32 
       00          
049AA8 74 69 6C 65 2124*  fn_xevious_2_9D: db "tiles/xevious/xevious_2_9D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 44 2E 72 
       67 62 61 32 
       00          
049AC9 74 69 6C 65 2125*  fn_xevious_2_9E: db "tiles/xevious/xevious_2_9E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 45 2E 72 
       67 62 61 32 
       00          
049AEA 74 69 6C 65 2126*  fn_xevious_2_9F: db "tiles/xevious/xevious_2_9F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       39 46 2E 72 
       67 62 61 32 
       00          
049B0B 74 69 6C 65 2127*  fn_xevious_2_A0: db "tiles/xevious/xevious_2_A0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 30 2E 72 
       67 62 61 32 
       00          
049B2C 74 69 6C 65 2128*  fn_xevious_2_A1: db "tiles/xevious/xevious_2_A1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 31 2E 72 
       67 62 61 32 
       00          
049B4D 74 69 6C 65 2129*  fn_xevious_2_A2: db "tiles/xevious/xevious_2_A2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 32 2E 72 
       67 62 61 32 
       00          
049B6E 74 69 6C 65 2130*  fn_xevious_2_A3: db "tiles/xevious/xevious_2_A3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 33 2E 72 
       67 62 61 32 
       00          
049B8F 74 69 6C 65 2131*  fn_xevious_2_A4: db "tiles/xevious/xevious_2_A4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 34 2E 72 
       67 62 61 32 
       00          
049BB0 74 69 6C 65 2132*  fn_xevious_2_A5: db "tiles/xevious/xevious_2_A5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 35 2E 72 
       67 62 61 32 
       00          
049BD1 74 69 6C 65 2133*  fn_xevious_2_A6: db "tiles/xevious/xevious_2_A6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 36 2E 72 
       67 62 61 32 
       00          
049BF2 74 69 6C 65 2134*  fn_xevious_2_A7: db "tiles/xevious/xevious_2_A7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 37 2E 72 
       67 62 61 32 
       00          
049C13 74 69 6C 65 2135*  fn_xevious_2_A8: db "tiles/xevious/xevious_2_A8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 38 2E 72 
       67 62 61 32 
       00          
049C34 74 69 6C 65 2136*  fn_xevious_2_A9: db "tiles/xevious/xevious_2_A9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 39 2E 72 
       67 62 61 32 
       00          
049C55 74 69 6C 65 2137*  fn_xevious_2_AA: db "tiles/xevious/xevious_2_AA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 41 2E 72 
       67 62 61 32 
       00          
049C76 74 69 6C 65 2138*  fn_xevious_2_AB: db "tiles/xevious/xevious_2_AB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 42 2E 72 
       67 62 61 32 
       00          
049C97 74 69 6C 65 2139*  fn_xevious_2_AC: db "tiles/xevious/xevious_2_AC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 43 2E 72 
       67 62 61 32 
       00          
049CB8 74 69 6C 65 2140*  fn_xevious_2_AD: db "tiles/xevious/xevious_2_AD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 44 2E 72 
       67 62 61 32 
       00          
049CD9 74 69 6C 65 2141*  fn_xevious_2_AE: db "tiles/xevious/xevious_2_AE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 45 2E 72 
       67 62 61 32 
       00          
049CFA 74 69 6C 65 2142*  fn_xevious_2_AF: db "tiles/xevious/xevious_2_AF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       41 46 2E 72 
       67 62 61 32 
       00          
049D1B 74 69 6C 65 2143*  fn_xevious_2_B0: db "tiles/xevious/xevious_2_B0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 30 2E 72 
       67 62 61 32 
       00          
049D3C 74 69 6C 65 2144*  fn_xevious_2_B1: db "tiles/xevious/xevious_2_B1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 31 2E 72 
       67 62 61 32 
       00          
049D5D 74 69 6C 65 2145*  fn_xevious_2_B2: db "tiles/xevious/xevious_2_B2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 32 2E 72 
       67 62 61 32 
       00          
049D7E 74 69 6C 65 2146*  fn_xevious_2_B3: db "tiles/xevious/xevious_2_B3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 33 2E 72 
       67 62 61 32 
       00          
049D9F 74 69 6C 65 2147*  fn_xevious_2_B4: db "tiles/xevious/xevious_2_B4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 34 2E 72 
       67 62 61 32 
       00          
049DC0 74 69 6C 65 2148*  fn_xevious_2_B5: db "tiles/xevious/xevious_2_B5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 35 2E 72 
       67 62 61 32 
       00          
049DE1 74 69 6C 65 2149*  fn_xevious_2_B6: db "tiles/xevious/xevious_2_B6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 36 2E 72 
       67 62 61 32 
       00          
049E02 74 69 6C 65 2150*  fn_xevious_2_B7: db "tiles/xevious/xevious_2_B7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 32 5F 
       42 37 2E 72 
       67 62 61 32 
       00          
049E23 74 69 6C 65 2151*  fn_xevious_3_00: db "tiles/xevious/xevious_3_00.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
049E44 74 69 6C 65 2152*  fn_xevious_3_01: db "tiles/xevious/xevious_3_01.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
049E65 74 69 6C 65 2153*  fn_xevious_3_02: db "tiles/xevious/xevious_3_02.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
049E86 74 69 6C 65 2154*  fn_xevious_3_03: db "tiles/xevious/xevious_3_03.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
049EA7 74 69 6C 65 2155*  fn_xevious_3_04: db "tiles/xevious/xevious_3_04.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
049EC8 74 69 6C 65 2156*  fn_xevious_3_05: db "tiles/xevious/xevious_3_05.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 35 2E 72 
       67 62 61 32 
       00          
049EE9 74 69 6C 65 2157*  fn_xevious_3_06: db "tiles/xevious/xevious_3_06.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 36 2E 72 
       67 62 61 32 
       00          
049F0A 74 69 6C 65 2158*  fn_xevious_3_07: db "tiles/xevious/xevious_3_07.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 37 2E 72 
       67 62 61 32 
       00          
049F2B 74 69 6C 65 2159*  fn_xevious_3_08: db "tiles/xevious/xevious_3_08.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 38 2E 72 
       67 62 61 32 
       00          
049F4C 74 69 6C 65 2160*  fn_xevious_3_09: db "tiles/xevious/xevious_3_09.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 39 2E 72 
       67 62 61 32 
       00          
049F6D 74 69 6C 65 2161*  fn_xevious_3_0A: db "tiles/xevious/xevious_3_0A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 41 2E 72 
       67 62 61 32 
       00          
049F8E 74 69 6C 65 2162*  fn_xevious_3_0B: db "tiles/xevious/xevious_3_0B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 42 2E 72 
       67 62 61 32 
       00          
049FAF 74 69 6C 65 2163*  fn_xevious_3_0C: db "tiles/xevious/xevious_3_0C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 43 2E 72 
       67 62 61 32 
       00          
049FD0 74 69 6C 65 2164*  fn_xevious_3_0D: db "tiles/xevious/xevious_3_0D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 44 2E 72 
       67 62 61 32 
       00          
049FF1 74 69 6C 65 2165*  fn_xevious_3_0E: db "tiles/xevious/xevious_3_0E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 45 2E 72 
       67 62 61 32 
       00          
04A012 74 69 6C 65 2166*  fn_xevious_3_0F: db "tiles/xevious/xevious_3_0F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       30 46 2E 72 
       67 62 61 32 
       00          
04A033 74 69 6C 65 2167*  fn_xevious_3_10: db "tiles/xevious/xevious_3_10.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 30 2E 72 
       67 62 61 32 
       00          
04A054 74 69 6C 65 2168*  fn_xevious_3_11: db "tiles/xevious/xevious_3_11.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 31 2E 72 
       67 62 61 32 
       00          
04A075 74 69 6C 65 2169*  fn_xevious_3_12: db "tiles/xevious/xevious_3_12.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 32 2E 72 
       67 62 61 32 
       00          
04A096 74 69 6C 65 2170*  fn_xevious_3_13: db "tiles/xevious/xevious_3_13.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 33 2E 72 
       67 62 61 32 
       00          
04A0B7 74 69 6C 65 2171*  fn_xevious_3_14: db "tiles/xevious/xevious_3_14.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 34 2E 72 
       67 62 61 32 
       00          
04A0D8 74 69 6C 65 2172*  fn_xevious_3_15: db "tiles/xevious/xevious_3_15.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 35 2E 72 
       67 62 61 32 
       00          
04A0F9 74 69 6C 65 2173*  fn_xevious_3_16: db "tiles/xevious/xevious_3_16.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 36 2E 72 
       67 62 61 32 
       00          
04A11A 74 69 6C 65 2174*  fn_xevious_3_17: db "tiles/xevious/xevious_3_17.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 37 2E 72 
       67 62 61 32 
       00          
04A13B 74 69 6C 65 2175*  fn_xevious_3_18: db "tiles/xevious/xevious_3_18.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 38 2E 72 
       67 62 61 32 
       00          
04A15C 74 69 6C 65 2176*  fn_xevious_3_19: db "tiles/xevious/xevious_3_19.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 39 2E 72 
       67 62 61 32 
       00          
04A17D 74 69 6C 65 2177*  fn_xevious_3_1A: db "tiles/xevious/xevious_3_1A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 41 2E 72 
       67 62 61 32 
       00          
04A19E 74 69 6C 65 2178*  fn_xevious_3_1B: db "tiles/xevious/xevious_3_1B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 42 2E 72 
       67 62 61 32 
       00          
04A1BF 74 69 6C 65 2179*  fn_xevious_3_1C: db "tiles/xevious/xevious_3_1C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 43 2E 72 
       67 62 61 32 
       00          
04A1E0 74 69 6C 65 2180*  fn_xevious_3_1D: db "tiles/xevious/xevious_3_1D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 44 2E 72 
       67 62 61 32 
       00          
04A201 74 69 6C 65 2181*  fn_xevious_3_1E: db "tiles/xevious/xevious_3_1E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 45 2E 72 
       67 62 61 32 
       00          
04A222 74 69 6C 65 2182*  fn_xevious_3_1F: db "tiles/xevious/xevious_3_1F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       31 46 2E 72 
       67 62 61 32 
       00          
04A243 74 69 6C 65 2183*  fn_xevious_3_20: db "tiles/xevious/xevious_3_20.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 30 2E 72 
       67 62 61 32 
       00          
04A264 74 69 6C 65 2184*  fn_xevious_3_21: db "tiles/xevious/xevious_3_21.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 31 2E 72 
       67 62 61 32 
       00          
04A285 74 69 6C 65 2185*  fn_xevious_3_22: db "tiles/xevious/xevious_3_22.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 32 2E 72 
       67 62 61 32 
       00          
04A2A6 74 69 6C 65 2186*  fn_xevious_3_23: db "tiles/xevious/xevious_3_23.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 33 2E 72 
       67 62 61 32 
       00          
04A2C7 74 69 6C 65 2187*  fn_xevious_3_24: db "tiles/xevious/xevious_3_24.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 34 2E 72 
       67 62 61 32 
       00          
04A2E8 74 69 6C 65 2188*  fn_xevious_3_25: db "tiles/xevious/xevious_3_25.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 35 2E 72 
       67 62 61 32 
       00          
04A309 74 69 6C 65 2189*  fn_xevious_3_26: db "tiles/xevious/xevious_3_26.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 36 2E 72 
       67 62 61 32 
       00          
04A32A 74 69 6C 65 2190*  fn_xevious_3_27: db "tiles/xevious/xevious_3_27.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 37 2E 72 
       67 62 61 32 
       00          
04A34B 74 69 6C 65 2191*  fn_xevious_3_28: db "tiles/xevious/xevious_3_28.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 38 2E 72 
       67 62 61 32 
       00          
04A36C 74 69 6C 65 2192*  fn_xevious_3_29: db "tiles/xevious/xevious_3_29.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 39 2E 72 
       67 62 61 32 
       00          
04A38D 74 69 6C 65 2193*  fn_xevious_3_2A: db "tiles/xevious/xevious_3_2A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 41 2E 72 
       67 62 61 32 
       00          
04A3AE 74 69 6C 65 2194*  fn_xevious_3_2B: db "tiles/xevious/xevious_3_2B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 42 2E 72 
       67 62 61 32 
       00          
04A3CF 74 69 6C 65 2195*  fn_xevious_3_2C: db "tiles/xevious/xevious_3_2C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 43 2E 72 
       67 62 61 32 
       00          
04A3F0 74 69 6C 65 2196*  fn_xevious_3_2D: db "tiles/xevious/xevious_3_2D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 44 2E 72 
       67 62 61 32 
       00          
04A411 74 69 6C 65 2197*  fn_xevious_3_2E: db "tiles/xevious/xevious_3_2E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 45 2E 72 
       67 62 61 32 
       00          
04A432 74 69 6C 65 2198*  fn_xevious_3_2F: db "tiles/xevious/xevious_3_2F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       32 46 2E 72 
       67 62 61 32 
       00          
04A453 74 69 6C 65 2199*  fn_xevious_3_30: db "tiles/xevious/xevious_3_30.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 30 2E 72 
       67 62 61 32 
       00          
04A474 74 69 6C 65 2200*  fn_xevious_3_31: db "tiles/xevious/xevious_3_31.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 31 2E 72 
       67 62 61 32 
       00          
04A495 74 69 6C 65 2201*  fn_xevious_3_32: db "tiles/xevious/xevious_3_32.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 32 2E 72 
       67 62 61 32 
       00          
04A4B6 74 69 6C 65 2202*  fn_xevious_3_33: db "tiles/xevious/xevious_3_33.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 33 2E 72 
       67 62 61 32 
       00          
04A4D7 74 69 6C 65 2203*  fn_xevious_3_34: db "tiles/xevious/xevious_3_34.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 34 2E 72 
       67 62 61 32 
       00          
04A4F8 74 69 6C 65 2204*  fn_xevious_3_35: db "tiles/xevious/xevious_3_35.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 35 2E 72 
       67 62 61 32 
       00          
04A519 74 69 6C 65 2205*  fn_xevious_3_36: db "tiles/xevious/xevious_3_36.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 36 2E 72 
       67 62 61 32 
       00          
04A53A 74 69 6C 65 2206*  fn_xevious_3_37: db "tiles/xevious/xevious_3_37.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 37 2E 72 
       67 62 61 32 
       00          
04A55B 74 69 6C 65 2207*  fn_xevious_3_38: db "tiles/xevious/xevious_3_38.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 38 2E 72 
       67 62 61 32 
       00          
04A57C 74 69 6C 65 2208*  fn_xevious_3_39: db "tiles/xevious/xevious_3_39.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 39 2E 72 
       67 62 61 32 
       00          
04A59D 74 69 6C 65 2209*  fn_xevious_3_3A: db "tiles/xevious/xevious_3_3A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 41 2E 72 
       67 62 61 32 
       00          
04A5BE 74 69 6C 65 2210*  fn_xevious_3_3B: db "tiles/xevious/xevious_3_3B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 42 2E 72 
       67 62 61 32 
       00          
04A5DF 74 69 6C 65 2211*  fn_xevious_3_3C: db "tiles/xevious/xevious_3_3C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 43 2E 72 
       67 62 61 32 
       00          
04A600 74 69 6C 65 2212*  fn_xevious_3_3D: db "tiles/xevious/xevious_3_3D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 44 2E 72 
       67 62 61 32 
       00          
04A621 74 69 6C 65 2213*  fn_xevious_3_3E: db "tiles/xevious/xevious_3_3E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 45 2E 72 
       67 62 61 32 
       00          
04A642 74 69 6C 65 2214*  fn_xevious_3_3F: db "tiles/xevious/xevious_3_3F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       33 46 2E 72 
       67 62 61 32 
       00          
04A663 74 69 6C 65 2215*  fn_xevious_3_40: db "tiles/xevious/xevious_3_40.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 30 2E 72 
       67 62 61 32 
       00          
04A684 74 69 6C 65 2216*  fn_xevious_3_41: db "tiles/xevious/xevious_3_41.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 31 2E 72 
       67 62 61 32 
       00          
04A6A5 74 69 6C 65 2217*  fn_xevious_3_42: db "tiles/xevious/xevious_3_42.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 32 2E 72 
       67 62 61 32 
       00          
04A6C6 74 69 6C 65 2218*  fn_xevious_3_43: db "tiles/xevious/xevious_3_43.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 33 2E 72 
       67 62 61 32 
       00          
04A6E7 74 69 6C 65 2219*  fn_xevious_3_44: db "tiles/xevious/xevious_3_44.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 34 2E 72 
       67 62 61 32 
       00          
04A708 74 69 6C 65 2220*  fn_xevious_3_45: db "tiles/xevious/xevious_3_45.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 35 2E 72 
       67 62 61 32 
       00          
04A729 74 69 6C 65 2221*  fn_xevious_3_46: db "tiles/xevious/xevious_3_46.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 36 2E 72 
       67 62 61 32 
       00          
04A74A 74 69 6C 65 2222*  fn_xevious_3_47: db "tiles/xevious/xevious_3_47.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 37 2E 72 
       67 62 61 32 
       00          
04A76B 74 69 6C 65 2223*  fn_xevious_3_48: db "tiles/xevious/xevious_3_48.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 38 2E 72 
       67 62 61 32 
       00          
04A78C 74 69 6C 65 2224*  fn_xevious_3_49: db "tiles/xevious/xevious_3_49.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 39 2E 72 
       67 62 61 32 
       00          
04A7AD 74 69 6C 65 2225*  fn_xevious_3_4A: db "tiles/xevious/xevious_3_4A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 41 2E 72 
       67 62 61 32 
       00          
04A7CE 74 69 6C 65 2226*  fn_xevious_3_4B: db "tiles/xevious/xevious_3_4B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 42 2E 72 
       67 62 61 32 
       00          
04A7EF 74 69 6C 65 2227*  fn_xevious_3_4C: db "tiles/xevious/xevious_3_4C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 43 2E 72 
       67 62 61 32 
       00          
04A810 74 69 6C 65 2228*  fn_xevious_3_4D: db "tiles/xevious/xevious_3_4D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 44 2E 72 
       67 62 61 32 
       00          
04A831 74 69 6C 65 2229*  fn_xevious_3_4E: db "tiles/xevious/xevious_3_4E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 45 2E 72 
       67 62 61 32 
       00          
04A852 74 69 6C 65 2230*  fn_xevious_3_4F: db "tiles/xevious/xevious_3_4F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       34 46 2E 72 
       67 62 61 32 
       00          
04A873 74 69 6C 65 2231*  fn_xevious_3_50: db "tiles/xevious/xevious_3_50.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 30 2E 72 
       67 62 61 32 
       00          
04A894 74 69 6C 65 2232*  fn_xevious_3_51: db "tiles/xevious/xevious_3_51.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 31 2E 72 
       67 62 61 32 
       00          
04A8B5 74 69 6C 65 2233*  fn_xevious_3_52: db "tiles/xevious/xevious_3_52.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 32 2E 72 
       67 62 61 32 
       00          
04A8D6 74 69 6C 65 2234*  fn_xevious_3_53: db "tiles/xevious/xevious_3_53.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 33 2E 72 
       67 62 61 32 
       00          
04A8F7 74 69 6C 65 2235*  fn_xevious_3_54: db "tiles/xevious/xevious_3_54.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 34 2E 72 
       67 62 61 32 
       00          
04A918 74 69 6C 65 2236*  fn_xevious_3_55: db "tiles/xevious/xevious_3_55.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 35 2E 72 
       67 62 61 32 
       00          
04A939 74 69 6C 65 2237*  fn_xevious_3_56: db "tiles/xevious/xevious_3_56.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 36 2E 72 
       67 62 61 32 
       00          
04A95A 74 69 6C 65 2238*  fn_xevious_3_57: db "tiles/xevious/xevious_3_57.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 37 2E 72 
       67 62 61 32 
       00          
04A97B 74 69 6C 65 2239*  fn_xevious_3_58: db "tiles/xevious/xevious_3_58.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 38 2E 72 
       67 62 61 32 
       00          
04A99C 74 69 6C 65 2240*  fn_xevious_3_59: db "tiles/xevious/xevious_3_59.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 39 2E 72 
       67 62 61 32 
       00          
04A9BD 74 69 6C 65 2241*  fn_xevious_3_5A: db "tiles/xevious/xevious_3_5A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 41 2E 72 
       67 62 61 32 
       00          
04A9DE 74 69 6C 65 2242*  fn_xevious_3_5B: db "tiles/xevious/xevious_3_5B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 42 2E 72 
       67 62 61 32 
       00          
04A9FF 74 69 6C 65 2243*  fn_xevious_3_5C: db "tiles/xevious/xevious_3_5C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 43 2E 72 
       67 62 61 32 
       00          
04AA20 74 69 6C 65 2244*  fn_xevious_3_5D: db "tiles/xevious/xevious_3_5D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 44 2E 72 
       67 62 61 32 
       00          
04AA41 74 69 6C 65 2245*  fn_xevious_3_5E: db "tiles/xevious/xevious_3_5E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 45 2E 72 
       67 62 61 32 
       00          
04AA62 74 69 6C 65 2246*  fn_xevious_3_5F: db "tiles/xevious/xevious_3_5F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       35 46 2E 72 
       67 62 61 32 
       00          
04AA83 74 69 6C 65 2247*  fn_xevious_3_60: db "tiles/xevious/xevious_3_60.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 30 2E 72 
       67 62 61 32 
       00          
04AAA4 74 69 6C 65 2248*  fn_xevious_3_61: db "tiles/xevious/xevious_3_61.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 31 2E 72 
       67 62 61 32 
       00          
04AAC5 74 69 6C 65 2249*  fn_xevious_3_62: db "tiles/xevious/xevious_3_62.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 32 2E 72 
       67 62 61 32 
       00          
04AAE6 74 69 6C 65 2250*  fn_xevious_3_63: db "tiles/xevious/xevious_3_63.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 33 2E 72 
       67 62 61 32 
       00          
04AB07 74 69 6C 65 2251*  fn_xevious_3_64: db "tiles/xevious/xevious_3_64.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 34 2E 72 
       67 62 61 32 
       00          
04AB28 74 69 6C 65 2252*  fn_xevious_3_65: db "tiles/xevious/xevious_3_65.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 35 2E 72 
       67 62 61 32 
       00          
04AB49 74 69 6C 65 2253*  fn_xevious_3_66: db "tiles/xevious/xevious_3_66.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 36 2E 72 
       67 62 61 32 
       00          
04AB6A 74 69 6C 65 2254*  fn_xevious_3_67: db "tiles/xevious/xevious_3_67.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 37 2E 72 
       67 62 61 32 
       00          
04AB8B 74 69 6C 65 2255*  fn_xevious_3_68: db "tiles/xevious/xevious_3_68.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 38 2E 72 
       67 62 61 32 
       00          
04ABAC 74 69 6C 65 2256*  fn_xevious_3_69: db "tiles/xevious/xevious_3_69.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 39 2E 72 
       67 62 61 32 
       00          
04ABCD 74 69 6C 65 2257*  fn_xevious_3_6A: db "tiles/xevious/xevious_3_6A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 41 2E 72 
       67 62 61 32 
       00          
04ABEE 74 69 6C 65 2258*  fn_xevious_3_6B: db "tiles/xevious/xevious_3_6B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 42 2E 72 
       67 62 61 32 
       00          
04AC0F 74 69 6C 65 2259*  fn_xevious_3_6C: db "tiles/xevious/xevious_3_6C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 43 2E 72 
       67 62 61 32 
       00          
04AC30 74 69 6C 65 2260*  fn_xevious_3_6D: db "tiles/xevious/xevious_3_6D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 44 2E 72 
       67 62 61 32 
       00          
04AC51 74 69 6C 65 2261*  fn_xevious_3_6E: db "tiles/xevious/xevious_3_6E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 45 2E 72 
       67 62 61 32 
       00          
04AC72 74 69 6C 65 2262*  fn_xevious_3_6F: db "tiles/xevious/xevious_3_6F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       36 46 2E 72 
       67 62 61 32 
       00          
04AC93 74 69 6C 65 2263*  fn_xevious_3_70: db "tiles/xevious/xevious_3_70.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 30 2E 72 
       67 62 61 32 
       00          
04ACB4 74 69 6C 65 2264*  fn_xevious_3_71: db "tiles/xevious/xevious_3_71.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 31 2E 72 
       67 62 61 32 
       00          
04ACD5 74 69 6C 65 2265*  fn_xevious_3_72: db "tiles/xevious/xevious_3_72.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 32 2E 72 
       67 62 61 32 
       00          
04ACF6 74 69 6C 65 2266*  fn_xevious_3_73: db "tiles/xevious/xevious_3_73.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 33 2E 72 
       67 62 61 32 
       00          
04AD17 74 69 6C 65 2267*  fn_xevious_3_74: db "tiles/xevious/xevious_3_74.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 34 2E 72 
       67 62 61 32 
       00          
04AD38 74 69 6C 65 2268*  fn_xevious_3_75: db "tiles/xevious/xevious_3_75.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 35 2E 72 
       67 62 61 32 
       00          
04AD59 74 69 6C 65 2269*  fn_xevious_3_76: db "tiles/xevious/xevious_3_76.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 36 2E 72 
       67 62 61 32 
       00          
04AD7A 74 69 6C 65 2270*  fn_xevious_3_77: db "tiles/xevious/xevious_3_77.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 37 2E 72 
       67 62 61 32 
       00          
04AD9B 74 69 6C 65 2271*  fn_xevious_3_78: db "tiles/xevious/xevious_3_78.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 38 2E 72 
       67 62 61 32 
       00          
04ADBC 74 69 6C 65 2272*  fn_xevious_3_79: db "tiles/xevious/xevious_3_79.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 39 2E 72 
       67 62 61 32 
       00          
04ADDD 74 69 6C 65 2273*  fn_xevious_3_7A: db "tiles/xevious/xevious_3_7A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 41 2E 72 
       67 62 61 32 
       00          
04ADFE 74 69 6C 65 2274*  fn_xevious_3_7B: db "tiles/xevious/xevious_3_7B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 42 2E 72 
       67 62 61 32 
       00          
04AE1F 74 69 6C 65 2275*  fn_xevious_3_7C: db "tiles/xevious/xevious_3_7C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 43 2E 72 
       67 62 61 32 
       00          
04AE40 74 69 6C 65 2276*  fn_xevious_3_7D: db "tiles/xevious/xevious_3_7D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 44 2E 72 
       67 62 61 32 
       00          
04AE61 74 69 6C 65 2277*  fn_xevious_3_7E: db "tiles/xevious/xevious_3_7E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 45 2E 72 
       67 62 61 32 
       00          
04AE82 74 69 6C 65 2278*  fn_xevious_3_7F: db "tiles/xevious/xevious_3_7F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       37 46 2E 72 
       67 62 61 32 
       00          
04AEA3 74 69 6C 65 2279*  fn_xevious_3_80: db "tiles/xevious/xevious_3_80.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 30 2E 72 
       67 62 61 32 
       00          
04AEC4 74 69 6C 65 2280*  fn_xevious_3_81: db "tiles/xevious/xevious_3_81.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 31 2E 72 
       67 62 61 32 
       00          
04AEE5 74 69 6C 65 2281*  fn_xevious_3_82: db "tiles/xevious/xevious_3_82.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 32 2E 72 
       67 62 61 32 
       00          
04AF06 74 69 6C 65 2282*  fn_xevious_3_83: db "tiles/xevious/xevious_3_83.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 33 2E 72 
       67 62 61 32 
       00          
04AF27 74 69 6C 65 2283*  fn_xevious_3_84: db "tiles/xevious/xevious_3_84.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 34 2E 72 
       67 62 61 32 
       00          
04AF48 74 69 6C 65 2284*  fn_xevious_3_85: db "tiles/xevious/xevious_3_85.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 35 2E 72 
       67 62 61 32 
       00          
04AF69 74 69 6C 65 2285*  fn_xevious_3_86: db "tiles/xevious/xevious_3_86.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 36 2E 72 
       67 62 61 32 
       00          
04AF8A 74 69 6C 65 2286*  fn_xevious_3_87: db "tiles/xevious/xevious_3_87.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 37 2E 72 
       67 62 61 32 
       00          
04AFAB 74 69 6C 65 2287*  fn_xevious_3_88: db "tiles/xevious/xevious_3_88.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 38 2E 72 
       67 62 61 32 
       00          
04AFCC 74 69 6C 65 2288*  fn_xevious_3_89: db "tiles/xevious/xevious_3_89.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 39 2E 72 
       67 62 61 32 
       00          
04AFED 74 69 6C 65 2289*  fn_xevious_3_8A: db "tiles/xevious/xevious_3_8A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 41 2E 72 
       67 62 61 32 
       00          
04B00E 74 69 6C 65 2290*  fn_xevious_3_8B: db "tiles/xevious/xevious_3_8B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 42 2E 72 
       67 62 61 32 
       00          
04B02F 74 69 6C 65 2291*  fn_xevious_3_8C: db "tiles/xevious/xevious_3_8C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 43 2E 72 
       67 62 61 32 
       00          
04B050 74 69 6C 65 2292*  fn_xevious_3_8D: db "tiles/xevious/xevious_3_8D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 44 2E 72 
       67 62 61 32 
       00          
04B071 74 69 6C 65 2293*  fn_xevious_3_8E: db "tiles/xevious/xevious_3_8E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 45 2E 72 
       67 62 61 32 
       00          
04B092 74 69 6C 65 2294*  fn_xevious_3_8F: db "tiles/xevious/xevious_3_8F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       38 46 2E 72 
       67 62 61 32 
       00          
04B0B3 74 69 6C 65 2295*  fn_xevious_3_90: db "tiles/xevious/xevious_3_90.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 30 2E 72 
       67 62 61 32 
       00          
04B0D4 74 69 6C 65 2296*  fn_xevious_3_91: db "tiles/xevious/xevious_3_91.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 31 2E 72 
       67 62 61 32 
       00          
04B0F5 74 69 6C 65 2297*  fn_xevious_3_92: db "tiles/xevious/xevious_3_92.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 32 2E 72 
       67 62 61 32 
       00          
04B116 74 69 6C 65 2298*  fn_xevious_3_93: db "tiles/xevious/xevious_3_93.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 33 2E 72 
       67 62 61 32 
       00          
04B137 74 69 6C 65 2299*  fn_xevious_3_94: db "tiles/xevious/xevious_3_94.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 34 2E 72 
       67 62 61 32 
       00          
04B158 74 69 6C 65 2300*  fn_xevious_3_95: db "tiles/xevious/xevious_3_95.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 35 2E 72 
       67 62 61 32 
       00          
04B179 74 69 6C 65 2301*  fn_xevious_3_96: db "tiles/xevious/xevious_3_96.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 36 2E 72 
       67 62 61 32 
       00          
04B19A 74 69 6C 65 2302*  fn_xevious_3_97: db "tiles/xevious/xevious_3_97.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 37 2E 72 
       67 62 61 32 
       00          
04B1BB 74 69 6C 65 2303*  fn_xevious_3_98: db "tiles/xevious/xevious_3_98.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 38 2E 72 
       67 62 61 32 
       00          
04B1DC 74 69 6C 65 2304*  fn_xevious_3_99: db "tiles/xevious/xevious_3_99.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 39 2E 72 
       67 62 61 32 
       00          
04B1FD 74 69 6C 65 2305*  fn_xevious_3_9A: db "tiles/xevious/xevious_3_9A.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 41 2E 72 
       67 62 61 32 
       00          
04B21E 74 69 6C 65 2306*  fn_xevious_3_9B: db "tiles/xevious/xevious_3_9B.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 42 2E 72 
       67 62 61 32 
       00          
04B23F 74 69 6C 65 2307*  fn_xevious_3_9C: db "tiles/xevious/xevious_3_9C.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 43 2E 72 
       67 62 61 32 
       00          
04B260 74 69 6C 65 2308*  fn_xevious_3_9D: db "tiles/xevious/xevious_3_9D.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 44 2E 72 
       67 62 61 32 
       00          
04B281 74 69 6C 65 2309*  fn_xevious_3_9E: db "tiles/xevious/xevious_3_9E.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 45 2E 72 
       67 62 61 32 
       00          
04B2A2 74 69 6C 65 2310*  fn_xevious_3_9F: db "tiles/xevious/xevious_3_9F.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       39 46 2E 72 
       67 62 61 32 
       00          
04B2C3 74 69 6C 65 2311*  fn_xevious_3_A0: db "tiles/xevious/xevious_3_A0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 30 2E 72 
       67 62 61 32 
       00          
04B2E4 74 69 6C 65 2312*  fn_xevious_3_A1: db "tiles/xevious/xevious_3_A1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 31 2E 72 
       67 62 61 32 
       00          
04B305 74 69 6C 65 2313*  fn_xevious_3_A2: db "tiles/xevious/xevious_3_A2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 32 2E 72 
       67 62 61 32 
       00          
04B326 74 69 6C 65 2314*  fn_xevious_3_A3: db "tiles/xevious/xevious_3_A3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 33 2E 72 
       67 62 61 32 
       00          
04B347 74 69 6C 65 2315*  fn_xevious_3_A4: db "tiles/xevious/xevious_3_A4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 34 2E 72 
       67 62 61 32 
       00          
04B368 74 69 6C 65 2316*  fn_xevious_3_A5: db "tiles/xevious/xevious_3_A5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 35 2E 72 
       67 62 61 32 
       00          
04B389 74 69 6C 65 2317*  fn_xevious_3_A6: db "tiles/xevious/xevious_3_A6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 36 2E 72 
       67 62 61 32 
       00          
04B3AA 74 69 6C 65 2318*  fn_xevious_3_A7: db "tiles/xevious/xevious_3_A7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 37 2E 72 
       67 62 61 32 
       00          
04B3CB 74 69 6C 65 2319*  fn_xevious_3_A8: db "tiles/xevious/xevious_3_A8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 38 2E 72 
       67 62 61 32 
       00          
04B3EC 74 69 6C 65 2320*  fn_xevious_3_A9: db "tiles/xevious/xevious_3_A9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 39 2E 72 
       67 62 61 32 
       00          
04B40D 74 69 6C 65 2321*  fn_xevious_3_AA: db "tiles/xevious/xevious_3_AA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 41 2E 72 
       67 62 61 32 
       00          
04B42E 74 69 6C 65 2322*  fn_xevious_3_AB: db "tiles/xevious/xevious_3_AB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 42 2E 72 
       67 62 61 32 
       00          
04B44F 74 69 6C 65 2323*  fn_xevious_3_AC: db "tiles/xevious/xevious_3_AC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 43 2E 72 
       67 62 61 32 
       00          
04B470 74 69 6C 65 2324*  fn_xevious_3_AD: db "tiles/xevious/xevious_3_AD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 44 2E 72 
       67 62 61 32 
       00          
04B491 74 69 6C 65 2325*  fn_xevious_3_AE: db "tiles/xevious/xevious_3_AE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 45 2E 72 
       67 62 61 32 
       00          
04B4B2 74 69 6C 65 2326*  fn_xevious_3_AF: db "tiles/xevious/xevious_3_AF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       41 46 2E 72 
       67 62 61 32 
       00          
04B4D3 74 69 6C 65 2327*  fn_xevious_3_B0: db "tiles/xevious/xevious_3_B0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 30 2E 72 
       67 62 61 32 
       00          
04B4F4 74 69 6C 65 2328*  fn_xevious_3_B1: db "tiles/xevious/xevious_3_B1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 31 2E 72 
       67 62 61 32 
       00          
04B515 74 69 6C 65 2329*  fn_xevious_3_B2: db "tiles/xevious/xevious_3_B2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 32 2E 72 
       67 62 61 32 
       00          
04B536 74 69 6C 65 2330*  fn_xevious_3_B3: db "tiles/xevious/xevious_3_B3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 33 2E 72 
       67 62 61 32 
       00          
04B557 74 69 6C 65 2331*  fn_xevious_3_B4: db "tiles/xevious/xevious_3_B4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 34 2E 72 
       67 62 61 32 
       00          
04B578 74 69 6C 65 2332*  fn_xevious_3_B5: db "tiles/xevious/xevious_3_B5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 35 2E 72 
       67 62 61 32 
       00          
04B599 74 69 6C 65 2333*  fn_xevious_3_B6: db "tiles/xevious/xevious_3_B6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 36 2E 72 
       67 62 61 32 
       00          
04B5BA 74 69 6C 65 2334*  fn_xevious_3_B7: db "tiles/xevious/xevious_3_B7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 37 2E 72 
       67 62 61 32 
       00          
04B5DB 74 69 6C 65 2335*  fn_xevious_3_B8: db "tiles/xevious/xevious_3_B8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 38 2E 72 
       67 62 61 32 
       00          
04B5FC 74 69 6C 65 2336*  fn_xevious_3_B9: db "tiles/xevious/xevious_3_B9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 39 2E 72 
       67 62 61 32 
       00          
04B61D 74 69 6C 65 2337*  fn_xevious_3_BA: db "tiles/xevious/xevious_3_BA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 41 2E 72 
       67 62 61 32 
       00          
04B63E 74 69 6C 65 2338*  fn_xevious_3_BB: db "tiles/xevious/xevious_3_BB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 42 2E 72 
       67 62 61 32 
       00          
04B65F 74 69 6C 65 2339*  fn_xevious_3_BC: db "tiles/xevious/xevious_3_BC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 43 2E 72 
       67 62 61 32 
       00          
04B680 74 69 6C 65 2340*  fn_xevious_3_BD: db "tiles/xevious/xevious_3_BD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 44 2E 72 
       67 62 61 32 
       00          
04B6A1 74 69 6C 65 2341*  fn_xevious_3_BE: db "tiles/xevious/xevious_3_BE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 45 2E 72 
       67 62 61 32 
       00          
04B6C2 74 69 6C 65 2342*  fn_xevious_3_BF: db "tiles/xevious/xevious_3_BF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       42 46 2E 72 
       67 62 61 32 
       00          
04B6E3 74 69 6C 65 2343*  fn_xevious_3_C0: db "tiles/xevious/xevious_3_C0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 30 2E 72 
       67 62 61 32 
       00          
04B704 74 69 6C 65 2344*  fn_xevious_3_C1: db "tiles/xevious/xevious_3_C1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 31 2E 72 
       67 62 61 32 
       00          
04B725 74 69 6C 65 2345*  fn_xevious_3_C2: db "tiles/xevious/xevious_3_C2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 32 2E 72 
       67 62 61 32 
       00          
04B746 74 69 6C 65 2346*  fn_xevious_3_C3: db "tiles/xevious/xevious_3_C3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 33 2E 72 
       67 62 61 32 
       00          
04B767 74 69 6C 65 2347*  fn_xevious_3_C4: db "tiles/xevious/xevious_3_C4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 34 2E 72 
       67 62 61 32 
       00          
04B788 74 69 6C 65 2348*  fn_xevious_3_C5: db "tiles/xevious/xevious_3_C5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 35 2E 72 
       67 62 61 32 
       00          
04B7A9 74 69 6C 65 2349*  fn_xevious_3_C6: db "tiles/xevious/xevious_3_C6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 36 2E 72 
       67 62 61 32 
       00          
04B7CA 74 69 6C 65 2350*  fn_xevious_3_C7: db "tiles/xevious/xevious_3_C7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 37 2E 72 
       67 62 61 32 
       00          
04B7EB 74 69 6C 65 2351*  fn_xevious_3_C8: db "tiles/xevious/xevious_3_C8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 38 2E 72 
       67 62 61 32 
       00          
04B80C 74 69 6C 65 2352*  fn_xevious_3_C9: db "tiles/xevious/xevious_3_C9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 39 2E 72 
       67 62 61 32 
       00          
04B82D 74 69 6C 65 2353*  fn_xevious_3_CA: db "tiles/xevious/xevious_3_CA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 41 2E 72 
       67 62 61 32 
       00          
04B84E 74 69 6C 65 2354*  fn_xevious_3_CB: db "tiles/xevious/xevious_3_CB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 42 2E 72 
       67 62 61 32 
       00          
04B86F 74 69 6C 65 2355*  fn_xevious_3_CC: db "tiles/xevious/xevious_3_CC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 43 2E 72 
       67 62 61 32 
       00          
04B890 74 69 6C 65 2356*  fn_xevious_3_CD: db "tiles/xevious/xevious_3_CD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 44 2E 72 
       67 62 61 32 
       00          
04B8B1 74 69 6C 65 2357*  fn_xevious_3_CE: db "tiles/xevious/xevious_3_CE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 45 2E 72 
       67 62 61 32 
       00          
04B8D2 74 69 6C 65 2358*  fn_xevious_3_CF: db "tiles/xevious/xevious_3_CF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       43 46 2E 72 
       67 62 61 32 
       00          
04B8F3 74 69 6C 65 2359*  fn_xevious_3_D0: db "tiles/xevious/xevious_3_D0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 30 2E 72 
       67 62 61 32 
       00          
04B914 74 69 6C 65 2360*  fn_xevious_3_D1: db "tiles/xevious/xevious_3_D1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 31 2E 72 
       67 62 61 32 
       00          
04B935 74 69 6C 65 2361*  fn_xevious_3_D2: db "tiles/xevious/xevious_3_D2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 32 2E 72 
       67 62 61 32 
       00          
04B956 74 69 6C 65 2362*  fn_xevious_3_D3: db "tiles/xevious/xevious_3_D3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 33 2E 72 
       67 62 61 32 
       00          
04B977 74 69 6C 65 2363*  fn_xevious_3_D4: db "tiles/xevious/xevious_3_D4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 34 2E 72 
       67 62 61 32 
       00          
04B998 74 69 6C 65 2364*  fn_xevious_3_D5: db "tiles/xevious/xevious_3_D5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 35 2E 72 
       67 62 61 32 
       00          
04B9B9 74 69 6C 65 2365*  fn_xevious_3_D6: db "tiles/xevious/xevious_3_D6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 36 2E 72 
       67 62 61 32 
       00          
04B9DA 74 69 6C 65 2366*  fn_xevious_3_D7: db "tiles/xevious/xevious_3_D7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 37 2E 72 
       67 62 61 32 
       00          
04B9FB 74 69 6C 65 2367*  fn_xevious_3_D8: db "tiles/xevious/xevious_3_D8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 38 2E 72 
       67 62 61 32 
       00          
04BA1C 74 69 6C 65 2368*  fn_xevious_3_D9: db "tiles/xevious/xevious_3_D9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 39 2E 72 
       67 62 61 32 
       00          
04BA3D 74 69 6C 65 2369*  fn_xevious_3_DA: db "tiles/xevious/xevious_3_DA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 41 2E 72 
       67 62 61 32 
       00          
04BA5E 74 69 6C 65 2370*  fn_xevious_3_DB: db "tiles/xevious/xevious_3_DB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 42 2E 72 
       67 62 61 32 
       00          
04BA7F 74 69 6C 65 2371*  fn_xevious_3_DC: db "tiles/xevious/xevious_3_DC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 43 2E 72 
       67 62 61 32 
       00          
04BAA0 74 69 6C 65 2372*  fn_xevious_3_DD: db "tiles/xevious/xevious_3_DD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 44 2E 72 
       67 62 61 32 
       00          
04BAC1 74 69 6C 65 2373*  fn_xevious_3_DE: db "tiles/xevious/xevious_3_DE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 45 2E 72 
       67 62 61 32 
       00          
04BAE2 74 69 6C 65 2374*  fn_xevious_3_DF: db "tiles/xevious/xevious_3_DF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       44 46 2E 72 
       67 62 61 32 
       00          
04BB03 74 69 6C 65 2375*  fn_xevious_3_E0: db "tiles/xevious/xevious_3_E0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 30 2E 72 
       67 62 61 32 
       00          
04BB24 74 69 6C 65 2376*  fn_xevious_3_E1: db "tiles/xevious/xevious_3_E1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 31 2E 72 
       67 62 61 32 
       00          
04BB45 74 69 6C 65 2377*  fn_xevious_3_E2: db "tiles/xevious/xevious_3_E2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 32 2E 72 
       67 62 61 32 
       00          
04BB66 74 69 6C 65 2378*  fn_xevious_3_E3: db "tiles/xevious/xevious_3_E3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 33 2E 72 
       67 62 61 32 
       00          
04BB87 74 69 6C 65 2379*  fn_xevious_3_E4: db "tiles/xevious/xevious_3_E4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 34 2E 72 
       67 62 61 32 
       00          
04BBA8 74 69 6C 65 2380*  fn_xevious_3_E5: db "tiles/xevious/xevious_3_E5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 35 2E 72 
       67 62 61 32 
       00          
04BBC9 74 69 6C 65 2381*  fn_xevious_3_E6: db "tiles/xevious/xevious_3_E6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 36 2E 72 
       67 62 61 32 
       00          
04BBEA 74 69 6C 65 2382*  fn_xevious_3_E7: db "tiles/xevious/xevious_3_E7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 37 2E 72 
       67 62 61 32 
       00          
04BC0B 74 69 6C 65 2383*  fn_xevious_3_E8: db "tiles/xevious/xevious_3_E8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 38 2E 72 
       67 62 61 32 
       00          
04BC2C 74 69 6C 65 2384*  fn_xevious_3_E9: db "tiles/xevious/xevious_3_E9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 39 2E 72 
       67 62 61 32 
       00          
04BC4D 74 69 6C 65 2385*  fn_xevious_3_EA: db "tiles/xevious/xevious_3_EA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 41 2E 72 
       67 62 61 32 
       00          
04BC6E 74 69 6C 65 2386*  fn_xevious_3_EB: db "tiles/xevious/xevious_3_EB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 42 2E 72 
       67 62 61 32 
       00          
04BC8F 74 69 6C 65 2387*  fn_xevious_3_EC: db "tiles/xevious/xevious_3_EC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 43 2E 72 
       67 62 61 32 
       00          
04BCB0 74 69 6C 65 2388*  fn_xevious_3_ED: db "tiles/xevious/xevious_3_ED.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 44 2E 72 
       67 62 61 32 
       00          
04BCD1 74 69 6C 65 2389*  fn_xevious_3_EE: db "tiles/xevious/xevious_3_EE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 45 2E 72 
       67 62 61 32 
       00          
04BCF2 74 69 6C 65 2390*  fn_xevious_3_EF: db "tiles/xevious/xevious_3_EF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       45 46 2E 72 
       67 62 61 32 
       00          
04BD13 74 69 6C 65 2391*  fn_xevious_3_F0: db "tiles/xevious/xevious_3_F0.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 30 2E 72 
       67 62 61 32 
       00          
04BD34 74 69 6C 65 2392*  fn_xevious_3_F1: db "tiles/xevious/xevious_3_F1.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 31 2E 72 
       67 62 61 32 
       00          
04BD55 74 69 6C 65 2393*  fn_xevious_3_F2: db "tiles/xevious/xevious_3_F2.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 32 2E 72 
       67 62 61 32 
       00          
04BD76 74 69 6C 65 2394*  fn_xevious_3_F3: db "tiles/xevious/xevious_3_F3.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 33 2E 72 
       67 62 61 32 
       00          
04BD97 74 69 6C 65 2395*  fn_xevious_3_F4: db "tiles/xevious/xevious_3_F4.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 34 2E 72 
       67 62 61 32 
       00          
04BDB8 74 69 6C 65 2396*  fn_xevious_3_F5: db "tiles/xevious/xevious_3_F5.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 35 2E 72 
       67 62 61 32 
       00          
04BDD9 74 69 6C 65 2397*  fn_xevious_3_F6: db "tiles/xevious/xevious_3_F6.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 36 2E 72 
       67 62 61 32 
       00          
04BDFA 74 69 6C 65 2398*  fn_xevious_3_F7: db "tiles/xevious/xevious_3_F7.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 37 2E 72 
       67 62 61 32 
       00          
04BE1B 74 69 6C 65 2399*  fn_xevious_3_F8: db "tiles/xevious/xevious_3_F8.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 38 2E 72 
       67 62 61 32 
       00          
04BE3C 74 69 6C 65 2400*  fn_xevious_3_F9: db "tiles/xevious/xevious_3_F9.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 39 2E 72 
       67 62 61 32 
       00          
04BE5D 74 69 6C 65 2401*  fn_xevious_3_FA: db "tiles/xevious/xevious_3_FA.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 41 2E 72 
       67 62 61 32 
       00          
04BE7E 74 69 6C 65 2402*  fn_xevious_3_FB: db "tiles/xevious/xevious_3_FB.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 42 2E 72 
       67 62 61 32 
       00          
04BE9F 74 69 6C 65 2403*  fn_xevious_3_FC: db "tiles/xevious/xevious_3_FC.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 43 2E 72 
       67 62 61 32 
       00          
04BEC0 74 69 6C 65 2404*  fn_xevious_3_FD: db "tiles/xevious/xevious_3_FD.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 44 2E 72 
       67 62 61 32 
       00          
04BEE1 74 69 6C 65 2405*  fn_xevious_3_FE: db "tiles/xevious/xevious_3_FE.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 45 2E 72 
       67 62 61 32 
       00          
04BF02 74 69 6C 65 2406*  fn_xevious_3_FF: db "tiles/xevious/xevious_3_FF.rgba2",0
       73 2F 78 65 
       76 69 6F 75 
       73 2F 78 65 
       76 69 6F 75 
       73 5F 33 5F 
       46 46 2E 72 
       67 62 61 32 
       00          
04BF23             0048       include "images_sprites.inc"
04BF23             0001*  ; Generated by make_images.py
04BF23             0002*  
04BF23             0003*  sprites_num_images: equ 79
04BF23             0004*  
04BF23             0005*  ; buffer_ids:
04BF23             0006*  BUF_CRATER: equ 256
04BF23             0007*  BUF_EXPLOSION_A: equ 257
04BF23             0008*  BUF_EXPLOSION_B: equ 258
04BF23             0009*  BUF_EXPLOSION_C: equ 259
04BF23             0010*  BUF_EXPLOSION_D: equ 260
04BF23             0011*  BUF_EXPLOSION_E: equ 261
04BF23             0012*  BUF_FIREBALL_A: equ 262
04BF23             0013*  BUF_FIREBALL_B: equ 263
04BF23             0014*  BUF_LASER_A: equ 264
04BF23             0015*  BUF_LASER_B: equ 265
04BF23             0016*  BUF_PAD: equ 266
04BF23             0017*  BUF_SEEKER_000: equ 267
04BF23             0018*  BUF_SEEKER_008: equ 268
04BF23             0019*  BUF_SEEKER_016: equ 269
04BF23             0020*  BUF_SEEKER_024: equ 270
04BF23             0021*  BUF_SEEKER_032: equ 271
04BF23             0022*  BUF_SEEKER_040: equ 272
04BF23             0023*  BUF_SEEKER_048: equ 273
04BF23             0024*  BUF_SEEKER_056: equ 274
04BF23             0025*  BUF_SEEKER_064: equ 275
04BF23             0026*  BUF_SEEKER_072: equ 276
04BF23             0027*  BUF_SEEKER_080: equ 277
04BF23             0028*  BUF_SEEKER_088: equ 278
04BF23             0029*  BUF_SEEKER_096: equ 279
04BF23             0030*  BUF_SEEKER_104: equ 280
04BF23             0031*  BUF_SEEKER_112: equ 281
04BF23             0032*  BUF_SEEKER_120: equ 282
04BF23             0033*  BUF_SEEKER_128: equ 283
04BF23             0034*  BUF_SEEKER_136: equ 284
04BF23             0035*  BUF_SEEKER_144: equ 285
04BF23             0036*  BUF_SEEKER_152: equ 286
04BF23             0037*  BUF_SEEKER_160: equ 287
04BF23             0038*  BUF_SEEKER_168: equ 288
04BF23             0039*  BUF_SEEKER_176: equ 289
04BF23             0040*  BUF_SEEKER_184: equ 290
04BF23             0041*  BUF_SEEKER_192: equ 291
04BF23             0042*  BUF_SEEKER_200: equ 292
04BF23             0043*  BUF_SEEKER_208: equ 293
04BF23             0044*  BUF_SEEKER_216: equ 294
04BF23             0045*  BUF_SEEKER_224: equ 295
04BF23             0046*  BUF_SEEKER_232: equ 296
04BF23             0047*  BUF_SEEKER_240: equ 297
04BF23             0048*  BUF_SEEKER_248: equ 298
04BF23             0049*  BUF_SHIP_0L: equ 299
04BF23             0050*  BUF_SHIP_1C: equ 300
04BF23             0051*  BUF_SHIP_2R: equ 301
04BF23             0052*  BUF_SHIP_SMALL: equ 302
04BF23             0053*  BUF_TURRET_000: equ 303
04BF23             0054*  BUF_TURRET_008: equ 304
04BF23             0055*  BUF_TURRET_016: equ 305
04BF23             0056*  BUF_TURRET_024: equ 306
04BF23             0057*  BUF_TURRET_032: equ 307
04BF23             0058*  BUF_TURRET_040: equ 308
04BF23             0059*  BUF_TURRET_048: equ 309
04BF23             0060*  BUF_TURRET_056: equ 310
04BF23             0061*  BUF_TURRET_064: equ 311
04BF23             0062*  BUF_TURRET_072: equ 312
04BF23             0063*  BUF_TURRET_080: equ 313
04BF23             0064*  BUF_TURRET_088: equ 314
04BF23             0065*  BUF_TURRET_096: equ 315
04BF23             0066*  BUF_TURRET_104: equ 316
04BF23             0067*  BUF_TURRET_112: equ 317
04BF23             0068*  BUF_TURRET_120: equ 318
04BF23             0069*  BUF_TURRET_128: equ 319
04BF23             0070*  BUF_TURRET_136: equ 320
04BF23             0071*  BUF_TURRET_144: equ 321
04BF23             0072*  BUF_TURRET_152: equ 322
04BF23             0073*  BUF_TURRET_160: equ 323
04BF23             0074*  BUF_TURRET_168: equ 324
04BF23             0075*  BUF_TURRET_176: equ 325
04BF23             0076*  BUF_TURRET_184: equ 326
04BF23             0077*  BUF_TURRET_192: equ 327
04BF23             0078*  BUF_TURRET_200: equ 328
04BF23             0079*  BUF_TURRET_208: equ 329
04BF23             0080*  BUF_TURRET_216: equ 330
04BF23             0081*  BUF_TURRET_224: equ 331
04BF23             0082*  BUF_TURRET_232: equ 332
04BF23             0083*  BUF_TURRET_240: equ 333
04BF23             0084*  BUF_TURRET_248: equ 334
04BF23             0085*  
04BF23             0086*  sprites_image_list: ; type; width; height; size; filename; bufferId:
04BF23 01 00 00 10 0087*  	dl 1, 16, 16, 256, fn_crater, 256
       00 00 10 00 
       00 00 01 00 
       B1 C4 04 00 
       01 00       
04BF35 01 00 00 10 0088*  	dl 1, 16, 16, 256, fn_explosion_a, 257
       00 00 10 00 
       00 00 01 00 
       C6 C4 04 01 
       01 00       
04BF47 01 00 00 10 0089*  	dl 1, 16, 16, 256, fn_explosion_b, 258
       00 00 10 00 
       00 00 01 00 
       E0 C4 04 02 
       01 00       
04BF59 01 00 00 10 0090*  	dl 1, 16, 16, 256, fn_explosion_c, 259
       00 00 10 00 
       00 00 01 00 
       FA C4 04 03 
       01 00       
04BF6B 01 00 00 10 0091*  	dl 1, 16, 16, 256, fn_explosion_d, 260
       00 00 10 00 
       00 00 01 00 
       14 C5 04 04 
       01 00       
04BF7D 01 00 00 10 0092*  	dl 1, 16, 16, 256, fn_explosion_e, 261
       00 00 10 00 
       00 00 01 00 
       2E C5 04 05 
       01 00       
04BF8F 01 00 00 07 0093*  	dl 1, 7, 7, 49, fn_fireball_a, 262
       00 00 07 00 
       00 31 00 00 
       48 C5 04 06 
       01 00       
04BFA1 01 00 00 07 0094*  	dl 1, 7, 7, 49, fn_fireball_b, 263
       00 00 07 00 
       00 31 00 00 
       61 C5 04 07 
       01 00       
04BFB3 01 00 00 05 0095*  	dl 1, 5, 13, 65, fn_laser_a, 264
       00 00 0D 00 
       00 41 00 00 
       7A C5 04 08 
       01 00       
04BFC5 01 00 00 05 0096*  	dl 1, 5, 13, 65, fn_laser_b, 265
       00 00 0D 00 
       00 41 00 00 
       90 C5 04 09 
       01 00       
04BFD7 01 00 00 10 0097*  	dl 1, 16, 16, 256, fn_pad, 266
       00 00 10 00 
       00 00 01 00 
       A6 C5 04 0A 
       01 00       
04BFE9 01 00 00 10 0098*  	dl 1, 16, 16, 256, fn_seeker_000, 267
       00 00 10 00 
       00 00 01 00 
       B8 C5 04 0B 
       01 00       
04BFFB 01 00 00 10 0099*  	dl 1, 16, 16, 256, fn_seeker_008, 268
       00 00 10 00 
       00 00 01 00 
       D1 C5 04 0C 
       01 00       
04C00D 01 00 00 10 0100*  	dl 1, 16, 16, 256, fn_seeker_016, 269
       00 00 10 00 
       00 00 01 00 
       EA C5 04 0D 
       01 00       
04C01F 01 00 00 10 0101*  	dl 1, 16, 16, 256, fn_seeker_024, 270
       00 00 10 00 
       00 00 01 00 
       03 C6 04 0E 
       01 00       
04C031 01 00 00 10 0102*  	dl 1, 16, 16, 256, fn_seeker_032, 271
       00 00 10 00 
       00 00 01 00 
       1C C6 04 0F 
       01 00       
04C043 01 00 00 10 0103*  	dl 1, 16, 16, 256, fn_seeker_040, 272
       00 00 10 00 
       00 00 01 00 
       35 C6 04 10 
       01 00       
04C055 01 00 00 10 0104*  	dl 1, 16, 16, 256, fn_seeker_048, 273
       00 00 10 00 
       00 00 01 00 
       4E C6 04 11 
       01 00       
04C067 01 00 00 10 0105*  	dl 1, 16, 16, 256, fn_seeker_056, 274
       00 00 10 00 
       00 00 01 00 
       67 C6 04 12 
       01 00       
04C079 01 00 00 10 0106*  	dl 1, 16, 16, 256, fn_seeker_064, 275
       00 00 10 00 
       00 00 01 00 
       80 C6 04 13 
       01 00       
04C08B 01 00 00 10 0107*  	dl 1, 16, 16, 256, fn_seeker_072, 276
       00 00 10 00 
       00 00 01 00 
       99 C6 04 14 
       01 00       
04C09D 01 00 00 10 0108*  	dl 1, 16, 16, 256, fn_seeker_080, 277
       00 00 10 00 
       00 00 01 00 
       B2 C6 04 15 
       01 00       
04C0AF 01 00 00 10 0109*  	dl 1, 16, 16, 256, fn_seeker_088, 278
       00 00 10 00 
       00 00 01 00 
       CB C6 04 16 
       01 00       
04C0C1 01 00 00 10 0110*  	dl 1, 16, 16, 256, fn_seeker_096, 279
       00 00 10 00 
       00 00 01 00 
       E4 C6 04 17 
       01 00       
04C0D3 01 00 00 10 0111*  	dl 1, 16, 16, 256, fn_seeker_104, 280
       00 00 10 00 
       00 00 01 00 
       FD C6 04 18 
       01 00       
04C0E5 01 00 00 10 0112*  	dl 1, 16, 16, 256, fn_seeker_112, 281
       00 00 10 00 
       00 00 01 00 
       16 C7 04 19 
       01 00       
04C0F7 01 00 00 10 0113*  	dl 1, 16, 16, 256, fn_seeker_120, 282
       00 00 10 00 
       00 00 01 00 
       2F C7 04 1A 
       01 00       
04C109 01 00 00 10 0114*  	dl 1, 16, 16, 256, fn_seeker_128, 283
       00 00 10 00 
       00 00 01 00 
       48 C7 04 1B 
       01 00       
04C11B 01 00 00 10 0115*  	dl 1, 16, 16, 256, fn_seeker_136, 284
       00 00 10 00 
       00 00 01 00 
       61 C7 04 1C 
       01 00       
04C12D 01 00 00 10 0116*  	dl 1, 16, 16, 256, fn_seeker_144, 285
       00 00 10 00 
       00 00 01 00 
       7A C7 04 1D 
       01 00       
04C13F 01 00 00 10 0117*  	dl 1, 16, 16, 256, fn_seeker_152, 286
       00 00 10 00 
       00 00 01 00 
       93 C7 04 1E 
       01 00       
04C151 01 00 00 10 0118*  	dl 1, 16, 16, 256, fn_seeker_160, 287
       00 00 10 00 
       00 00 01 00 
       AC C7 04 1F 
       01 00       
04C163 01 00 00 10 0119*  	dl 1, 16, 16, 256, fn_seeker_168, 288
       00 00 10 00 
       00 00 01 00 
       C5 C7 04 20 
       01 00       
04C175 01 00 00 10 0120*  	dl 1, 16, 16, 256, fn_seeker_176, 289
       00 00 10 00 
       00 00 01 00 
       DE C7 04 21 
       01 00       
04C187 01 00 00 10 0121*  	dl 1, 16, 16, 256, fn_seeker_184, 290
       00 00 10 00 
       00 00 01 00 
       F7 C7 04 22 
       01 00       
04C199 01 00 00 10 0122*  	dl 1, 16, 16, 256, fn_seeker_192, 291
       00 00 10 00 
       00 00 01 00 
       10 C8 04 23 
       01 00       
04C1AB 01 00 00 10 0123*  	dl 1, 16, 16, 256, fn_seeker_200, 292
       00 00 10 00 
       00 00 01 00 
       29 C8 04 24 
       01 00       
04C1BD 01 00 00 10 0124*  	dl 1, 16, 16, 256, fn_seeker_208, 293
       00 00 10 00 
       00 00 01 00 
       42 C8 04 25 
       01 00       
04C1CF 01 00 00 10 0125*  	dl 1, 16, 16, 256, fn_seeker_216, 294
       00 00 10 00 
       00 00 01 00 
       5B C8 04 26 
       01 00       
04C1E1 01 00 00 10 0126*  	dl 1, 16, 16, 256, fn_seeker_224, 295
       00 00 10 00 
       00 00 01 00 
       74 C8 04 27 
       01 00       
04C1F3 01 00 00 10 0127*  	dl 1, 16, 16, 256, fn_seeker_232, 296
       00 00 10 00 
       00 00 01 00 
       8D C8 04 28 
       01 00       
04C205 01 00 00 10 0128*  	dl 1, 16, 16, 256, fn_seeker_240, 297
       00 00 10 00 
       00 00 01 00 
       A6 C8 04 29 
       01 00       
04C217 01 00 00 10 0129*  	dl 1, 16, 16, 256, fn_seeker_248, 298
       00 00 10 00 
       00 00 01 00 
       BF C8 04 2A 
       01 00       
04C229 01 00 00 10 0130*  	dl 1, 16, 16, 256, fn_ship_0l, 299
       00 00 10 00 
       00 00 01 00 
       D8 C8 04 2B 
       01 00       
04C23B 01 00 00 10 0131*  	dl 1, 16, 16, 256, fn_ship_1c, 300
       00 00 10 00 
       00 00 01 00 
       EE C8 04 2C 
       01 00       
04C24D 01 00 00 10 0132*  	dl 1, 16, 16, 256, fn_ship_2r, 301
       00 00 10 00 
       00 00 01 00 
       04 C9 04 2D 
       01 00       
04C25F 01 00 00 08 0133*  	dl 1, 8, 8, 64, fn_ship_small, 302
       00 00 08 00 
       00 40 00 00 
       1A C9 04 2E 
       01 00       
04C271 01 00 00 10 0134*  	dl 1, 16, 16, 256, fn_turret_000, 303
       00 00 10 00 
       00 00 01 00 
       33 C9 04 2F 
       01 00       
04C283 01 00 00 10 0135*  	dl 1, 16, 16, 256, fn_turret_008, 304
       00 00 10 00 
       00 00 01 00 
       4C C9 04 30 
       01 00       
04C295 01 00 00 10 0136*  	dl 1, 16, 16, 256, fn_turret_016, 305
       00 00 10 00 
       00 00 01 00 
       65 C9 04 31 
       01 00       
04C2A7 01 00 00 10 0137*  	dl 1, 16, 16, 256, fn_turret_024, 306
       00 00 10 00 
       00 00 01 00 
       7E C9 04 32 
       01 00       
04C2B9 01 00 00 10 0138*  	dl 1, 16, 16, 256, fn_turret_032, 307
       00 00 10 00 
       00 00 01 00 
       97 C9 04 33 
       01 00       
04C2CB 01 00 00 10 0139*  	dl 1, 16, 16, 256, fn_turret_040, 308
       00 00 10 00 
       00 00 01 00 
       B0 C9 04 34 
       01 00       
04C2DD 01 00 00 10 0140*  	dl 1, 16, 16, 256, fn_turret_048, 309
       00 00 10 00 
       00 00 01 00 
       C9 C9 04 35 
       01 00       
04C2EF 01 00 00 10 0141*  	dl 1, 16, 16, 256, fn_turret_056, 310
       00 00 10 00 
       00 00 01 00 
       E2 C9 04 36 
       01 00       
04C301 01 00 00 10 0142*  	dl 1, 16, 16, 256, fn_turret_064, 311
       00 00 10 00 
       00 00 01 00 
       FB C9 04 37 
       01 00       
04C313 01 00 00 10 0143*  	dl 1, 16, 16, 256, fn_turret_072, 312
       00 00 10 00 
       00 00 01 00 
       14 CA 04 38 
       01 00       
04C325 01 00 00 10 0144*  	dl 1, 16, 16, 256, fn_turret_080, 313
       00 00 10 00 
       00 00 01 00 
       2D CA 04 39 
       01 00       
04C337 01 00 00 10 0145*  	dl 1, 16, 16, 256, fn_turret_088, 314
       00 00 10 00 
       00 00 01 00 
       46 CA 04 3A 
       01 00       
04C349 01 00 00 10 0146*  	dl 1, 16, 16, 256, fn_turret_096, 315
       00 00 10 00 
       00 00 01 00 
       5F CA 04 3B 
       01 00       
04C35B 01 00 00 10 0147*  	dl 1, 16, 16, 256, fn_turret_104, 316
       00 00 10 00 
       00 00 01 00 
       78 CA 04 3C 
       01 00       
04C36D 01 00 00 10 0148*  	dl 1, 16, 16, 256, fn_turret_112, 317
       00 00 10 00 
       00 00 01 00 
       91 CA 04 3D 
       01 00       
04C37F 01 00 00 10 0149*  	dl 1, 16, 16, 256, fn_turret_120, 318
       00 00 10 00 
       00 00 01 00 
       AA CA 04 3E 
       01 00       
04C391 01 00 00 10 0150*  	dl 1, 16, 16, 256, fn_turret_128, 319
       00 00 10 00 
       00 00 01 00 
       C3 CA 04 3F 
       01 00       
04C3A3 01 00 00 10 0151*  	dl 1, 16, 16, 256, fn_turret_136, 320
       00 00 10 00 
       00 00 01 00 
       DC CA 04 40 
       01 00       
04C3B5 01 00 00 10 0152*  	dl 1, 16, 16, 256, fn_turret_144, 321
       00 00 10 00 
       00 00 01 00 
       F5 CA 04 41 
       01 00       
04C3C7 01 00 00 10 0153*  	dl 1, 16, 16, 256, fn_turret_152, 322
       00 00 10 00 
       00 00 01 00 
       0E CB 04 42 
       01 00       
04C3D9 01 00 00 10 0154*  	dl 1, 16, 16, 256, fn_turret_160, 323
       00 00 10 00 
       00 00 01 00 
       27 CB 04 43 
       01 00       
04C3EB 01 00 00 10 0155*  	dl 1, 16, 16, 256, fn_turret_168, 324
       00 00 10 00 
       00 00 01 00 
       40 CB 04 44 
       01 00       
04C3FD 01 00 00 10 0156*  	dl 1, 16, 16, 256, fn_turret_176, 325
       00 00 10 00 
       00 00 01 00 
       59 CB 04 45 
       01 00       
04C40F 01 00 00 10 0157*  	dl 1, 16, 16, 256, fn_turret_184, 326
       00 00 10 00 
       00 00 01 00 
       72 CB 04 46 
       01 00       
04C421 01 00 00 10 0158*  	dl 1, 16, 16, 256, fn_turret_192, 327
       00 00 10 00 
       00 00 01 00 
       8B CB 04 47 
       01 00       
04C433 01 00 00 10 0159*  	dl 1, 16, 16, 256, fn_turret_200, 328
       00 00 10 00 
       00 00 01 00 
       A4 CB 04 48 
       01 00       
04C445 01 00 00 10 0160*  	dl 1, 16, 16, 256, fn_turret_208, 329
       00 00 10 00 
       00 00 01 00 
       BD CB 04 49 
       01 00       
04C457 01 00 00 10 0161*  	dl 1, 16, 16, 256, fn_turret_216, 330
       00 00 10 00 
       00 00 01 00 
       D6 CB 04 4A 
       01 00       
04C469 01 00 00 10 0162*  	dl 1, 16, 16, 256, fn_turret_224, 331
       00 00 10 00 
       00 00 01 00 
       EF CB 04 4B 
       01 00       
04C47B 01 00 00 10 0163*  	dl 1, 16, 16, 256, fn_turret_232, 332
       00 00 10 00 
       00 00 01 00 
       08 CC 04 4C 
       01 00       
04C48D 01 00 00 10 0164*  	dl 1, 16, 16, 256, fn_turret_240, 333
       00 00 10 00 
       00 00 01 00 
       21 CC 04 4D 
       01 00       
04C49F 01 00 00 10 0165*  	dl 1, 16, 16, 256, fn_turret_248, 334
       00 00 10 00 
       00 00 01 00 
       3A CC 04 4E 
       01 00       
04C4B1             0166*  
04C4B1             0167*  ; files_list: ; filename:
04C4B1 73 70 72 69 0168*  fn_crater: db "sprites/crater.rgba2",0
       74 65 73 2F 
       63 72 61 74 
       65 72 2E 72 
       67 62 61 32 
       00          
04C4C6 73 70 72 69 0169*  fn_explosion_a: db "sprites/explosion_a.rgba2",0
       74 65 73 2F 
       65 78 70 6C 
       6F 73 69 6F 
       6E 5F 61 2E 
       72 67 62 61 
       32 00       
04C4E0 73 70 72 69 0170*  fn_explosion_b: db "sprites/explosion_b.rgba2",0
       74 65 73 2F 
       65 78 70 6C 
       6F 73 69 6F 
       6E 5F 62 2E 
       72 67 62 61 
       32 00       
04C4FA 73 70 72 69 0171*  fn_explosion_c: db "sprites/explosion_c.rgba2",0
       74 65 73 2F 
       65 78 70 6C 
       6F 73 69 6F 
       6E 5F 63 2E 
       72 67 62 61 
       32 00       
04C514 73 70 72 69 0172*  fn_explosion_d: db "sprites/explosion_d.rgba2",0
       74 65 73 2F 
       65 78 70 6C 
       6F 73 69 6F 
       6E 5F 64 2E 
       72 67 62 61 
       32 00       
04C52E 73 70 72 69 0173*  fn_explosion_e: db "sprites/explosion_e.rgba2",0
       74 65 73 2F 
       65 78 70 6C 
       6F 73 69 6F 
       6E 5F 65 2E 
       72 67 62 61 
       32 00       
04C548 73 70 72 69 0174*  fn_fireball_a: db "sprites/fireball_a.rgba2",0
       74 65 73 2F 
       66 69 72 65 
       62 61 6C 6C 
       5F 61 2E 72 
       67 62 61 32 
       00          
04C561 73 70 72 69 0175*  fn_fireball_b: db "sprites/fireball_b.rgba2",0
       74 65 73 2F 
       66 69 72 65 
       62 61 6C 6C 
       5F 62 2E 72 
       67 62 61 32 
       00          
04C57A 73 70 72 69 0176*  fn_laser_a: db "sprites/laser_a.rgba2",0
       74 65 73 2F 
       6C 61 73 65 
       72 5F 61 2E 
       72 67 62 61 
       32 00       
04C590 73 70 72 69 0177*  fn_laser_b: db "sprites/laser_b.rgba2",0
       74 65 73 2F 
       6C 61 73 65 
       72 5F 62 2E 
       72 67 62 61 
       32 00       
04C5A6 73 70 72 69 0178*  fn_pad: db "sprites/pad.rgba2",0
       74 65 73 2F 
       70 61 64 2E 
       72 67 62 61 
       32 00       
04C5B8 73 70 72 69 0179*  fn_seeker_000: db "sprites/seeker_000.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       30 30 2E 72 
       67 62 61 32 
       00          
04C5D1 73 70 72 69 0180*  fn_seeker_008: db "sprites/seeker_008.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       30 38 2E 72 
       67 62 61 32 
       00          
04C5EA 73 70 72 69 0181*  fn_seeker_016: db "sprites/seeker_016.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       31 36 2E 72 
       67 62 61 32 
       00          
04C603 73 70 72 69 0182*  fn_seeker_024: db "sprites/seeker_024.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       32 34 2E 72 
       67 62 61 32 
       00          
04C61C 73 70 72 69 0183*  fn_seeker_032: db "sprites/seeker_032.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       33 32 2E 72 
       67 62 61 32 
       00          
04C635 73 70 72 69 0184*  fn_seeker_040: db "sprites/seeker_040.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       34 30 2E 72 
       67 62 61 32 
       00          
04C64E 73 70 72 69 0185*  fn_seeker_048: db "sprites/seeker_048.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       34 38 2E 72 
       67 62 61 32 
       00          
04C667 73 70 72 69 0186*  fn_seeker_056: db "sprites/seeker_056.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       35 36 2E 72 
       67 62 61 32 
       00          
04C680 73 70 72 69 0187*  fn_seeker_064: db "sprites/seeker_064.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       36 34 2E 72 
       67 62 61 32 
       00          
04C699 73 70 72 69 0188*  fn_seeker_072: db "sprites/seeker_072.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       37 32 2E 72 
       67 62 61 32 
       00          
04C6B2 73 70 72 69 0189*  fn_seeker_080: db "sprites/seeker_080.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       38 30 2E 72 
       67 62 61 32 
       00          
04C6CB 73 70 72 69 0190*  fn_seeker_088: db "sprites/seeker_088.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       38 38 2E 72 
       67 62 61 32 
       00          
04C6E4 73 70 72 69 0191*  fn_seeker_096: db "sprites/seeker_096.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 30 
       39 36 2E 72 
       67 62 61 32 
       00          
04C6FD 73 70 72 69 0192*  fn_seeker_104: db "sprites/seeker_104.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       30 34 2E 72 
       67 62 61 32 
       00          
04C716 73 70 72 69 0193*  fn_seeker_112: db "sprites/seeker_112.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       31 32 2E 72 
       67 62 61 32 
       00          
04C72F 73 70 72 69 0194*  fn_seeker_120: db "sprites/seeker_120.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       32 30 2E 72 
       67 62 61 32 
       00          
04C748 73 70 72 69 0195*  fn_seeker_128: db "sprites/seeker_128.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       32 38 2E 72 
       67 62 61 32 
       00          
04C761 73 70 72 69 0196*  fn_seeker_136: db "sprites/seeker_136.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       33 36 2E 72 
       67 62 61 32 
       00          
04C77A 73 70 72 69 0197*  fn_seeker_144: db "sprites/seeker_144.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       34 34 2E 72 
       67 62 61 32 
       00          
04C793 73 70 72 69 0198*  fn_seeker_152: db "sprites/seeker_152.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       35 32 2E 72 
       67 62 61 32 
       00          
04C7AC 73 70 72 69 0199*  fn_seeker_160: db "sprites/seeker_160.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       36 30 2E 72 
       67 62 61 32 
       00          
04C7C5 73 70 72 69 0200*  fn_seeker_168: db "sprites/seeker_168.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       36 38 2E 72 
       67 62 61 32 
       00          
04C7DE 73 70 72 69 0201*  fn_seeker_176: db "sprites/seeker_176.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       37 36 2E 72 
       67 62 61 32 
       00          
04C7F7 73 70 72 69 0202*  fn_seeker_184: db "sprites/seeker_184.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       38 34 2E 72 
       67 62 61 32 
       00          
04C810 73 70 72 69 0203*  fn_seeker_192: db "sprites/seeker_192.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 31 
       39 32 2E 72 
       67 62 61 32 
       00          
04C829 73 70 72 69 0204*  fn_seeker_200: db "sprites/seeker_200.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       30 30 2E 72 
       67 62 61 32 
       00          
04C842 73 70 72 69 0205*  fn_seeker_208: db "sprites/seeker_208.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       30 38 2E 72 
       67 62 61 32 
       00          
04C85B 73 70 72 69 0206*  fn_seeker_216: db "sprites/seeker_216.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       31 36 2E 72 
       67 62 61 32 
       00          
04C874 73 70 72 69 0207*  fn_seeker_224: db "sprites/seeker_224.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       32 34 2E 72 
       67 62 61 32 
       00          
04C88D 73 70 72 69 0208*  fn_seeker_232: db "sprites/seeker_232.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       33 32 2E 72 
       67 62 61 32 
       00          
04C8A6 73 70 72 69 0209*  fn_seeker_240: db "sprites/seeker_240.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       34 30 2E 72 
       67 62 61 32 
       00          
04C8BF 73 70 72 69 0210*  fn_seeker_248: db "sprites/seeker_248.rgba2",0
       74 65 73 2F 
       73 65 65 6B 
       65 72 5F 32 
       34 38 2E 72 
       67 62 61 32 
       00          
04C8D8 73 70 72 69 0211*  fn_ship_0l: db "sprites/ship_0l.rgba2",0
       74 65 73 2F 
       73 68 69 70 
       5F 30 6C 2E 
       72 67 62 61 
       32 00       
04C8EE 73 70 72 69 0212*  fn_ship_1c: db "sprites/ship_1c.rgba2",0
       74 65 73 2F 
       73 68 69 70 
       5F 31 63 2E 
       72 67 62 61 
       32 00       
04C904 73 70 72 69 0213*  fn_ship_2r: db "sprites/ship_2r.rgba2",0
       74 65 73 2F 
       73 68 69 70 
       5F 32 72 2E 
       72 67 62 61 
       32 00       
04C91A 73 70 72 69 0214*  fn_ship_small: db "sprites/ship_small.rgba2",0
       74 65 73 2F 
       73 68 69 70 
       5F 73 6D 61 
       6C 6C 2E 72 
       67 62 61 32 
       00          
04C933 73 70 72 69 0215*  fn_turret_000: db "sprites/turret_000.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       30 30 2E 72 
       67 62 61 32 
       00          
04C94C 73 70 72 69 0216*  fn_turret_008: db "sprites/turret_008.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       30 38 2E 72 
       67 62 61 32 
       00          
04C965 73 70 72 69 0217*  fn_turret_016: db "sprites/turret_016.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       31 36 2E 72 
       67 62 61 32 
       00          
04C97E 73 70 72 69 0218*  fn_turret_024: db "sprites/turret_024.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       32 34 2E 72 
       67 62 61 32 
       00          
04C997 73 70 72 69 0219*  fn_turret_032: db "sprites/turret_032.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       33 32 2E 72 
       67 62 61 32 
       00          
04C9B0 73 70 72 69 0220*  fn_turret_040: db "sprites/turret_040.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       34 30 2E 72 
       67 62 61 32 
       00          
04C9C9 73 70 72 69 0221*  fn_turret_048: db "sprites/turret_048.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       34 38 2E 72 
       67 62 61 32 
       00          
04C9E2 73 70 72 69 0222*  fn_turret_056: db "sprites/turret_056.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       35 36 2E 72 
       67 62 61 32 
       00          
04C9FB 73 70 72 69 0223*  fn_turret_064: db "sprites/turret_064.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       36 34 2E 72 
       67 62 61 32 
       00          
04CA14 73 70 72 69 0224*  fn_turret_072: db "sprites/turret_072.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       37 32 2E 72 
       67 62 61 32 
       00          
04CA2D 73 70 72 69 0225*  fn_turret_080: db "sprites/turret_080.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       38 30 2E 72 
       67 62 61 32 
       00          
04CA46 73 70 72 69 0226*  fn_turret_088: db "sprites/turret_088.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       38 38 2E 72 
       67 62 61 32 
       00          
04CA5F 73 70 72 69 0227*  fn_turret_096: db "sprites/turret_096.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 30 
       39 36 2E 72 
       67 62 61 32 
       00          
04CA78 73 70 72 69 0228*  fn_turret_104: db "sprites/turret_104.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       30 34 2E 72 
       67 62 61 32 
       00          
04CA91 73 70 72 69 0229*  fn_turret_112: db "sprites/turret_112.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       31 32 2E 72 
       67 62 61 32 
       00          
04CAAA 73 70 72 69 0230*  fn_turret_120: db "sprites/turret_120.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       32 30 2E 72 
       67 62 61 32 
       00          
04CAC3 73 70 72 69 0231*  fn_turret_128: db "sprites/turret_128.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       32 38 2E 72 
       67 62 61 32 
       00          
04CADC 73 70 72 69 0232*  fn_turret_136: db "sprites/turret_136.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       33 36 2E 72 
       67 62 61 32 
       00          
04CAF5 73 70 72 69 0233*  fn_turret_144: db "sprites/turret_144.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       34 34 2E 72 
       67 62 61 32 
       00          
04CB0E 73 70 72 69 0234*  fn_turret_152: db "sprites/turret_152.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       35 32 2E 72 
       67 62 61 32 
       00          
04CB27 73 70 72 69 0235*  fn_turret_160: db "sprites/turret_160.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       36 30 2E 72 
       67 62 61 32 
       00          
04CB40 73 70 72 69 0236*  fn_turret_168: db "sprites/turret_168.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       36 38 2E 72 
       67 62 61 32 
       00          
04CB59 73 70 72 69 0237*  fn_turret_176: db "sprites/turret_176.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       37 36 2E 72 
       67 62 61 32 
       00          
04CB72 73 70 72 69 0238*  fn_turret_184: db "sprites/turret_184.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       38 34 2E 72 
       67 62 61 32 
       00          
04CB8B 73 70 72 69 0239*  fn_turret_192: db "sprites/turret_192.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 31 
       39 32 2E 72 
       67 62 61 32 
       00          
04CBA4 73 70 72 69 0240*  fn_turret_200: db "sprites/turret_200.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       30 30 2E 72 
       67 62 61 32 
       00          
04CBBD 73 70 72 69 0241*  fn_turret_208: db "sprites/turret_208.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       30 38 2E 72 
       67 62 61 32 
       00          
04CBD6 73 70 72 69 0242*  fn_turret_216: db "sprites/turret_216.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       31 36 2E 72 
       67 62 61 32 
       00          
04CBEF 73 70 72 69 0243*  fn_turret_224: db "sprites/turret_224.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       32 34 2E 72 
       67 62 61 32 
       00          
04CC08 73 70 72 69 0244*  fn_turret_232: db "sprites/turret_232.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       33 32 2E 72 
       67 62 61 32 
       00          
04CC21 73 70 72 69 0245*  fn_turret_240: db "sprites/turret_240.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       34 30 2E 72 
       67 62 61 32 
       00          
04CC3A 73 70 72 69 0246*  fn_turret_248: db "sprites/turret_248.rgba2",0
       74 65 73 2F 
       74 75 72 72 
       65 74 5F 32 
       34 38 2E 72 
       67 62 61 32 
       00          
04CC53             0049       include "images_ui.inc"
04CC53             0001*  ; Generated by make_images.py
04CC53             0002*  
04CC53             0003*  ui_num_images: equ 4
04CC53             0004*  
04CC53             0005*  ; buffer_ids:
04CC53             0006*  BUF_BEZEL_L: equ 0
04CC53             0007*  BUF_BEZEL_R: equ 1
04CC53             0008*  BUF_SPLASH_BG: equ 2
04CC53             0009*  BUF_SPLASH_LOGO: equ 3
04CC53             0010*  
04CC53             0011*  ui_image_list: ; type; width; height; size; filename; bufferId:
04CC53 01 00 00 80 0012*  	dl 1, 128, 384, 49152, fn_bezel_l, 0
       00 00 80 01 
       00 00 C0 00 
       9B CC 04 00 
       00 00       
04CC65 01 00 00 80 0013*  	dl 1, 128, 384, 49152, fn_bezel_r, 1
       00 00 80 01 
       00 00 C0 00 
       AC CC 04 01 
       00 00       
04CC77 01 00 00 40 0014*  	dl 1, 320, 240, 76800, fn_splash_bg, 2
       01 00 F0 00 
       00 00 2C 01 
       BD CC 04 02 
       00 00       
04CC89 01 00 00 40 0015*  	dl 1, 320, 240, 76800, fn_splash_logo, 3
       01 00 F0 00 
       00 00 2C 01 
       D0 CC 04 03 
       00 00       
04CC9B             0016*  
04CC9B             0017*  ; files_list: ; filename:
04CC9B 75 69 2F 62 0018*  fn_bezel_l: db "ui/bezel_l.rgba2",0
       65 7A 65 6C 
       5F 6C 2E 72 
       67 62 61 32 
       00          
04CCAC 75 69 2F 62 0019*  fn_bezel_r: db "ui/bezel_r.rgba2",0
       65 7A 65 6C 
       5F 72 2E 72 
       67 62 61 32 
       00          
04CCBD 75 69 2F 73 0020*  fn_splash_bg: db "ui/splash_bg.rgba2",0
       70 6C 61 73 
       68 5F 62 67 
       2E 72 67 62 
       61 32 00    
04CCD0 75 69 2F 73 0021*  fn_splash_logo: db "ui/splash_logo.rgba2",0
       70 6C 61 73 
       68 5F 6C 6F 
       67 6F 2E 72 
       67 62 61 32 
       00          
04CCE5             0050       include "laser.inc"
04CCE5             0001*  ; ##### LASER SPRITE PARAMETERS #####
04CCE5             0002*  ; uses the same offsets from its table base as the main sprite table:
04CCE5             0003*  laser_start_variables: ; label marking beginning of table
04CCE5 11          0004*  laser_id:               db table_max_records+1
04CCE6 00          0005*  laser_type:             db 0x00 ; 1 bytes currently not used
04CCE7 08 01 00    0006*  laser_base_bufferId:    dl BUF_LASER_A ; 3 bytes bitmap bufferId
04CCEA 00 00 00    0007*  laser_move_program:     dl 0x000000 ; 3 bytes not currently used
04CCED 00          0008*  laser_collisions:       db 0x00 ; 1 bytes uses sprite_alive and sprite_just_died flags
04CCEE 00          0009*  laser_dim_x:            db 0x00 ; 1 bytes sprite width in pixels
04CCEF 00          0010*  laser_dim_y:            db 0x00 ; 1 bytes sprite height in pixels
04CCF0 00 00 00    0011*  laser_x:                dl 0x000000 ; 3 bytes 16.8 fractional x position in pixels
04CCF3 00 00 00    0012*  laser_y:                dl 0x000000 ; 3 bytes 16.8 fractional y position in pixels
04CCF6 00 00 00    0013*  laser_xvel:             dl 0x000000 ; 3 bytes x-component velocity, 16.8 fixed, pixels
04CCF9 00 F8 FF    0014*  laser_yvel:             dl 0xFFF800 ; 3 bytes y-component velocity, 16.8 fixed, pixels
04CCFC 00 00 00    0015*  laser_vel:              dl 0x000000 ; 3 bytes not currently used
04CCFF 00 00 00    0016*  laser_heading:          dl 0x000000 ; 3 bytes sprite movement direction deg256 16.8 fixed
04CD02 00 00 00    0017*  laser_orientation:      dl 0x000000 ; 3 bytes not currently used
04CD05 00          0018*  laser_animation:        db 0x00 ; 1 bytes current sprite animation frame
04CD06 00          0019*  laser_animation_timer:  db 0x00 ; 1 bytes decremented every frame, when zero, advance animation
04CD07 00          0020*  laser_move_timer:       db 0x00 ; 1 bytes not currently used
04CD08 00          0021*  laser_move_step:        db 0x00 ; 1 bytes not currently used
04CD09 00          0022*  laser_points:           db 0x00 ; 1 bytes not currently used
04CD0A 00          0023*  laser_shield_damage:    db 0x00 ; 1 bytes not currently used
04CD0B             0024*  laser_end_variables: ; for when we want to traverse this table in reverse
04CD0B             0025*  laser_speed: equ -6*256 ; 6 pixels per frame 16.8 fixed
04CD0B             0026*  laser_animation_timer_reset: equ 2 ; animate every two frames
04CD0B             0027*  
04CD0B             0028*  laser_control:
04CD0B             0029*  ; point to laser sprite variables
04CD0B FD 21 E5 CC 0030*      ld iy,laser_start_variables
       04          
04CD10 FD 22 7A F1 0031*      ld (table_pointer),iy
       04          
04CD15             0032*  ; did laser just die?
04CD15 FD CB 08 7E 0033*      bit sprite_just_died,(iy+sprite_collisions)
04CD19 C2 A2 CD 04 0034*      jp nz,kill_laser
04CD1D             0035*  ; select laser sprite
04CD1D 3A E5 CC 04 0036*      ld a,(laser_id)
04CD21 CD 72 19 04 0037*      call vdu_sprite_select
04CD25             0038*  ; update laser position
04CD25 CD 2E F2 04 0039*      call move_sprite
04CD29             0040*  ; are we at top of screen?
04CD29 3A 7E F1 04 0041*      ld a,(sprite_screen_edge)
04CD2D E6 08       0042*      and collide_top
04CD2F C2 A2 CD 04 0043*      jp nz,kill_laser
04CD33             0044*  ; check animation timer
04CD33 FD 35 21    0045*      dec (iy+sprite_animation_timer)
04CD36 C2 43 CD 04 0046*      jp nz,@F
04CD3A 3E 02       0047*      ld a,laser_animation_timer_reset
04CD3C FD 77 21    0048*      ld (iy+sprite_animation_timer),a
04CD3F CD B9 19 04 0049*      call vdu_sprite_next_frame
04CD43             0050*  @@: ; draw the sprite
04CD43 FD 07 0B    0051*      ld bc,(iy+sprite_x)
04CD46 FD 17 0E    0052*      ld de,(iy+sprite_y)
04CD49 CD 3E 1A 04 0053*      call vdu_sprite_move_abs168
04CD4D             0054*  ; return to caller
04CD4D C9          0055*      ret
04CD4E             0056*  ; end laser_control
04CD4E             0057*  
04CD4E             0058*  fire_laser:
04CD4E             0059*  ; point to laser sprite variables
04CD4E FD 21 E5 CC 0060*      ld iy,laser_start_variables
       04          
04CD53 FD 22 7A F1 0061*      ld (table_pointer),iy
       04          
04CD58             0062*  ; is laser already active?
04CD58 FD CB 08 76 0063*      bit sprite_alive,(iy+sprite_collisions)
04CD5C C0          0064*      ret nz ; laser already active
04CD5D             0065*  ; otherwise,FIRE ZEE LASER!!1111
04CD5D             0066*  ; set laser status to active
04CD5D FD CB 08 F6 0067*      set sprite_alive,(iy+sprite_collisions)
04CD61             0068*  ; initialize laser sprite parameters
04CD61             0069*  ; x-coordinate
04CD61 DD 21 E7 ED 0070*      ld ix,player_start_variables
       04          
04CD66 DD 27 0B    0071*      ld hl,(ix+sprite_x)
04CD69 11 00 05 00 0072*      ld de,5*256 ; horizontal center with player sprite
04CD6D 19          0073*      add hl,de
04CD6E FD 2F 0B    0074*      ld (iy+sprite_x),hl
04CD71             0075*  ; y-coordinate
04CD71 DD 27 0E    0076*      ld hl,(ix+sprite_y)
04CD74 11 00 FA FF 0077*      ld de,-6*256 ; set laser y a few pixels above player
04CD78 FD 2F 0E    0078*      ld (iy+sprite_y),hl
04CD7B             0079*  ; set laser velocity
04CD7B 21 00 FA FF 0080*      ld hl,laser_speed
04CD7F FD 2F 14    0081*      ld (iy+sprite_yvel),hl
04CD82             0082*  ; set laser animation frame and timer
04CD82 AF          0083*      xor a ; first frame
04CD83 FD 77 20    0084*      ld (iy+sprite_animation),a
04CD86 3E 02       0085*      ld a,laser_animation_timer_reset
04CD88 FD 77 21    0086*      ld (iy+sprite_animation_timer),a
04CD8B             0087*  ; plot the sprite and make it visible
04CD8B 3A E5 CC 04 0088*      ld a,(laser_id)
04CD8F CD 72 19 04 0089*      call vdu_sprite_select
04CD93 FD 07 0B    0090*      ld bc,(iy+sprite_x)
04CD96 FD 17 0E    0091*      ld de,(iy+sprite_y)
04CD99 CD 3E 1A 04 0092*      call vdu_sprite_move_abs168
04CD9D CD E8 19 04 0093*      call vdu_sprite_show
04CDA1             0094*  ; return to caller
04CDA1 C9          0095*      ret
04CDA2             0096*  ; end fire_laser
04CDA2             0097*  
04CDA2             0098*  kill_laser:
04CDA2             0099*  ; update status to inactive
04CDA2 AF          0100*      xor a ; zero out a
04CDA3 32 ED CC 04 0101*      ld (laser_collisions),a
04CDA7             0102*  ; hide the sprite
04CDA7 3A E5 CC 04 0103*      ld a,(laser_id)
04CDAB CD 72 19 04 0104*      call vdu_sprite_select
04CDAF CD F6 19 04 0105*      call vdu_sprite_hide
04CDB3 C9          0106*      ret
04CDB4             0107*  ; end kill_laser
04CDB4             0051       ; include "levels.inc"
04CDB4             0052       ; include "levels_dg.inc"
04CDB4             0053       include "levels_xevious.inc"
04CDB4             0001*  ; Generated by tiles_xevious_levels.py
04CDB4             0002*  
04CDB4 04          0003*  tiles_xevious_num_levels: db 4
04CDB5             0004*  
04CDB5             0005*  tiles_xevious_levels:
04CDB5 C1 CD 04    0006*  	dl tiles_xevious_level_0
04CDB8 C8 D5 04    0007*  	dl tiles_xevious_level_1
04CDBB CF DD 04    0008*  	dl tiles_xevious_level_2
04CDBE D6 E5 04    0009*  	dl tiles_xevious_level_3
04CDC1             0010*  
04CDC1             0011*  tiles_xevious_level_0: ; Level 0
04CDC1 10          0012*  	db 16          ; num cols
04CDC2 80 00 00    0013*  	dl 128          ; num rows
04CDC5 00 02 00    0014*  	dl BUF_XEVIOUS_0_00 ; base bufferId
04CDC8 00 01 02 03 0015*  	db 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07 ; row 127
       04 05 06 07 
       00 01 02 03 
       04 05 06 07 
04CDD8 02 03 04 05 0016*  	db 0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01 ; row 126
       06 07 00 01 
       02 03 04 05 
       06 07 00 01 
04CDE8 05 06 07 00 0017*  	db 0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04 ; row 125
       01 02 03 04 
       05 06 07 00 
       01 02 03 04 
04CDF8 00 01 02 03 0018*  	db 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07 ; row 124
       04 05 06 07 
       00 01 02 03 
       04 05 06 07 
04CE08 83 7F 84 07 0019*  	db 0x83,0x7F,0x84,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03 ; row 123
       00 01 02 03 
       04 05 06 07 
       00 01 02 03 
04CE18 1B 12 12 45 0020*  	db 0x1B,0x12,0x12,0x45,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06 ; row 122
       03 04 05 06 
       07 00 01 02 
       03 04 05 06 
04CE28 1B 12 12 12 0021*  	db 0x1B,0x12,0x12,0x12,0x7E,0x7F,0x7F,0x6B,0x42,0x80,0x81,0x82,0x7F,0x7F,0x7F,0x7E ; row 121
       7E 7F 7F 6B 
       42 80 81 82 
       7F 7F 7F 7E 
04CE38 1B 12 12 12 0022*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x17,0x16,0x12,0x12,0x12,0x12,0x12 ; row 120
       12 12 12 12 
       12 17 16 12 
       12 12 12 12 
04CE48 1B 12 12 12 0023*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x17,0x16,0x12,0x12,0x12,0x12,0x12,0x12 ; row 119
       12 12 12 12 
       17 16 12 12 
       12 12 12 12 
04CE58 1B 12 12 12 0024*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x12,0x17,0x15,0x23,0x23,0x23,0x23,0x23,0x23,0x23 ; row 118
       12 12 12 17 
       15 23 23 23 
       23 23 23 23 
04CE68 1B 12 12 12 0025*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x17,0x15,0x52,0x79,0x79,0x79,0x79,0x47,0x78,0x79 ; row 117
       12 12 17 15 
       52 79 79 79 
       79 47 78 79 
04CE78 1B 12 12 12 0026*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x52,0x53,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 116
       12 12 1A 52 
       53 12 12 12 
       12 10 11 12 
04CE88 1B 12 12 12 0027*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 115
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CE98 1B 12 12 12 0028*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 114
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CEA8 1B 12 12 12 0029*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 113
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CEB8 1B 12 12 12 0030*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 112
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CEC8 1B 20 12 12 0031*  	db 0x1B,0x20,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 111
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CED8 1B 12 12 12 0032*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 110
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CEE8 1B 12 12 12 0033*  	db 0x1B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x1D,0x12,0x12,0x12,0x12,0x10,0x11,0x20 ; row 109
       12 12 1A 1B 
       1D 12 12 12 
       12 10 11 20 
04CEF8 3E 12 12 12 0034*  	db 0x3E,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 108
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CF08 15 3F 12 12 0035*  	db 0x15,0x3F,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 107
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CF18 3D 3E 12 12 0036*  	db 0x3D,0x3E,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x1D ; row 106
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 1D 
04CF28 3C 15 3F 12 0037*  	db 0x3C,0x15,0x3F,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 105
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CF38 12 1A 1B 12 0038*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x20 ; row 104
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 20 
04CF48 12 1A 1B 12 0039*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 103
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CF58 12 1A 1B 12 0040*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x1D ; row 102
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 1D 
04CF68 12 1A 1B 12 0041*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 101
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 12 
04CF78 12 1A 1B 12 0042*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x20 ; row 100
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 20 
04CF88 12 1A 1B 12 0043*  	db 0x12,0x1A,0x1B,0x12,0x7D,0x57,0x15,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12 ; row 99
       7D 57 15 1B 
       12 12 12 12 
       12 10 11 12 
04CF98 12 1A 7A 7B 0044*  	db 0x12,0x1A,0x7A,0x7B,0x7C,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x1D ; row 98
       7C 12 1A 1B 
       12 12 12 12 
       12 10 11 1D 
04CFA8 12 1A 1B 12 0045*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x20 ; row 97
       12 12 1A 1B 
       12 12 12 12 
       12 10 11 20 
04CFB8 12 1A 1B 12 0046*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x1A,0x3E,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x1D ; row 96
       12 12 1A 3E 
       12 12 12 12 
       12 10 11 1D 
04CFC8 12 1A 1B 12 0047*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x19,0x11,0x12,0x12,0x12,0x12,0x54,0x51,0x16,0x20 ; row 95
       12 12 19 11 
       12 12 12 12 
       54 51 16 20 
04CFD8 12 1A 1B 12 0048*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 94
       12 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04CFE8 12 1A 1B 12 0049*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 93
       12 12 10 11 
       12 12 12 12 
       10 11 12 20 
04CFF8 12 1A 1B 12 0050*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 92
       12 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04D008 12 1A 1B 12 0051*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 91
       12 12 10 11 
       12 12 12 12 
       10 11 12 20 
04D018 12 1A 1B 12 0052*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 90
       12 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04D028 12 1A 1B 12 0053*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 89
       12 12 10 11 
       12 12 12 12 
       10 11 12 20 
04D038 12 1A 1B 12 0054*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 88
       12 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04D048 12 1A 1B 12 0055*  	db 0x12,0x1A,0x1B,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 87
       12 12 10 11 
       12 12 12 12 
       10 11 12 20 
04D058 12 3D 3E 12 0056*  	db 0x12,0x3D,0x3E,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 86
       12 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04D068 12 3C 15 3F 0057*  	db 0x12,0x3C,0x15,0x3F,0x12,0x12,0x10,0x15,0x23,0x23,0x23,0x23,0x24,0x11,0x12,0x20 ; row 85
       12 12 10 15 
       23 23 23 23 
       24 11 12 20 
04D078 1F 12 3D 3E 0058*  	db 0x1F,0x12,0x3D,0x3E,0x12,0x12,0x10,0x78,0x79,0x79,0x79,0x79,0x59,0x11,0x12,0x1D ; row 84
       12 12 10 78 
       79 79 79 79 
       59 11 12 1D 
04D088 1C 3F 3C 15 0059*  	db 0x1C,0x3F,0x3C,0x15,0x3F,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 83
       3F 12 10 11 
       12 12 12 12 
       10 11 12 20 
04D098 77 6F 12 3D 0060*  	db 0x77,0x6F,0x12,0x3D,0x3E,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 82
       3E 12 10 11 
       12 12 12 12 
       10 11 12 1D 
04D0A8 03 71 3F 3C 0061*  	db 0x03,0x71,0x3F,0x3C,0x15,0x3F,0x10,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 81
       15 3F 10 11 
       12 12 12 12 
       10 11 12 20 
04D0B8 04 03 75 72 0062*  	db 0x04,0x03,0x75,0x72,0x3D,0x3E,0x76,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 80
       3D 3E 76 11 
       12 12 12 12 
       10 11 12 1D 
04D0C8 02 01 73 74 0063*  	db 0x02,0x01,0x73,0x74,0x3C,0x15,0x15,0x11,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 79
       3C 15 15 11 
       12 12 12 12 
       10 11 12 20 
04D0D8 01 00 01 71 0064*  	db 0x01,0x00,0x01,0x71,0x72,0x3D,0x15,0x4D,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 78
       72 3D 15 4D 
       12 12 12 12 
       10 11 12 1D 
04D0E8 07 06 03 6D 0065*  	db 0x07,0x06,0x03,0x6D,0x6F,0x3C,0x15,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 77
       6F 3C 15 1B 
       12 12 12 12 
       10 11 12 20 
04D0F8 04 03 05 70 0066*  	db 0x04,0x03,0x05,0x70,0x3C,0x3F,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 76
       3C 3F 1A 1B 
       12 12 12 12 
       10 11 12 1D 
04D108 02 01 07 04 0067*  	db 0x02,0x01,0x07,0x04,0x12,0x6F,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 75
       12 6F 1A 1B 
       12 12 12 12 
       10 11 12 20 
04D118 00 07 03 6C 0068*  	db 0x00,0x07,0x03,0x6C,0x12,0x3C,0x15,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 74
       12 3C 15 1B 
       12 12 12 12 
       10 11 12 1D 
04D128 04 03 6E 12 0069*  	db 0x04,0x03,0x6E,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 73
       12 12 1A 1B 
       12 12 12 12 
       10 11 12 20 
04D138 00 07 6D 12 0070*  	db 0x00,0x07,0x6D,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 72
       12 12 1A 1B 
       12 12 12 12 
       10 11 12 1D 
04D148 03 6C 12 12 0071*  	db 0x03,0x6C,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 71
       12 12 1A 1B 
       12 12 12 12 
       10 11 12 20 
04D158 6B 12 12 12 0072*  	db 0x6B,0x12,0x12,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 70
       12 12 1A 1B 
       12 12 12 12 
       10 11 12 1D 
04D168 12 12 12 12 0073*  	db 0x12,0x12,0x12,0x12,0x12,0x6A,0x15,0x4F,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 69
       12 6A 15 4F 
       12 12 12 12 
       10 11 12 20 
04D178 12 12 12 12 0074*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x62,0x34,0x35,0x36,0x36 ; row 68
       12 10 11 12 
       12 12 12 62 
       34 35 36 36 
04D188 12 62 63 64 0075*  	db 0x12,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x69,0x69,0x31,0x31,0x31,0x31,0x31 ; row 67
       65 66 67 68 
       69 69 69 31 
       31 31 31 31 
04D198 5D 31 31 30 0076*  	db 0x5D,0x31,0x31,0x30,0x5E,0x5F,0x60,0x5A,0x61,0x61,0x61,0x5B,0x2C,0x2D,0x2B,0x2B ; row 66
       5E 5F 60 5A 
       61 61 61 5B 
       2C 2D 2B 2B 
04D1A8 5A 5B 5C 12 0077*  	db 0x5A,0x5B,0x5C,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 65
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D1B8 54 38 25 57 0078*  	db 0x54,0x38,0x25,0x57,0x58,0x59,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 64
       58 59 11 12 
       12 12 12 12 
       10 11 12 1D 
04D1C8 56 53 12 12 0079*  	db 0x56,0x53,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 63
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D1D8 12 12 12 12 0080*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 62
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D1E8 12 12 12 12 0081*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 61
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D1F8 12 12 12 12 0082*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 60
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D208 12 12 12 12 0083*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 59
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D218 12 12 12 12 0084*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 58
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D228 12 12 12 12 0085*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 57
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D238 12 12 12 12 0086*  	db 0x12,0x12,0x12,0x12,0x12,0x29,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 56
       12 29 11 12 
       12 12 12 12 
       10 11 12 1D 
04D248 12 12 12 12 0087*  	db 0x12,0x12,0x12,0x12,0x55,0x15,0x16,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 55
       55 15 16 12 
       12 12 12 12 
       10 11 12 20 
04D258 12 12 12 12 0088*  	db 0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 54
       10 11 12 12 
       12 12 12 12 
       10 11 12 1D 
04D268 12 12 12 12 0089*  	db 0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 53
       10 11 12 12 
       12 12 12 12 
       10 11 12 20 
04D278 12 12 12 54 0090*  	db 0x12,0x12,0x12,0x54,0x51,0x4D,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 52
       51 4D 12 12 
       12 12 12 12 
       10 11 12 1D 
04D288 12 12 54 51 0091*  	db 0x12,0x12,0x54,0x51,0x52,0x53,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 51
       52 53 12 12 
       12 12 12 12 
       10 11 12 20 
04D298 12 54 51 52 0092*  	db 0x12,0x54,0x51,0x52,0x53,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 50
       53 12 12 12 
       12 12 12 12 
       10 11 12 1D 
04D2A8 12 51 52 53 0093*  	db 0x12,0x51,0x52,0x53,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 49
       12 12 12 12 
       12 12 12 12 
       10 11 12 20 
04D2B8 17 15 4F 12 0094*  	db 0x17,0x15,0x4F,0x12,0x12,0x12,0x12,0x50,0x0A,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 48
       12 12 12 50 
       0A 12 12 12 
       10 11 12 1D 
04D2C8 15 4D 12 12 0095*  	db 0x15,0x4D,0x12,0x12,0x12,0x12,0x4E,0x03,0x02,0x48,0x12,0x12,0x10,0x11,0x12,0x20 ; row 47
       12 12 4E 03 
       02 48 12 12 
       10 11 12 20 
04D2D8 15 4A 12 12 0096*  	db 0x15,0x4A,0x12,0x12,0x12,0x12,0x4B,0x05,0x04,0x4C,0x12,0x12,0x10,0x11,0x12,0x1D ; row 46
       12 12 4B 05 
       04 4C 12 12 
       10 11 12 1D 
04D2E8 15 15 43 44 0097*  	db 0x15,0x15,0x43,0x44,0x1D,0x20,0x49,0x07,0x06,0x48,0x12,0x12,0x10,0x11,0x12,0x20 ; row 45
       1D 20 49 07 
       06 48 12 12 
       10 11 12 20 
04D2F8 40 47 15 15 0098*  	db 0x40,0x47,0x15,0x15,0x43,0x44,0x12,0x45,0x01,0x48,0x12,0x12,0x10,0x11,0x12,0x1D ; row 44
       43 44 12 45 
       01 48 12 12 
       10 11 12 1D 
04D308 12 10 15 41 0099*  	db 0x12,0x10,0x15,0x41,0x15,0x15,0x43,0x44,0x45,0x46,0x12,0x12,0x10,0x11,0x12,0x20 ; row 43
       15 15 43 44 
       45 46 12 12 
       10 11 12 20 
04D318 12 10 15 12 0100*  	db 0x12,0x10,0x15,0x12,0x40,0x41,0x15,0x15,0x1F,0x42,0x12,0x12,0x10,0x11,0x12,0x1D ; row 42
       40 41 15 15 
       1F 42 12 12 
       10 11 12 1D 
04D328 12 10 15 12 0101*  	db 0x12,0x10,0x15,0x12,0x12,0x12,0x15,0x21,0x15,0x1F,0x12,0x12,0x10,0x11,0x12,0x20 ; row 41
       12 12 15 21 
       15 1F 12 12 
       10 11 12 20 
04D338 12 3C 15 3F 0102*  	db 0x12,0x3C,0x15,0x3F,0x12,0x17,0x15,0x3A,0x1C,0x15,0x1F,0x12,0x10,0x11,0x12,0x1D ; row 40
       12 17 15 3A 
       1C 15 1F 12 
       10 11 12 1D 
04D348 12 12 3D 3E 0103*  	db 0x12,0x12,0x3D,0x3E,0x17,0x15,0x16,0x3A,0x12,0x1C,0x15,0x1F,0x10,0x11,0x12,0x20 ; row 39
       17 15 16 3A 
       12 1C 15 1F 
       10 11 12 20 
04D358 12 12 3C 15 0104*  	db 0x12,0x12,0x3C,0x15,0x15,0x16,0x12,0x3A,0x12,0x12,0x1C,0x15,0x1E,0x11,0x12,0x1D ; row 38
       15 16 12 3A 
       12 12 1C 15 
       1E 11 12 1D 
04D368 12 12 12 1A 0105*  	db 0x12,0x12,0x12,0x1A,0x3B,0x12,0x12,0x3A,0x12,0x12,0x12,0x1C,0x15,0x11,0x12,0x20 ; row 37
       3B 12 12 3A 
       12 12 12 1C 
       15 11 12 20 
04D378 12 12 12 1A 0106*  	db 0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x3A,0x12,0x12,0x12,0x12,0x19,0x11,0x12,0x1D ; row 36
       1B 12 12 3A 
       12 12 12 12 
       19 11 12 1D 
04D388 23 23 23 15 0107*  	db 0x23,0x23,0x23,0x15,0x37,0x38,0x38,0x37,0x38,0x38,0x38,0x38,0x39,0x11,0x12,0x20 ; row 35
       37 38 38 37 
       38 38 38 38 
       39 11 12 20 
04D398 22 22 22 22 0108*  	db 0x22,0x22,0x22,0x22,0x22,0x15,0x15,0x22,0x22,0x22,0x22,0x22,0x15,0x11,0x12,0x1D ; row 34
       22 15 15 22 
       22 22 22 22 
       15 11 12 1D 
04D3A8 36 36 12 12 0109*  	db 0x36,0x36,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 33
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D3B8 31 31 31 32 0110*  	db 0x31,0x31,0x31,0x32,0x33,0x34,0x35,0x36,0x36,0x36,0x36,0x36,0x34,0x35,0x36,0x36 ; row 32
       33 34 35 36 
       36 36 36 36 
       34 35 36 36 
04D3C8 2B 2E 2F 30 0111*  	db 0x2B,0x2E,0x2F,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30 ; row 31
       30 30 30 30 
       30 30 30 30 
       30 30 30 30 
04D3D8 12 12 12 2A 0112*  	db 0x12,0x12,0x12,0x2A,0x2B,0x2C,0x2D,0x2B,0x2B,0x2B,0x2B,0x2B,0x2C,0x2D,0x2B,0x2B ; row 30
       2B 2C 2D 2B 
       2B 2B 2B 2B 
       2C 2D 2B 2B 
04D3E8 12 12 12 12 0113*  	db 0x12,0x12,0x12,0x12,0x28,0x29,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 29
       28 29 11 12 
       12 12 12 12 
       10 11 12 1D 
04D3F8 25 25 25 26 0114*  	db 0x25,0x25,0x25,0x26,0x22,0x27,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 28
       22 27 11 12 
       12 12 12 12 
       10 11 12 20 
04D408 12 12 12 12 0115*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 27
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D418 12 12 12 12 0116*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 26
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D428 12 12 12 12 0117*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 25
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D438 12 12 12 12 0118*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 24
       12 10 11 12 
       12 12 12 12 
       10 11 12 20 
04D448 12 12 12 12 0119*  	db 0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 23
       12 10 11 12 
       12 12 12 12 
       10 11 12 1D 
04D458 23 23 23 23 0120*  	db 0x23,0x23,0x23,0x23,0x23,0x24,0x11,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x20 ; row 22
       23 24 11 12 
       12 12 12 12 
       10 11 12 20 
04D468 15 15 22 22 0121*  	db 0x15,0x15,0x22,0x22,0x22,0x15,0x15,0x1F,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12 ; row 21
       22 15 15 1F 
       12 12 12 12 
       10 11 12 12 
04D478 10 11 12 12 0122*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x21,0x15,0x1F,0x12,0x12,0x12,0x10,0x11,0x12,0x1D ; row 20
       12 1A 21 15 
       1F 12 12 12 
       10 11 12 1D 
04D488 10 11 12 12 0123*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x1B,0x1C,0x15,0x1F,0x12,0x12,0x10,0x11,0x12,0x12 ; row 19
       12 1A 1B 1C 
       15 1F 12 12 
       10 11 12 12 
04D498 10 11 12 12 0124*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x1B,0x12,0x1C,0x15,0x1F,0x12,0x10,0x11,0x12,0x20 ; row 18
       12 1A 1B 12 
       1C 15 1F 12 
       10 11 12 20 
04D4A8 10 11 12 12 0125*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x1C,0x15,0x1F,0x10,0x11,0x12,0x12 ; row 17
       12 1A 1B 12 
       12 1C 15 1F 
       10 11 12 12 
04D4B8 10 11 12 12 0126*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x1C,0x15,0x1E,0x11,0x12,0x12 ; row 16
       12 1A 1B 12 
       12 12 1C 15 
       1E 11 12 12 
04D4C8 10 11 12 12 0127*  	db 0x10,0x11,0x12,0x12,0x12,0x1A,0x1B,0x12,0x12,0x12,0x12,0x1C,0x15,0x11,0x12,0x1D ; row 15
       12 1A 1B 12 
       12 12 12 1C 
       15 11 12 1D 
04D4D8 10 11 12 12 0128*  	db 0x10,0x11,0x12,0x12,0x17,0x15,0x18,0x12,0x12,0x12,0x12,0x12,0x19,0x11,0x12,0x12 ; row 14
       17 15 18 12 
       12 12 12 12 
       19 11 12 12 
04D4E8 10 11 12 17 0129*  	db 0x10,0x11,0x12,0x17,0x15,0x16,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12 ; row 13
       15 16 12 12 
       12 12 12 12 
       10 11 12 12 
04D4F8 10 11 17 15 0130*  	db 0x10,0x11,0x17,0x15,0x16,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12 ; row 12
       16 12 12 12 
       12 12 12 12 
       10 11 12 12 
04D508 10 15 15 16 0131*  	db 0x10,0x15,0x15,0x16,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12 ; row 11
       12 12 12 12 
       12 12 12 12 
       10 11 12 12 
04D518 10 15 16 12 0132*  	db 0x10,0x15,0x16,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x12 ; row 10
       12 12 12 12 
       12 12 12 12 
       10 11 12 12 
04D528 10 11 12 12 0133*  	db 0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x11,0x12,0x13 ; row 9
       12 12 12 12 
       12 12 12 12 
       10 11 12 13 
04D538 10 11 12 12 0134*  	db 0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x10,0x14,0x13,0x02 ; row 8
       12 12 12 12 
       12 12 12 12 
       10 14 13 02 
04D548 10 11 12 12 0135*  	db 0x10,0x11,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x13,0x03,0x07,0x04 ; row 7
       12 12 12 12 
       12 12 12 12 
       13 03 07 04 
04D558 08 09 0A 0B 0136*  	db 0x08,0x09,0x0A,0x0B,0x0B,0x0C,0x0D,0x0D,0x0D,0x0A,0x0E,0x0F,0x07,0x01,0x02,0x05 ; row 6
       0B 0C 0D 0D 
       0D 0A 0E 0F 
       07 01 02 05 
04D568 02 00 03 00 0137*  	db 0x02,0x00,0x03,0x00,0x01,0x02,0x05,0x03,0x04,0x01,0x04,0x02,0x06,0x02,0x03,0x06 ; row 5
       01 02 05 03 
       04 01 04 02 
       06 02 03 06 
04D578 04 05 06 02 0138*  	db 0x04,0x05,0x06,0x02,0x00,0x01,0x02,0x04,0x06,0x00,0x07,0x05,0x07,0x03,0x04,0x07 ; row 4
       00 01 02 04 
       06 00 07 05 
       07 03 04 07 
04D588 01 02 01 07 0139*  	db 0x01,0x02,0x01,0x07,0x03,0x04,0x03,0x02,0x07,0x05,0x04,0x06,0x00,0x04,0x05,0x00 ; row 3
       03 04 03 02 
       07 05 04 06 
       00 04 05 00 
04D598 02 03 00 01 0140*  	db 0x02,0x03,0x00,0x01,0x02,0x03,0x04,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x00,0x01 ; row 2
       02 03 04 00 
       01 02 03 04 
       05 06 00 01 
04D5A8 05 06 07 00 0141*  	db 0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04 ; row 1
       01 02 03 04 
       05 06 07 00 
       01 02 03 04 
04D5B8 00 01 02 03 0142*  	db 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07 ; row 0
       04 05 06 07 
       00 01 02 03 
       04 05 06 07 
04D5C8             0143*  tiles_xevious_level_1: ; Level 1
04D5C8 10          0144*  	db 16          ; num cols
04D5C9 80 00 00    0145*  	dl 128          ; num rows
04D5CC 00 03 00    0146*  	dl BUF_XEVIOUS_1_00 ; base bufferId
04D5CF 07 06 05 04 0147*  	db 0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01 ; row 127
       03 02 00 01 
       07 06 05 04 
       03 02 00 01 
04D5DF 00 02 03 04 0148*  	db 0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01,0x07,0x06 ; row 126
       05 06 07 06 
       05 04 03 02 
       00 01 07 06 
04D5EF 02 00 01 07 0149*  	db 0x02,0x00,0x01,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01,0x07,0x06,0x05,0x04,0x03 ; row 125
       06 05 04 03 
       02 00 01 07 
       06 05 04 03 
04D5FF 07 06 5F E0 0150*  	db 0x07,0x06,0x5F,0xE0,0xDC,0xE1,0x33,0x34,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01 ; row 124
       DC E1 33 34 
       07 06 05 04 
       03 02 00 01 
04D60F 5F DC 10 10 0151*  	db 0x5F,0xDC,0x10,0x10,0x10,0x10,0x10,0x10,0xDE,0x02,0x00,0x01,0x07,0x35,0x33,0xDF ; row 123
       10 10 10 10 
       DE 02 00 01 
       07 35 33 DF 
04D61F 10 10 10 10 0152*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0xDC,0xDD,0xDD,0xDD,0x10,0x10,0x1C ; row 122
       10 10 10 10 
       10 DC DD DD 
       DD 10 10 1C 
04D62F 10 10 10 10 0153*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 121
       10 10 10 10 
       10 10 10 10 
       10 10 10 1C 
04D63F 26 10 10 10 0154*  	db 0x26,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 120
       10 10 10 10 
       10 10 10 10 
       10 10 10 1C 
04D64F 41 3D 10 10 0155*  	db 0x41,0x3D,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 119
       10 10 10 10 
       10 10 10 10 
       10 10 10 1C 
04D65F 10 40 DB 26 0156*  	db 0x10,0x40,0xDB,0x26,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 118
       10 10 10 10 
       10 10 10 10 
       10 10 10 1C 
04D66F 10 10 10 40 0157*  	db 0x10,0x10,0x10,0x40,0xDA,0x63,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 117
       DA 63 10 10 
       10 10 10 10 
       10 10 10 1C 
04D67F 10 10 0D D9 0158*  	db 0x10,0x10,0x0D,0xD9,0xC0,0xD6,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 116
       C0 D6 10 10 
       10 10 10 10 
       10 10 10 1C 
04D68F D8 0B 02 03 0159*  	db 0xD8,0x0B,0x02,0x03,0x05,0xBB,0x3D,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 115
       05 BB 3D 10 
       10 10 10 10 
       10 10 10 1C 
04D69F D7 05 04 07 0160*  	db 0xD7,0x05,0x04,0x07,0x04,0x08,0x41,0xC8,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 114
       04 08 41 C8 
       10 10 10 10 
       10 10 10 1C 
04D6AF 03 02 00 01 0161*  	db 0x03,0x02,0x00,0x01,0x02,0x03,0x0F,0xC2,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 113
       02 03 0F C2 
       10 10 10 10 
       10 10 10 1C 
04D6BF 07 06 05 04 0162*  	db 0x07,0x06,0x05,0x04,0x01,0x00,0x08,0xBB,0xD5,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 112
       01 00 08 BB 
       D5 10 10 10 
       10 10 10 1C 
04D6CF 00 02 03 04 0163*  	db 0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x0C,0xD6,0x10,0x10,0x10,0x10,0x10,0x10,0x1C ; row 111
       05 06 07 0C 
       D6 10 10 10 
       10 10 10 1C 
04D6DF 04 05 06 07 0164*  	db 0x04,0x05,0x06,0x07,0x00,0x02,0x03,0x04,0xBB,0xD5,0x10,0x10,0x10,0x10,0x10,0x1C ; row 110
       00 02 03 04 
       BB D5 10 10 
       10 10 10 1C 
04D6EF 07 01 04 03 0165*  	db 0x07,0x01,0x04,0x03,0x04,0x05,0x06,0x07,0x01,0xC2,0x10,0x10,0x10,0x10,0x10,0x1C ; row 109
       04 05 06 07 
       01 C2 10 10 
       10 10 10 1C 
04D6FF 02 03 07 04 0166*  	db 0x02,0x03,0x07,0x04,0x01,0x00,0x02,0x03,0x04,0xCD,0x10,0x10,0x10,0x10,0x10,0x19 ; row 108
       01 00 02 03 
       04 CD 10 10 
       10 10 10 19 
04D70F 07 06 04 05 0167*  	db 0x07,0x06,0x04,0x05,0x03,0xAD,0xAE,0xAF,0xB0,0xBB,0xC8,0x10,0x10,0x10,0x10,0xD4 ; row 107
       03 AD AE AF 
       B0 BB C8 10 
       10 10 10 D4 
04D71F 01 00 02 03 0168*  	db 0x01,0x00,0x02,0x03,0x07,0xAB,0x16,0x16,0xAC,0x37,0x29,0x10,0x10,0x10,0x10,0x10 ; row 106
       07 AB 16 16 
       AC 37 29 10 
       10 10 10 10 
04D72F A3 06 05 01 0169*  	db 0xA3,0x06,0x05,0x01,0x04,0xA9,0x16,0x16,0xAA,0x08,0xC2,0x10,0x10,0x10,0x10,0x10 ; row 105
       04 A9 16 16 
       AA 08 C2 10 
       10 10 10 10 
04D73F 9C 01 06 03 0170*  	db 0x9C,0x01,0x06,0x03,0x06,0xA4,0xA5,0xA6,0xA7,0x03,0xCD,0x10,0x10,0x10,0x10,0x10 ; row 104
       06 A4 A5 A6 
       A7 03 CD 10 
       10 10 10 10 
04D74F A1 00 02 04 0171*  	db 0xA1,0x00,0x02,0x04,0x03,0x04,0x05,0x06,0x07,0x01,0xCD,0x10,0x10,0x10,0x10,0x10 ; row 103
       03 04 05 06 
       07 01 CD 10 
       10 10 10 10 
04D75F A2 A3 01 07 0172*  	db 0xA2,0xA3,0x01,0x07,0x05,0x06,0x07,0x01,0x00,0x02,0xC0,0xC1,0x10,0x10,0x10,0x10 ; row 102
       05 06 07 01 
       00 02 C0 C1 
       10 10 10 10 
04D76F 9D 9C 00 02 0173*  	db 0x9D,0x9C,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0xBB,0xC8,0x10,0x10,0x10 ; row 101
       03 04 05 06 
       07 01 00 BB 
       C8 10 10 10 
04D77F 9F A1 06 07 0174*  	db 0x9F,0xA1,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x37,0xC2,0x10,0x10,0x10 ; row 100
       01 00 02 03 
       04 05 06 37 
       C2 10 10 10 
04D78F 9E 3E 07 02 0175*  	db 0x9E,0x3E,0x07,0x02,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x3B,0xD2,0x10,0x10,0x10 ; row 99
       04 05 06 07 
       01 00 02 3B 
       D2 10 10 10 
04D79F 9E A0 04 01 0176*  	db 0x9E,0xA0,0x04,0x01,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x09,0xC2,0x10,0x10,0x10 ; row 98
       05 06 07 01 
       00 02 03 09 
       C2 10 10 10 
04D7AF 9E 9C 03 00 0177*  	db 0x9E,0x9C,0x03,0x00,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0xBB,0xC8,0x10,0x10 ; row 97
       03 04 05 06 
       07 01 00 02 
       BB C8 10 10 
04D7BF 9D A1 06 07 0178*  	db 0x9D,0xA1,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x37,0x29,0x10,0x10 ; row 96
       01 00 02 03 
       04 05 06 07 
       37 29 10 10 
04D7CF 7E A2 02 03 0179*  	db 0x7E,0xA2,0x02,0x03,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0xD3,0x1F,0x10,0x10 ; row 95
       05 06 07 01 
       00 02 03 04 
       D3 1F 10 10 
04D7DF 7A 9E A3 05 0180*  	db 0x7A,0x9E,0xA3,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x5F,0xD2,0x10,0x10,0x10 ; row 94
       06 07 01 00 
       02 03 04 5F 
       D2 10 10 10 
04D7EF 7E 9D A1 06 0181*  	db 0x7E,0x9D,0xA1,0x06,0x01,0x00,0x02,0x03,0x04,0x05,0x60,0x21,0x1F,0x10,0x10,0x10 ; row 93
       01 00 02 03 
       04 05 60 21 
       1F 10 10 10 
04D7FF 7A 7E A2 02 0182*  	db 0x7A,0x7E,0xA2,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x37,0xD2,0x10,0x10,0x10,0x10 ; row 92
       03 04 05 06 
       07 00 37 D2 
       10 10 10 10 
04D80F 7E 7A 9E A3 0183*  	db 0x7E,0x7A,0x9E,0xA3,0x05,0xCE,0xCF,0xD0,0xD1,0x02,0x3B,0xC2,0x10,0x10,0x10,0x10 ; row 91
       05 CE CF D0 
       D1 02 3B C2 
       10 10 10 10 
04D81F 7A 7E 9D A1 0184*  	db 0x7A,0x7E,0x9D,0xA1,0x07,0xCB,0x16,0x16,0xCC,0x04,0x09,0xCD,0x10,0x10,0x10,0x10 ; row 90
       07 CB 16 16 
       CC 04 09 CD 
       10 10 10 10 
04D82F 7E 7A 7E A2 0185*  	db 0x7E,0x7A,0x7E,0xA2,0xB2,0xC9,0x16,0x16,0xCA,0x07,0x03,0xC0,0xC1,0x10,0x10,0x10 ; row 89
       B2 C9 16 16 
       CA 07 03 C0 
       C1 10 10 10 
04D83F 7A 7E 7A 9E 0186*  	db 0x7A,0x7E,0x7A,0x9E,0xA3,0xC4,0xC5,0xC6,0xC7,0x03,0x04,0x01,0xBB,0xC8,0x10,0x10 ; row 88
       A3 C4 C5 C6 
       C7 03 04 01 
       BB C8 10 10 
04D84F 7E 7A 7E B1 0187*  	db 0x7E,0x7A,0x7E,0xB1,0x9C,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x09,0xC3,0x63,0x10 ; row 87
       9C 01 00 02 
       03 04 05 06 
       09 C3 63 10 
04D85F 7A 7E 7A A8 0188*  	db 0x7A,0x7E,0x7A,0xA8,0x9C,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x0C,0xC2,0x10 ; row 86
       9C 03 04 05 
       06 07 01 00 
       02 0C C2 10 
04D86F 7E 7A 7E A2 0189*  	db 0x7E,0x7A,0x7E,0xA2,0x9C,0x05,0x06,0xBC,0xBD,0xBE,0xBF,0x03,0x04,0x05,0xC0,0xC1 ; row 85
       9C 05 06 BC 
       BD BE BF 03 
       04 05 C0 C1 
04D87F 7A 7E 7A 9D 0190*  	db 0x7A,0x7E,0x7A,0x9D,0x9C,0x02,0x03,0xB9,0x16,0x16,0xBA,0x01,0x00,0x02,0x03,0xBB ; row 84
       9C 02 03 B9 
       16 16 BA 01 
       00 02 03 BB 
04D88F 7E 7A 7E 9F 0191*  	db 0x7E,0x7A,0x7E,0x9F,0x9B,0x01,0x00,0xB7,0x16,0x16,0xB8,0x06,0x07,0x01,0x00,0x08 ; row 83
       9B 01 00 B7 
       16 16 B8 06 
       07 01 00 08 
04D89F 7A 7E 7A 9E 0192*  	db 0x7A,0x7E,0x7A,0x9E,0xB2,0x05,0x06,0xB3,0xB4,0xB5,0xB6,0x03,0x04,0x05,0x06,0x07 ; row 82
       B2 05 06 B3 
       B4 B5 B6 03 
       04 05 06 07 
04D8AF 7E 7A 7E B1 0193*  	db 0x7E,0x7A,0x7E,0xB1,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x03 ; row 81
       01 00 02 03 
       04 05 06 07 
       01 00 02 03 
04D8BF 7A 7E 7A A8 0194*  	db 0x7A,0x7E,0x7A,0xA8,0x07,0x01,0x00,0x02,0xAD,0xAE,0xAF,0xB0,0x07,0x01,0x00,0x02 ; row 80
       07 01 00 02 
       AD AE AF B0 
       07 01 00 02 
04D8CF 7E 7A 7E A8 0195*  	db 0x7E,0x7A,0x7E,0xA8,0x00,0x02,0x03,0x04,0xAB,0x16,0x16,0xAC,0x00,0x02,0x03,0x04 ; row 79
       00 02 03 04 
       AB 16 16 AC 
       00 02 03 04 
04D8DF 7A 7E 7A A8 0196*  	db 0x7A,0x7E,0x7A,0xA8,0x02,0x03,0x04,0x05,0xA9,0x16,0x16,0xAA,0x02,0x03,0x04,0x05 ; row 78
       02 03 04 05 
       A9 16 16 AA 
       02 03 04 05 
04D8EF 7E 7A 7E A2 0197*  	db 0x7E,0x7A,0x7E,0xA2,0xA3,0x05,0x06,0x07,0xA4,0xA5,0xA6,0xA7,0x04,0x05,0x06,0x07 ; row 77
       A3 05 06 07 
       A4 A5 A6 A7 
       04 05 06 07 
04D8FF 7A 7E 7A 9D 0198*  	db 0x7A,0x7E,0x7A,0x9D,0xA1,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x02 ; row 76
       A1 07 01 00 
       02 03 04 05 
       06 07 00 02 
04D90F 7E 7A 7E 7A 0199*  	db 0x7E,0x7A,0x7E,0x7A,0xA2,0xA3,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04 ; row 75
       A2 A3 03 04 
       05 06 07 01 
       00 02 03 04 
04D91F 7A 7E 7A 7E 0200*  	db 0x7A,0x7E,0x7A,0x7E,0x9E,0x9C,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06 ; row 74
       9E 9C 05 06 
       07 01 00 02 
       03 04 05 06 
04D92F 7E 7A 7E 7A 0201*  	db 0x7E,0x7A,0x7E,0x7A,0x9D,0xA1,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02 ; row 73
       9D A1 00 02 
       03 04 05 06 
       07 01 00 02 
04D93F 7A 7E 7A 7E 0202*  	db 0x7A,0x7E,0x7A,0x7E,0x9F,0xA0,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06 ; row 72
       9F A0 05 06 
       07 01 00 02 
       03 04 05 06 
04D94F 7E 7A 7E 7A 0203*  	db 0x7E,0x7A,0x7E,0x7A,0x9E,0x9C,0x02,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x03 ; row 71
       9E 9C 02 03 
       04 05 06 07 
       01 00 02 03 
04D95F 7A 7E 7A 7E 0204*  	db 0x7A,0x7E,0x7A,0x7E,0x9D,0x9C,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x60 ; row 70
       9D 9C 05 06 
       07 01 00 02 
       03 04 05 60 
04D96F 7E 7A 7E 7A 0205*  	db 0x7E,0x7A,0x7E,0x7A,0x7E,0x9C,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x5D,0x36 ; row 69
       7E 9C 03 04 
       05 06 07 01 
       00 02 5D 36 
04D97F 7A 7E 7A 7E 0206*  	db 0x7A,0x7E,0x7A,0x7E,0x7A,0x9B,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x60,0x10,0x10 ; row 68
       7A 9B 06 07 
       01 00 02 03 
       04 60 10 10 
04D98F 7E 7A 7E 7A 0207*  	db 0x7E,0x7A,0x7E,0x7A,0x9A,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x10,0x10 ; row 67
       9A 01 00 02 
       03 04 05 06 
       07 08 10 10 
04D99F 7A 7E 7A 7E 0208*  	db 0x7A,0x7E,0x7A,0x7E,0x97,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x5F,0x98,0x99 ; row 66
       97 05 06 07 
       01 00 02 03 
       04 5F 98 99 
04D9AF 7E 7A 7E 7A 0209*  	db 0x7E,0x7A,0x7E,0x7A,0x94,0x03,0x04,0x05,0x06,0x07,0x01,0x95,0x91,0x89,0x50,0x96 ; row 65
       94 03 04 05 
       06 07 01 95 
       91 89 50 96 
04D9BF 7A 7E 7A 7E 0210*  	db 0x7A,0x7E,0x7A,0x7E,0x8E,0x06,0x01,0x8F,0x90,0x91,0x89,0x50,0x8A,0x92,0x93,0x10 ; row 64
       8E 06 01 8F 
       90 91 89 50 
       8A 92 93 10 
04D9CF 7E 7A 7E 7A 0211*  	db 0x7E,0x7A,0x7E,0x7A,0x7E,0x88,0x89,0x50,0x50,0x50,0x8A,0x8B,0x8C,0x10,0x27,0x8D ; row 63
       7E 88 89 50 
       50 50 8A 8B 
       8C 10 27 8D 
04D9DF 7A 7E 7A 7E 0212*  	db 0x7A,0x7E,0x7A,0x7E,0x7A,0x80,0x84,0x85,0x85,0x86,0x87,0x28,0x17,0x47,0x58,0x23 ; row 62
       7A 80 84 85 
       85 86 87 28 
       17 47 58 23 
04D9EF 7E 7A 7E 7A 0213*  	db 0x7E,0x7A,0x7E,0x7A,0x80,0x03,0x6A,0x81,0x82,0x7D,0x83,0x10,0x10,0x10,0x10,0x10 ; row 61
       80 03 6A 81 
       82 7D 83 10 
       10 10 10 10 
04D9FF 7A 7E 76 77 0214*  	db 0x7A,0x7E,0x76,0x77,0x01,0x6A,0x7C,0x16,0x16,0x64,0x3F,0x10,0x10,0x10,0x10,0x10 ; row 60
       01 6A 7C 16 
       16 64 3F 10 
       10 10 10 10 
04DA0F 7E 7F 77 07 0215*  	db 0x7E,0x7F,0x77,0x07,0x00,0x73,0x16,0x16,0x16,0x07,0x01,0x10,0x10,0x10,0x10,0x10 ; row 59
       00 73 16 16 
       16 07 01 10 
       10 10 10 10 
04DA1F 7A 7B 02 03 0216*  	db 0x7A,0x7B,0x02,0x03,0x6A,0x7C,0x16,0x16,0x7D,0x00,0x5F,0x10,0x10,0x10,0x10,0x10 ; row 58
       6A 7C 16 16 
       7D 00 5F 10 
       10 10 10 10 
04DA2F 76 77 06 01 0217*  	db 0x76,0x77,0x06,0x01,0x73,0x78,0x79,0x79,0x64,0x60,0x10,0x10,0x10,0x10,0x10,0x10 ; row 57
       73 78 79 79 
       64 60 10 10 
       10 10 10 10 
04DA3F 74 04 05 6A 0218*  	db 0x74,0x04,0x05,0x6A,0x75,0x07,0x00,0x02,0x03,0x37,0x10,0x10,0x10,0x10,0x10,0x10 ; row 56
       75 07 00 02 
       03 37 10 10 
       10 10 10 10 
04DA4F 72 01 07 73 0219*  	db 0x72,0x01,0x07,0x73,0x6B,0x04,0x05,0x06,0x60,0x36,0x10,0x10,0x10,0x10,0x10,0x10 ; row 55
       6B 04 05 06 
       60 36 10 10 
       10 10 10 10 
04DA5F 02 03 04 71 0220*  	db 0x02,0x03,0x04,0x71,0x01,0x00,0x02,0x03,0x37,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 54
       01 00 02 03 
       37 10 10 10 
       10 10 10 10 
04DA6F 07 06 70 64 0221*  	db 0x07,0x06,0x70,0x64,0x04,0x05,0x06,0x07,0x37,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 53
       04 05 06 07 
       37 10 10 10 
       10 10 10 10 
04DA7F 04 01 6E 6F 0222*  	db 0x04,0x01,0x6E,0x6F,0x00,0x02,0x03,0x60,0x36,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 52
       00 02 03 60 
       36 10 10 10 
       10 10 10 10 
04DA8F 05 02 6A 6B 0223*  	db 0x05,0x02,0x6A,0x6B,0x06,0x07,0x01,0x6C,0x2C,0x16,0x6D,0x10,0x10,0x10,0x10,0x10 ; row 51
       06 07 01 6C 
       2C 16 6D 10 
       10 10 10 10 
04DA9F 66 67 68 00 0224*  	db 0x66,0x67,0x68,0x00,0x04,0x05,0x60,0x69,0x16,0x16,0x23,0x10,0x10,0x10,0x10,0x10 ; row 50
       04 05 60 69 
       16 16 23 10 
       10 10 10 10 
04DAAF 64 05 03 07 0225*  	db 0x64,0x05,0x03,0x07,0x02,0x03,0x37,0x10,0x65,0x16,0x39,0x3A,0x3A,0x63,0x10,0x10 ; row 49
       02 03 37 10 
       65 16 39 3A 
       3A 63 10 10 
04DABF 01 06 02 04 0226*  	db 0x01,0x06,0x02,0x04,0x01,0x00,0x37,0x10,0x2C,0x16,0x38,0x38,0x16,0x1A,0x63,0x10 ; row 48
       01 00 37 10 
       2C 16 38 38 
       16 1A 63 10 
04DACF 00 02 03 04 0227*  	db 0x00,0x02,0x03,0x04,0x06,0x05,0x3B,0x20,0x1C,0x2E,0x10,0x10,0x41,0x16,0x1A,0x62 ; row 47
       06 05 3B 20 
       1C 2E 10 10 
       41 16 1A 62 
04DADF 05 06 07 01 0228*  	db 0x05,0x06,0x07,0x01,0x04,0x60,0x10,0x1E,0x1C,0x1D,0x10,0x10,0x10,0x41,0x16,0x16 ; row 46
       04 60 10 1E 
       1C 1D 10 10 
       10 41 16 16 
04DAEF 00 02 03 04 0229*  	db 0x00,0x02,0x03,0x04,0x07,0x3B,0x10,0x20,0x1C,0x1D,0x10,0x10,0x10,0x10,0x40,0x61 ; row 45
       07 3B 10 20 
       1C 1D 10 10 
       10 10 40 61 
04DAFF 05 06 07 01 0230*  	db 0x05,0x06,0x07,0x01,0x60,0x10,0x10,0x1E,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 44
       60 10 10 1E 
       1C 1D 10 10 
       10 10 10 10 
04DB0F 01 00 02 03 0231*  	db 0x01,0x00,0x02,0x03,0x3B,0x10,0x10,0x20,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 43
       3B 10 10 20 
       1C 1D 10 10 
       10 10 10 10 
04DB1F 02 03 04 5F 0232*  	db 0x02,0x03,0x04,0x5F,0x10,0x10,0x10,0x1E,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 42
       10 10 10 1E 
       1C 1D 10 10 
       10 10 10 10 
04DB2F 05 06 5F 10 0233*  	db 0x05,0x06,0x5F,0x10,0x10,0x10,0x10,0x20,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 41
       10 10 10 20 
       1C 1D 10 10 
       10 10 10 10 
04DB3F 5D 5E 10 10 0234*  	db 0x5D,0x5E,0x10,0x10,0x10,0x10,0x10,0x1E,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 40
       10 10 10 1E 
       1C 1D 10 10 
       10 10 10 10 
04DB4F 10 10 10 10 0235*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 39
       10 10 10 20 
       1C 1D 10 10 
       10 10 10 10 
04DB5F 10 10 10 10 0236*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1E,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 38
       10 10 10 1E 
       1C 1D 10 10 
       10 10 10 10 
04DB6F 10 10 10 10 0237*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10 ; row 37
       10 10 10 20 
       1C 1D 10 10 
       10 10 10 10 
04DB7F 10 10 10 10 0238*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x27,0x5C,0x43,0x10,0x10,0x10,0x10,0x10,0x10 ; row 36
       10 10 10 27 
       5C 43 10 10 
       10 10 10 10 
04DB8F 26 10 10 2F 0239*  	db 0x26,0x10,0x10,0x2F,0x5A,0x5A,0x5A,0x5B,0x16,0x16,0x5A,0x5A,0x5A,0x5A,0x5A,0x5A ; row 35
       5A 5A 5A 5B 
       16 16 5A 5A 
       5A 5A 5A 5A 
04DB9F 57 47 47 58 0240*  	db 0x57,0x47,0x47,0x58,0x59,0x46,0x58,0x58,0x58,0x58,0x58,0x58,0x58,0x58,0x48,0x16 ; row 34
       59 46 58 58 
       58 58 58 58 
       58 58 48 16 
04DBAF 51 52 52 52 0241*  	db 0x51,0x52,0x52,0x52,0x53,0x54,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x55,0x56 ; row 33
       53 54 52 52 
       52 52 52 52 
       52 52 55 56 
04DBBF 4F 50 50 50 0242*  	db 0x4F,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50 ; row 32
       50 50 50 50 
       50 50 50 50 
       50 50 50 50 
04DBCF 10 49 4A 4A 0243*  	db 0x10,0x49,0x4A,0x4A,0x4B,0x4C,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4D,0x4E ; row 31
       4B 4C 4A 4A 
       4A 4A 4A 4A 
       4A 4A 4D 4E 
04DBDF 10 10 10 10 0244*  	db 0x10,0x10,0x10,0x10,0x1C,0x46,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x48,0x3E ; row 30
       1C 46 47 47 
       47 47 47 47 
       47 47 48 3E 
04DBEF 45 0C 10 10 0245*  	db 0x45,0x0C,0x10,0x10,0x1C,0x1D,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 29
       1C 1D 10 10 
       10 10 10 10 
       10 10 1B 3E 
04DBFF 03 04 0F 10 0246*  	db 0x03,0x04,0x0F,0x10,0x1C,0x43,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1B,0x44 ; row 28
       1C 43 10 10 
       10 10 10 10 
       10 10 1B 44 
04DC0F 07 01 37 10 0247*  	db 0x07,0x01,0x37,0x10,0x41,0x16,0x3D,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 27
       41 16 3D 10 
       10 10 10 10 
       10 10 1B 3E 
04DC1F 00 02 03 10 0248*  	db 0x00,0x02,0x03,0x10,0x10,0x41,0x16,0x42,0x26,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 26
       10 41 16 42 
       26 10 10 10 
       10 10 1B 3E 
04DC2F 03 04 05 0C 0249*  	db 0x03,0x04,0x05,0x0C,0x10,0x10,0x40,0x15,0x3E,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 25
       10 10 40 15 
       3E 10 10 10 
       10 10 1B 3E 
04DC3F 06 07 01 00 0250*  	db 0x06,0x07,0x01,0x00,0x3F,0x10,0x10,0x1B,0x3E,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 24
       3F 10 10 1B 
       3E 10 10 10 
       10 10 1B 3E 
04DC4F 01 00 02 03 0251*  	db 0x01,0x00,0x02,0x03,0x37,0x10,0x10,0x1B,0x3E,0x10,0x10,0x10,0x10,0x10,0x1B,0x3E ; row 23
       37 10 10 1B 
       3E 10 10 10 
       10 10 1B 3E 
04DC5F 02 03 04 05 0252*  	db 0x02,0x03,0x04,0x05,0x3B,0x10,0x10,0x3C,0x16,0x3D,0x10,0x10,0x10,0x10,0x1B,0x16 ; row 22
       3B 10 10 3C 
       16 3D 10 10 
       10 10 1B 16 
04DC6F 05 06 07 01 0253*  	db 0x05,0x06,0x07,0x01,0x0F,0x10,0x10,0x10,0x1C,0x16,0x39,0x3A,0x3A,0x3A,0x2C,0x16 ; row 21
       0F 10 10 10 
       1C 16 39 3A 
       3A 3A 2C 16 
04DC7F 01 00 02 03 0254*  	db 0x01,0x00,0x02,0x03,0x37,0x10,0x10,0x10,0x1C,0x16,0x16,0x16,0x38,0x38,0x38,0x30 ; row 20
       37 10 10 10 
       1C 16 16 16 
       38 38 38 30 
04DC8F 33 34 35 33 0255*  	db 0x33,0x34,0x35,0x33,0x36,0x10,0x10,0x2F,0x16,0x16,0x17,0x32,0x10,0x10,0x10,0x10 ; row 19
       36 10 10 2F 
       16 16 17 32 
       10 10 10 10 
04DC9F 10 10 10 10 0256*  	db 0x10,0x10,0x10,0x10,0x10,0x10,0x2F,0x16,0x31,0x32,0x10,0x10,0x10,0x10,0x10,0x10 ; row 18
       10 10 2F 16 
       31 32 10 10 
       10 10 10 10 
04DCAF 10 10 10 10 0257*  	db 0x10,0x10,0x10,0x10,0x10,0x2F,0x16,0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 17
       10 2F 16 30 
       10 10 10 10 
       10 10 10 10 
04DCBF 10 10 10 27 0258*  	db 0x10,0x10,0x10,0x27,0x28,0x16,0x2E,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 16
       28 16 2E 10 
       10 10 10 10 
       10 10 10 10 
04DCCF 10 10 27 2C 0259*  	db 0x10,0x10,0x27,0x2C,0x2B,0x2D,0x29,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 15
       2B 2D 29 10 
       10 10 10 10 
       10 10 10 10 
04DCDF 10 10 2A 2B 0260*  	db 0x10,0x10,0x2A,0x2B,0x23,0x1E,0x29,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 14
       23 1E 29 10 
       10 10 10 10 
       10 10 10 10 
04DCEF 27 28 16 1D 0261*  	db 0x27,0x28,0x16,0x1D,0x1E,0x20,0x29,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 13
       1E 20 29 10 
       10 10 10 10 
       10 10 10 10 
04DCFF 22 23 1C 1D 0262*  	db 0x22,0x23,0x1C,0x1D,0x1E,0x20,0x1A,0x24,0x25,0x26,0x10,0x10,0x10,0x10,0x10,0x10 ; row 12
       1E 20 1A 24 
       25 26 10 10 
       10 10 10 10 
04DD0F 1F 10 1C 1D 0263*  	db 0x1F,0x10,0x1C,0x1D,0x20,0x21,0x16,0x16,0x16,0x16,0x1A,0x10,0x10,0x10,0x10,0x10 ; row 11
       20 21 16 16 
       16 16 1A 10 
       10 10 10 10 
04DD1F 10 10 1C 1D 0264*  	db 0x10,0x10,0x1C,0x1D,0x1E,0x1B,0x16,0x16,0x16,0x16,0x16,0x10,0x10,0x10,0x10,0x10 ; row 10
       1E 1B 16 16 
       16 16 16 10 
       10 10 10 10 
04DD2F 10 10 19 1A 0265*  	db 0x10,0x10,0x19,0x1A,0x10,0x1B,0x16,0x16,0x16,0x16,0x16,0x10,0x10,0x10,0x10,0x10 ; row 9
       10 1B 16 16 
       16 16 16 10 
       10 10 10 10 
04DD3F 09 0A 11 12 0266*  	db 0x09,0x0A,0x11,0x12,0x10,0x13,0x14,0x15,0x16,0x17,0x18,0x10,0x10,0x10,0x10,0x10 ; row 8
       10 13 14 15 
       16 17 18 10 
       10 10 10 10 
04DD4F 05 03 06 03 0267*  	db 0x05,0x03,0x06,0x03,0x0C,0x0F,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 7
       0C 0F 10 10 
       10 10 10 10 
       10 10 10 10 
04DD5F 04 02 07 02 0268*  	db 0x04,0x02,0x07,0x02,0x04,0x08,0x0F,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 ; row 6
       04 08 0F 10 
       10 10 10 10 
       10 10 10 10 
04DD6F 06 00 01 00 0269*  	db 0x06,0x00,0x01,0x00,0x01,0x06,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0D,0x0E,0x0A,0x0B ; row 5
       01 06 08 09 
       0A 0B 0C 0D 
       0D 0E 0A 0B 
04DD7F 07 06 05 04 0270*  	db 0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x01 ; row 4
       03 02 00 01 
       07 06 05 04 
       03 02 00 01 
04DD8F 05 01 00 02 0271*  	db 0x05,0x01,0x00,0x02,0x07,0x01,0x03,0x04,0x00,0x02,0x01,0x02,0x05,0x06,0x03,0x05 ; row 3
       07 01 03 04 
       00 02 01 02 
       05 06 03 05 
04DD9F 02 00 06 01 0272*  	db 0x02,0x00,0x06,0x01,0x00,0x05,0x01,0x03,0x01,0x06,0x04,0x03,0x00,0x01,0x00,0x04 ; row 2
       00 05 01 03 
       01 06 04 03 
       00 01 00 04 
04DDAF 07 03 04 05 0273*  	db 0x07,0x03,0x04,0x05,0x06,0x07,0x00,0x02,0x03,0x04,0x05,0x07,0x06,0x05,0x04,0x03 ; row 1
       06 07 00 02 
       03 04 05 07 
       06 05 04 03 
04DDBF 00 01 00 02 0274*  	db 0x00,0x01,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x01,0x00,0x02,0x03,0x04,0x05,0x06 ; row 0
       03 04 05 06 
       07 01 00 02 
       03 04 05 06 
04DDCF             0275*  tiles_xevious_level_2: ; Level 2
04DDCF 10          0276*  	db 16          ; num cols
04DDD0 80 00 00    0277*  	dl 128          ; num rows
04DDD3 00 04 00    0278*  	dl BUF_XEVIOUS_2_00 ; base bufferId
04DDD6 03 02 01 00 0279*  	db 0x03,0x02,0x01,0x00,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,0x07,0x07,0x00,0x01 ; row 127
       07 06 05 04 
       03 02 01 00 
       07 07 00 01 
04DDE6 00 07 06 05 0280*  	db 0x00,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,0x07,0x06,0x05,0x04,0x03,0x02,0x01 ; row 126
       04 03 02 01 
       00 07 06 05 
       04 03 02 01 
04DDF6 05 04 03 02 0281*  	db 0x05,0x04,0x03,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06 ; row 125
       03 04 05 06 
       07 00 01 02 
       03 04 05 06 
04DE06 07 06 05 04 0282*  	db 0x07,0x06,0x05,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00 ; row 124
       05 06 07 00 
       01 02 03 04 
       05 06 07 00 
04DE16 01 00 07 06 0283*  	db 0x01,0x00,0x07,0x06,0x05,0x34,0x34,0xB5,0xB6,0xB7,0x07,0x00,0x01,0x02,0x03,0x07 ; row 123
       05 34 34 B5 
       B6 B7 07 00 
       01 02 03 07 
04DE26 04 B1 B2 37 0284*  	db 0x04,0xB1,0xB2,0x37,0x36,0x09,0x09,0x9C,0xB3,0x09,0x57,0x6D,0x00,0x07,0xB4,0x58 ; row 122
       36 09 09 9C 
       B3 09 57 6D 
       00 07 B4 58 
04DE36 37 09 09 09 0285*  	db 0x37,0x09,0x09,0x09,0x09,0x09,0x16,0x17,0x09,0x09,0x09,0x09,0xAF,0x37,0xB0,0x09 ; row 121
       09 09 16 17 
       09 09 09 09 
       AF 37 B0 09 
04DE46 09 09 09 09 0286*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x18,0xAD,0x09,0x09,0x09,0x09,0x09,0x09,0x50,0xAE ; row 120
       09 09 18 AD 
       09 09 09 09 
       09 09 50 AE 
04DE56 09 09 09 09 0287*  	db 0x09,0x09,0x09,0x09,0x09,0x16,0x17,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x15 ; row 119
       09 16 17 09 
       09 09 09 09 
       09 09 09 15 
04DE66 09 09 09 09 0288*  	db 0x09,0x09,0x09,0x09,0x09,0x18,0xAD,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x15 ; row 118
       09 18 AD 09 
       09 09 09 09 
       09 09 09 15 
04DE76 09 09 09 09 0289*  	db 0x09,0x09,0x09,0x09,0x16,0x17,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x16,0xAD ; row 117
       16 17 09 09 
       09 09 09 09 
       09 09 16 AD 
04DE86 09 09 09 09 0290*  	db 0x09,0x09,0x09,0x09,0xAC,0xAD,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x14,0x09 ; row 116
       AC AD 09 09 
       09 09 09 09 
       09 09 14 09 
04DE96 09 09 09 09 0291*  	db 0x09,0x09,0x09,0x09,0x18,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x14,0x09 ; row 115
       18 09 09 09 
       09 09 09 09 
       09 09 14 09 
04DEA6 A2 09 09 09 0292*  	db 0xA2,0x09,0x09,0x09,0x17,0x09,0x09,0x09,0xA6,0xA9,0xAA,0x09,0x09,0x09,0x50,0xAB ; row 114
       17 09 09 09 
       A6 A9 AA 09 
       09 09 50 AB 
04DEB6 A0 A2 09 09 0293*  	db 0xA0,0xA2,0x09,0x09,0xA4,0xA6,0xA7,0xA8,0x42,0x42,0x42,0xA8,0x51,0x09,0x09,0x79 ; row 113
       A4 A6 A7 A8 
       42 42 42 A8 
       51 09 09 79 
04DEC6 09 A0 A2 16 0294*  	db 0x09,0xA0,0xA2,0x16,0x42,0xA1,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0xA4,0x09,0x16,0xA5 ; row 112
       42 A1 2D 2D 
       2D 2D 2D 85 
       A4 09 16 A5 
04DED6 09 09 A0 42 0295*  	db 0x09,0x09,0xA0,0x42,0xA1,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x9F,0xA2,0xA3,0x01 ; row 111
       A1 2D 2D 2D 
       2D 2D 2D 85 
       9F A2 A3 01 
04DEE6 09 09 9C 9A 0296*  	db 0x09,0x09,0x9C,0x9A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x86,0x9F,0x79,0x06 ; row 110
       2D 2D 2D 2D 
       2D 2D 2D 85 
       86 9F 79 06 
04DEF6 09 9C 9A 86 0297*  	db 0x09,0x9C,0x9A,0x86,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x9D,0x9E,0x86,0x99,0x07 ; row 109
       2D 2D 2D 2D 
       2D 2D 2D 9D 
       9E 86 99 07 
04DF06 16 9A 86 86 0298*  	db 0x16,0x9A,0x86,0x86,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x8D,0x72,0x6A,0x97,0x9B ; row 108
       2D 2D 2D 2D 
       2D 2D 2D 8D 
       72 6A 97 9B 
04DF16 98 86 86 90 0299*  	db 0x98,0x86,0x86,0x90,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x8D,0x6A,0x72,0x92,0x99 ; row 107
       2D 2D 2D 2D 
       2D 2D 2D 8D 
       6A 72 92 99 
04DF26 96 86 90 72 0300*  	db 0x96,0x86,0x90,0x72,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x8D,0x72,0x6A,0x72,0x97 ; row 106
       2D 2D 2D 2D 
       2D 2D 2D 8D 
       72 6A 72 97 
04DF36 93 94 72 6A 0301*  	db 0x93,0x94,0x72,0x6A,0x72,0x2D,0x2D,0x8D,0x8F,0x8D,0x6A,0x72,0x6A,0x72,0x6A,0x95 ; row 105
       72 2D 2D 8D 
       8F 8D 6A 72 
       6A 72 6A 95 
04DF46 86 91 6A 72 0302*  	db 0x86,0x91,0x6A,0x72,0x6A,0x2D,0x8D,0x6A,0x8F,0x8D,0x72,0x6A,0x72,0x6A,0x72,0x92 ; row 104
       6A 2D 8D 6A 
       8F 8D 72 6A 
       72 6A 72 92 
04DF56 90 6A 72 6A 0303*  	db 0x90,0x6A,0x72,0x6A,0x72,0x2D,0x8D,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 103
       72 2D 8D 72 
       6A 72 6A 72 
       6A 72 6A 72 
04DF66 6A 6A 6A 72 0304*  	db 0x6A,0x6A,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 102
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04DF76 72 6A 72 6A 0305*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 101
       72 6A 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04DF86 6A 72 6A 72 0306*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 100
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04DF96 72 6A 72 6A 0307*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 99
       72 6A 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04DFA6 6A 72 6A 72 0308*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 98
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04DFB6 72 6A 72 6A 0309*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 97
       72 6A 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04DFC6 6A 72 6A 72 0310*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 96
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04DFD6 72 6A 72 6A 0311*  	db 0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 95
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04DFE6 6A 72 6A 72 0312*  	db 0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 94
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04DFF6 72 6A 72 6A 0313*  	db 0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 93
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E006 6A 72 6A 72 0314*  	db 0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 92
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E016 72 6A 72 6A 0315*  	db 0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 91
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E026 6A 72 6A 72 0316*  	db 0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 90
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E036 72 6A 72 6A 0317*  	db 0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 89
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E046 6A 72 6A 72 0318*  	db 0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 88
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E056 72 6A 72 6A 0319*  	db 0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 87
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E066 6A 72 6A 72 0320*  	db 0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 86
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E076 72 6A 72 6A 0321*  	db 0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 85
       72 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E086 6A 72 6A 72 0322*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 84
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E096 72 6A 72 6A 0323*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 83
       72 6A 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E0A6 6A 72 6A 72 0324*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 82
       6A 72 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E0B6 72 6A 72 6A 0325*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 81
       72 6A 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E0C6 72 6A 72 6A 0326*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 80
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E0D6 6A 72 6A 72 0327*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 79
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E0E6 72 6A 72 6A 0328*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 78
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E0F6 6A 72 6A 72 0329*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 77
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E106 72 6A 72 6A 0330*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 76
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E116 6A 72 6A 72 0331*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 75
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E126 72 6A 72 6A 0332*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 74
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E136 6A 72 6A 72 0333*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 73
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E146 72 6A 72 6A 0334*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 72
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E156 6A 72 6A 72 0335*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 71
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E166 72 6A 72 6A 0336*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 70
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E176 6A 72 6A 72 0337*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 69
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E186 72 6A 72 6A 0338*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 68
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E196 6A 72 6A 72 0339*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 67
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E1A6 72 6A 72 6A 0340*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 66
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E1B6 6A 72 6A 72 0341*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 65
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E1C6 72 6A 72 6A 0342*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 64
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E1D6 6A 72 6A 72 0343*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 63
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E1E6 72 6A 72 6A 0344*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 62
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E1F6 6A 72 6A 72 0345*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 61
       6A 72 6A 72 
       6A 72 6A 72 
       6A 72 6A 72 
04E206 72 6A 72 6A 0346*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A ; row 60
       72 6A 72 6A 
       72 6A 72 6A 
       72 6A 72 6A 
04E216 6A 72 6A 72 0347*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x8F,0x8D,0x88,0x6A,0x72,0x6A,0x72,0x6A,0x72 ; row 59
       6A 72 6A 8F 
       8D 88 6A 72 
       6A 72 6A 72 
04E226 72 6A 72 6A 0348*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x72,0x8F,0x8D,0x2D,0x8D,0x6A,0x72,0x6A,0x72,0x6A ; row 58
       72 6A 72 8F 
       8D 2D 8D 6A 
       72 6A 72 6A 
04E236 6A 72 6A 72 0349*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x6A,0x2D,0x8D,0x2D,0x8E,0x8D,0x6A,0x72,0x6A,0x72 ; row 57
       6A 72 6A 2D 
       8D 2D 8E 8D 
       6A 72 6A 72 
04E246 72 6A 72 6A 0350*  	db 0x72,0x6A,0x72,0x6A,0x72,0x6A,0x88,0x2D,0x89,0x2D,0x2D,0x89,0x88,0x8A,0x8B,0x8C ; row 56
       72 6A 88 2D 
       89 2D 2D 89 
       88 8A 8B 8C 
04E256 6A 72 6A 72 0351*  	db 0x6A,0x72,0x6A,0x72,0x6A,0x72,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x86,0x86 ; row 55
       6A 72 2D 2D 
       2D 2D 2D 2D 
       2D 85 86 86 
04E266 67 6A 72 6A 0352*  	db 0x67,0x6A,0x72,0x6A,0x72,0x6A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x86,0x87 ; row 54
       72 6A 2D 2D 
       2D 2D 2D 2D 
       2D 85 86 87 
04E276 09 7F 6A 72 0353*  	db 0x09,0x7F,0x6A,0x72,0x6A,0x72,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x83,0x06 ; row 53
       6A 72 2D 2D 
       2D 2D 2D 2D 
       2D 85 83 06 
04E286 09 84 72 6A 0354*  	db 0x09,0x84,0x72,0x6A,0x72,0x6A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x85,0x82,0x03 ; row 52
       72 6A 2D 2D 
       2D 2D 2D 2D 
       2D 85 82 03 
04E296 09 5D 6A 72 0355*  	db 0x09,0x5D,0x6A,0x72,0x6A,0x72,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x83,0x01,0x02 ; row 51
       6A 72 2D 2D 
       2D 2D 2D 2D 
       2D 83 01 02 
04E2A6 09 09 67 6A 0356*  	db 0x09,0x09,0x67,0x6A,0x72,0x6A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x82,0x05,0x6E ; row 50
       72 6A 2D 2D 
       2D 2D 2D 2D 
       2D 82 05 6E 
04E2B6 09 09 09 7F 0357*  	db 0x09,0x09,0x09,0x7F,0x6A,0x72,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x78,0x80,0x6E,0x81 ; row 49
       6A 72 2D 2D 
       2D 2D 2D 2D 
       78 80 6E 81 
04E2C6 7B 09 09 5D 0358*  	db 0x7B,0x09,0x09,0x5D,0x72,0x6A,0x2D,0x2D,0x2D,0x2D,0x2D,0x7C,0x02,0x00,0x7D,0x7E ; row 48
       72 6A 2D 2D 
       2D 2D 2D 7C 
       02 00 7D 7E 
04E2D6 7A 09 09 64 0359*  	db 0x7A,0x09,0x09,0x64,0x6A,0x72,0x2D,0x2D,0x2D,0x2D,0x78,0x04,0x03,0x02,0x01,0x79 ; row 47
       6A 72 2D 2D 
       2D 2D 78 04 
       03 02 01 79 
04E2E6 55 09 09 76 0360*  	db 0x55,0x09,0x09,0x76,0x72,0x6A,0x77,0x2D,0x78,0x01,0x00,0x07,0x06,0x05,0x6E,0x79 ; row 46
       72 6A 77 2D 
       78 01 00 07 
       06 05 6E 79 
04E2F6 42 52 09 09 0361*  	db 0x42,0x52,0x09,0x09,0x67,0x72,0x73,0x74,0x06,0x05,0x04,0x03,0x02,0x6E,0x75,0x71 ; row 45
       67 72 73 74 
       06 05 04 03 
       02 6E 75 71 
04E306 42 55 09 09 0362*  	db 0x42,0x55,0x09,0x09,0x64,0x6A,0x6B,0x6C,0x6D,0x00,0x07,0x6E,0x6F,0x70,0x71,0x05 ; row 44
       64 6A 6B 6C 
       6D 00 07 6E 
       6F 70 71 05 
04E316 42 42 52 09 0363*  	db 0x42,0x42,0x52,0x09,0x09,0x67,0x5E,0x68,0x0C,0x03,0x02,0x69,0x05,0x04,0x03,0x02 ; row 43
       09 67 5E 68 
       0C 03 02 69 
       05 04 03 02 
04E326 42 42 5A 09 0364*  	db 0x42,0x42,0x5A,0x09,0x09,0x64,0x65,0x32,0x07,0x06,0x05,0x66,0x04,0x02,0x01,0x00 ; row 42
       09 64 65 32 
       07 06 05 66 
       04 02 01 00 
04E336 42 42 55 09 0365*  	db 0x42,0x42,0x55,0x09,0x09,0x61,0x62,0x2A,0x02,0x01,0x00,0x63,0x60,0x07,0x06,0x05 ; row 41
       09 61 62 2A 
       02 01 00 63 
       60 07 06 05 
04E346 42 42 42 52 0366*  	db 0x42,0x42,0x42,0x52,0x09,0x5D,0x5E,0x4B,0x39,0x05,0x04,0x03,0x5F,0x60,0x01,0x00 ; row 40
       09 5D 5E 4B 
       39 05 04 03 
       5F 60 01 00 
04E356 42 42 42 5A 0367*  	db 0x42,0x42,0x42,0x5A,0x09,0x09,0x46,0x47,0x4B,0x57,0x01,0x00,0x07,0x5B,0x5C,0x01 ; row 39
       09 09 46 47 
       4B 57 01 00 
       07 5B 5C 01 
04E366 42 42 42 55 0368*  	db 0x42,0x42,0x42,0x55,0x09,0x09,0x09,0x40,0x56,0x4B,0x57,0x34,0x58,0x50,0x59,0x09 ; row 38
       09 09 09 40 
       56 4B 57 34 
       58 50 59 09 
04E376 42 42 42 42 0369*  	db 0x42,0x42,0x42,0x42,0x52,0x09,0x09,0x09,0x09,0x46,0x48,0x53,0x09,0x09,0x54,0x09 ; row 37
       52 09 09 09 
       09 46 48 53 
       09 09 54 09 
04E386 42 42 42 42 0370*  	db 0x42,0x42,0x42,0x42,0x49,0x09,0x09,0x09,0x09,0x09,0x46,0x47,0x4B,0x09,0x50,0x51 ; row 36
       49 09 09 09 
       09 09 46 47 
       4B 09 50 51 
04E396 42 42 42 4D 0371*  	db 0x42,0x42,0x42,0x4D,0x09,0x09,0x09,0x0A,0x0B,0x4E,0x3C,0x46,0x47,0x4B,0x09,0x4F ; row 35
       09 09 09 0A 
       0B 4E 3C 46 
       47 4B 09 4F 
04E3A6 42 42 42 49 0372*  	db 0x42,0x42,0x42,0x49,0x09,0x32,0x02,0x01,0x00,0x07,0x06,0x4A,0x46,0x47,0x4B,0x4C ; row 34
       09 32 02 01 
       00 07 06 4A 
       46 47 4B 4C 
04E3B6 42 42 43 09 0373*  	db 0x42,0x42,0x43,0x09,0x09,0x44,0x07,0x06,0x05,0x04,0x03,0x45,0x09,0x46,0x47,0x48 ; row 33
       09 44 07 06 
       05 04 03 45 
       09 46 47 48 
04E3C6 3E 3F 09 09 0374*  	db 0x3E,0x3F,0x09,0x09,0x32,0x05,0x04,0x03,0x02,0x01,0x00,0x0D,0x09,0x09,0x40,0x41 ; row 32
       32 05 04 03 
       02 01 00 0D 
       09 09 40 41 
04E3D6 09 09 09 3D 0375*  	db 0x09,0x09,0x09,0x3D,0x00,0x07,0x06,0x05,0x04,0x03,0x02,0x00,0x0D,0x11,0x09,0x09 ; row 31
       00 07 06 05 
       04 03 02 00 
       0D 11 09 09 
04E3E6 09 09 09 2A 0376*  	db 0x09,0x09,0x09,0x2A,0x01,0x03,0x02,0x01,0x00,0x07,0x06,0x05,0x04,0x03,0x3C,0x09 ; row 30
       01 03 02 01 
       00 07 06 05 
       04 03 3C 09 
04E3F6 09 09 09 09 0377*  	db 0x09,0x09,0x09,0x09,0x27,0x05,0x04,0x03,0x02,0x01,0x00,0x07,0x06,0x05,0x04,0x3B ; row 29
       27 05 04 03 
       02 01 00 07 
       06 05 04 3B 
04E406 09 09 09 09 0378*  	db 0x09,0x09,0x09,0x09,0x21,0x3A,0x00,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,0x07 ; row 28
       21 3A 00 07 
       06 05 04 03 
       02 01 00 07 
04E416 09 09 09 09 0379*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x05,0x04,0x03 ; row 27
       09 09 33 34 
       35 36 37 38 
       39 05 04 03 
04E426 30 30 30 30 0380*  	db 0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x32,0x03,0x02,0x01 ; row 26
       30 30 30 30 
       30 30 30 31 
       32 03 02 01 
04E436 26 2C 2D 2D 0381*  	db 0x26,0x2C,0x2D,0x2D,0x2D,0x2D,0x2D,0x2E,0x26,0x26,0x2D,0x2F,0x2A,0x01,0x00,0x07 ; row 25
       2D 2D 2D 2E 
       26 26 2D 2F 
       2A 01 00 07 
04E446 2B 2B 2B 2B 0382*  	db 0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x20,0x09,0x27,0x05,0x04 ; row 24
       2B 2B 2B 2B 
       2B 2B 2B 20 
       09 27 05 04 
04E456 2B 2B 2B 2B 0383*  	db 0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x20,0x09,0x2A,0x03,0x02 ; row 23
       2B 2B 2B 2B 
       2B 2B 2B 20 
       09 2A 03 02 
04E466 2B 2B 2B 2B 0384*  	db 0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x20,0x09,0x09,0x27,0x00 ; row 22
       2B 2B 2B 2B 
       2B 2B 2B 20 
       09 09 27 00 
04E476 26 25 26 26 0385*  	db 0x26,0x25,0x26,0x26,0x26,0x26,0x26,0x28,0x23,0x29,0x26,0x20,0x09,0x09,0x2A,0x05 ; row 21
       26 26 26 28 
       23 29 26 20 
       09 09 2A 05 
04E486 22 1E 1C 1C 0386*  	db 0x22,0x1E,0x1C,0x1C,0x1C,0x1C,0x1C,0x23,0x24,0x25,0x26,0x20,0x09,0x09,0x09,0x27 ; row 20
       1C 1C 1C 23 
       24 25 26 20 
       09 09 09 27 
04E496 1C 1C 1C 1C 0387*  	db 0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1D,0x1C,0x1E,0x1F,0x20,0x09,0x09,0x09,0x21 ; row 19
       1C 1C 1C 1D 
       1C 1E 1F 20 
       09 09 09 21 
04E4A6 1A 1A 1A 1A 0388*  	db 0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x1B,0x09,0x09,0x09,0x09 ; row 18
       1A 1A 1A 1A 
       1A 1A 1A 1B 
       09 09 09 09 
04E4B6 09 09 09 09 0389*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 ; row 17
       09 09 09 09 
       09 09 09 09 
       09 09 09 09 
04E4C6 09 09 09 09 0390*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 ; row 16
       09 09 09 09 
       09 09 09 09 
       09 09 09 09 
04E4D6 09 09 09 09 0391*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 ; row 15
       09 09 09 09 
       09 09 09 09 
       09 09 09 09 
04E4E6 09 09 09 09 0392*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 ; row 14
       09 09 09 09 
       09 09 09 09 
       09 09 09 09 
04E4F6 09 09 09 09 0393*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 ; row 13
       09 09 09 09 
       09 09 09 09 
       09 09 09 09 
04E506 09 09 09 09 0394*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x19 ; row 12
       09 09 09 09 
       09 09 09 09 
       09 09 09 19 
04E516 09 09 09 09 0395*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x18 ; row 11
       09 09 09 09 
       09 09 09 09 
       09 09 09 18 
04E526 09 09 09 09 0396*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x16,0x17 ; row 10
       09 09 09 09 
       09 09 09 09 
       09 09 16 17 
04E536 09 09 09 09 0397*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x14,0x15 ; row 9
       09 09 09 09 
       09 09 09 09 
       09 09 14 15 
04E546 09 09 09 09 0398*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x11,0x11,0x12,0x13 ; row 8
       09 09 09 09 
       09 09 09 09 
       11 11 12 13 
04E556 09 09 09 09 0399*  	db 0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x08,0x03,0x00,0x01,0x03 ; row 7
       09 09 09 09 
       09 09 09 08 
       03 00 01 03 
04E566 09 0A 0B 0C 0400*  	db 0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,0x10,0x0E,0x0B,0x0C,0x00,0x07,0x04,0x02,0x06 ; row 6
       0D 0E 0F 10 
       0E 0B 0C 00 
       07 04 02 06 
04E576 08 05 06 02 0401*  	db 0x08,0x05,0x06,0x02,0x01,0x03,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x06,0x05,0x04 ; row 5
       01 03 07 06 
       05 04 03 02 
       01 06 05 04 
04E586 02 03 04 05 0402*  	db 0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01 ; row 4
       06 07 00 01 
       02 03 04 05 
       06 07 00 01 
04E596 04 02 01 00 0403*  	db 0x04,0x02,0x01,0x00,0x07,0x04,0x03,0x06,0x05,0x01,0x00,0x07,0x02,0x01,0x06,0x05 ; row 3
       07 04 03 06 
       05 01 00 07 
       02 01 06 05 
04E5A6 00 01 03 05 0404*  	db 0x00,0x01,0x03,0x05,0x06,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x02,0x03 ; row 2
       06 00 01 02 
       03 04 05 06 
       07 00 02 03 
04E5B6 05 06 07 00 0405*  	db 0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04 ; row 1
       01 02 03 04 
       05 06 07 00 
       01 02 03 04 
04E5C6 00 01 02 03 0406*  	db 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07 ; row 0
       04 05 06 07 
       00 01 02 03 
       04 05 06 07 
04E5D6             0407*  tiles_xevious_level_3: ; Level 3
04E5D6 10          0408*  	db 16          ; num cols
04E5D7 80 00 00    0409*  	dl 128          ; num rows
04E5DA 00 05 00    0410*  	dl BUF_XEVIOUS_3_00 ; base bufferId
04E5DD 03 02 01 08 0411*  	db 0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04 ; row 127
       07 06 05 04 
       03 02 01 08 
       07 06 05 04 
04E5ED 08 07 06 05 0412*  	db 0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01 ; row 126
       04 03 02 01 
       08 07 06 05 
       04 03 02 01 
04E5FD 05 04 03 02 0413*  	db 0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06 ; row 125
       01 08 07 06 
       05 04 03 02 
       01 08 07 06 
04E60D 07 06 05 04 0414*  	db 0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08 ; row 124
       03 02 01 08 
       07 06 05 04 
       03 02 01 08 
04E61D 01 08 07 06 0415*  	db 0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02 ; row 123
       05 04 03 02 
       01 08 07 06 
       05 04 03 02 
04E62D 04 03 02 01 0416*  	db 0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05 ; row 122
       08 07 06 05 
       04 03 02 01 
       08 07 06 05 
04E63D 06 05 04 03 0417*  	db 0x06,0x05,0x04,0x03,0x02,0xFE,0xED,0xFF,0xE1,0xEC,0xE7,0xFA,0xEB,0xEC,0xED,0xE7 ; row 121
       02 FE ED FF 
       E1 EC E7 FA 
       EB EC ED E7 
04E64D 03 02 01 FE 0418*  	db 0x03,0x02,0x01,0xFE,0xED,0xD7,0x16,0x16,0xC9,0xE1,0x16,0x16,0x16,0x16,0x16,0x16 ; row 120
       ED D7 16 16 
       C9 E1 16 16 
       16 16 16 16 
04E65D FC 01 FD CC 0419*  	db 0xFC,0x01,0xFD,0xCC,0x16,0x16,0x16,0x16,0x16,0xC9,0xE1,0x16,0x16,0x16,0x16,0x16 ; row 119
       16 16 16 16 
       16 C9 E1 16 
       16 16 16 16 
04E66D EA FA FB CA 0420*  	db 0xEA,0xFA,0xFB,0xCA,0x16,0x16,0x16,0x16,0x16,0x16,0xC9,0xE1,0x16,0x16,0x16,0x16 ; row 118
       16 16 16 16 
       16 16 C9 E1 
       16 16 16 16 
04E67D BF F8 F4 2A 0421*  	db 0xBF,0xF8,0xF4,0x2A,0xF5,0xF9,0x16,0x16,0x16,0x16,0x16,0xC9,0xE1,0x16,0x16,0x16 ; row 117
       F5 F9 16 16 
       16 16 16 C9 
       E1 16 16 16 
04E68D 0E 0E 16 BC 0422*  	db 0x0E,0x0E,0x16,0xBC,0xBF,0xF4,0xF5,0xF6,0xF7,0xF7,0xEA,0x16,0xC9,0xE1,0x16,0x16 ; row 116
       BF F4 F5 F6 
       F7 F7 EA 16 
       C9 E1 16 16 
04E69D 05 04 0C 13 0423*  	db 0x05,0x04,0x0C,0x13,0x0E,0x0E,0x14,0x0E,0x16,0xBC,0xBF,0xF4,0xE9,0x2A,0xE1,0x16 ; row 115
       0E 0E 14 0E 
       16 BC BF F4 
       E9 2A E1 16 
04E6AD 03 02 01 08 0424*  	db 0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x11,0x0D,0x0E,0x0E,0x16,0xBC,0xF4,0xE9 ; row 114
       07 06 05 04 
       11 0D 0E 0E 
       16 BC F4 E9 
04E6BD 01 08 07 06 0425*  	db 0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x0D,0x0D,0x16,0x16 ; row 113
       05 04 03 02 
       01 08 07 06 
       0D 0D 16 16 
04E6CD 07 06 05 04 0426*  	db 0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x0D,0x16 ; row 112
       03 02 01 08 
       07 06 05 04 
       03 02 0D 16 
04E6DD 02 01 08 07 0427*  	db 0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0xF3 ; row 111
       06 05 04 03 
       02 01 08 07 
       06 05 04 F3 
04E6ED 08 07 06 05 0428*  	db 0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0xF2 ; row 110
       04 03 02 01 
       08 07 06 05 
       04 03 02 F2 
04E6FD 06 05 04 03 0429*  	db 0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x0C ; row 109
       02 01 08 07 
       06 05 04 03 
       02 01 08 0C 
04E70D 04 03 02 01 0430*  	db 0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x08,0x07,0x06,0x05,0xD9 ; row 108
       08 07 06 05 
       04 03 02 08 
       07 06 05 D9 
04E71D 02 01 08 07 0431*  	db 0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x03,0xF2 ; row 107
       06 05 04 03 
       02 01 08 07 
       06 05 03 F2 
04E72D 08 07 06 05 0432*  	db 0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x08,0x07,0x06,0x05,0x04,0x03,0xD9,0x16 ; row 106
       04 03 02 01 
       08 07 06 05 
       04 03 D9 16 
04E73D 01 08 07 EF 0433*  	db 0x01,0x08,0x07,0xEF,0xED,0xED,0xE7,0xEB,0xEB,0xF0,0x04,0x03,0x02,0x08,0xF1,0xE0 ; row 105
       ED ED E7 EB 
       EB F0 04 03 
       02 08 F1 E0 
04E74D 08 D9 E7 16 0434*  	db 0x08,0xD9,0xE7,0x16,0xE8,0xE9,0xE9,0xE9,0xD5,0xEA,0xEB,0xEC,0xED,0xED,0xD7,0xEE ; row 104
       E8 E9 E9 E9 
       D5 EA EB EC 
       ED ED D7 EE 
04E75D D9 D7 E5 E3 0435*  	db 0xD9,0xD7,0xE5,0xE3,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xE1,0x16,0x16,0x16,0x16,0xE6 ; row 103
       2A 2A 2A 2A 
       2A 2A E1 16 
       16 16 16 E6 
04E76D D7 E0 2A 2A 0436*  	db 0xD7,0xE0,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xE1,0x16,0xE2,0xE3,0xE4 ; row 102
       2A 2A 2A 2A 
       2A 2A 2A E1 
       16 E2 E3 E4 
04E77D 16 DE 2A 2A 0437*  	db 0x16,0xDE,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xDF,0xDC,0xD1,0x9D ; row 101
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       DF DC D1 9D 
04E78D C8 2A 2A 2A 0438*  	db 0xC8,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD0,0xDD,0x93 ; row 100
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A D0 DD 93 
04E79D DC 2A 2A 2A 0439*  	db 0xDC,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCA,0xDB,0xBB ; row 99
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A CA DB BB 
04E7AD 2A 2A 2A 2A 0440*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC7,0xDB,0x9D ; row 98
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A C7 DB 9D 
04E7BD 2A 2A 2A 2A 0441*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC6,0x16,0x9D ; row 97
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A C6 16 9D 
04E7CD 2A 2A 2A 2A 0442*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCD,0x14,0x93 ; row 96
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A CD 14 93 
04E7DD 2A 2A 2A 2A 0443*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xDA,0x06,0xBB ; row 95
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A DA 06 BB 
04E7ED 2A 2A 2A 2A 0444*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD8,0xD9,0x9D ; row 94
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A D8 D9 9D 
04E7FD 2A 2A 2A 2A 0445*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD6,0xD7,0x93 ; row 93
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A D6 D7 93 
04E80D D4 2A 2A 2A 0446*  	db 0xD4,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC6,0x16,0xBB ; row 92
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A C6 16 BB 
04E81D D4 2A 2A 2A 0447*  	db 0xD4,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD5,0x16,0x9D ; row 91
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A D5 16 9D 
04E82D D4 2A 2A 2A 0448*  	db 0xD4,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD1,0x16,0xD2 ; row 90
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A D1 16 D2 
04E83D D3 2A 2A 2A 0449*  	db 0xD3,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC7,0x16,0x94,0xA5 ; row 89
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       C7 16 94 A5 
04E84D 16 C9 2A 2A 0450*  	db 0x16,0xC9,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCF,0x16,0x9D,0xA4 ; row 88
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       CF 16 9D A4 
04E85D 16 16 CB 2A 0451*  	db 0x16,0x16,0xCB,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD1,0x16,0xD2,0xA5 ; row 87
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       D1 16 D2 A5 
04E86D 16 16 C2 2A 0452*  	db 0x16,0x16,0xC2,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xD0,0x16,0x94,0xA5,0xA4 ; row 86
       2A 2A 2A 2A 
       2A 2A 2A D0 
       16 94 A5 A4 
04E87D 16 16 16 CB 0453*  	db 0x16,0x16,0x16,0xCB,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCF,0x16,0x9D,0xA4,0xA5 ; row 85
       2A 2A 2A 2A 
       2A 2A 2A CF 
       16 9D A4 A5 
04E88D 16 16 16 C5 0454*  	db 0x16,0x16,0x16,0xC5,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCE,0x93,0xA5,0xA4 ; row 84
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       CE 93 A5 A4 
04E89D 16 16 16 C2 0455*  	db 0x16,0x16,0x16,0xC2,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCD,0xBB,0xA4,0xA5 ; row 83
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       CD BB A4 A5 
04E8AD 16 16 16 16 0456*  	db 0x16,0x16,0x16,0x16,0xCB,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCC,0x9A,0xA5,0xA4 ; row 82
       CB 2A 2A 2A 
       2A 2A 2A 2A 
       CC 9A A5 A4 
04E8BD 84 16 16 16 0457*  	db 0x84,0x16,0x16,0x16,0xC5,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC6,0x95,0xA4,0xA5 ; row 81
       C5 2A 2A 2A 
       2A 2A 2A 2A 
       C6 95 A4 A5 
04E8CD 2A B2 16 16 0458*  	db 0x2A,0xB2,0x16,0x16,0xC2,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC6,0x16,0xC1,0xA5 ; row 80
       C2 2A 2A 2A 
       2A 2A 2A 2A 
       C6 16 C1 A5 
04E8DD 2A B0 16 16 0459*  	db 0x2A,0xB0,0x16,0x16,0x16,0xC9,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xCA,0x16,0x92,0xA4 ; row 79
       16 C9 2A 2A 
       2A 2A 2A 2A 
       CA 16 92 A4 
04E8ED 2A 7C 16 16 0460*  	db 0x2A,0x7C,0x16,0x16,0x16,0xC8,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x16,0xC1,0xA5 ; row 78
       16 C8 2A 2A 
       2A 2A 2A 2A 
       2A 16 C1 A5 
04E8FD 2A 2A B2 16 0461*  	db 0x2A,0x2A,0xB2,0x16,0x16,0xC5,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC7,0x16,0xBB,0xA4 ; row 77
       16 C5 2A 2A 
       2A 2A 2A 2A 
       C7 16 BB A4 
04E90D 2A 2A B0 16 0462*  	db 0x2A,0x2A,0xB0,0x16,0x16,0xC5,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0xC6,0x16,0x9D,0xA5 ; row 76
       16 C5 2A 2A 
       2A 2A 2A 2A 
       C6 16 9D A5 
04E91D 2A 2A 7C 16 0463*  	db 0x2A,0x2A,0x7C,0x16,0x16,0xC2,0x2A,0x2A,0x2A,0x2A,0x2A,0xC3,0xC4,0x16,0x9A,0xA4 ; row 75
       16 C2 2A 2A 
       2A 2A 2A C3 
       C4 16 9A A4 
04E92D 2A 2A 2A B2 0464*  	db 0x2A,0x2A,0x2A,0xB2,0x16,0x16,0xBC,0xBD,0xBE,0xBF,0xC0,0x16,0x16,0x16,0x16,0xC1 ; row 74
       16 16 BC BD 
       BE BF C0 16 
       16 16 16 C1 
04E93D 2A 2A 2A B0 0465*  	db 0x2A,0x2A,0x2A,0xB0,0x16,0x16,0x16,0x16,0xB6,0xB7,0xB8,0xB9,0xBA,0x16,0x16,0xBB ; row 73
       16 16 16 16 
       B6 B7 B8 B9 
       BA 16 16 BB 
04E94D 2A 2A 2A 7C 0466*  	db 0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x16,0xB4,0xA5,0xA4,0xA5,0xB5,0x16,0x16,0x9D ; row 72
       16 16 16 16 
       B4 A5 A4 A5 
       B5 16 16 9D 
04E95D 2A 2A 2A 2A 0467*  	db 0x2A,0x2A,0x2A,0x2A,0xB2,0x16,0x16,0x94,0xA5,0xA4,0xA5,0xA4,0xB3,0x16,0x16,0x9A ; row 71
       B2 16 16 94 
       A5 A4 A5 A4 
       B3 16 16 9A 
04E96D 2A 2A 2A 2A 0468*  	db 0x2A,0x2A,0x2A,0x2A,0xB0,0x16,0x16,0x9A,0xA4,0xA5,0xA4,0xA5,0xB1,0x16,0x16,0x95 ; row 70
       B0 16 16 9A 
       A4 A5 A4 A5 
       B1 16 16 95 
04E97D 2A 2A 2A 2A 0469*  	db 0x2A,0x2A,0x2A,0x2A,0xAC,0x16,0x16,0x94,0xA5,0xA4,0xA5,0xA4,0xA5,0xAD,0xAE,0xAF ; row 69
       AC 16 16 94 
       A5 A4 A5 A4 
       A5 AD AE AF 
04E98D 2A 2A 2A 2A 0470*  	db 0x2A,0x2A,0x2A,0x2A,0xA9,0x16,0x16,0x9A,0xA4,0xA5,0xA4,0xA5,0xA4,0xAA,0xA2,0xAB ; row 68
       A9 16 16 9A 
       A4 A5 A4 A5 
       A4 AA A2 AB 
04E99D 2A 2A 2A 2A 0471*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x7F,0x16,0x16,0xA7,0xA4,0xA5,0xA4,0xA8,0x16,0x16,0x9A ; row 67
       2A 7F 16 16 
       A7 A4 A5 A4 
       A8 16 16 9A 
04E9AD 2A 2A 2A 2A 0472*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x8F,0xA4,0xA5,0xA6,0x16,0x16,0x95 ; row 66
       2A 7C 16 16 
       16 8F A4 A5 
       A6 16 16 95 
04E9BD 2A 9E 9F 2A 0473*  	db 0x2A,0x9E,0x9F,0x2A,0x2A,0x2A,0x84,0x16,0x16,0xA0,0xA1,0xA2,0xA3,0x16,0x16,0x94 ; row 65
       2A 2A 84 16 
       16 A0 A1 A2 
       A3 16 16 94 
04E9CD 2A 9B 9C 99 0474*  	db 0x2A,0x9B,0x9C,0x99,0x2A,0x2A,0x2A,0x84,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x9D ; row 64
       2A 2A 2A 84 
       16 16 16 16 
       16 16 16 9D 
04E9DD 2A 2A 96 98 0475*  	db 0x2A,0x2A,0x96,0x98,0x99,0x2A,0x2A,0x2A,0x7F,0x16,0x16,0x16,0x16,0x16,0x16,0x9A ; row 63
       99 2A 2A 2A 
       7F 16 16 16 
       16 16 16 9A 
04E9ED 2A 2A 2A 96 0476*  	db 0x2A,0x2A,0x2A,0x96,0x97,0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x16,0x16,0x16,0x95 ; row 62
       97 2A 2A 2A 
       7C 16 16 16 
       16 16 16 95 
04E9FD 2A 2A 2A 82 0477*  	db 0x2A,0x2A,0x2A,0x82,0x2A,0x2A,0x2A,0x2A,0x2A,0x7F,0x16,0x16,0x16,0x16,0x16,0x95 ; row 61
       2A 2A 2A 2A 
       2A 7F 16 16 
       16 16 16 95 
04EA0D 2A 2A 82 83 0478*  	db 0x2A,0x2A,0x82,0x83,0x2A,0x2A,0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x16,0x16,0x94 ; row 60
       2A 2A 2A 2A 
       2A 7C 16 16 
       16 16 16 94 
04EA1D 2A 82 83 2A 0479*  	db 0x2A,0x82,0x83,0x2A,0x2A,0x2A,0x8E,0x2A,0x2A,0x2A,0x7F,0x16,0x16,0x16,0x16,0x93 ; row 59
       2A 2A 8E 2A 
       2A 2A 7F 16 
       16 16 16 93 
04EA2D 2A 83 2A 2A 0480*  	db 0x2A,0x83,0x2A,0x2A,0x2A,0x90,0x91,0x8E,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x16,0x92 ; row 58
       2A 90 91 8E 
       2A 2A 7C 16 
       16 16 16 92 
04EA3D 2A 2A 2A 2A 0481*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x86,0x89,0x8D,0x8E,0x2A,0x2A,0x7F,0x16,0x16,0x16,0x8F ; row 57
       2A 86 89 8D 
       8E 2A 2A 7F 
       16 16 16 8F 
04EA4D 2A 2A 2A 2A 0482*  	db 0x2A,0x2A,0x2A,0x2A,0x86,0x89,0x8A,0x8B,0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16,0x8C ; row 56
       86 89 8A 8B 
       2A 2A 2A 7C 
       16 16 16 8C 
04EA5D 2A 2A 82 83 0483*  	db 0x2A,0x2A,0x82,0x83,0x2A,0x86,0x87,0x2A,0x2A,0x2A,0x2A,0x2A,0x7F,0x16,0x16,0x88 ; row 55
       2A 86 87 2A 
       2A 2A 2A 2A 
       7F 16 16 88 
04EA6D 2A 82 83 2A 0484*  	db 0x2A,0x82,0x83,0x2A,0x2A,0x2A,0x85,0x2A,0x2A,0x2A,0x2A,0x2A,0x7C,0x16,0x16,0x16 ; row 54
       2A 2A 85 2A 
       2A 2A 2A 2A 
       7C 16 16 16 
04EA7D 82 83 2A 2A 0485*  	db 0x82,0x83,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x3B,0x2A,0x3B,0x2A,0x84,0x16,0x16 ; row 53
       2A 2A 2A 2A 
       2A 3B 2A 3B 
       2A 84 16 16 
04EA8D 2A 2A 2A 2A 0486*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x80,0x2A,0x2A,0x2A,0x2E,0x3B,0x2E,0x3B,0x2A,0x7F,0x16 ; row 52
       2A 80 2A 2A 
       2A 2E 3B 2E 
       3B 2A 7F 16 
04EA9D 2A 2A 2A 2A 0487*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x80,0x81,0x2A,0x2A,0x2A,0x2E,0x3B,0x2E,0x3B,0x7C,0x16 ; row 51
       2A 80 81 2A 
       2A 2A 2E 3B 
       2E 3B 7C 16 
04EAAD 2A 2A 2A 2A 0488*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x7D,0x7E,0x2A,0x2A,0x2A,0x2A,0x2E,0x2A,0x2A,0x2A,0x7F ; row 50
       2A 7D 7E 2A 
       2A 2A 2A 2E 
       2A 2A 2A 7F 
04EABD 2A 6D 6E 2A 0489*  	db 0x2A,0x6D,0x6E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7C ; row 49
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 7C 
04EACD 2A 5E 65 76 0490*  	db 0x2A,0x5E,0x65,0x76,0x2A,0x2A,0x2A,0x2A,0x77,0x78,0x79,0x7A,0x7B,0x2A,0x2A,0x2A ; row 48
       2A 2A 2A 2A 
       77 78 79 7A 
       7B 2A 2A 2A 
04EADD 2A 5E 54 5D 0491*  	db 0x2A,0x5E,0x54,0x5D,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x2A,0x2A,0x2A ; row 47
       6D 6E 6F 70 
       71 72 73 74 
       75 2A 2A 2A 
04EAED 2A 5E 54 5D 0492*  	db 0x2A,0x5E,0x54,0x5D,0x5E,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x2A,0x2A,0x2A ; row 46
       5E 65 66 67 
       68 69 6A 6B 
       6C 2A 2A 2A 
04EAFD 2A 5B 5C 5D 0493*  	db 0x2A,0x5B,0x5C,0x5D,0x5E,0x54,0x55,0x5F,0x60,0x61,0x62,0x63,0x64,0x2A,0x2A,0x2A ; row 45
       5E 54 55 5F 
       60 61 62 63 
       64 2A 2A 2A 
04EB0D 2A 2E 51 52 0494*  	db 0x2A,0x2E,0x51,0x52,0x53,0x54,0x55,0x56,0x2A,0x57,0x58,0x59,0x5A,0x2A,0x2A,0x2A ; row 44
       53 54 55 56 
       2A 57 58 59 
       5A 2A 2A 2A 
04EB1D 2A 2A 2E 3B 0495*  	db 0x2A,0x2A,0x2E,0x3B,0x4A,0x4B,0x4C,0x2A,0x4D,0x4E,0x4F,0x50,0x2A,0x2A,0x2A,0x2A ; row 43
       4A 4B 4C 2A 
       4D 4E 4F 50 
       2A 2A 2A 2A 
04EB2D 2A 2A 2A 2E 0496*  	db 0x2A,0x2A,0x2A,0x2E,0x3B,0x2A,0x2A,0x46,0x47,0x47,0x48,0x49,0x2A,0x2A,0x2A,0x2A ; row 42
       3B 2A 2A 46 
       47 47 48 49 
       2A 2A 2A 2A 
04EB3D 2A 2A 2A 2A 0497*  	db 0x2A,0x2A,0x2A,0x2A,0x44,0x2A,0x2A,0x45,0x36,0x36,0x37,0x38,0x2A,0x2A,0x2A,0x2A ; row 41
       44 2A 2A 45 
       36 36 37 38 
       2A 2A 2A 2A 
04EB4D 2A 2A 2A 3F 0498*  	db 0x2A,0x2A,0x2A,0x3F,0x40,0x41,0x3B,0x42,0x43,0x30,0x30,0x31,0x2A,0x2A,0x2A,0x2A ; row 40
       40 41 3B 42 
       43 30 30 31 
       2A 2A 2A 2A 
04EB5D 2A 2A 32 39 0499*  	db 0x2A,0x2A,0x32,0x39,0x3A,0x2A,0x2E,0x3B,0x3C,0x3D,0x3D,0x3D,0x3E,0x2A,0x2A,0x2A ; row 39
       3A 2A 2E 3B 
       3C 3D 3D 3D 
       3E 2A 2A 2A 
04EB6D 2A 32 33 2D 0500*  	db 0x2A,0x32,0x33,0x2D,0x2A,0x2A,0x2A,0x2E,0x34,0x35,0x36,0x36,0x37,0x38,0x2A,0x2A ; row 38
       2A 2A 2A 2E 
       34 35 36 36 
       37 38 2A 2A 
04EB7D 2A 2C 2D 2A 0501*  	db 0x2A,0x2C,0x2D,0x2A,0x2A,0x2A,0x2A,0x2A,0x2E,0x2F,0x30,0x30,0x30,0x31,0x2A,0x2A ; row 37
       2A 2A 2A 2A 
       2E 2F 30 30 
       30 31 2A 2A 
04EB8D 2A 2A 2A 2A 0502*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A ; row 36
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 2A 
04EB9D 2A 2A 2A 2A 0503*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A ; row 35
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 2A 
04EBAD 2A 2A 2A 2A 0504*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A ; row 34
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 2A 
04EBBD 2A 2A 2A 2A 0505*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A ; row 33
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 2A 
04EBCD 2A 2A 2A 2A 0506*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A ; row 32
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2A 2A 2A 
04EBDD 2A 2A 2A 2A 0507*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2B,0x27,0x28 ; row 31
       2A 2A 2A 2A 
       2A 2A 2A 2A 
       2A 2B 27 28 
04EBED 2A 2A 2A 2A 0508*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2B,0x27,0x28,0x16,0x16,0x16 ; row 30
       2A 2A 2A 2A 
       2A 2A 2B 27 
       28 16 16 16 
04EBFD 2A 2A 2A 2A 0509*  	db 0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2B,0x27,0x28,0x16,0x16,0x16,0x16,0x16,0x16 ; row 29
       2A 2A 2A 2B 
       27 28 16 16 
       16 16 16 16 
04EC0D 29 2A 2A 2A 0510*  	db 0x29,0x2A,0x2A,0x2A,0x2B,0x27,0x28,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 28
       2B 27 28 16 
       16 16 16 16 
       16 16 16 16 
04EC1D 16 26 27 28 0511*  	db 0x16,0x26,0x27,0x28,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 27
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04EC2D 16 16 16 16 0512*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x24,0x25,0x25,0x25,0x25,0x25,0x25,0x25 ; row 26
       16 16 16 16 
       24 25 25 25 
       25 25 25 25 
04EC3D 16 16 16 16 0513*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E ; row 25
       16 16 16 16 
       1D 1E 1E 1E 
       1E 1E 1E 1E 
04EC4D 16 16 16 16 0514*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x23,0x23,0x23,0x23,0x23,0x23,0x23 ; row 24
       16 16 16 16 
       1D 23 23 23 
       23 23 23 23 
04EC5D 16 16 16 16 0515*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x23,0x23,0x23,0x23,0x23,0x23,0x23 ; row 23
       16 16 16 16 
       1D 23 23 23 
       23 23 23 23 
04EC6D 16 16 16 16 0516*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x23,0x23,0x23,0x23,0x23,0x23,0x23 ; row 22
       16 16 16 16 
       1D 23 23 23 
       23 23 23 23 
04EC7D 16 16 16 16 0517*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x1F,0x20,0x21,0x1E,0x1E,0x1F,0x22 ; row 21
       16 16 16 16 
       1D 1F 20 21 
       1E 1E 1F 22 
04EC8D 16 16 16 16 0518*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1D,0x1E,0x1F,0x20,0x21,0x1E,0x1E,0x1F ; row 20
       16 16 16 16 
       1D 1E 1F 20 
       21 1E 1E 1F 
04EC9D 16 16 16 16 0519*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x1A,0x1B,0x1B,0x1B,0x1B,0x1C,0x1C,0x1C ; row 19
       16 16 16 16 
       1A 1B 1B 1B 
       1B 1C 1C 1C 
04ECAD 16 16 16 16 0520*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x18,0x19,0x19,0x19,0x19,0x19,0x19,0x19 ; row 18
       16 16 16 16 
       18 19 19 19 
       19 19 19 19 
04ECBD 16 16 16 16 0521*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 17
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ECCD 16 16 16 16 0522*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 16
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ECDD 16 16 16 16 0523*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 15
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ECED 16 16 16 16 0524*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 14
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ECFD 16 16 16 16 0525*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 13
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED0D 16 16 16 16 0526*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 12
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED1D 16 16 16 16 0527*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 11
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED2D 16 16 16 16 0528*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 10
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED3D 16 16 16 16 0529*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 9
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED4D 16 16 16 16 0530*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 8
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED5D 16 16 16 16 0531*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 7
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED6D 16 16 16 16 0532*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16 ; row 6
       16 16 16 16 
       16 16 16 16 
       16 16 16 16 
04ED7D 16 16 16 16 0533*  	db 0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x0E,0x17 ; row 5
       16 16 16 16 
       16 16 16 16 
       16 16 0E 17 
04ED8D 0C 0D 0E 0F 0534*  	db 0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x0F,0x13,0x14,0x0E,0x0E,0x15,0x10,0x08,0x01 ; row 4
       10 11 12 0F 
       13 14 0E 0E 
       15 10 08 01 
04ED9D 0B 01 08 07 0535*  	db 0x0B,0x01,0x08,0x07,0x05,0x04,0x03,0x02,0x07,0x06,0x05,0x03,0x02,0x01,0x06,0x05 ; row 3
       05 04 03 02 
       07 06 05 03 
       02 01 06 05 
04EDAD 0A 04 02 01 0536*  	db 0x0A,0x04,0x02,0x01,0x02,0x01,0x07,0x06,0x05,0x08,0x01,0x02,0x06,0x04,0x05,0x07 ; row 2
       02 01 07 06 
       05 08 01 02 
       06 04 05 07 
04EDBD 09 02 06 05 0537*  	db 0x09,0x02,0x06,0x05,0x04,0x03,0x02,0x01,0x04,0x05,0x06,0x07,0x08,0x02,0x03,0x04 ; row 1
       04 03 02 01 
       04 05 06 07 
       08 02 03 04 
04EDCD 00 01 02 03 0538*  	db 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x01,0x02,0x03,0x04,0x05,0x06,0x07 ; row 0
       04 05 06 07 
       08 01 02 03 
       04 05 06 07 
04EDDD             0054       include "player.inc"
04EDDD             0001*  ; ######## GAME STATE VARIABLES #######
04EDDD             0002*  ; THESE MUST BE IN THIS ORDER FOR game_initialize TO WORK PROPERLY
04EDDD 00 00 00    0003*  player_score: dl 0 ; integer
04EDE0             0004*  ; player current shields,binary
04EDE0             0005*  ; when < 0 player splodes
04EDE0             0006*  ; restores to player_max_shields when new ship spawns
04EDE0 10 00 00    0007*  player_shields: dl 16 ; integer
04EDE3             0008*  ; max player shields,binary
04EDE3             0009*  ; can increase with power-ups (todo)
04EDE3 10 00 00    0010*  player_max_shields: dl 16 ; integer
04EDE6             0011*  ; when reaches zero,game ends
04EDE6             0012*  ; can increase based on TODO
04EDE6 03          0013*  player_ships: db 3 ; integer
04EDE7             0014*  
04EDE7             0015*  speed_player: equ 3*256 ; 3 pixels per frame 16.8 fixed
04EDE7             0016*  
04EDE7             0017*  ; ######### PLAYER SPRITE PARAMETERS ##########
04EDE7             0018*  ; uses the same offsets from its table base as the main sprite table:
04EDE7             0019*  player_start_variables: ; label marking beginning of table
04EDE7 10          0020*  player_id:               db table_max_records
04EDE8 00          0021*  player_type:             db     0x00 ; 1 bytes currently not used
04EDE9 2B 01 00    0022*  player_base_bufferId:    dl BUF_SHIP_0L ; 3 bytes bitmap bufferId
04EDEC 00 00 00    0023*  player_move_program:     dl 0x000000 ; 3 bytes not currently used
04EDEF 00          0024*  player_collisions:       db     0x00 ; 1 bytes uses sprite_alive and sprite_just_died flags
04EDF0 00          0025*  player_dim_x:            db     0x00 ; 1 bytes sprite width in pixels
04EDF1 00          0026*  player_dim_y:            db     0x00 ; 1 bytes sprite height in pixels
04EDF2 00 00 00    0027*  player_x:                dl 0x000000 ; 3 bytes 16.8 fractional x position in pixels
04EDF5 00 00 00    0028*  player_y:                dl 0x000000 ; 3 bytes 16.8 fractional y position in pixels
04EDF8 00 00 00    0029*  player_xvel:             dl 0x000000 ; 3 bytes x-component velocity, 16.8 fixed, pixels
04EDFB 00 00 00    0030*  player_yvel:             dl 0x000000 ; 3 bytes y-component velocity, 16.8 fixed, pixels
04EDFE 00 00 00    0031*  player_vel:              dl 0x000000 ; 3 bytes velocity px/frame (16.8 fixed)
04EE01 00 00 00    0032*  player_heading:          dl 0x000000 ; 3 bytes sprite movement direction deg256 16.8 fixed
04EE04 00 00 00    0033*  player_orientation:      dl 0x000000 ; 3 bytes not currently used
04EE07 00          0034*  player_animation:        db     0x00 ; 1 bytes not currently used
04EE08 00          0035*  player_animation_timer:  db     0x00 ; 1 bytes not currently used
04EE09 00          0036*  player_move_timer:       db     0x00 ; 1 bytes not currently used
04EE0A 00          0037*  player_move_step:        db     0x00 ; 1 bytes not currently used
04EE0B 00          0038*  player_points:           db     0x00 ; 1 bytes not currently used
04EE0C 00          0039*  player_shield_damage:    db     0x00 ; 1 bytes not currently used
04EE0D             0040*  player_end_variables: ; for when we want to traverse this table in reverse
04EE0D             0041*  
04EE0D             0042*  ; set initial player position
04EE0D             0043*  ; inputs: none,everything is hardcoded
04EE0D             0044*  ; outputs: player_x/y set to bottom-left corner of screen
04EE0D             0045*  ; destroys: a
04EE0D             0046*  player_init:
04EE0D 3A E7 ED 04 0047*  	ld a,(player_id)
04EE11 CD 72 19 04 0048*  	call vdu_sprite_select
04EE15 CD 85 19 04 0049*      call vdu_sprite_clear_frames
04EE19 21 2B 01 00 0050*      ld hl,BUF_SHIP_0L
04EE1D CD C7 1A 04 0051*      call vdu_sprite_add_buff
04EE21 21 2C 01 00 0052*      ld hl,BUF_SHIP_1C
04EE25 CD C7 1A 04 0053*      call vdu_sprite_add_buff
04EE29 21 2D 01 00 0054*      ld hl,BUF_SHIP_2R
04EE2D CD C7 1A 04 0055*      call vdu_sprite_add_buff
04EE31 01 00 00 00 0056*      ld bc,0
04EE35 ED 43 F2 ED 0057*      ld (player_x),bc
       04          
04EE3A 11 00 6F 01 0058*      ld de,sprite_bottom*256 ; max sprite y-coordinate
04EE3E ED 53 F5 ED 0059*      ld (player_y),de
       04          
04EE43 CD 3E 1A 04 0060*      call vdu_sprite_move_abs168
04EE47 CD E8 19 04 0061*      call vdu_sprite_show
04EE4B 21 C9 F3 04 0062*      ld hl,player_alive
04EE4F 22 BB F3 04 0063*      ld (player_state),hl
04EE53 21 EF ED 04 0064*      ld hl,player_collisions
04EE57 CB F6       0065*      set sprite_alive,(hl)
04EE59 C9          0066*      ret
04EE5A             0067*  
04EE5A             0068*  ; process player keyboard input, set player bitmap
04EE5A             0069*  ; velocities and draw player bitmap at updated coordinates
04EE5A             0070*  ; Inputs: player_x/y set at desired position
04EE5A             0071*  ; Returns: player bitmap drawn at updated position
04EE5A             0072*  ; Destroys: probably everything except maybe iy
04EE5A             0073*  ; NOTE: in mode 9 we draw the ship as a sprite, not a bitmap
04EE5A             0074*  ; TODO: requires sprite implementation
04EE5A             0075*  player_input:
04EE5A             0076*  ; ; did we die last frame?
04EE5A             0077*  ;     ld a,(player_collisions)
04EE5A             0078*  ;     and %00000010 ; zero flag will be set if not dead
04EE5A             0079*  ;     jr z,player_not_dead
04EE5A             0080*  ; ; yes we died
04EE5A             0081*  ;     call kill_player
04EE5A             0082*  ;     ret ; done
04EE5A             0083*  player_not_dead: ; yay we didn't die
04EE5A             0084*  ; reset player component velocities to zero as the default
04EE5A 21 00 00 00 0085*  	ld hl,0
04EE5E 22 F8 ED 04 0086*  	ld (player_xvel),hl
04EE62 22 FB ED 04 0087*  	ld (player_yvel),hl
04EE66             0088*  ; make ship the active sprite
04EE66 3A E7 ED 04 0089*      ld a,(player_id)
04EE6A CD 72 19 04 0090*      call vdu_sprite_select
04EE6E             0091*  ; check for keypresses and branch accordingly
04EE6E             0092*  ; for how this works,see: https://github.com/breakintoprogram/agon-docs/wiki/MOS-API-%E2%80%90-Virtual-Keyboard
04EE6E             0093*      MOSCALL	mos_getkbmap ;ix = pointer to MOS virtual keys table
04EE6E 3E 1E       0001*M 			LD	A, function
04EE70 5B CF       0002*M 			RST.LIL	08h
04EE72             0094*  ; we test all four arrow keys and add/subract velocities accordingly
04EE72             0095*  ; this handles the case where two opposing movement keys
04EE72             0096*  ; are down simultaneously (velocities will net to zero)
04EE72             0097*  ; and allows diagonal movement when a vertical and horizontal key are down
04EE72             0098*  ; it also allows movement and action keys to be detected simultaneously
04EE72             0099*  ; so we can walk and chew gum at the same time
04EE72 3E 01       0100*      ld a,1 ; set ship's default animation to center
04EE74             0101*          ; if left and right are both down a will net to
04EE74             0102*  
04EE74             0103*  ; 99 Space: fire main weapon
04EE74 DD CB 0C 56 0104*      bit 2,(ix+12)
04EE78 F5          0105*      push af ; save flags for after player movement processed
04EE79             0106*  ; 26 Left: move player left
04EE79 DD CB 03 4E 0107*      bit 1,(ix+3)
04EE7D CA 8F EE 04 0108*      jp z,@F
04EE81 2A F8 ED 04 0109*      ld hl,(player_xvel)
04EE85 01 00 FD FF 0110*      ld bc,-speed_player
04EE89 09          0111*      add hl,bc
04EE8A 22 F8 ED 04 0112*      ld (player_xvel),hl
04EE8E 3D          0113*      dec a ; set ship's animation to left
04EE8F             0114*  @@:
04EE8F             0115*  ; 122 Right: move player right
04EE8F DD CB 0F 4E 0116*      bit 1,(ix+15)
04EE93 CA A5 EE 04 0117*  	jp z,@F
04EE97 2A F8 ED 04 0118*      ld hl,(player_xvel)
04EE9B 01 00 03 00 0119*      ld bc,speed_player
04EE9F 09          0120*      add hl,bc
04EEA0 22 F8 ED 04 0121*      ld (player_xvel),hl
04EEA4 3C          0122*      inc a ; set ship's animation to right
04EEA5             0123*  @@:
04EEA5             0124*  ; 58 Up: move player up
04EEA5 DD CB 07 4E 0125*      bit 1,(ix+7)
04EEA9 CA BA EE 04 0126*  	jp z,@F
04EEAD 2A FB ED 04 0127*      ld hl,(player_yvel)
04EEB1 01 00 FD FF 0128*      ld bc,-speed_player
04EEB5 09          0129*      add hl,bc
04EEB6 22 FB ED 04 0130*      ld (player_yvel),hl
04EEBA             0131*  @@:
04EEBA             0132*  ; 42 Down: move player down
04EEBA DD CB 05 4E 0133*      bit 1,(ix+5)
04EEBE CA CF EE 04 0134*  	jp z,@F
04EEC2 2A FB ED 04 0135*      ld hl,(player_yvel)
04EEC6 01 00 03 00 0136*      ld bc,speed_player
04EECA 09          0137*      add hl,bc
04EECB 22 FB ED 04 0138*      ld (player_yvel),hl
04EECF             0139*  @@:
04EECF             0140*  ; a should land here loaded with the correct frame
04EECF CD D5 19 04 0141*      call vdu_sprite_select_frame
04EED3             0142*  ; draw player at updated position
04EED3 FD 21 E7 ED 0143*      ld iy,player_start_variables
       04          
04EED8 FD 22 7A F1 0144*      ld (table_pointer),iy
       04          
04EEDD CD 2E F2 04 0145*      call move_sprite
04EEE1 ED 4B F2 ED 0146*      ld bc,(player_x)
       04          
04EEE6 ED 5B F5 ED 0147*      ld de,(player_y)
       04          
04EEEB CD 3E 1A 04 0148*  	call vdu_sprite_move_abs168
04EEEF             0149*  ; process player laser fire
04EEEF F1          0150*      pop af ; restore flags from spacebar check
04EEF0 C2 4E CD 04 0151*      jp nz,fire_laser ; will return to caller from there
04EEF4 C9          0152*      ret
04EEF5             0153*  ; end player_input
04EEF5             0154*  
04EEF5             0155*  ; ###################################################################
04EEF5             0156*  ; TODO: the below is all stuff from the original code we need to port
04EEF5             0157*  ; ###################################################################
04EEF5             0158*  
04EEF5             0159*  kill_player:
04EEF5             0160*  ; ; set player status to dead
04EEF5             0161*  ;     xor a; sets all player flags to zero
04EEF5             0162*  ;     ld (player_collisions),a
04EEF5             0163*  ; ; deduct a ship from the inventory
04EEF5             0164*  ;     ld a,(player_ships)
04EEF5             0165*  ;     dec a
04EEF5             0166*  ;     ld (player_ships),a
04EEF5             0167*  ; ; are we out of ships?
04EEF5             0168*  ;     jp z,game_over
04EEF5             0169*  ; ; wait a few ticks
04EEF5             0170*  ;     ld a,32 ; 32-cycle timer ~1/2 second at 60fps
04EEF5             0171*  ;     ld (player_move_timer),a
04EEF5             0172*  ; kill_player_loop:
04EEF5             0173*  ;     call vdu_vblank
04EEF5             0174*  ;     ld a,(player_move_timer)
04EEF5             0175*  ;     dec a
04EEF5             0176*  ;     ld (player_move_timer),a
04EEF5             0177*  ;     jr nz,kill_player_loop
04EEF5             0178*  ;     call player_init ; player respawn if timer zero
04EEF5 C9          0179*      ret ; and out
04EEF6             0180*  
04EEF6             0181*  ; draws the player's shields level
04EEF6             0182*  ; draw_shields:
04EEF6             0183*  ; TODO: Agonize this routine
04EEF6             0184*  ; ; prep the loop to draw the bars
04EEF6             0185*  ;     ld a,(player_shields) ; snag shields
04EEF6             0186*  ;     and a
04EEF6             0187*  ;     ret z ; don't draw if zero shields
04EEF6             0188*  ; ; set loop counter and drawing position
04EEF6             0189*  ;     ld b,a ; loop counter
04EEF6             0190*  ;     ld hl,#5300+48+12
04EEF6             0191*  ; ; set color based on bars remaining
04EEF6             0192*  ;     ld c,103 ; bright green 28fe0a
04EEF6             0193*  ;     cp 9
04EEF6             0194*  ;     jp p,draw_shields_loop
04EEF6             0195*  ;     ld c,74 ; bright yellow eafe5b
04EEF6             0196*  ;     cp 3
04EEF6             0197*  ;     jp p,draw_shields_loop
04EEF6             0198*  ;     ld c,28 ; bright red fe0a0a
04EEF6             0199*  ; draw_shields_loop:
04EEF6             0200*  ;     push bc ; yup,outta
04EEF6             0201*  ;     push hl ; registers again
04EEF6             0202*  ;     ; ld a,#A8 ; ▀,168
04EEF6             0203*  ;     ld a,10 ; ▀,168 ; we renumber because we don't use the full charset
04EEF6             0204*  ;     ; call draw_char
04EEF6             0205*  ;     call draw_num ; we nuked draw_char for the time being
04EEF6             0206*  ;     pop hl
04EEF6             0207*  ;     ld a,8
04EEF6             0208*  ;     add a,l
04EEF6             0209*  ;     ld l,a
04EEF6             0210*  ;     pop bc
04EEF6             0211*  ;     djnz draw_shields_loop
04EEF6             0212*      ; ret
04EEF6             0213*  
04EEF6             0214*  score_x: equ 0
04EEF6             0215*  score_y: equ 3
04EEF6             0216*  ; prints the player's score
04EEF6             0217*  print_score:
04EEF6             0218*  ; DEBUG
04EEF6 0E 00       0219*      ld c,score_x
04EEF8 06 02       0220*      ld b,score_y-1
04EEFA CD 74 14 04 0221*      call vdu_move_cursor
04EEFE CD 70 00 04 0222*      call printInline
04EF02 53 63 6F 72 0223*      asciz "Score:"
       65 3A 00    
04EF09             0224*  ; END DEBUG
04EF09 0E 00       0225*      ld c,score_x
04EF0B 06 03       0226*      ld b,score_y
04EF0D CD 74 14 04 0227*      call vdu_move_cursor
04EF11 2A DD ED 04 0228*      ld hl,(player_score)
04EF15 CD 76 01 04 0229*      call printDec
04EF19 C9          0230*      ret
04EF1A             0231*  
04EF1A             0232*  ; draw_lives:
04EF1A             0233*  ;     ld hl,player_small ; make small yellow ship the active sprite
04EF1A             0234*  ;     ld (sprite_base_bufferId),hl
04EF1A             0235*  ;     ; ld a,#80 ; northern orientation
04EF1A             0236*  ;     ; ld (sprite_orientation),a
04EF1A             0237*  ;     ld hl,0 ; north
04EF1A             0238*  ;     ld (sprite_heading),hl
04EF1A             0239*  ;     xor a
04EF1A             0240*  ;     ld (sprite_animation),a
04EF1A             0241*  ;     ld a,#56 ; top of visible screen
04EF1A             0242*  ;     ld (sprite_y+1),a
04EF1A             0243*  ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
04EF1A             0244*  ;     ld a,(player_ships)
04EF1A             0245*  ;     dec a ; we draw one fewer ships than lives
04EF1A             0246*  ;     ret z ; nothing to draw here, move along
04EF1A             0247*  ;     ld b,a ; loop counter
04EF1A             0248*  ;     ld a,256-16 ; initial x position
04EF1A             0249*  ; draw_lives_loop:
04EF1A             0250*  ;     ld (sprite_x+1),a
04EF1A             0251*  ;     push af
04EF1A             0252*  ;     push bc
04EF1A             0253*  ;     call vdu_bmp_draw ; convert to vdu_bmp_plot
04EF1A             0254*  ;     pop bc
04EF1A             0255*  ;     pop af
04EF1A             0256*  ;     sub 10
04EF1A             0257*  ;     djnz draw_lives_loop
04EF1A             0258*  ;     ret
04EF1A             0055       include "sprites.inc"
04EF1A             0001*  ; ###### SPRITE TABLE FIELD INDICES ######
04EF1A             0002*  table_bytes_per_record: equ 38 ; 38 bytes per sprite record
04EF1A             0003*  sprite_id:              equ 00 ; 1 bytes unique spriteId, zero-based
04EF1A             0004*  sprite_type:            equ 01 ; 1 bytes type of sprite as defined in enemies.inc
04EF1A             0005*  sprite_base_bufferId:   equ 02 ; 3 bytes bitmap bufferId
04EF1A             0006*  sprite_move_program:    equ 05 ; 3 bytes address of sprite's behavior subroutine
04EF1A             0007*  sprite_collisions:      equ 08 ; 1 bytes see collisions.inc constants for bit definitions
04EF1A             0008*  sprite_dim_x:           equ 09 ; 1 bytes sprite width in pixels
04EF1A             0009*  sprite_dim_y:           equ 10 ; 1 bytes sprite height in pixels
04EF1A             0010*  sprite_x:               equ 11 ; 3 bytes 16.8 fractional x position in pixels
04EF1A             0011*  sprite_y:               equ 14 ; 3 bytes 16.8 fractional y position in pixels
04EF1A             0012*  sprite_xvel:            equ 17 ; 3 bytes x-component velocity, 16.8 fixed, pixels
04EF1A             0013*  sprite_yvel:            equ 20 ; 3 bytes y-component velocity, 16.8 fixed, pixels
04EF1A             0014*  sprite_vel:             equ 23 ; 3 bytes velocity px/frame (16.8 fixed)
04EF1A             0015*  sprite_heading:         equ 26 ; 3 bytes sprite movement direction deg256 16.8 fixed
04EF1A             0016*  sprite_orientation:     equ 29 ; 3 bytes orientation bits
04EF1A             0017*  sprite_animation:       equ 32 ; 1 bytes current animation index, zero-based
04EF1A             0018*  sprite_animation_timer: equ 33 ; 1 bytes when hits zero, draw next animation
04EF1A             0019*  sprite_move_timer:      equ 34 ; 1 bytes when zero, go to next move program, or step
04EF1A             0020*  sprite_move_step:       equ 35 ; 1 bytes stage in a move program sequence, varies
04EF1A             0021*  sprite_points:          equ 36 ; 1 bytes points awarded for killing this sprite type
04EF1A             0022*  sprite_shield_damage:   equ 37 ; 1 bytes shield points deducted for collision
04EF1A             0023*  
04EF1A             0024*  ; ###### SPRITE TABLE VARIABLES ######
04EF1A             0025*  ; maximum number of sprites
04EF1A             0026*  table_max_records: equ 16 ; it can handle more but this is pushing it
04EF1A             0027*  table_total_bytes: equ table_max_records*table_bytes_per_record
04EF1A             0028*  
04EF1A             0029*  ; #### THIS IS THE SPACE ALLOCATED TO THE SPRITE TABLE ####
04EF1A             0030*  table_base:
04EF1A 00 00 00 00 0031*  sprite_start_variables:  blkb table_total_bytes, 0 ; fill with zeroes
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
04F17A             0032*  sprite_end_variables: ; in case we want to traverse the table in reverse
04F17A             0033*  
04F17A             0034*  ; pointer to top address of current record, initialized to table_base
04F17A 1A EF 04    0035*  table_pointer: dl table_base
04F17D             0036*  ; how many active sprites
04F17D 00          0037*  table_active_sprites: db 0x00
04F17E             0038*  ; flag indicating collision with screen edge
04F17E             0039*  ; uses orientation codes to specify which edge(s)
04F17E 00          0040*  sprite_screen_edge: db #00
04F17F             0041*  ; next sprite id to use
04F17F 00          0042*  sprite_next_id: db 0
04F180             0043*  
04F180             0044*  ; origin_top: equ 48
04F180             0045*  origin_top: equ 0 ; DEBUG
04F180             0046*  origin_left: equ 128
04F180             0047*  field_top: equ 0
04F180             0048*  field_bottom: equ 383-origin_top
04F180             0049*  field_left: equ 0
04F180             0050*  field_right: equ 255
04F180             0051*  sprite_top: equ 0
04F180             0052*  sprite_bottom: equ field_bottom-16
04F180             0053*  sprite_left: equ field_left
04F180             0054*  sprite_right: equ field_right-16
04F180             0055*  
04F180             0056*  ; ######### COLLISION SPRITE PARAMETERS ##########
04F180             0057*  ; integer coordinates are all that are needed for collision calculations
04F180 00          0058*  collision_x: db 0x00
04F181 00          0059*  collision_y: db 0x00
04F182 00          0060*  collision_dim_x: db 0x00
04F183 00          0061*  collision_dim_y: db 0x00
04F184             0062*  
04F184             0063*  ; scratch variables
04F184 00          0064*  x: db 0x00 ; 8-bit signed integer
04F185 00          0065*  y: db 0x00 ; 8-bit signed integer
04F186 00 00 00    0066*  x0: dl 0x000000 ; 16.8 signed fixed place
04F189 00 00 00    0067*  y0: dl 0x000000 ; 16.8 signed fixed place
04F18C 00 00 00    0068*  incx1: dl 0x000000 ; 16.8 signed fixed place
04F18F 00 00 00    0069*  incy1: dl 0x000000 ; 16.8 signed fixed place
04F192 00 00 00    0070*  incx2: dl 0x000000 ; 16.8 signed fixed place
04F195 00 00 00    0071*  incy2: dl 0x000000 ; 16.8 signed fixed place
04F198             0072*  
04F198             0073*  ; sprite_heading: dl 0x000000 ; signed fixed 16.8
04F198 00 00 00    0074*  radius: dl 0x000000 ; signed fixed 16.8 (but should always be positive)
04F19B 00 00 00    0075*  sin_sprite_heading: dl 0x000000 ; signed fixed 16.8
04F19E 00 00 00    0076*  cos_sprite_heading: dl 0x000000 ; signed fixed 16.8
04F1A1             0077*  
04F1A1             0078*  ; gets the next available sprite id
04F1A1             0079*  ; inputs; none
04F1A1             0080*  ; returns: if new sprite available, a = sprite id,
04F1A1             0081*  ;           ix pointing to new sprite vars, carry set
04F1A1             0082*  ;      otherwise, a = 0, carry flag reset, ix pointing to highest sprite vars
04F1A1             0083*  ; destroys: a,b,hl,ix
04F1A1             0084*  ; affects: bumps table_active_sprites by one
04F1A1             0085*  table_get_next_id:
04F1A1 DD 21 1A EF 0086*      ld ix,table_base
       04          
04F1A6 11 26 00 00 0087*      ld de,table_bytes_per_record
04F1AA 06 10       0088*      ld b,table_max_records
04F1AC             0089*  @loop:
04F1AC DD 7E 01    0090*      ld a,(ix+sprite_type)
04F1AF A7          0091*      and a
04F1B0 28 06       0092*      jr z,@found
04F1B2 DD 19       0093*      add ix,de
04F1B4 10 F6       0094*      djnz @loop
04F1B6             0095*  @notfound:
04F1B6 AF          0096*      xor a ; a = 0 and reset carry flag indicating that we didn't find a free sprite
04F1B7 C9          0097*      ret
04F1B8             0098*  @found:
04F1B8             0099*  ; bump number of active sprites
04F1B8 21 7D F1 04 0100*      ld hl,table_active_sprites
04F1BC 34          0101*      inc (hl)
04F1BD             0102*  ; return sprite id
04F1BD 3E 10       0103*      ld a,table_max_records
04F1BF 90          0104*      sub b
04F1C0 32 7F F1 04 0105*      ld (sprite_next_id),a
04F1C4 37          0106*      scf ; sets carry flag indicating we found a free sprite
04F1C5 C9          0107*      ret ; done
04F1C6             0108*  ; end table_get_next_id
04F1C6             0109*  
04F1C6             0110*  ; deactivate the sprite with the given id
04F1C6             0111*  ; inputs: iy set to sprite record, vdu_sprite_select called
04F1C6             0112*  ; outputs: nothing
04F1C6             0113*  ; destroys: a,hl
04F1C6             0114*  ; affects: decrements table_active_sprites by one
04F1C6             0115*  table_deactivate_sprite:
04F1C6 CD F6 19 04 0116*      call vdu_sprite_hide
04F1CA AF          0117*      xor a
04F1CB FD 77 01    0118*      ld (iy+sprite_type),a
04F1CE 21 7D F1 04 0119*      ld hl,table_active_sprites
04F1D2 35          0120*      dec (hl)
04F1D3 C9          0121*      ret
04F1D4             0122*  ; end table_deactivate_sprite
04F1D4             0123*  
04F1D4             0124*  sprites_init:
04F1D4             0125*  ; initialize sprites
04F1D4 CD A6 1A 04 0126*  	call vdu_sprite_reset ; out of an abundance of caution (copilot: and paranoia)
04F1D8 AF          0127*  	xor a
04F1D9             0128*  @sprite_loop:
04F1D9 F5          0129*  	push af
04F1DA CD 72 19 04 0130*  	call vdu_sprite_select
04F1DE 21 00 01 00 0131*  	ld hl,BUF_CRATER ; can be anything, but why not blank?
04F1E2 CD C7 1A 04 0132*  	call vdu_sprite_add_buff
04F1E6 F1          0133*  	pop af
04F1E7 3C          0134*  	inc a
04F1E8 FE 12       0135*  	cp table_max_records+2 ; tack on sprites for player and laser
04F1EA 20 ED       0136*  	jr nz,@sprite_loop
04F1EC 3C          0137*  	inc a
04F1ED CD A6 19 04 0138*  	call vdu_sprite_activate
04F1F1             0139*  
04F1F1             0140*  ; define player sprite
04F1F1 3A E7 ED 04 0141*  	ld a,(player_id)
04F1F5 CD 72 19 04 0142*  	call vdu_sprite_select
04F1F9 CD 85 19 04 0143*  	call vdu_sprite_clear_frames
04F1FD 21 2B 01 00 0144*  	ld hl,BUF_SHIP_0L
04F201 01 03 00 00 0145*  	ld bc,3 ; three bitmaps for player ship
04F205             0146*  @sprite_player_loop:
04F205 C5          0147*  	push bc
04F206 E5          0148*  	push hl
04F207 CD C7 1A 04 0149*  	call vdu_sprite_add_buff
04F20B E1          0150*  	pop hl
04F20C 23          0151*  	inc hl
04F20D C1          0152*  	pop bc
04F20E 10 F5       0153*  	djnz @sprite_player_loop
04F210             0154*  
04F210             0155*  ; define laser sprite
04F210 3A E5 CC 04 0156*  	ld a,(laser_id)
04F214 CD 72 19 04 0157*  	call vdu_sprite_select
04F218 CD 85 19 04 0158*  	call vdu_sprite_clear_frames
04F21C 21 08 01 00 0159*  	ld hl,BUF_LASER_A
04F220 06 02       0160*  	ld b,2 ; two bitmaps for laser
04F222             0161*  @sprite_laser_loop:
04F222 C5          0162*  	push bc
04F223 E5          0163*  	push hl
04F224 CD C7 1A 04 0164*  	call vdu_sprite_add_buff
04F228 E1          0165*  	pop hl
04F229 23          0166*  	inc hl
04F22A C1          0167*  	pop bc
04F22B 10 F5       0168*  	djnz @sprite_laser_loop
04F22D             0169*  ; all done
04F22D C9          0170*      ret
04F22E             0171*  ; end sprites_init
04F22E             0172*  
04F22E             0173*  ; compute a sprite's new position based on its component x,y velocities
04F22E             0174*  ; with screen boundary checking and update its sprite table record accordingly
04F22E             0175*  ; inputs: table_pointer set to sprite record
04F22E             0176*  ; returns: updated x, y positions and edge collision flags in sprite table record
04F22E             0177*  ; destroys: everything
04F22E             0178*  ; note: actual rendering of sprite must be handled by caller
04F22E             0179*  move_sprite:
04F22E FD 2A 7A F1 0180*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
04F233             0181*  ; x-axis movement
04F233 FD 27 0B    0182*      ld hl,(iy+sprite_x)
04F236 FD 17 11    0183*      ld de,(iy+sprite_xvel)
04F239 19          0184*      add hl,de
04F23A FD 2F 0B    0185*      ld (iy+sprite_x),hl
04F23D             0186*  ; y-axis movement
04F23D FD 27 0E    0187*      ld hl,(iy+sprite_y)
04F240 FD 17 14    0188*      ld de,(iy+sprite_yvel)
04F243 19          0189*      add hl,de
04F244 FD 2F 0E    0190*      ld (iy+sprite_y),hl
04F247             0191*  ; detect screen edge collisions
04F247 AF          0192*      xor a ; reset screen edge collision flag and clear carry
04F248 32 7E F1 04 0193*      ld (sprite_screen_edge),a
04F24C             0194*  ; y-axis first since we already have it in hl
04F24C 11 00 00 00 0195*      ld de,-sprite_top*256
04F250 ED 5A       0196*      adc hl,de
04F252 FA 7C F2 04 0197*      jp m,@top
04F256 ED 52       0198*      sbc hl,de ; hl back to original value
04F258 11 00 91 FE 0199*      ld de,-sprite_bottom*256
04F25C ED 5A       0200*      adc hl,de
04F25E F2 86 F2 04 0201*      jp p,@bottom
04F262             0202*  @xaxis:
04F262 FD 27 0B    0203*      ld hl,(iy+sprite_x)
04F265 11 00 00 00 0204*      ld de,-sprite_left*256
04F269 ED 5A       0205*      adc hl,de
04F26B FA A1 F2 04 0206*      jp m,@left
04F26F ED 52       0207*      sbc hl,de ; hl back to original value
04F271 11 00 11 FF 0208*      ld de,-sprite_right*256
04F275 ED 5A       0209*      adc hl,de
04F277 F2 AF F2 04 0210*      jp p,@right
04F27B             0211*  ; no edge collisions so go home
04F27B C9          0212*      ret
04F27C             0213*  @top:
04F27C 3E 08       0214*      ld a,collide_top
04F27E 21 00 00 00 0215*      ld hl,sprite_top*256
04F282 C3 8C F2 04 0216*      jp @collide_y
04F286             0217*  @bottom:
04F286 3E 04       0218*      ld a,collide_bottom
04F288 21 00 6F 01 0219*      ld hl,sprite_bottom*256
04F28C             0220*  @collide_y:
04F28C 32 7E F1 04 0221*      ld (sprite_screen_edge),a
04F290 FD 2F 0E    0222*      ld (iy+sprite_y),hl
04F293             0223*  ; reverse y-axis velocity
04F293 FD 27 14    0224*      ld hl,(iy+sprite_yvel)
04F296 CD A4 06 04 0225*      call neg_hlu
04F29A FD 2F 14    0226*      ld (iy+sprite_yvel),hl
04F29D             0227*  ; go check for x-axis collisions
04F29D C3 62 F2 04 0228*      jp @xaxis
04F2A1             0229*  @left:
04F2A1 3A 7E F1 04 0230*      ld a,(sprite_screen_edge)
04F2A5 F6 02       0231*      or a,collide_left
04F2A7 21 00 00 00 0232*      ld hl,sprite_left*256
04F2AB C3 B9 F2 04 0233*      jp @collide_x
04F2AF             0234*  @right:
04F2AF 3A 7E F1 04 0235*      ld a,(sprite_screen_edge)
04F2B3 F6 01       0236*      or a,collide_right
04F2B5 21 00 EF 00 0237*      ld hl,sprite_right*256
04F2B9             0238*  @collide_x:
04F2B9 32 7E F1 04 0239*      ld (sprite_screen_edge),a
04F2BD FD 2F 0B    0240*      ld (iy+sprite_x),hl
04F2C0             0241*  ; reverse x-axis velocity
04F2C0 FD 27 11    0242*      ld hl,(iy+sprite_xvel)
04F2C3 CD A4 06 04 0243*      call neg_hlu
04F2C7 FD 2F 11    0244*      ld (iy+sprite_xvel),hl
04F2CA             0245*  ; final collision flag to a and return
04F2CA 3A 7E F1 04 0246*      ld a,(sprite_screen_edge)
04F2CE C9          0247*      ret
04F2CF             0248*  ; end move_sprite
04F2CF             0249*  
04F2CF             0250*  sprite_compute_velocities:
04F2CF FD 2A 7A F1 0251*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
04F2D4 FD 17 17    0252*      ld de,(iy+sprite_vel)
04F2D7 CD 52 09 04 0253*      call polar_to_cartesian
04F2DB FD 2A 7A F1 0254*      ld iy,(table_pointer) ; TODO: see if we can get IY to land here with the proper value
       04          
04F2E0 FD 0F 11    0255*      ld (iy+sprite_xvel),bc ; save x-velocity component
04F2E3 FD 1F 14    0256*      ld (iy+sprite_yvel),de ; save y-velocity component
04F2E6 C9          0257*      ret
04F2E7             0258*  ; end sprite_compute_velocities
04F2E7             0056       include "state.inc"
04F2E7             0001*  ; Game state variables
04F2E7 F5 F2 04    0002*  game_state:  dl game_main_menu
04F2EA             0003*  
04F2EA             0004*  do_game:
04F2EA 2A E7 F2 04 0005*      ld hl,(game_state)   ; Load the current game state
04F2EE             0006*      callHL                ; Call the corresponding state handler
04F2EE 01 F4 F2 04 0001*M     ld bc,@F ; Address of first instruction after the jump
04F2F2 C5          0002*M     push bc ; which constitutes the return address
04F2F3 E9          0003*M     jp (hl) ; Jump to the address in HL
04F2F4             0004*M @@:
04F2F4 C9          0007*      ret
04F2F5             0008*  
04F2F5             0009*  ; ========================
04F2F5             0010*  ; Main Game States
04F2F5             0011*  ; ========================
04F2F5             0012*  
04F2F5             0013*  game_main_menu:
04F2F5             0014*      ; Handle main menu options
04F2F5             0015*      ; Example: Check input for "Start Game"
04F2F5 CD 2B F4 04 0016*      call check_input_menu
04F2F9 C2 FE F2 04 0017*      jp nz, game_initialize ; Start game on selection
04F2FD C9          0018*      ret
04F2FE             0019*  
04F2FE             0020*  game_initialize:
04F2FE             0021*  ; reset the sprite table
04F2FE AF          0022*      xor a
04F2FF 32 7D F1 04 0023*      ld (table_active_sprites),a
04F303 21 1A EF 04 0024*      ld hl,table_base
04F307 22 7A F1 04 0025*      ld (table_pointer),hl
04F30B             0026*  ; initialize sprites
04F30B CD D4 F1 04 0027*      call sprites_init
04F30F             0028*  ; initialize the first level
04F30F             0029*      ; ld ix,tiles_dg_levels
04F30F DD 21 B5 CD 0030*      ld ix,tiles_xevious_levels
       04          
04F314 CD 4D F4 04 0031*      call init_tileset
04F318 AF          0032*      xor a
04F319 32 3F F4 04 0033*      ld (cur_level),a
04F31D CD 5F F4 04 0034*      call init_level
04F321             0035*  ; initialize player
04F321 21 00 00 00 0036*      ld hl,0
04F325 22 DD ED 04 0037*      ld (player_score),hl
04F329 2A E3 ED 04 0038*      ld hl,(player_max_shields)
04F32D 22 E0 ED 04 0039*      ld (player_shields),hl
04F331 3E 03       0040*      ld a,3
04F333 32 E6 ED 04 0041*      ld (player_ships),a
04F337 CD 0D EE 04 0042*      call player_init
04F33B             0043*  ; TODO: TEMPORARY UNTIL MAP LOGIC IMPLEMENTED
04F33B 21 E5 F3 04 0044*      ld hl,enemies_dead
04F33F 22 E2 F3 04 0045*      ld (enemies_state),hl
04F343             0046*  ; END TODO
04F343             0047*  ; set the game state to playing
04F343 21 4D F3 04 0048*      ld hl,game_playing
04F347 22 E7 F2 04 0049*      ld (game_state), hl
04F34B C9          0050*      ret
04F34C             0051*  ; done initializing
04F34C C9          0052*      ret
04F34D             0053*  
04F34D             0054*  game_playing:
04F34D             0055*  ; Main gameplay loop
04F34D CD B8 F4 04 0056*      call tiles_plot
04F351 CD BE F3 04 0057*      call do_player
04F355 CD D7 F3 04 0058*      call do_enemies
04F359             0059*  ; update UI: TODO make this a standalone function
04F359 CD F6 EE 04 0060*      call print_score
04F35D C9          0061*      ret
04F35E             0062*  
04F35E             0063*  game_paused:
04F35E             0064*      ; Pause menu logic
04F35E CD 2E F4 04 0065*      call check_input_pause
04F362 C2 4D F3 04 0066*      jp nz, game_playing ; Resume game
04F366 CA F5 F2 04 0067*      jp z, game_main_menu ; Exit to main menu
04F36A C9          0068*      ret
04F36B             0069*  
04F36B             0070*  game_level_transition:
04F36B             0071*      ; Handle level transitions
04F36B CD 2F F4 04 0072*      call load_next_level
04F36F 21 4D F3 04 0073*      ld hl, game_playing
04F373 22 E7 F2 04 0074*      ld (game_state), hl
04F377 C9          0075*      ret
04F378             0076*  
04F378             0077*  game_over:
04F378             0078*      ; Display game over screen
04F378 CD 30 F4 04 0079*      call display_game_over
04F37C C2 F5 F2 04 0080*      jp nz, game_main_menu ; Return to main menu on input
04F380 C9          0081*      ret
04F381             0082*  
04F381             0083*  game_victory:
04F381             0084*      ; Display victory screen
04F381 CD 31 F4 04 0085*      call display_victory
04F385 C2 F5 F2 04 0086*      jp nz, game_main_menu ; Return to main menu on input
04F389 C9          0087*      ret
04F38A             0088*  
04F38A             0089*  ; ========================
04F38A             0090*  ; Supporting States
04F38A             0091*  ; ========================
04F38A             0092*  
04F38A             0093*  game_loading:
04F38A             0094*      ; Show loading screen while preparing assets
04F38A CD 32 F4 04 0095*      call load_resources
04F38E 21 FE F2 04 0096*      ld hl, game_initialize
04F392 22 E7 F2 04 0097*      ld (game_state), hl
04F396 C9          0098*      ret
04F397             0099*  
04F397             0100*  game_cutscene:
04F397             0101*      ; Play a non-interactive cutscene
04F397 CD 33 F4 04 0102*      call play_cutscene
04F39B C2 4D F3 04 0103*      jp nz, game_playing ; Return to gameplay after cutscene
04F39F C9          0104*      ret
04F3A0             0105*  
04F3A0             0106*  game_inventory:
04F3A0             0107*      ; Open inventory or shop
04F3A0 CD 34 F4 04 0108*      call display_inventory
04F3A4 C2 4D F3 04 0109*      jp nz, game_playing ; Return to gameplay after inventory close
04F3A8 C9          0110*      ret
04F3A9             0111*  
04F3A9             0112*  game_map:
04F3A9             0113*      ; Display map or quest
04F3A9 CD 35 F4 04 0114*      call display_map
04F3AD C2 4D F3 04 0115*      jp nz, game_playing ; Return to gameplay after map close
04F3B1 C9          0116*      ret
04F3B2             0117*  
04F3B2             0118*  game_exit:
04F3B2             0119*      ; Handle exit logic
04F3B2 CD 36 F4 04 0120*      call save_game
04F3B6 C3 37 F4 04 0121*      jp exit_game         ; Safely shut down
04F3BA C9          0122*      ret
04F3BB             0123*  
04F3BB             0124*  ; ========================
04F3BB             0125*  ; Sub-state branching (Example for player state)
04F3BB             0126*  ; ========================
04F3BB             0127*  
04F3BB C9 F3 04    0128*  player_state:  dl player_alive ; Player state variable
04F3BE             0129*  
04F3BE             0130*  do_player:
04F3BE 2A BB F3 04 0131*      ld hl,(player_state)
04F3C2             0132*      callHL                ; Call the corresponding player state
04F3C2 01 C8 F3 04 0001*M     ld bc,@F ; Address of first instruction after the jump
04F3C6 C5          0002*M     push bc ; which constitutes the return address
04F3C7 E9          0003*M     jp (hl) ; Jump to the address in HL
04F3C8             0004*M @@:
04F3C8 C9          0133*      ret
04F3C9             0134*  
04F3C9             0135*  player_alive:
04F3C9 CD 5A EE 04 0136*      call player_input     ; Handle player input
04F3CD CD 0B CD 04 0137*      call laser_control    ; Handle laser movement and collision detection
04F3D1 C9          0138*      ret
04F3D2             0139*  
04F3D2             0140*  player_dead:
04F3D2 CD 0B CD 04 0141*      call laser_control    ; Handle laser movement and collision detection
04F3D6 C9          0142*      ret
04F3D7             0143*  
04F3D7             0144*  do_enemies:
04F3D7 2A E2 F3 04 0145*      ld hl, (enemies_state)
04F3DB             0146*      callHL
04F3DB 01 E1 F3 04 0001*M     ld bc,@F ; Address of first instruction after the jump
04F3DF C5          0002*M     push bc ; which constitutes the return address
04F3E0 E9          0003*M     jp (hl) ; Jump to the address in HL
04F3E1             0004*M @@:
04F3E1 C9          0147*      ret
04F3E2 E5 F3 04    0148*  enemies_state: dl enemies_dead
04F3E5             0149*  enemies_dead:
04F3E5 FD 21 0A F4 0150*      ld iy,enemies_respawn_tmr
       04          
04F3EA 21 F0 00 00 0151*      ld hl,120*2 ; 120ths of a second
04F3EE CD E1 13 04 0152*      call timestamp_tmr_set
04F3F2 21 FB F3 04 0153*      ld hl,enemies_respawning
04F3F6 22 E2 F3 04 0154*      ld (enemies_state),hl
04F3FA C9          0155*      ret
04F3FB             0156*  
04F3FB             0157*  ; DEBUG: FOR TESTING UNTIL WE PROPERLY IMPLEMENT MAP LOGIC
04F3FB             0158*  enemies_respawning:
04F3FB FD 21 0A F4 0159*      ld iy,enemies_respawn_tmr
       04          
04F400 CD EC 13 04 0160*      call timestamp_tmr_get
04F404 F0          0161*      ret p ; not time to respawn yet
04F405 CD 10 F4 04 0162*      call enemies_respawn
04F409 C9          0163*      ret
04F40A             0164*  enemies_respawn_tmr: ds 6
04F410             0165*  
04F410             0166*  enemies_respawn:
04F410             0167*  ; initialize enemy sprites
04F410 3A 0E 1B 04 0168*      ld a,(max_enemy_sprites)
04F414 47          0169*      ld b,a ; loop counter
04F415             0170*  @respawn_loop:
04F415 C5          0171*      push bc
04F416 CD 20 1C 04 0172*      call enemy_init_from_landing_pad
04F41A C1          0173*      pop bc
04F41B 10 F8       0174*      djnz @respawn_loop
04F41D 21 26 F4 04 0175*      ld hl,enemies_alive
04F421 22 E2 F3 04 0176*      ld (enemies_state),hl
04F425 C9          0177*      ret
04F426             0178*  ; END DEBUG
04F426             0179*  
04F426             0180*  enemies_alive:
04F426 CD 0F 1B 04 0181*      call move_enemies
04F42A C9          0182*      ret
04F42B             0183*  
04F42B             0184*  check_input_menu:
04F42B C9          0185*      ret
04F42C             0186*  
04F42C             0187*  update_game_world:
04F42C C9          0188*      ret
04F42D             0189*  
04F42D             0190*  check_game_events:
04F42D C9          0191*      ret
04F42E             0192*  
04F42E             0193*  check_input_pause:
04F42E C9          0194*      ret
04F42F             0195*  
04F42F             0196*  load_next_level:
04F42F C9          0197*      ret
04F430             0198*  
04F430             0199*  display_game_over:
04F430 C9          0200*      ret
04F431             0201*  
04F431             0202*  display_victory:
04F431 C9          0203*      ret
04F432             0204*  
04F432             0205*  load_resources:
04F432 C9          0206*      ret
04F433             0207*  
04F433             0208*  play_cutscene:
04F433 C9          0209*      ret
04F434             0210*  
04F434             0211*  display_inventory:
04F434 C9          0212*      ret
04F435             0213*  
04F435             0214*  display_map:
04F435 C9          0215*      ret
04F436             0216*  
04F436             0217*  save_game:
04F436 C9          0218*      ret
04F437             0219*  
04F437             0220*  exit_game:
04F437 C9          0221*      ret
04F438             0222*  
04F438             0057       include "tiles.inc"
04F438             0001*  ; ######### TILES #########
04F438             0002*  ; TODO: implement buffering of tiles here when there isn't other stuff to do
04F438             0003*  ; tiles_defs: ds 256*16 ; 256 rows of 16 tiles, each tile is a byte
04F438 00 00 00    0004*  tiles_row_defs: dl 0x000000 ; pointer to current row tiles definitions
04F43B 00 00 00    0005*  tiles_row: dl 0 ; decrements each time a row is drawn. level is over when hits zero
04F43E             0006*      ; initialize to zero for a maximum of 256 rows in a level
04F43E 00          0007*  tiles_cols: db 0 ; number of tile columns in the current level
04F43F 00          0008*  cur_level: db 0
04F440 00          0009*  num_levels: db 0
04F441 00 00 00    0010*  cur_baseBufferId: dl 0
04F444 00 00 00    0011*  tiles_x_plot: dl 0
04F447 F1 FF FF    0012*  tiles_y_plot: dl -15
04F44A 00 00 00    0013*  cur_tileset: dl 0
04F44D             0014*  
04F44D             0015*  ; intialize a tileset
04F44D             0016*  ; inputs: ix = pointer to tileset definition
04F44D             0017*  init_tileset:
04F44D DD 7E FF    0018*      ld a,(ix-1) ; number of levels in the tileset
04F450 32 40 F4 04 0019*      ld (num_levels),a
04F454 DD 22 4A F4 0020*      ld (cur_tileset),ix
       04          
04F459 AF          0021*      xor a
04F45A 32 3F F4 04 0022*      ld (cur_level),a
04F45E C9          0023*      ret
04F45F             0024*  ; end init_tileset
04F45F             0025*  
04F45F             0026*  init_level:
04F45F             0027*      ; call vdu_home_cursor ; DEBUG
04F45F             0028*  ; look up address of level's tile defintion
04F45F 3A 3F F4 04 0029*      ld a,(cur_level)
04F463 57          0030*      ld d,a
04F464 1E 03       0031*      ld e,3
04F466 ED 5C       0032*      mlt de ; de = index into tileset lut
04F468 DD 2A 4A F4 0033*      ld ix,(cur_tileset)
       04          
04F46D DD 19       0034*      add ix,de ; ix = pointer to level lookup record
04F46F DD 37 00    0035*      ld ix,(ix) ; ix = pointer to level definintion
04F472             0036*  ; set tiles_cols
04F472 DD 7E 00    0037*      ld a,(ix+0)
04F475 32 3E F4 04 0038*      ld (tiles_cols),a
04F479             0039*  ; set tiles_row counter
04F479 DD 7E 01    0040*      ld a,(ix+1)
04F47C 32 3B F4 04 0041*      ld (tiles_row),a
04F480             0042*  ; set cur_baseBufferId
04F480 DD 27 04    0043*      ld hl,(ix+4)
04F483 22 41 F4 04 0044*      ld (cur_baseBufferId),hl
04F487             0045*  ; set tiles_row_defs
04F487 ED 32 07    0046*      lea ix,ix+7 ; ix points to definition of first tile of first row
04F48A DD 22 38 F4 0047*      ld (tiles_row_defs),ix
       04          
04F48F             0048*  
04F48F             0049*  ; print level
04F48F             0050*  level_x: equ 0
04F48F             0051*  level_y: equ 0
04F48F 0E 00       0052*      ld c,level_x
04F491 06 00       0053*      ld b,level_y
04F493 CD 74 14 04 0054*      call vdu_move_cursor
04F497 CD 70 00 04 0055*      call printInline
04F49B 4C 65 76 65 0056*      asciz "Level: "
       6C 3A 20 00 
04F4A3 3A 3F F4 04 0057*      ld a,(cur_level)
04F4A7 CD BA 00 04 0058*      call printHexA
04F4AB CD 8C 00 04 0059*      call printNewLine
04F4AF 2A 41 F4 04 0060*      ld hl,(cur_baseBufferId)
04F4B3 CD 76 01 04 0061*      call printDec
04F4B7             0062*  
04F4B7             0063*  ; ; DEBUG
04F4B7             0064*  ;     call dumpRegistersHex
04F4B7             0065*  ;     call waitKeypress
04F4B7             0066*  ; ; END DEBUG
04F4B7             0067*  
04F4B7             0068*  ; ; draw initial background tiles
04F4B7             0069*  ; ; TODO: make this a stars background
04F4B7             0070*  ;     ld hl,BUF_STATION_BG_00
04F4B7             0071*  ;     call vdu_buff_select
04F4B7             0072*  ;     ld bc,0
04F4B7             0073*  ;     ld de,field_top
04F4B7             0074*  ;     call vdu_plot_bmp
04F4B7             0075*  
04F4B7             0076*  ;     ld hl,BUF_STATION_BG_01
04F4B7             0077*  ;     call vdu_buff_select
04F4B7             0078*  ;     ld bc,0
04F4B7             0079*  ;     ld de,field_top+256
04F4B7             0080*  ;     call vdu_plot_bmp
04F4B7             0081*  
04F4B7 C9          0082*      ret
04F4B8             0083*  ; end init_level
04F4B8             0084*  
04F4B8             0085*  tiles_plot:
04F4B8             0086*  ; set gfx viewport to playing field window
04F4B8 01 00 00 00 0087*      ld bc,field_left
04F4BC 11 00 00 00 0088*      ld de,field_top
04F4C0 DD 21 FF 00 0089*      ld ix,field_right
       00          
04F4C5 FD 21 7F 01 0090*      ld iy,field_bottom
       00          
04F4CA CD 28 15 04 0091*      call vdu_set_gfx_viewport
04F4CE             0092*  ; move the background down one pixel
04F4CE 3E 02       0093*      ld a,2 ; current gfx viewport
04F4D0 2E 02       0094*      ld l,2 ; direction=down
04F4D2 26 01       0095*      ld h,1 ; speed=1 px
04F4D4 CD A0 14 04 0096*      call vdu_scroll_down
04F4D8             0097*  ; set gfx viewport to one scanline to optimise plotting tiles
04F4D8 01 00 00 00 0098*      ld bc,0 ; leftmost x-coord
04F4DC 11 00 00 00 0099*      ld de,0 ; topmost y-coord
04F4E0 DD 21 FF 00 0100*      ld ix,255 ; rightmost x-coord
       00          
04F4E5 FD 21 00 00 0101*      ld iy,0 ; bottommost y-coord
       00          
04F4EA CD 28 15 04 0102*      call vdu_set_gfx_viewport
04F4EE             0103*  ; plot the background
04F4EE             0104*      ; call bg_plot
04F4EE             0105*      ; call xevious_plot
04F4EE             0106*      ; ret ; DEBUG
04F4EE             0107*  ; initialize tiles loop
04F4EE 21 00 00 00 0108*      ld hl,0 ; init plotting x-coordinate
04F4F2 22 44 F4 04 0109*      ld (tiles_x_plot),hl
04F4F6 2A 38 F4 04 0110*      ld hl,(tiles_row_defs)
04F4FA 3A 3E F4 04 0111*      ld a,(tiles_cols)
04F4FE 47          0112*      ld b,a ; column loop counter
04F4FF             0113*  @loop:
04F4FF C5          0114*      push bc ; save the loop counter
04F500             0115*  ; read the tile defintion for the current column
04F500 7E          0116*      ld a,(hl) ; a has tile definition
04F501 E5          0117*      push hl ; save pointer to tile definition
04F502 2A 41 F4 04 0118*      ld hl,(cur_baseBufferId) ; hl base buffer id of tileset
04F506 6F          0119*      ld l,a ; a is the offset from the base so hl is now the bufferId of the tile
04F507 CD 75 15 04 0120*      call vdu_buff_select ; tile bitmap buffer is now active
04F50B             0121*  ; plot the active bitmap
04F50B ED 4B 44 F4 0122*      ld bc,(tiles_x_plot)
       04          
04F510 ED 5B 47 F4 0123*      ld de,(tiles_y_plot)
       04          
04F515 CD D1 18 04 0124*      call vdu_plot_bmp
04F519             0125*  ; bump x-coords the width of one tile and save it
04F519 2A 44 F4 04 0126*      ld hl,(tiles_x_plot)
04F51D 01 10 00 00 0127*      ld bc,16
04F521 09          0128*      add hl,bc
04F522 22 44 F4 04 0129*      ld (tiles_x_plot),hl
04F526             0130*  ; prepare to loop to next column
04F526 E1          0131*      pop hl ; get back pointer to tile def
04F527 23          0132*      inc hl ; bump it to the next column
04F528 C1          0133*      pop bc ; snag our loop counter
04F529 10 D4       0134*      djnz @loop
04F52B             0135*  ; increment tiles plotting y-coordinate
04F52B             0136*  ; when it hits zero, we go to next row of tiles in the map
04F52B             0137*  ; (we use ix b/c we want to preserve hl for the next step)
04F52B DD 21 47 F4 0138*      ld ix,tiles_y_plot
       04          
04F530 DD 34 00    0139*      inc (ix)
04F533 C0          0140*      ret nz
04F534             0141*  ; time to bump tiles_row_defs to next row
04F534             0142*  ; (hl was already there at the end of the loop)
04F534 22 38 F4 04 0143*      ld (tiles_row_defs),hl
04F538             0144*  ; reset coords to plot next row of tiles
04F538 21 00 00 00 0145*      ld hl,0
04F53C 22 44 F4 04 0146*      ld (tiles_x_plot),hl
04F540 21 F1 FF FF 0147*      ld hl,-15
04F544 22 47 F4 04 0148*      ld (tiles_y_plot),hl
04F548             0149*  ; decrement tiles row counter
04F548 21 3B F4 04 0150*      ld hl,tiles_row
04F54C 35          0151*      dec (hl)
04F54D C0          0152*      ret nz
04F54E             0153*  ; queue up next level
04F54E 21 3F F4 04 0154*      ld hl,cur_level
04F552 34          0155*      inc (hl) ; bump to next level
04F553 3A 40 F4 04 0156*      ld a,(num_levels)
04F557 BE          0157*      cp (hl) ; are we past max levels?
04F558 C2 5E F5 04 0158*      jp nz,@inc_level ; no, so load next level
04F55C AF          0159*      xor a ; reset to first level
04F55D 77          0160*      ld (hl),a ; and fall through to @inc_level
04F55E             0161*  @inc_level:
04F55E             0162*  ; increase the number of enemy sprites
04F55E 3A 0E 1B 04 0163*      ld a,(max_enemy_sprites)
04F562 3C          0164*      inc a
04F563 FE 10       0165*      cp table_max_records ; if we're at the global limit,skip ahead at max level
04F565 CA 5F F4 04 0166*      jp z,init_level
04F569 32 0E 1B 04 0167*      ld (max_enemy_sprites),a ; otherwise save the updated number
04F56D C3 5F F4 04 0168*      jp init_level
04F571             0169*  ; end tiles_plot
04F571             0170*  
04F571             0171*  ; bg_y_plot: dl -1
04F571             0172*  ; bg_bufferId: dl BUF_STATION_BG_00 ; default bufferId for background tiles
04F571             0173*  
04F571             0174*  ; bg_plot:
04F571             0175*  ; ; load current bg tile bufferId as default
04F571             0176*  ;     ld hl,(bg_bufferId)
04F571             0177*  ; ; check whether it is time for a new background tile
04F571             0178*  ;     ld a,(bg_y_plot)
04F571             0179*  ;     inc a
04F571             0180*  ;     ld (bg_y_plot),a
04F571             0181*  ;     jp nz,@F ; not time for a new tile so draw current one
04F571             0182*  ; ; load the next background tile
04F571             0183*  ;     ld hl,BUF_STATION_BG_00
04F571             0184*  ;     call rand_8
04F571             0185*  ;     and %0000011
04F571             0186*  ;     add a,l
04F571             0187*  ;     ld l,a
04F571             0188*  ;     ld a,0
04F571             0189*  ;     adc a,h
04F571             0190*  ;     ld h,a
04F571             0191*  ;     ld (bg_bufferId),hl
04F571             0192*  ; @@:
04F571             0193*  ;     call vdu_buff_select
04F571             0194*  ;     ld bc,0
04F571             0195*  ;     ld de,(bg_y_plot)
04F571             0196*  ;     inc de
04F571             0197*  ;     call vdu_plot_bmp
04F571             0198*  ; ; all done
04F571             0199*  ;     ret
04F571             0200*  
04F571             0201*  ; xevious_plot:
04F571             0202*  ; ; load current bg tile bufferId as default
04F571             0203*  ;     ld hl,(bg_bufferId)
04F571             0204*  ; ; check whether it is time for a new background tile
04F571             0205*  ;     ld a,(bg_y_plot)
04F571             0206*  ;     inc a
04F571             0207*  ;     ld (bg_y_plot),a
04F571             0208*  ;     jp nz,@F ; not time for a new tile so draw current one
04F571             0209*  ; ; load the next background tile
04F571             0210*  ;     ld hl,Xevious_tile
04F571             0211*  ;     inc (hl)
04F571             0212*  ;     ld a,%00011111 ; 31
04F571             0213*  ;     and (hl)
04F571             0214*  ;     ld hl,BUF_XEVIOUS_00
04F571             0215*  ;     add a,l
04F571             0216*  ;     ld l,a
04F571             0217*  ;     ld a,0
04F571             0218*  ;     adc a,h
04F571             0219*  ;     ld h,a
04F571             0220*  ;     ld (bg_bufferId),hl
04F571             0221*  ; @@:
04F571             0222*  ;     call vdu_buff_select
04F571             0223*  ;     ld bc,0
04F571             0224*  ;     ld de,(bg_y_plot)
04F571             0225*  ;     inc de
04F571             0226*  ;     call vdu_plot_bmp
04F571             0227*  ; ; all done
04F571             0228*  ;     ret
04F571             0229*  ; Xevious_tile: db 0
04F571             0230*  
04F571             0231*  ; ###### TODO: NEW CODE TO IMPLEMENT ######
04F571             0232*  ; dt_is_active:
04F571             0233*  ; ; a lands here containing a tile index in the low nibble
04F571             0234*  ; ; we test the values for the tiles which are active
04F571             0235*  ;     cp #07
04F571             0236*  ;     call z,ld_act_landing_pad
04F571             0237*  ;     cp #08
04F571             0238*  ;     call z,ld_act_laser_turret
04F571             0239*  ;     ; fall through
04F571             0240*  ;     ret
04F571             0241*  
04F571             0242*  ; ; some tiles become active sprites,so we load those here
04F571             0243*  ; ; sprite_x/y have already been loaded
04F571             0244*  ; ; sprite_dim_x/y are loaded by table_add_record
04F571             0245*  ; ; we don't want sprite drawn to background like other tiles
04F571             0246*  ; ; so this routine only adds them to the sprite table
04F571             0247*  ; dt_ld_act:
04F571             0248*  ;     ld a,#48 ; top of screen + 1/2 tile height
04F571             0249*  ;     ld (sprite_y+1),a ; just the integer part
04F571             0250*  ;     ld (sprite_base_bufferId),hl
04F571             0251*  ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
04F571             0252*  ;     call table_add_record
04F571             0253*  ;     call sprite_variables_from_stack
04F571             0254*  ;     ld a,#FF ; lets calling proc know we loaded an active tile
04F571             0255*  ;     ret ; and back
04F571             0256*  
04F571             0257*  ; ld_act_landing_pad:
04F571             0258*  ;     call sprite_variables_to_stack
04F571             0259*  
04F571             0260*  ;     ld hl,move_landing_pad
04F571             0261*  ;     ld (sprite_move_program),hl
04F571             0262*  
04F571             0263*  ;     xor a
04F571             0264*  ;     ld (sprite_animation),a ; animation 0
04F571             0265*  
04F571             0266*  ;     call rand_8     ; snag a random number
04F571             0267*  ;     and %00011111   ; keep only 5 lowest bits (max 31)
04F571             0268*  ;     add a,64 ; range is now 64-127
04F571             0269*  ;     ld (sprite_move_timer),a ; when this hits zero,will spawn an enemy
04F571             0270*  
04F571             0271*  ;     ld a,%10 ; collides with laser but not player
04F571             0272*  ;     ld (iy+sprite_collisions),a
04F571             0273*  
04F571             0274*  ;     ld a,#05 ; BCD
04F571             0275*  ;     ld (sprite_points),a
04F571             0276*  ;     ld a,0 ; binary
04F571             0277*  ;     ld (sprite_shield_damage),a
04F571             0278*  
04F571             0279*  ;     ld hl,landing_pad ; dt_ld_act loads this to sprite_base_bufferId
04F571             0280*  ;     jr dt_ld_act
04F571             0281*  
04F571             0282*  ; ld_act_laser_turret:
04F571             0283*  ;     call sprite_variables_to_stack
04F571             0284*  
04F571             0285*  ;     ld hl,move_laser_turret
04F571             0286*  ;     ld (sprite_move_program),hl
04F571             0287*  
04F571             0288*  ;     xor a
04F571             0289*  ;     ld (sprite_animation),a
04F571             0290*  ;     ld (sprite_move_step),a
04F571             0291*  
04F571             0292*  ;     call rand_8     ; snag a random number
04F571             0293*  ;     and %00011111   ; keep only 5 lowest bits (max 31)
04F571             0294*  ;     add a,64 ; range is now 64-127
04F571             0295*  ;     ld (sprite_move_timer),a ; when this hits zero,will spawn a fireball
04F571             0296*  
04F571             0297*  ;     ld a,%10 ; collides with laser but not player
04F571             0298*  ;     ld (iy+sprite_collisions),a
04F571             0299*  
04F571             0300*  ;     ld a,#10 ; BCD
04F571             0301*  ;     ld (sprite_points),a
04F571             0302*  ;     ld a,0 ; binary
04F571             0303*  ;     ld (sprite_shield_damage),a
04F571             0304*  
04F571             0305*  ;     ld hl,laser_turret ; dt_ld_act loads this to sprite_base_bufferId
04F571             0306*  ;     jp dt_ld_act
04F571             0307*  
04F571             0308*  
04F571             0309*  ; moves active tile sprites down one pixel in sync with tiles movement
04F571             0310*  ; deletes sprites from table when they wrap around to top of screen
04F571             0311*  move_active_tiles:
04F571             0312*  ; get current position
04F571 3A 0F 00 00 0313*      ld a,(sprite_y+1) ; we only need the integer part
04F575 3C          0314*      inc a
04F576             0315*  ; are we at the bottom of the screen?
04F576 20 06       0316*      jr nz,move_active_tiles_draw_sprite ; nope
04F578             0317*  ; otherwise kill sprite
04F578 3E 80       0318*      ld a,%10000000 ; any bit set in high nibble means sprite will die
04F57A FD 77 08    0319*      ld (iy+sprite_collisions),a
04F57D C9          0320*      ret ; debug
04F57E             0321*  move_active_tiles_draw_sprite:
04F57E 32 0F 00 00 0322*      ld (sprite_y+1),a ; update tile y position integer part
04F582             0323*      ;     call vdu_bmp_select ; TODO: convert to vdu_buff_select
04F582             0324*      ; call vdu_bmp_draw ; convert to vdu_bmp_plot ; draw it
04F582 C9          0325*      ret ; and done
04F583             0326*  
04F583             0327*  
04F583             0328*  ; move_landing_pad:
04F583             0329*  ;     call move_active_tiles
04F583             0330*  ;     call check_collisions
04F583             0331*  ; ; is it time to launch an enemy?
04F583             0332*  ;     ld hl,sprite_move_timer
04F583             0333*  ;     dec (hl)
04F583             0334*  ;     jp nz,move_enemies_loop_return
04F583             0335*  ;     call enemy_init_from_landing_pad
04F583             0336*  ;     ; reset move timer so can spawn again if player doesn't take us out
04F583             0337*  ;     call rand_8     ; snag a random number
04F583             0338*  ;     and %00011111   ; keep only 5 lowest bits (max 31)
04F583             0339*  ;     add a,64 ; range is now 64-127
04F583             0340*  ;     ld (sprite_move_timer),a ; when this hits zero,will spawn an enemy
04F583             0341*  ;     ret
04F583             0342*  
04F583             0343*  
04F583             0344*  ; move_laser_turret:
04F583             0345*  ; ; compute orientation to player
04F583             0346*  ;     call orientation_to_player
04F583             0347*  ; ; h.l 8.8 fixed angle256 to player
04F583             0348*  ; ; bc and de as signed 16-bit integers
04F583             0349*  ; ; representing delta-x/y *to* target respectively
04F583             0350*  ;     ld (Bearing_t),hl
04F583             0351*  ;     ld hl,0x0400
04F583             0352*  ;     ld (Vp),hl
04F583             0353*  ;     call targeting_computer
04F583             0354*  ;     ld (sprite_heading),hl ; store bearing to player
04F583             0355*  ; ; is it time to launch a fireball?
04F583             0356*  ;     ld hl,sprite_move_timer
04F583             0357*  ;     dec (hl)
04F583             0358*  ;     jp nz,move_laser_turret_boilerplate
04F583             0359*  ;     call fireballs_init
04F583             0360*  ;     ; reset move timer so can fire again if player doesn't take us out
04F583             0361*  ;     call rand_8     ; snag a random number
04F583             0362*  ;     and %00011111   ; keep only 5 lowest bits (max 31)
04F583             0363*  ;     add a,64 ; range is now 64-127
04F583             0364*  ;     ld (sprite_move_timer),a ; when this hits zero,will spawn a fireball
04F583             0365*  ; move_laser_turret_boilerplate:
04F583             0366*  ;     call move_active_tiles
04F583             0367*  ;     call check_collisions
04F583             0368*  ;     ret
04F583             0369*  
04F583             0370*  
04F583             0371*  ; fireballs_init:
04F583             0372*  ;     call sprite_variables_to_stack
04F583             0373*  
04F583             0374*  ;     ld hl,fireballs
04F583             0375*  ;     ld (sprite_base_bufferId),hl
04F583             0376*  
04F583             0377*  ;     ld hl,move_fireballs
04F583             0378*  ;     ld (sprite_move_program),hl
04F583             0379*  
04F583             0380*  ;     ld a,%11 ; collides with laser and player
04F583             0381*  ;     ; ld a,%10 ; collides with laser DEBUG
04F583             0382*  ;     ld (iy+sprite_collisions),a
04F583             0383*  
04F583             0384*  ;     ld hl,(Vp)
04F583             0385*  ;     ld (sprite_vel),hl
04F583             0386*  ;     ld hl,(Vp_x)
04F583             0387*  ;     ld (sprite_xvel),hl
04F583             0388*  ;     ld hl,(Vp_y)
04F583             0389*  ;     inc h ; account for ground movement
04F583             0390*  ;     ld (sprite_yvel),hl
04F583             0391*  
04F583             0392*  ;     xor a ; zero a
04F583             0393*  ;     ld (sprite_animation),a
04F583             0394*  ;     ld (sprite_move_step),a
04F583             0395*  ;     ld (sprite_move_timer),a
04F583             0396*  
04F583             0397*  ;     ld a,6 ; 1/10th of a second timer
04F583             0398*  ;     ld (sprite_animation_timer),a
04F583             0399*  
04F583             0400*  ;     ld a,0x00 ; BCD
04F583             0401*  ;     ld (sprite_points),a
04F583             0402*  ;     ld a,1 ; binary
04F583             0403*  ;     ld (sprite_shield_damage),a
04F583             0404*  
04F583             0405*  ;     call table_add_record ; plops that on the sprite stack for later
04F583             0406*  ;     call sprite_variables_from_stack ; come back to where we started
04F583             0407*  ;     ret
04F583             0058   
04F583 57 65 6C 63 0059   hello_world: asciz "Welcome to Purple Nurples!"
       6F 6D 65 20 
       74 6F 20 50 
       75 72 70 6C 
       65 20 4E 75 
       72 70 6C 65 
       73 21 00    
04F59E 4C 6F 61 64 0060   loading_ui: asciz "Loading UI"
       69 6E 67 20 
       55 49 00    
04F5A9 4C 6F 61 64 0061   loading_time: asciz "Loading time:"
       69 6E 67 20 
       74 69 6D 65 
       3A 00       
04F5B7 50 72 65 73 0062   loading_complete: asciz "Press any key to continue."
       73 20 61 6E 
       79 20 6B 65 
       79 20 74 6F 
       20 63 6F 6E 
       74 69 6E 75 
       65 2E 00    
04F5D2             0063   
04F5D2             0064   init:
04F5D2             0065   ; clear all buffers
04F5D2 CD 67 16 04 0066       call vdu_clear_all_buffers
04F5D6             0067   
04F5D6             0068   ; set up the display
04F5D6 3E 08       0069       ld a,8;+128 ; 136   320   240   64    60hz double-buffered
04F5D8 CD 51 15 04 0070       call vdu_set_screen_mode
04F5DC AF          0071       xor a
04F5DD CD 62 15 04 0072       call vdu_set_scaling
04F5E1             0073   
04F5E1             0074   ; ; enable additional audio channels
04F5E1             0075   ; 	call vdu_enable_channels
04F5E1             0076   
04F5E1             0077   ; set text background color
04F5E1 3E 9A       0078       ld a,26+128 ; violet
04F5E3 CD B9 14 04 0079       call vdu_colour_text
04F5E7             0080   
04F5E7             0081   ; set text foreground color
04F5E7 3E 2F       0082       ld a,47 ; aaaaff lavenderish
04F5E9 CD B9 14 04 0083       call vdu_colour_text
04F5ED             0084   
04F5ED             0085   ; set gfx bg color
04F5ED AF          0086       xor a ; plotting mode 0
04F5EE 3E 9A       0087       ld a,26+128 ; violet
04F5F0 CD CA 14 04 0088       call vdu_gcol
04F5F4 CD 88 14 04 0089       call vdu_cls
04F5F8             0090   
04F5F8             0091   ; set the cursor off
04F5F8 CD 50 14 04 0092       call vdu_cursor_off
04F5FC             0093   
04F5FC             0094   ; VDU 28, left, bottom, right, top: Set text viewport **
04F5FC             0095   ; MIND THE LITTLE-ENDIANESS
04F5FC             0096   ; inputs: c=left,b=bottom,e=right,d=top
04F5FC 0E 00       0097       ld c,0 ; left
04F5FE 16 1D       0098       ld d,29 ; top
04F600 1E 27       0099       ld e,39 ; right
04F602 06 1D       0100       ld b,29; bottom
04F604 CD E1 14 04 0101       call vdu_set_txt_viewport
04F608             0102   
04F608             0103   ; print loading ui message
04F608 21 9E F5 04 0104       ld hl,loading_ui
04F60C CD 77 00 04 0105       call printString
04F610 CD 8D 14 04 0106       call vdu_flip
04F614             0107   
04F614             0108   ; load UI images
04F614 CD 96 12 04 0109       call load_ui_images
04F618             0110   
04F618             0111   ; load sprites
04F618 CD D4 11 04 0112       call img_load_init ; sets up the animated load screen
04F61C CD A9 12 04 0113       call load_sprite_images
04F620             0114   
04F620             0115   ; load tilesets
04F620 CD BA 12 04 0116       call load_tilesets
04F624             0117   
04F624             0118   ; ; load sound effects ; TODO
04F624             0119   ; 	ld bc,SFX_num_buffers
04F624             0120   ; 	ld hl,SFX_buffer_id_lut
04F624             0121   ; 	ld (cur_buffer_id_lut),hl
04F624             0122   ; 	ld hl,SFX_load_routines_table
04F624             0123   ; 	ld (cur_load_jump_table),hl
04F624             0124   ; 	call sfx_load_main
04F624             0125   
04F624             0126   ; print loading complete message and wait for user keypress
04F624             0127       ; call vdu_cls
04F624             0128       ; ld hl,loading_complete
04F624             0129       ; call printString
04F624 CD 8D 14 04 0130       call vdu_flip
04F628 CD 15 06 04 0131       call waitKeypress
04F62C             0132   
04F62C             0133   ; set up display for gameplay
04F62C             0134       ; ld a,8
04F62C 3E 14       0135       ld a,20
04F62E CD 51 15 04 0136       call vdu_set_screen_mode
04F632 AF          0137       xor a
04F633 CD 62 15 04 0138       call vdu_set_scaling
04F637 CD 50 14 04 0139       call vdu_cursor_off
04F63B             0140   ; load fonts
04F63B CD 9A 11 04 0141   	call fonts_load
04F63F             0142   ; select font
04F63F 21 05 FA 00 0143       ld hl,computer_pixel_7_8x16
04F643 3E 01       0144       ld a,1 ; flags
04F645 CD 1E 18 04 0145       call vdu_font_select
04F649             0146   ; plot bezel art
04F649 21 00 00 00 0147       ld hl,BUF_BEZEL_L
04F64D CD 75 15 04 0148       call vdu_buff_select
04F651 01 00 00 00 0149       ld bc,0
04F655 11 00 00 00 0150       ld de,0
04F659 CD D1 18 04 0151       call vdu_plot_bmp
04F65D 21 01 00 00 0152       ld hl,BUF_BEZEL_R
04F661 CD 75 15 04 0153       call vdu_buff_select
04F665 01 80 01 00 0154       ld bc,384
04F669 11 00 00 00 0155       ld de,0
04F66D CD D1 18 04 0156       call vdu_plot_bmp
04F671             0157   ; set gfx origin and viewport to playing field window
04F671 01 80 00 00 0158       ld bc,origin_left
04F675 11 00 00 00 0159       ld de,origin_top
04F679 CD 0D 15 04 0160       call vdu_set_gfx_origin
04F67D 01 00 00 00 0161       ld bc,field_left
04F681 11 00 00 00 0162       ld de,field_top
04F685 DD 21 FF 00 0163       ld ix,field_right
       00          
04F68A FD 21 7F 01 0164       ld iy,field_bottom
       00          
04F68F CD 28 15 04 0165       call vdu_set_gfx_viewport
04F693             0166   ; set background color
04F693 3E 9A       0167       ld a,26+128 ; violet
04F695 CD CA 14 04 0168       call vdu_gcol
04F699 CD 9B 14 04 0169       call vdu_clg
04F69D             0170   ; VDU 28, left, bottom, right, top: Set text viewport **
04F69D 0E 00       0171       ld c,0 ; left
04F69F 16 00       0172       ld d,0 ; top
04F6A1 1E 3E       0173       ld e,62 ; right
04F6A3 06 07       0174       ld b,7; bottom
04F6A5 CD E1 14 04 0175       call vdu_set_txt_viewport
04F6A9             0176   
04F6A9             0177   ; initialize the global timestamp
04F6A9 CD C4 13 04 0178       call timestamp_tick
04F6AD             0179   
04F6AD             0180   ; done with init
04F6AD C9          0181       ret
04F6AE             0182   
04F6AE             0183   main:
04F6AE             0184   ; start a new game
04F6AE CD FE F2 04 0185       call game_initialize
04F6B2             0186   
04F6B2             0187   main_loop:
04F6B2             0188   ; update the global timestamp
04F6B2 CD C4 13 04 0189       call timestamp_tick
04F6B6             0190   
04F6B6             0191   ; do gamestate logic
04F6B6 CD EA F2 04 0192       call do_game
04F6BA             0193   
04F6BA             0194   ; wait for the next vblank mitigate flicker and for loop timing
04F6BA CD FC 14 04 0195       call vdu_vblank
04F6BE             0196       ; call vdu_vblank ; DEBUG
04F6BE             0197   
04F6BE             0198   ; poll keyboard for escape keypress
04F6BE 3E 08       0199       ld a, $08 ; code to send to MOS
04F6C0 5B CF       0200       rst.lil $08 ; get IX pointer to System Variables
04F6C2             0201   
04F6C2 DD 7E 05    0202       ld a, (ix + $05) ; get ASCII code of key pressed
04F6C5 FE 1B       0203       cp 27 ; check if 27 (ascii code for ESC)
04F6C7 CA CF F6 04 0204       jp z, main_end ; if pressed, jump to exit
04F6CB             0205   
04F6CB C3 B2 F6 04 0206       jp main_loop
04F6CF             0207   
04F6CF             0208   main_end:
04F6CF CD 42 14 04 0209       call vdu_cursor_on
04F6D3 C9          0210       ret
