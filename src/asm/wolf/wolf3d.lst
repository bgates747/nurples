PC     Output      Line
040000             0001       .assume adl=1
040000             0002       .org 0x040000
040000             0003   
040000 C3 3F D1 04 0004       jp start
040004             0005   
040004 FF FF FF FF 0006       .align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0007       .db "MOS"
040043 00          0008       .db 00h
040044 01          0009       .db 01h
040045             0010   
040045             0011   	include "src/asm/mos_api.asm" ; wants to be first include b/c it has macros
040045             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/mos_api.inc
040045             0002*  ;
040045             0003*  ; Title:	AGON MOS - API for user projects
040045             0004*  ; Author:	Dean Belfield
040045             0005*  ;			Adapted for agon-ez80asm by Jeroen Venema
040045             0006*  ;			Added MOS error codes for return in HL
040045             0007*  ; Created:	03/08/2022
040045             0008*  ; Last Updated:	10/08/2023
040045             0009*  ;
040045             0010*  ; Modinfo:
040045             0011*  ; 05/08/2022:	Added mos_feof
040045             0012*  ; 09/08/2022:	Added system variables: cursorX, cursorY
040045             0013*  ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045             0014*  ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045             0015*  ; 24/09/2022:	Added mos_getError, mos_mkdir
040045             0016*  ; 13/10/2022:	Added mos_oscli
040045             0017*  ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045             0018*  ; 04/03/2023:	Added sysvar_scrpixelIndex
040045             0019*  ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045             0020*  ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045             0021*  ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045             0022*  ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045             0023*  ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045             0024*  ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045             0025*  ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045             0026*  ; 19/05/2023:	Added sysvar_scrMode
040045             0027*  ; 05/06/2023:	Added sysvar_rtcEnable
040045             0028*  ; 03/08/2023:	Added mos_setkbvector
040045             0029*  ; 10/08/2023:	Added mos_getkbmap
040045             0030*  
040045             0031*  ; VDP control (VDU 23, 0, n)
040045             0032*  ;
040045             0033*  vdp_gp:				EQU 80h
040045             0034*  vdp_keycode:		EQU 81h
040045             0035*  vdp_cursor:			EQU	82h
040045             0036*  vdp_scrchar:		EQU	83h
040045             0037*  vdp_scrpixel:		EQU	84h
040045             0038*  vdp_audio:			EQU	85h
040045             0039*  vdp_mode:			EQU	86h
040045             0040*  vdp_rtc:			EQU	87h
040045             0041*  vdp_keystate:		EQU	88h
040045             0042*  vdp_logicalcoords:	EQU	C0h
040045             0043*  vdp_terminalmode:	EQU	FFh
040045             0044*  
040045             0045*  ; MOS high level functions
040045             0046*  ;
040045             0047*  mos_getkey:			EQU	00h
040045             0048*  mos_load:			EQU	01h
040045             0049*  mos_save:			EQU	02h
040045             0050*  mos_cd:				EQU	03h
040045             0051*  mos_dir:			EQU	04h
040045             0052*  mos_del:			EQU	05h
040045             0053*  mos_ren:			EQU	06h
040045             0054*  mos_mkdir:			EQU	07h
040045             0055*  mos_sysvars:		EQU	08h
040045             0056*  mos_editline:		EQU	09h
040045             0057*  mos_fopen:			EQU	0Ah
040045             0058*  mos_fclose:			EQU	0Bh
040045             0059*  mos_fgetc:			EQU	0Ch
040045             0060*  mos_fputc:			EQU	0Dh
040045             0061*  mos_feof:			EQU	0Eh
040045             0062*  mos_getError:		EQU	0Fh
040045             0063*  mos_oscli:			EQU	10h
040045             0064*  mos_copy:			EQU	11h
040045             0065*  mos_getrtc:			EQU	12h
040045             0066*  mos_setrtc:			EQU	13h
040045             0067*  mos_setintvector:	EQU	14h
040045             0068*  mos_uopen:			EQU	15h
040045             0069*  mos_uclose:			EQU	16h
040045             0070*  mos_ugetc:			EQU	17h
040045             0071*  mos_uputc:			EQU	18h
040045             0072*  mos_getfil:			EQU	19h
040045             0073*  mos_fread:			EQU	1Ah
040045             0074*  mos_fwrite:			EQU	1Bh
040045             0075*  mos_flseek:			EQU	1Ch
040045             0076*  mos_setkbvector:	EQU	1Dh
040045             0077*  mos_getkbmap:		EQU	1Eh
040045             0078*  
040045             0079*  ; MOS program exit codes
040045             0080*  ;
040045             0081*  EXIT_OK:				EQU  0;	"OK",
040045             0082*  EXIT_ERROR_SD_ACCESS:	EQU	 1;	"Error accessing SD card",
040045             0083*  EXIT_ERROR_ASSERTION:	EQU  2;	"Assertion failed",
040045             0084*  EXIT_SD_CARDFAILURE:	EQU  3;	"SD card failure",
040045             0085*  EXIT_FILENOTFOUND:		EQU  4;	"Could not find file",
040045             0086*  EXIT_PATHNOTFOUND:		EQU  5;	"Could not find path",
040045             0087*  EXIT_INVALIDPATHNAME:	EQU  6;	"Invalid path name",
040045             0088*  EXIT_ACCESSDENIED_FULL:	EQU  7;	"Access denied or directory full",
040045             0089*  EXIT_ACCESSDENIED:		EQU  8;	"Access denied",
040045             0090*  EXIT_INVALIDOBJECT:		EQU  9;	"Invalid file/directory object",
040045             0091*  EXIT_SD_WRITEPROTECTED:	EQU 10;	"SD card is write protected",
040045             0092*  EXIT_INVALIDDRIVENUMBER:EQU 11;	"Logical drive number is invalid",
040045             0093*  EXIT_NOVOLUMEWORKAREA:	EQU 12;	"Volume has no work area",
040045             0094*  EXIT_NOVALIDFATVOLUME:	EQU 13;	"No valid FAT volume",
040045             0095*  EXIT_ERRORMKFS:			EQU 14;	"Error occurred during mkfs",
040045             0096*  EXIT_VOLUMETIMEOUT:		EQU 15;	"Volume timeout",
040045             0097*  EXIT_VOLUMELOCKED:		EQU 16;	"Volume locked",
040045             0098*  EXIT_LFNALLOCATION:		EQU 17;	"LFN working buffer could not be allocated",
040045             0099*  EXIT_MAXOPENFILES:		EQU 18;	"Too many open files",
040045             0100*  EXIT_INVALIDPARAMETER:	EQU 19;	"Invalid parameter",
040045             0101*  EXIT_INVALIDCOMMAND:	EQU 20;	"Invalid command",
040045             0102*  EXIT_INVALIDEXECUTABLE:	EQU 21;	"Invalid executable",
040045             0103*  ; FatFS file access functions
040045             0104*  ;
040045             0105*  ffs_fopen:			EQU	80h
040045             0106*  ffs_fclose:			EQU	81h
040045             0107*  ffs_fread:			EQU	82h
040045             0108*  ffs_fwrite:			EQU	83h
040045             0109*  ffs_flseek:			EQU	84h
040045             0110*  ffs_ftruncate:		EQU	85h
040045             0111*  ffs_fsync:			EQU	86h
040045             0112*  ffs_fforward:		EQU	87h
040045             0113*  ffs_fexpand:		EQU	88h
040045             0114*  ffs_fgets:			EQU	89h
040045             0115*  ffs_fputc:			EQU	8Ah
040045             0116*  ffs_fputs:			EQU	8Bh
040045             0117*  ffs_fprintf:		EQU	8Ch
040045             0118*  ffs_ftell:			EQU	8Dh
040045             0119*  ffs_feof:			EQU	8Eh
040045             0120*  ffs_fsize:			EQU	8Fh
040045             0121*  ffs_ferror:			EQU	90h
040045             0122*  
040045             0123*  ; FatFS directory access functions
040045             0124*  ;
040045             0125*  ffs_dopen:			EQU	91h
040045             0126*  ffs_dclose:			EQU	92h
040045             0127*  ffs_dread:			EQU	93h
040045             0128*  ffs_dfindfirst:		EQU	94h
040045             0129*  ffs_dfindnext:		EQU	95h
040045             0130*  
040045             0131*  ; FatFS file and directory management functions
040045             0132*  ;
040045             0133*  ffs_stat:			EQU	96h
040045             0134*  ffs_unlink:			EQU	97h
040045             0135*  ffs_rename:			EQU	98h
040045             0136*  ffs_chmod:			EQU	99h
040045             0137*  ffs_utime:			EQU	9Ah
040045             0138*  ffs_mkdir:			EQU	9Bh
040045             0139*  ffs_chdir:			EQU	9Ch
040045             0140*  ffs_chdrive:		EQU	9Dh
040045             0141*  ffs_getcwd:			EQU	9Eh
040045             0142*  
040045             0143*  ; FatFS volume management and system configuration functions
040045             0144*  ;
040045             0145*  ffs_mount:			EQU	9Fh
040045             0146*  ffs_mkfs:			EQU	A0h
040045             0147*  ffs_fdisk:			EQU	A1h
040045             0148*  ffs_getfree:		EQU	A2h
040045             0149*  ffs_getlabel:		EQU	A3h
040045             0150*  ffs_setlabel:		EQU	A4h
040045             0151*  ffs_setcp:			EQU	A5h
040045             0152*  
040045             0153*  ; File access modes
040045             0154*  ;
040045             0155*  fa_read:			EQU	01h
040045             0156*  fa_write:			EQU	02h
040045             0157*  fa_open_existing:	EQU	00h
040045             0158*  fa_create_new:		EQU	04h
040045             0159*  fa_create_always:	EQU	08h
040045             0160*  fa_open_always:		EQU	10h
040045             0161*  fa_open_append:		EQU	30h
040045             0162*  
040045             0163*  ; System variable indexes for api_sysvars
040045             0164*  ; Index into _sysvars in globals.asm
040045             0165*  ;
040045             0166*  sysvar_time:			EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045             0167*  sysvar_vpd_pflags:		EQU	04h	; 1: Flags to indicate completion of VDP commands
040045             0168*  sysvar_keyascii:		EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045             0169*  sysvar_keymods:			EQU	06h	; 1: Keycode modifiers
040045             0170*  sysvar_cursorX:			EQU	07h	; 1: Cursor X position
040045             0171*  sysvar_cursorY:			EQU	08h	; 1: Cursor Y position
040045             0172*  sysvar_scrchar:			EQU	09h	; 1: Character read from screen
040045             0173*  sysvar_scrpixel:		EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045             0174*  sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045             0175*  sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045             0176*  sysvar_scrWidth:		EQU	0Fh	; 2: Screen width in pixels
040045             0177*  sysvar_scrHeight:		EQU	11h	; 2: Screen height in pixels
040045             0178*  sysvar_scrCols:			EQU	13h	; 1: Screen columns in characters
040045             0179*  sysvar_scrRows:			EQU	14h	; 1: Screen rows in characters
040045             0180*  sysvar_scrColours:		EQU	15h	; 1: Number of colours displayed
040045             0181*  sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045             0182*  sysvar_vkeycode:		EQU	17h	; 1: Virtual key code from FabGL
040045             0183*  sysvar_vkeydown:		EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045             0184*  sysvar_vkeycount:		EQU	19h	; 1: Incremented every time a key packet is received
040045             0185*  sysvar_rtc:				EQU	1Ah	; 6: Real time clock data
040045             0186*  sysvar_spare:			EQU	20h	; 2: Spare, previously used by rtc
040045             0187*  sysvar_keydelay:		EQU	22h	; 2: Keyboard repeat delay
040045             0188*  sysvar_keyrate:			EQU	24h	; 2: Keyboard repeat reat
040045             0189*  sysvar_keyled:			EQU	26h	; 1: Keyboard LED status
040045             0190*  sysvar_scrMode:			EQU	27h	; 1: Screen mode
040045             0191*  sysvar_rtcEnable:		EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045             0192*  
040045             0193*  ; Flags for the VPD protocol
040045             0194*  ;
040045             0195*  vdp_pflag_cursor:		EQU	00000001b
040045             0196*  vdp_pflag_scrchar:		EQU	00000010b
040045             0197*  vdp_pflag_point:		EQU	00000100b
040045             0198*  vdp_pflag_audio:		EQU	00001000b
040045             0199*  vdp_pflag_mode:			EQU	00010000b
040045             0200*  vdp_pflag_rtc:			EQU	00100000b
040045             0201*  
040045             0202*  ;
040045             0203*  ; FatFS structures
040045             0204*  ; These mirror the structures contained in src_fatfs/ff.h in the MOS project
040045             0205*  ;
040045             0206*  ; Object ID and allocation information (FFOBJID)
040045             0207*  ;
040045             0208*  ; Indexes into FFOBJID structure
040045             0209*  ffobjid_fs:			EQU	0	; 3: Pointer to the hosting volume of this object
040045             0210*  ffobjid_id:			EQU	3	; 2: Hosting volume mount ID
040045             0211*  ffobjid_attr:		EQU	5	; 1: Object attribute
040045             0212*  ffobjid_stat:		EQU	6	; 1: Object chain status (b1-0: =0:not contiguous, =2:contiguous, =3:fragmented in this session, b2:sub-directory stretched)
040045             0213*  ffobjid_sclust:		EQU	7	; 4: Object data start cluster (0:no cluster or root directory)
040045             0214*  ffobjid_objsize:	EQU	11	; 4: Object size (valid when sclust != 0)
040045             0215*  ;
040045             0216*  ; File object structure (FIL)
040045             0217*  ;
040045             0218*  ; Indexes into FIL structure
040045             0219*  fil_obj:		EQU 0	; 15: Object identifier
040045             0220*  fil_flag:		EQU	15 	;  1: File status flags
040045             0221*  fil_err:		EQU	16	;  1: Abort flag (error code)
040045             0222*  fil_fptr:		EQU	17	;  4: File read/write pointer (Zeroed on file open)
040045             0223*  fil_clust:		EQU	21	;  4: Current cluster of fpter (invalid when fptr is 0)
040045             0224*  fil_sect:		EQU	25	;  4: Sector number appearing in buf[] (0:invalid)
040045             0225*  fil_dir_sect:	EQU	29	;  4: Sector number containing the directory entry
040045             0226*  fil_dir_ptr:	EQU	33	;  3: Pointer to the directory entry in the win[]
040045             0227*  ;
040045             0228*  ; Directory object structure (DIR)
040045             0229*  ; Indexes into DIR structure
040045             0230*  dir_obj:		EQU  0	; 15: Object identifier
040045             0231*  dir_dptr:		EQU	15	;  4: Current read/write offset
040045             0232*  dir_clust:		EQU	19	;  4: Current cluster
040045             0233*  dir_sect:		EQU	23	;  4: Current sector (0:Read operation has terminated)
040045             0234*  dir_dir:		EQU	27	;  3: Pointer to the directory item in the win[]
040045             0235*  dir_fn:			EQU	30	; 12: SFN (in/out) {body[8],ext[3],status[1]}
040045             0236*  dir_blk_ofs:	EQU	42	;  4: Offset of current entry block being processed (0xFFFFFFFF:Invalid)
040045             0237*  ;
040045             0238*  ; File information structure (FILINFO)
040045             0239*  ;
040045             0240*  ; Indexes into FILINFO structure
040045             0241*  filinfo_fsize:		EQU 0	;   4: File size
040045             0242*  filinfo_fdate:		EQU	4	;   2: Modified date
040045             0243*  filinfo_ftime:		EQU	6	;   2: Modified time
040045             0244*  filinfo_fattrib:	EQU	8	;   1: File attribute
040045             0245*  filinfo_altname:	EQU	9	;  13: Alternative file name
040045             0246*  filinfo_fname:		EQU	22	; 256: Primary file name
040045             0247*  ;
040045             0248*  ; Macro for calling the API
040045             0249*  ; Parameters:
040045             0250*  ; - function: One of the function numbers listed above
040045             0251*  ;
040045             0252*  	MACRO	MOSCALL	function
040045             0253*  			LD	A, function
040045             0254*  			RST.LIL	08h
040045             0255*  	ENDMACRO
040045             0012   	include "src/asm/vdu_sound.asm" ; also has macros
040045 00          0001*  last_channel: db 0
040046             0002*  max_channels: equ 6
040046             0003*  
040046             0004*  vdu_play_sfx:
040046 C9          0005*  vdu_play_sfx_disable: ret ; disabled by default, set to nop to enable
040047 22 7F 00 04 0006*      ld (@bufferId),hl
04004B ED 43 89 00 0007*      ld (@duration),bc
       04          
040050 3E 17       0008*      ld a,23
040052 32 81 00 04 0009*      ld (@bufferId+2),a
040056 3A 45 00 04 0010*      ld a,(last_channel)
04005A 3C          0011*      inc a
04005B             0012*      ; and 31 ; modulo 32
04005B FE 06       0013*      cp max_channels
04005D C2 62 00 04 0014*      jp nz,@load_channel
040061 AF          0015*      xor a
040062             0016*  @load_channel:
040062 32 45 00 04 0017*      ld (last_channel),a
040066 32 7C 00 04 0018*      ld (@channel0),a
04006A 32 84 00 04 0019*      ld (@channel1),a
04006E 21 79 00 04 0020*      ld hl, @sample
040072 01 12 00 00 0021*      ld bc, @sample_end - @sample
040076 5B DF       0022*      rst.lil $18
040078 C9          0023*      ret
040079             0024*  @sample:
040079             0025*  ; Command 4: Set waveform
040079             0026*  ; VDU 23, 0, &85, channel, 4, waveformOrSample, [bufferId;]
040079 17 00 85    0027*      .db 23,0,$85                        ; do sound
04007C             0028*  @channel0:
04007C 00 04 08    0029*      .db 0,4,8 ; channel, command, waveform
04007F             0030*  @bufferId:
04007F 00 00       0031*      .dw 0x0000
040081             0032*  ; Command 0: Play note
040081             0033*  ; VDU 23, 0, &85, channel, 0, volume, frequency; duration;
040081 17 00 85    0034*      .db 23,0,$85                        ; do sound
040084             0035*  @channel1:
040084 00 00 7F    0036*      .db 0,0,127                ; channel, volume
040087 00 00       0037*      .dw 0
040089             0038*  @duration:                              ; freq (tuneable samples only)
040089 00 00       0039*      .dw 0x0000                        ; duration
04008B             0040*  @sample_end:
04008B 00          0041*      .db 0x00 ; padding
04008C             0042*  
04008C             0043*  ; enable enough additional channels so that total enabled = max_channels
04008C             0044*  ; inputs: max_channels set
04008C             0045*  ; returns: nothing
04008C             0046*  ; destroys: af, bc, hl
04008C             0047*  vdu_enable_channels:
04008C 3E 06       0048*      ld a,max_channels
04008E D6 03       0049*      sub 3 ; subtract number of default channels already enabled
040090 F2 97 00 04 0050*      jp p,@loop
040094 C9          0051*      ret
040095 3E 03       0052*      ld a,3 ; first non-default channel
040097             0053*  @loop:
040097 32 B2 00 04 0054*      ld (@channel),a
04009B 21 AF 00 04 0055*      ld hl,@beg
04009F 01 05 00 00 0056*      ld bc,@end-@beg
0400A3 F5          0057*      push af
0400A4 5B DF       0058*      rst.lil $18
0400A6 F1          0059*      pop af
0400A7 3C          0060*      inc a
0400A8 FE 06       0061*      cp max_channels
0400AA C2 97 00 04 0062*      jp nz,@loop
0400AE C9          0063*      ret
0400AF             0064*  @beg:
0400AF 17 00 85    0065*              db 23, 0, $85
0400B2 00          0066*  @channel:   db 0
0400B3 08          0067*              db 8 ; command 8: enable channel
0400B4             0068*  @end:
0400B4             0069*  
0400B4             0070*  ; disable all but the three default sound channels
0400B4             0071*  ; inputs: max_channels set
0400B4             0072*  ; outputs: none
0400B4             0073*  ; destroys: ah,hl,bc
0400B4             0074*  vdu_disable_channels:
0400B4 3E 06       0075*      ld a,max_channels
0400B6 D6 03       0076*      sub 3 ; subtract number of default channels already enabled
0400B8 F2 BF 00 04 0077*      jp p,@loop
0400BC C9          0078*      ret
0400BD 3E 03       0079*      ld a,3 ; first non-default channel
0400BF             0080*  @loop:
0400BF 32 DA 00 04 0081*      ld (@channel),a
0400C3 21 D7 00 04 0082*      ld hl,@beg
0400C7 01 05 00 00 0083*      ld bc,@end-@beg
0400CB F5          0084*      push af
0400CC 5B DF       0085*      rst.lil $18
0400CE F1          0086*      pop af
0400CF 3C          0087*      inc a
0400D0 FE 06       0088*      cp max_channels
0400D2 C2 BF 00 04 0089*      jp nz,@loop
0400D6 C9          0090*      ret
0400D7             0091*  @beg:
0400D7 17 00 85    0092*      db 23, 0, $85
0400DA 00          0093*  @channel: db 0
0400DB 09          0094*      db 9 ; command 9: disable channel
0400DC             0095*  @end:
0400DC             0096*  
0400DC             0097*  
0400DC             0098*  ; ############################################################
0400DC             0099*  ; VDU SOUND API
0400DC             0100*  ; ############################################################
0400DC             0101*  ; Command 0: Play note
0400DC             0102*  ; VDU 23, 0, &85, channel, 0, volume, frequency; duration;
0400DC             0103*      MACRO PLAY_NOTE channel, volume, frequency, duration
0400DC             0104*      ld hl, @PLAY_NOTE_CMD        ; Start of command block
0400DC             0105*      ld bc, @PLAY_NOTE_END - @PLAY_NOTE_CMD  ; Command block size
0400DC             0106*      rst.lil $18
0400DC             0107*      jr @PLAY_NOTE_END
0400DC             0108*  @PLAY_NOTE_CMD:  db 23, 0, 0x85               ; Command header
0400DC             0109*                   db channel                  ; Channel, 0 (commented out)
0400DC             0110*                   db 0                        ; Play note command
0400DC             0111*                   db volume                   ; Volume
0400DC             0112*                   dw frequency                ; Frequency
0400DC             0113*                   dw duration                 ; Duration
0400DC             0114*  @PLAY_NOTE_END:
0400DC             0115*      ENDMACRO
0400DC             0116*  
0400DC             0117*      MACRO MUTE_CHANNEL channel
0400DC             0118*      ld hl, @MUTE_CHANNEL_CMD     ; Start of command block
0400DC             0119*      ld bc, @MUTE_CHANNEL_END - @MUTE_CHANNEL_CMD  ; Command block size
0400DC             0120*      rst.lil $18
0400DC             0121*      jr @MUTE_CHANNEL_END
0400DC             0122*  @MUTE_CHANNEL_CMD: db 23, 0, 0x85             ; Command header
0400DC             0123*                     db channel                ; Channel, 0 (commented out)
0400DC             0124*                     db 2                      ; Set volume command
0400DC             0125*                     db 0                      ; Volume (mute)
0400DC             0126*  @MUTE_CHANNEL_END:
0400DC             0127*      ENDMACRO
0400DC             0128*  
0400DC             0129*  ; inputs: c = channel, b = volume, hl = frequency; de = duration;
0400DC             0130*  vdu_play_note:
0400DC 79          0131*      ld a,c
0400DD 32 FD 00 04 0132*      ld (@channel),a
0400E1 78          0133*      ld a,b
0400E2 32 FF 00 04 0134*      ld (@volume),a
0400E6 22 00 01 04 0135*      ld (@frequency),hl
0400EA ED 53 02 01 0136*      ld (@duration),de
       04          
0400EF 21 FA 00 04 0137*      ld hl,@cmd
0400F3 01 0A 00 00 0138*      ld bc,@end-@cmd
0400F7 5B DF       0139*      rst.lil $18
0400F9 C9          0140*      ret
0400FA 17 00 85    0141*  @cmd:       db 23, 0, 0x85
0400FD 00          0142*  @channel:   db 0x00
0400FE 00          0143*              db 0x00 ; play note command
0400FF 00          0144*  @volume:    db 0x00
040100 00 00       0145*  @frequency: dw 0x0000
040102 00 00       0146*  @duration:  dw 0x0000
040104 00          0147*  @end:       db 0x00 ; padding
040105             0148*  
040105             0149*  ; Command 1: Status
040105             0150*  ; VDU 23, 0, &85, channel, 1
040105             0151*  ; inputs: a = channel
040105             0152*  ; Returns a bit mask indicating the status of the specified channel, or 255 if the channel is not valid, or has been disabled. The bit mask is as follows:
040105             0153*  ; Bit 	Name 	Meaning
040105             0154*  ; 0 	Active 	When set this indicates the channel is in use (has an active waveform)
040105             0155*  ; 1 	Playing 	Indicates the channel is actively playing a note, and thus will reject calls to play a new note
040105             0156*  ; 2 	Indefinite 	Set if the channel is playing an indefinite duration note
040105             0157*  ; 3 	Has Volume Envelope 	Set if the channel has a volume envelope
040105             0158*  ; 4 	Has Frequency Envelope 	Set if the channel has a frequency envelope
040105             0159*  
040105             0160*  ; Bits 5-7 are reserved for future use and, for enabled channels, will currently always be zero.
040105             0161*  vdu_channel_status:
040105 32 17 01 04 0162*      ld (@channel),a
040109 21 14 01 04 0163*      ld hl,@cmd
04010D 01 05 00 00 0164*      ld bc,@end-@cmd
040111 5B DF       0165*      rst.lil $18
040113 C9          0166*      ret
040114 17 00 85    0167*  @cmd:       db 23, 0, 0x85
040117 00          0168*  @channel:   db 0x00
040118 01          0169*              db 0x01 ; get channel status command
040119             0170*  @end:
040119             0171*  
040119             0172*  ; VDU 23, 0, &85, channel, 2, volume
040119             0173*  ; inputs: c = channel, b = volume
040119             0174*  ; Sets the volume of the specified channel. The volume is a value from 0 to 127, where 0 is silent and 127 is full volume. Values over 127 will be treated as 127 (with one exception described later).
040119             0175*  
040119             0176*  ; Specifying a channel of -1 (or 255) will set the global sound system volume level. (Requires Console8 VDP 2.5.0 or later.)
040119             0177*  
040119             0178*  ; Using this command provides more direct control over a channel than the play note command. It can be used to adjust the volume of a channel that is already playing a note.
040119             0179*  vdu_channel_volume:
040119 79          0180*      ld a,c
04011A 32 31 01 04 0181*      ld (@channel),a
04011E 78          0182*      ld a,b
04011F 32 33 01 04 0183*      ld (@volume),a
040123 21 2E 01 04 0184*      ld hl,@cmd
040127 01 06 00 00 0185*      ld bc,@end-@cmd
04012B 5B DF       0186*      rst.lil $18
04012D C9          0187*      ret
04012E 17 00 85    0188*  @cmd:       db 23, 0, 0x85
040131 00          0189*  @channel:   db 0x00
040132 02          0190*              db 0x02 ; set volume command
040133 00          0191*  @volume:    db 0x00
040134             0192*  @end:
040134             0193*  
040134             0194*  ; VDU 23, 0, &85, channel, 3, frequency;
040134             0195*  
040134             0196*  ; Sets the frequency of the specified channel. The frequency is a 16-bit value specifying in Hz the frequency of the note to be played.
040134             0197*  
040134             0198*  ; Using this command provides more direct control over a channel than the play note command. It can be used to adjust the frequency of a channel that is already playing a note.
040134             0199*  
040134             0200*  ; Returns 1 on success, 0 for failure.
040134             0201*  vdu_channel_frequency:
040134 79          0202*      ld a,c
040135 32 4C 01 04 0203*      ld (@channel),a
040139 ED 53 4E 01 0204*      ld (@frequency),de
       04          
04013E 21 49 01 04 0205*      ld hl,@cmd
040142 01 07 00 00 0206*      ld bc,@end-@cmd
040146 5B DF       0207*      rst.lil $18
040148 C9          0208*      ret
040149 17 00 85    0209*  @cmd:       db 23, 0, 0x85
04014C 00          0210*  @channel:   db 0x00
04014D 03          0211*              db 0x03 ; set frequency command
04014E 00 00       0212*  @frequency: dw 0x0000
040150 00          0213*  @end:       db 0x00 ; padding
040151             0214*  
040151             0215*  
040151             0216*  ; VDU 23, 0, &85, channel, 4, waveformOrSample, [bufferId;]
040151             0217*  ; inputs: c = channel, b = waveformOrSample, [hl = bufferId]
040151             0218*  ; Sets the waveform type for a channel to use. The waveformOrSample value is a single byte treated as a signed value.
040151             0219*  
040151             0220*  ; Using a negative value for the waveform indicates that a sample should be used instead. For more information see the documentation for the sample command.
040151             0221*  
040151             0222*  ; By default a channel is set to use waveform 0 (square wave).
040151             0223*  
040151             0224*  ; Valid waveform values are as follows:
040151             0225*  ; Value 	Waveform
040151             0226*  ; 0 	Square wave
040151             0227*  ; 1 	Triangle wave
040151             0228*  ; 2 	Sawtooth wave
040151             0229*  ; 3 	Sine wave
040151             0230*  ; 4 	Noise (simple white noise with no frequency support)
040151             0231*  ; 5 	VIC Noise (emulates a VIC6561; supports frequency)
040151             0232*  ; 8 	Sample (specifying a 16-bit buffer ID for sample data)
040151             0233*  
040151             0234*  vdu_channel_waveform:
040151 79          0235*      ld a,c
040152 32 77 01 04 0236*      ld (@channel),a
040156 78          0237*      ld a,b
040157 32 79 01 04 0238*      ld (@waveform),a
04015B FE 08       0239*      cp 8 ; check if the waveform is a sample
04015D 28 06       0240*      jr z, @sample
04015F 01 06 00 00 0241*      ld bc,@bufferId-@cmd
040163 18 08       0242*      jr @sendToVdu
040165             0243*  @sample:
040165 22 7A 01 04 0244*      ld (@bufferId),hl
040169 01 08 00 00 0245*      ld bc,@end-@cmd
04016D             0246*  @sendToVdu:
04016D 21 74 01 04 0247*      ld hl,@cmd
040171 5B DF       0248*      rst.lil $18
040173 C9          0249*      ret
040174 17 00 85    0250*  @cmd:       db 23, 0, 0x85
040177 00          0251*  @channel:   db 0x00
040178 04          0252*              db 0x04 ; set waveform command
040179 00          0253*  @waveform:  db 0x00
04017A 00 00       0254*  @bufferId:  dw 0x0000
04017C 00          0255*  @end:       db 0x00 ; padding
04017D             0256*  
04017D             0257*  
04017D             0258*  
04017D             0259*  ; VDU 23, 0, &85, 0, 5, 2, bufferId; format
04017D             0260*  ; inputs: hl = bufferId; a = format
04017D             0261*  ; The format parameter is an 8-bit value that indicates the format of the sample data. The following values are supported:
04017D             0262*  ; Value 	Description
04017D             0263*  ; 0 	8-bit signed, 16KHz
04017D             0264*  ; 1 	8-bit unsigned, 16KHz
04017D             0265*  vdu_buffer_to_sound:
04017D 22 96 01 04 0266*      ld (@bufferId),hl
040181 32 98 01 04 0267*      ld (@format),a
040185 21 90 01 04 0268*      ld hl,@cmd
040189 01 09 00 00 0269*      ld bc,@end-@cmd
04018D 5B DF       0270*      rst.lil $18
04018F C9          0271*      ret
040190 17 00 85    0272*  @cmd:       db 23, 0, 0x85
040193 00          0273*              db 0x00 ; a magic number that is always 0
040194 05          0274*              db 0x05 ; buffer to sound command
040195 02          0275*              db 0x02 ; a magic number that is always 2
040196 00 00       0276*  @bufferId:  dw 0x0000
040198 00          0277*  @format:    db 0x00
040199             0278*  @end:
040199             0279*  
040199             0280*  
040199             0281*  ; inputs: c = channel, b = volume, de = duration; hl = bufferId
040199             0282*  vdu_play_sample:
040199             0283*      ; populate input parameters
040199 79          0284*      ld a,c
04019A 32 C4 01 04 0285*      ld (@channel0),a
04019E 32 CC 01 04 0286*      ld (@channel1),a
0401A2 78          0287*      ld a,b
0401A3 32 CE 01 04 0288*      ld (@volume),a
0401A7 ED 53 CF 01 0289*      ld (@frequency),de
       04          
0401AC 22 C7 01 04 0290*      ld (@bufferId),hl
0401B0             0291*      ; clean up byte that got stomped on by bufferId load from hl
0401B0 3E 17       0292*      ld a,23
0401B2 32 C9 01 04 0293*      ld (@cmd1),a
0401B6             0294*      ; prep the vdu command string
0401B6 21 C1 01 04 0295*      ld hl, @cmd0
0401BA 01 12 00 00 0296*      ld bc, @end - @cmd0
0401BE 5B DF       0297*      rst.lil $18
0401C0 C9          0298*      ret
0401C1 17 00 85    0299*  @cmd0:       db 23, 0, 0x85
0401C4 00          0300*  @channel0:   db 0x00
0401C5 04          0301*               db 0x04 ; set waveform command
0401C6 08          0302*  @waveform:   db 0x08 ; sample
0401C7 00 00       0303*  @bufferId:   dw 0x0000
0401C9 17 00 85    0304*  @cmd1:       db 23, 0, 0x85
0401CC 00          0305*  @channel1:   db 0x00
0401CD 00          0306*               db 0x00 ; play note command
0401CE 00          0307*  @volume:     db 0x00
0401CF 00 00       0308*  @frequency:  dw 0x00 ; no effect unless buffer has been set to tuneable sample
0401D1 00 00       0309*  @duration:   dw 0x0000 ; milliseconds
0401D3 00          0310*  @end:        db 0x00 ; padding
0401D4             0013   	include "src/asm/images.asm"
0401D4             0001*  ; This file is created by build_91_asm_img_looad.py, do not edit it!
0401D4             0002*  
0401D4             0003*  ; cube buffer ids:
0401D4             0004*  BUF_10_000: equ 0x0100
0401D4             0005*  BUF_10_001: equ 0x0101
0401D4             0006*  BUF_10_002: equ 0x0102
0401D4             0007*  BUF_10_007: equ 0x0103
0401D4             0008*  BUF_10_012: equ 0x0104
0401D4             0009*  BUF_10_013: equ 0x0105
0401D4             0010*  BUF_10_014: equ 0x0106
0401D4             0011*  BUF_10_015: equ 0x0107
0401D4             0012*  BUF_10_016: equ 0x0108
0401D4             0013*  BUF_10_017: equ 0x0109
0401D4             0014*  BUF_10_018: equ 0x010A
0401D4             0015*  BUF_10_019: equ 0x010B
0401D4             0016*  BUF_10_023: equ 0x010C
0401D4             0017*  BUF_10_027: equ 0x010D
0401D4             0018*  BUF_10_028: equ 0x010E
0401D4             0019*  BUF_10_029: equ 0x010F
0401D4             0020*  BUF_10_030: equ 0x0110
0401D4             0021*  BUF_10_031: equ 0x0111
0401D4             0022*  BUF_10_032: equ 0x0112
0401D4             0023*  BUF_10_035: equ 0x0113
0401D4             0024*  BUF_10_038: equ 0x0114
0401D4             0025*  BUF_10_039: equ 0x0115
0401D4             0026*  BUF_10_040: equ 0x0116
0401D4             0027*  BUF_10_041: equ 0x0117
0401D4             0028*  BUF_10_043: equ 0x0118
0401D4             0029*  BUF_10_045: equ 0x0119
0401D4             0030*  BUF_10_046: equ 0x011A
0401D4             0031*  BUF_10_047: equ 0x011B
0401D4             0032*  BUF_11_000: equ 0x011C
0401D4             0033*  BUF_11_001: equ 0x011D
0401D4             0034*  BUF_11_002: equ 0x011E
0401D4             0035*  BUF_11_007: equ 0x011F
0401D4             0036*  BUF_11_012: equ 0x0120
0401D4             0037*  BUF_11_013: equ 0x0121
0401D4             0038*  BUF_11_014: equ 0x0122
0401D4             0039*  BUF_11_015: equ 0x0123
0401D4             0040*  BUF_11_016: equ 0x0124
0401D4             0041*  BUF_11_017: equ 0x0125
0401D4             0042*  BUF_11_018: equ 0x0126
0401D4             0043*  BUF_11_019: equ 0x0127
0401D4             0044*  BUF_11_023: equ 0x0128
0401D4             0045*  BUF_11_027: equ 0x0129
0401D4             0046*  BUF_11_028: equ 0x012A
0401D4             0047*  BUF_11_029: equ 0x012B
0401D4             0048*  BUF_11_030: equ 0x012C
0401D4             0049*  BUF_11_031: equ 0x012D
0401D4             0050*  BUF_11_032: equ 0x012E
0401D4             0051*  BUF_11_035: equ 0x012F
0401D4             0052*  BUF_11_038: equ 0x0130
0401D4             0053*  BUF_11_039: equ 0x0131
0401D4             0054*  BUF_11_040: equ 0x0132
0401D4             0055*  BUF_11_041: equ 0x0133
0401D4             0056*  BUF_11_043: equ 0x0134
0401D4             0057*  BUF_11_045: equ 0x0135
0401D4             0058*  BUF_11_046: equ 0x0136
0401D4             0059*  BUF_11_047: equ 0x0137
0401D4             0060*  BUF_12_000: equ 0x0138
0401D4             0061*  BUF_12_001: equ 0x0139
0401D4             0062*  BUF_12_002: equ 0x013A
0401D4             0063*  BUF_12_007: equ 0x013B
0401D4             0064*  BUF_12_012: equ 0x013C
0401D4             0065*  BUF_12_013: equ 0x013D
0401D4             0066*  BUF_12_014: equ 0x013E
0401D4             0067*  BUF_12_015: equ 0x013F
0401D4             0068*  BUF_12_016: equ 0x0140
0401D4             0069*  BUF_12_017: equ 0x0141
0401D4             0070*  BUF_12_018: equ 0x0142
0401D4             0071*  BUF_12_019: equ 0x0143
0401D4             0072*  BUF_12_023: equ 0x0144
0401D4             0073*  BUF_12_027: equ 0x0145
0401D4             0074*  BUF_12_028: equ 0x0146
0401D4             0075*  BUF_12_029: equ 0x0147
0401D4             0076*  BUF_12_030: equ 0x0148
0401D4             0077*  BUF_12_031: equ 0x0149
0401D4             0078*  BUF_12_032: equ 0x014A
0401D4             0079*  BUF_12_035: equ 0x014B
0401D4             0080*  BUF_12_038: equ 0x014C
0401D4             0081*  BUF_12_039: equ 0x014D
0401D4             0082*  BUF_12_040: equ 0x014E
0401D4             0083*  BUF_12_041: equ 0x014F
0401D4             0084*  BUF_12_043: equ 0x0150
0401D4             0085*  BUF_12_045: equ 0x0151
0401D4             0086*  BUF_12_046: equ 0x0152
0401D4             0087*  BUF_12_047: equ 0x0153
0401D4             0088*  BUF_13_000: equ 0x0154
0401D4             0089*  BUF_13_001: equ 0x0155
0401D4             0090*  BUF_13_002: equ 0x0156
0401D4             0091*  BUF_13_007: equ 0x0157
0401D4             0092*  BUF_13_012: equ 0x0158
0401D4             0093*  BUF_13_013: equ 0x0159
0401D4             0094*  BUF_13_014: equ 0x015A
0401D4             0095*  BUF_13_015: equ 0x015B
0401D4             0096*  BUF_13_016: equ 0x015C
0401D4             0097*  BUF_13_017: equ 0x015D
0401D4             0098*  BUF_13_018: equ 0x015E
0401D4             0099*  BUF_13_019: equ 0x015F
0401D4             0100*  BUF_13_023: equ 0x0160
0401D4             0101*  BUF_13_027: equ 0x0161
0401D4             0102*  BUF_13_028: equ 0x0162
0401D4             0103*  BUF_13_029: equ 0x0163
0401D4             0104*  BUF_13_030: equ 0x0164
0401D4             0105*  BUF_13_031: equ 0x0165
0401D4             0106*  BUF_13_032: equ 0x0166
0401D4             0107*  BUF_13_035: equ 0x0167
0401D4             0108*  BUF_13_038: equ 0x0168
0401D4             0109*  BUF_13_039: equ 0x0169
0401D4             0110*  BUF_13_040: equ 0x016A
0401D4             0111*  BUF_13_041: equ 0x016B
0401D4             0112*  BUF_13_043: equ 0x016C
0401D4             0113*  BUF_13_045: equ 0x016D
0401D4             0114*  BUF_13_046: equ 0x016E
0401D4             0115*  BUF_13_047: equ 0x016F
0401D4             0116*  BUF_14_000: equ 0x0170
0401D4             0117*  BUF_14_001: equ 0x0171
0401D4             0118*  BUF_14_002: equ 0x0172
0401D4             0119*  BUF_14_007: equ 0x0173
0401D4             0120*  BUF_14_012: equ 0x0174
0401D4             0121*  BUF_14_013: equ 0x0175
0401D4             0122*  BUF_14_014: equ 0x0176
0401D4             0123*  BUF_14_015: equ 0x0177
0401D4             0124*  BUF_14_016: equ 0x0178
0401D4             0125*  BUF_14_017: equ 0x0179
0401D4             0126*  BUF_14_018: equ 0x017A
0401D4             0127*  BUF_14_019: equ 0x017B
0401D4             0128*  BUF_14_023: equ 0x017C
0401D4             0129*  BUF_14_027: equ 0x017D
0401D4             0130*  BUF_14_028: equ 0x017E
0401D4             0131*  BUF_14_029: equ 0x017F
0401D4             0132*  BUF_14_030: equ 0x0180
0401D4             0133*  BUF_14_031: equ 0x0181
0401D4             0134*  BUF_14_032: equ 0x0182
0401D4             0135*  BUF_14_035: equ 0x0183
0401D4             0136*  BUF_14_038: equ 0x0184
0401D4             0137*  BUF_14_039: equ 0x0185
0401D4             0138*  BUF_14_040: equ 0x0186
0401D4             0139*  BUF_14_041: equ 0x0187
0401D4             0140*  BUF_14_043: equ 0x0188
0401D4             0141*  BUF_14_045: equ 0x0189
0401D4             0142*  BUF_14_046: equ 0x018A
0401D4             0143*  BUF_14_047: equ 0x018B
0401D4             0144*  BUF_15_000: equ 0x018C
0401D4             0145*  BUF_15_001: equ 0x018D
0401D4             0146*  BUF_15_002: equ 0x018E
0401D4             0147*  BUF_15_007: equ 0x018F
0401D4             0148*  BUF_15_012: equ 0x0190
0401D4             0149*  BUF_15_013: equ 0x0191
0401D4             0150*  BUF_15_014: equ 0x0192
0401D4             0151*  BUF_15_015: equ 0x0193
0401D4             0152*  BUF_15_016: equ 0x0194
0401D4             0153*  BUF_15_017: equ 0x0195
0401D4             0154*  BUF_15_018: equ 0x0196
0401D4             0155*  BUF_15_019: equ 0x0197
0401D4             0156*  BUF_15_023: equ 0x0198
0401D4             0157*  BUF_15_027: equ 0x0199
0401D4             0158*  BUF_15_028: equ 0x019A
0401D4             0159*  BUF_15_029: equ 0x019B
0401D4             0160*  BUF_15_030: equ 0x019C
0401D4             0161*  BUF_15_031: equ 0x019D
0401D4             0162*  BUF_15_032: equ 0x019E
0401D4             0163*  BUF_15_035: equ 0x019F
0401D4             0164*  BUF_15_038: equ 0x01A0
0401D4             0165*  BUF_15_039: equ 0x01A1
0401D4             0166*  BUF_15_040: equ 0x01A2
0401D4             0167*  BUF_15_041: equ 0x01A3
0401D4             0168*  BUF_15_043: equ 0x01A4
0401D4             0169*  BUF_15_045: equ 0x01A5
0401D4             0170*  BUF_15_046: equ 0x01A6
0401D4             0171*  BUF_15_047: equ 0x01A7
0401D4             0172*  BUF_16_000: equ 0x01A8
0401D4             0173*  BUF_16_001: equ 0x01A9
0401D4             0174*  BUF_16_002: equ 0x01AA
0401D4             0175*  BUF_16_007: equ 0x01AB
0401D4             0176*  BUF_16_012: equ 0x01AC
0401D4             0177*  BUF_16_013: equ 0x01AD
0401D4             0178*  BUF_16_014: equ 0x01AE
0401D4             0179*  BUF_16_015: equ 0x01AF
0401D4             0180*  BUF_16_016: equ 0x01B0
0401D4             0181*  BUF_16_017: equ 0x01B1
0401D4             0182*  BUF_16_018: equ 0x01B2
0401D4             0183*  BUF_16_019: equ 0x01B3
0401D4             0184*  BUF_16_023: equ 0x01B4
0401D4             0185*  BUF_16_027: equ 0x01B5
0401D4             0186*  BUF_16_028: equ 0x01B6
0401D4             0187*  BUF_16_029: equ 0x01B7
0401D4             0188*  BUF_16_030: equ 0x01B8
0401D4             0189*  BUF_16_031: equ 0x01B9
0401D4             0190*  BUF_16_032: equ 0x01BA
0401D4             0191*  BUF_16_035: equ 0x01BB
0401D4             0192*  BUF_16_038: equ 0x01BC
0401D4             0193*  BUF_16_039: equ 0x01BD
0401D4             0194*  BUF_16_040: equ 0x01BE
0401D4             0195*  BUF_16_041: equ 0x01BF
0401D4             0196*  BUF_16_043: equ 0x01C0
0401D4             0197*  BUF_16_045: equ 0x01C1
0401D4             0198*  BUF_16_046: equ 0x01C2
0401D4             0199*  BUF_16_047: equ 0x01C3
0401D4             0200*  BUF_17_000: equ 0x01C4
0401D4             0201*  BUF_17_001: equ 0x01C5
0401D4             0202*  BUF_17_002: equ 0x01C6
0401D4             0203*  BUF_17_007: equ 0x01C7
0401D4             0204*  BUF_17_012: equ 0x01C8
0401D4             0205*  BUF_17_013: equ 0x01C9
0401D4             0206*  BUF_17_014: equ 0x01CA
0401D4             0207*  BUF_17_015: equ 0x01CB
0401D4             0208*  BUF_17_016: equ 0x01CC
0401D4             0209*  BUF_17_017: equ 0x01CD
0401D4             0210*  BUF_17_018: equ 0x01CE
0401D4             0211*  BUF_17_019: equ 0x01CF
0401D4             0212*  BUF_17_023: equ 0x01D0
0401D4             0213*  BUF_17_027: equ 0x01D1
0401D4             0214*  BUF_17_028: equ 0x01D2
0401D4             0215*  BUF_17_029: equ 0x01D3
0401D4             0216*  BUF_17_030: equ 0x01D4
0401D4             0217*  BUF_17_031: equ 0x01D5
0401D4             0218*  BUF_17_032: equ 0x01D6
0401D4             0219*  BUF_17_035: equ 0x01D7
0401D4             0220*  BUF_17_038: equ 0x01D8
0401D4             0221*  BUF_17_039: equ 0x01D9
0401D4             0222*  BUF_17_040: equ 0x01DA
0401D4             0223*  BUF_17_041: equ 0x01DB
0401D4             0224*  BUF_17_043: equ 0x01DC
0401D4             0225*  BUF_17_045: equ 0x01DD
0401D4             0226*  BUF_17_046: equ 0x01DE
0401D4             0227*  BUF_17_047: equ 0x01DF
0401D4             0228*  BUF_57_000: equ 0x01E0
0401D4             0229*  BUF_57_001: equ 0x01E1
0401D4             0230*  BUF_57_002: equ 0x01E2
0401D4             0231*  BUF_57_007: equ 0x01E3
0401D4             0232*  BUF_57_012: equ 0x01E4
0401D4             0233*  BUF_57_013: equ 0x01E5
0401D4             0234*  BUF_57_014: equ 0x01E6
0401D4             0235*  BUF_57_015: equ 0x01E7
0401D4             0236*  BUF_57_016: equ 0x01E8
0401D4             0237*  BUF_57_017: equ 0x01E9
0401D4             0238*  BUF_57_018: equ 0x01EA
0401D4             0239*  BUF_57_019: equ 0x01EB
0401D4             0240*  BUF_57_023: equ 0x01EC
0401D4             0241*  BUF_57_027: equ 0x01ED
0401D4             0242*  BUF_57_028: equ 0x01EE
0401D4             0243*  BUF_57_029: equ 0x01EF
0401D4             0244*  BUF_57_030: equ 0x01F0
0401D4             0245*  BUF_57_031: equ 0x01F1
0401D4             0246*  BUF_57_032: equ 0x01F2
0401D4             0247*  BUF_57_035: equ 0x01F3
0401D4             0248*  BUF_57_038: equ 0x01F4
0401D4             0249*  BUF_57_039: equ 0x01F5
0401D4             0250*  BUF_57_040: equ 0x01F6
0401D4             0251*  BUF_57_041: equ 0x01F7
0401D4             0252*  BUF_57_043: equ 0x01F8
0401D4             0253*  BUF_57_045: equ 0x01F9
0401D4             0254*  BUF_57_046: equ 0x01FA
0401D4             0255*  BUF_57_047: equ 0x01FB
0401D4             0256*  BUF_58_000: equ 0x01FC
0401D4             0257*  BUF_58_001: equ 0x01FD
0401D4             0258*  BUF_58_002: equ 0x01FE
0401D4             0259*  BUF_58_007: equ 0x01FF
0401D4             0260*  BUF_58_012: equ 0x0200
0401D4             0261*  BUF_58_013: equ 0x0201
0401D4             0262*  BUF_58_014: equ 0x0202
0401D4             0263*  BUF_58_015: equ 0x0203
0401D4             0264*  BUF_58_016: equ 0x0204
0401D4             0265*  BUF_58_017: equ 0x0205
0401D4             0266*  BUF_58_018: equ 0x0206
0401D4             0267*  BUF_58_019: equ 0x0207
0401D4             0268*  BUF_58_023: equ 0x0208
0401D4             0269*  BUF_58_027: equ 0x0209
0401D4             0270*  BUF_58_028: equ 0x020A
0401D4             0271*  BUF_58_029: equ 0x020B
0401D4             0272*  BUF_58_030: equ 0x020C
0401D4             0273*  BUF_58_031: equ 0x020D
0401D4             0274*  BUF_58_032: equ 0x020E
0401D4             0275*  BUF_58_035: equ 0x020F
0401D4             0276*  BUF_58_038: equ 0x0210
0401D4             0277*  BUF_58_039: equ 0x0211
0401D4             0278*  BUF_58_040: equ 0x0212
0401D4             0279*  BUF_58_041: equ 0x0213
0401D4             0280*  BUF_58_043: equ 0x0214
0401D4             0281*  BUF_58_045: equ 0x0215
0401D4             0282*  BUF_58_046: equ 0x0216
0401D4             0283*  BUF_58_047: equ 0x0217
0401D4             0284*  BUF_59_000: equ 0x0218
0401D4             0285*  BUF_59_001: equ 0x0219
0401D4             0286*  BUF_59_002: equ 0x021A
0401D4             0287*  BUF_59_007: equ 0x021B
0401D4             0288*  BUF_59_012: equ 0x021C
0401D4             0289*  BUF_59_013: equ 0x021D
0401D4             0290*  BUF_59_014: equ 0x021E
0401D4             0291*  BUF_59_015: equ 0x021F
0401D4             0292*  BUF_59_016: equ 0x0220
0401D4             0293*  BUF_59_017: equ 0x0221
0401D4             0294*  BUF_59_018: equ 0x0222
0401D4             0295*  BUF_59_019: equ 0x0223
0401D4             0296*  BUF_59_023: equ 0x0224
0401D4             0297*  BUF_59_027: equ 0x0225
0401D4             0298*  BUF_59_028: equ 0x0226
0401D4             0299*  BUF_59_029: equ 0x0227
0401D4             0300*  BUF_59_030: equ 0x0228
0401D4             0301*  BUF_59_031: equ 0x0229
0401D4             0302*  BUF_59_032: equ 0x022A
0401D4             0303*  BUF_59_035: equ 0x022B
0401D4             0304*  BUF_59_038: equ 0x022C
0401D4             0305*  BUF_59_039: equ 0x022D
0401D4             0306*  BUF_59_040: equ 0x022E
0401D4             0307*  BUF_59_041: equ 0x022F
0401D4             0308*  BUF_59_043: equ 0x0230
0401D4             0309*  BUF_59_045: equ 0x0231
0401D4             0310*  BUF_59_046: equ 0x0232
0401D4             0311*  BUF_59_047: equ 0x0233
0401D4             0312*  
0401D4             0313*  cube_num_panels: equ 308
0401D4             0314*  
0401D4             0315*  ; cube buffer id reverse lookup:
0401D4             0316*  cube_buffer_id_lut:
0401D4 00 01 00    0317*  	dl BUF_10_000
0401D7 01 01 00    0318*  	dl BUF_10_001
0401DA 02 01 00    0319*  	dl BUF_10_002
0401DD 03 01 00    0320*  	dl BUF_10_007
0401E0 04 01 00    0321*  	dl BUF_10_012
0401E3 05 01 00    0322*  	dl BUF_10_013
0401E6 06 01 00    0323*  	dl BUF_10_014
0401E9 07 01 00    0324*  	dl BUF_10_015
0401EC 08 01 00    0325*  	dl BUF_10_016
0401EF 09 01 00    0326*  	dl BUF_10_017
0401F2 0A 01 00    0327*  	dl BUF_10_018
0401F5 0B 01 00    0328*  	dl BUF_10_019
0401F8 0C 01 00    0329*  	dl BUF_10_023
0401FB 0D 01 00    0330*  	dl BUF_10_027
0401FE 0E 01 00    0331*  	dl BUF_10_028
040201 0F 01 00    0332*  	dl BUF_10_029
040204 10 01 00    0333*  	dl BUF_10_030
040207 11 01 00    0334*  	dl BUF_10_031
04020A 12 01 00    0335*  	dl BUF_10_032
04020D 13 01 00    0336*  	dl BUF_10_035
040210 14 01 00    0337*  	dl BUF_10_038
040213 15 01 00    0338*  	dl BUF_10_039
040216 16 01 00    0339*  	dl BUF_10_040
040219 17 01 00    0340*  	dl BUF_10_041
04021C 18 01 00    0341*  	dl BUF_10_043
04021F 19 01 00    0342*  	dl BUF_10_045
040222 1A 01 00    0343*  	dl BUF_10_046
040225 1B 01 00    0344*  	dl BUF_10_047
040228 1C 01 00    0345*  	dl BUF_11_000
04022B 1D 01 00    0346*  	dl BUF_11_001
04022E 1E 01 00    0347*  	dl BUF_11_002
040231 1F 01 00    0348*  	dl BUF_11_007
040234 20 01 00    0349*  	dl BUF_11_012
040237 21 01 00    0350*  	dl BUF_11_013
04023A 22 01 00    0351*  	dl BUF_11_014
04023D 23 01 00    0352*  	dl BUF_11_015
040240 24 01 00    0353*  	dl BUF_11_016
040243 25 01 00    0354*  	dl BUF_11_017
040246 26 01 00    0355*  	dl BUF_11_018
040249 27 01 00    0356*  	dl BUF_11_019
04024C 28 01 00    0357*  	dl BUF_11_023
04024F 29 01 00    0358*  	dl BUF_11_027
040252 2A 01 00    0359*  	dl BUF_11_028
040255 2B 01 00    0360*  	dl BUF_11_029
040258 2C 01 00    0361*  	dl BUF_11_030
04025B 2D 01 00    0362*  	dl BUF_11_031
04025E 2E 01 00    0363*  	dl BUF_11_032
040261 2F 01 00    0364*  	dl BUF_11_035
040264 30 01 00    0365*  	dl BUF_11_038
040267 31 01 00    0366*  	dl BUF_11_039
04026A 32 01 00    0367*  	dl BUF_11_040
04026D 33 01 00    0368*  	dl BUF_11_041
040270 34 01 00    0369*  	dl BUF_11_043
040273 35 01 00    0370*  	dl BUF_11_045
040276 36 01 00    0371*  	dl BUF_11_046
040279 37 01 00    0372*  	dl BUF_11_047
04027C 38 01 00    0373*  	dl BUF_12_000
04027F 39 01 00    0374*  	dl BUF_12_001
040282 3A 01 00    0375*  	dl BUF_12_002
040285 3B 01 00    0376*  	dl BUF_12_007
040288 3C 01 00    0377*  	dl BUF_12_012
04028B 3D 01 00    0378*  	dl BUF_12_013
04028E 3E 01 00    0379*  	dl BUF_12_014
040291 3F 01 00    0380*  	dl BUF_12_015
040294 40 01 00    0381*  	dl BUF_12_016
040297 41 01 00    0382*  	dl BUF_12_017
04029A 42 01 00    0383*  	dl BUF_12_018
04029D 43 01 00    0384*  	dl BUF_12_019
0402A0 44 01 00    0385*  	dl BUF_12_023
0402A3 45 01 00    0386*  	dl BUF_12_027
0402A6 46 01 00    0387*  	dl BUF_12_028
0402A9 47 01 00    0388*  	dl BUF_12_029
0402AC 48 01 00    0389*  	dl BUF_12_030
0402AF 49 01 00    0390*  	dl BUF_12_031
0402B2 4A 01 00    0391*  	dl BUF_12_032
0402B5 4B 01 00    0392*  	dl BUF_12_035
0402B8 4C 01 00    0393*  	dl BUF_12_038
0402BB 4D 01 00    0394*  	dl BUF_12_039
0402BE 4E 01 00    0395*  	dl BUF_12_040
0402C1 4F 01 00    0396*  	dl BUF_12_041
0402C4 50 01 00    0397*  	dl BUF_12_043
0402C7 51 01 00    0398*  	dl BUF_12_045
0402CA 52 01 00    0399*  	dl BUF_12_046
0402CD 53 01 00    0400*  	dl BUF_12_047
0402D0 54 01 00    0401*  	dl BUF_13_000
0402D3 55 01 00    0402*  	dl BUF_13_001
0402D6 56 01 00    0403*  	dl BUF_13_002
0402D9 57 01 00    0404*  	dl BUF_13_007
0402DC 58 01 00    0405*  	dl BUF_13_012
0402DF 59 01 00    0406*  	dl BUF_13_013
0402E2 5A 01 00    0407*  	dl BUF_13_014
0402E5 5B 01 00    0408*  	dl BUF_13_015
0402E8 5C 01 00    0409*  	dl BUF_13_016
0402EB 5D 01 00    0410*  	dl BUF_13_017
0402EE 5E 01 00    0411*  	dl BUF_13_018
0402F1 5F 01 00    0412*  	dl BUF_13_019
0402F4 60 01 00    0413*  	dl BUF_13_023
0402F7 61 01 00    0414*  	dl BUF_13_027
0402FA 62 01 00    0415*  	dl BUF_13_028
0402FD 63 01 00    0416*  	dl BUF_13_029
040300 64 01 00    0417*  	dl BUF_13_030
040303 65 01 00    0418*  	dl BUF_13_031
040306 66 01 00    0419*  	dl BUF_13_032
040309 67 01 00    0420*  	dl BUF_13_035
04030C 68 01 00    0421*  	dl BUF_13_038
04030F 69 01 00    0422*  	dl BUF_13_039
040312 6A 01 00    0423*  	dl BUF_13_040
040315 6B 01 00    0424*  	dl BUF_13_041
040318 6C 01 00    0425*  	dl BUF_13_043
04031B 6D 01 00    0426*  	dl BUF_13_045
04031E 6E 01 00    0427*  	dl BUF_13_046
040321 6F 01 00    0428*  	dl BUF_13_047
040324 70 01 00    0429*  	dl BUF_14_000
040327 71 01 00    0430*  	dl BUF_14_001
04032A 72 01 00    0431*  	dl BUF_14_002
04032D 73 01 00    0432*  	dl BUF_14_007
040330 74 01 00    0433*  	dl BUF_14_012
040333 75 01 00    0434*  	dl BUF_14_013
040336 76 01 00    0435*  	dl BUF_14_014
040339 77 01 00    0436*  	dl BUF_14_015
04033C 78 01 00    0437*  	dl BUF_14_016
04033F 79 01 00    0438*  	dl BUF_14_017
040342 7A 01 00    0439*  	dl BUF_14_018
040345 7B 01 00    0440*  	dl BUF_14_019
040348 7C 01 00    0441*  	dl BUF_14_023
04034B 7D 01 00    0442*  	dl BUF_14_027
04034E 7E 01 00    0443*  	dl BUF_14_028
040351 7F 01 00    0444*  	dl BUF_14_029
040354 80 01 00    0445*  	dl BUF_14_030
040357 81 01 00    0446*  	dl BUF_14_031
04035A 82 01 00    0447*  	dl BUF_14_032
04035D 83 01 00    0448*  	dl BUF_14_035
040360 84 01 00    0449*  	dl BUF_14_038
040363 85 01 00    0450*  	dl BUF_14_039
040366 86 01 00    0451*  	dl BUF_14_040
040369 87 01 00    0452*  	dl BUF_14_041
04036C 88 01 00    0453*  	dl BUF_14_043
04036F 89 01 00    0454*  	dl BUF_14_045
040372 8A 01 00    0455*  	dl BUF_14_046
040375 8B 01 00    0456*  	dl BUF_14_047
040378 8C 01 00    0457*  	dl BUF_15_000
04037B 8D 01 00    0458*  	dl BUF_15_001
04037E 8E 01 00    0459*  	dl BUF_15_002
040381 8F 01 00    0460*  	dl BUF_15_007
040384 90 01 00    0461*  	dl BUF_15_012
040387 91 01 00    0462*  	dl BUF_15_013
04038A 92 01 00    0463*  	dl BUF_15_014
04038D 93 01 00    0464*  	dl BUF_15_015
040390 94 01 00    0465*  	dl BUF_15_016
040393 95 01 00    0466*  	dl BUF_15_017
040396 96 01 00    0467*  	dl BUF_15_018
040399 97 01 00    0468*  	dl BUF_15_019
04039C 98 01 00    0469*  	dl BUF_15_023
04039F 99 01 00    0470*  	dl BUF_15_027
0403A2 9A 01 00    0471*  	dl BUF_15_028
0403A5 9B 01 00    0472*  	dl BUF_15_029
0403A8 9C 01 00    0473*  	dl BUF_15_030
0403AB 9D 01 00    0474*  	dl BUF_15_031
0403AE 9E 01 00    0475*  	dl BUF_15_032
0403B1 9F 01 00    0476*  	dl BUF_15_035
0403B4 A0 01 00    0477*  	dl BUF_15_038
0403B7 A1 01 00    0478*  	dl BUF_15_039
0403BA A2 01 00    0479*  	dl BUF_15_040
0403BD A3 01 00    0480*  	dl BUF_15_041
0403C0 A4 01 00    0481*  	dl BUF_15_043
0403C3 A5 01 00    0482*  	dl BUF_15_045
0403C6 A6 01 00    0483*  	dl BUF_15_046
0403C9 A7 01 00    0484*  	dl BUF_15_047
0403CC A8 01 00    0485*  	dl BUF_16_000
0403CF A9 01 00    0486*  	dl BUF_16_001
0403D2 AA 01 00    0487*  	dl BUF_16_002
0403D5 AB 01 00    0488*  	dl BUF_16_007
0403D8 AC 01 00    0489*  	dl BUF_16_012
0403DB AD 01 00    0490*  	dl BUF_16_013
0403DE AE 01 00    0491*  	dl BUF_16_014
0403E1 AF 01 00    0492*  	dl BUF_16_015
0403E4 B0 01 00    0493*  	dl BUF_16_016
0403E7 B1 01 00    0494*  	dl BUF_16_017
0403EA B2 01 00    0495*  	dl BUF_16_018
0403ED B3 01 00    0496*  	dl BUF_16_019
0403F0 B4 01 00    0497*  	dl BUF_16_023
0403F3 B5 01 00    0498*  	dl BUF_16_027
0403F6 B6 01 00    0499*  	dl BUF_16_028
0403F9 B7 01 00    0500*  	dl BUF_16_029
0403FC B8 01 00    0501*  	dl BUF_16_030
0403FF B9 01 00    0502*  	dl BUF_16_031
040402 BA 01 00    0503*  	dl BUF_16_032
040405 BB 01 00    0504*  	dl BUF_16_035
040408 BC 01 00    0505*  	dl BUF_16_038
04040B BD 01 00    0506*  	dl BUF_16_039
04040E BE 01 00    0507*  	dl BUF_16_040
040411 BF 01 00    0508*  	dl BUF_16_041
040414 C0 01 00    0509*  	dl BUF_16_043
040417 C1 01 00    0510*  	dl BUF_16_045
04041A C2 01 00    0511*  	dl BUF_16_046
04041D C3 01 00    0512*  	dl BUF_16_047
040420 C4 01 00    0513*  	dl BUF_17_000
040423 C5 01 00    0514*  	dl BUF_17_001
040426 C6 01 00    0515*  	dl BUF_17_002
040429 C7 01 00    0516*  	dl BUF_17_007
04042C C8 01 00    0517*  	dl BUF_17_012
04042F C9 01 00    0518*  	dl BUF_17_013
040432 CA 01 00    0519*  	dl BUF_17_014
040435 CB 01 00    0520*  	dl BUF_17_015
040438 CC 01 00    0521*  	dl BUF_17_016
04043B CD 01 00    0522*  	dl BUF_17_017
04043E CE 01 00    0523*  	dl BUF_17_018
040441 CF 01 00    0524*  	dl BUF_17_019
040444 D0 01 00    0525*  	dl BUF_17_023
040447 D1 01 00    0526*  	dl BUF_17_027
04044A D2 01 00    0527*  	dl BUF_17_028
04044D D3 01 00    0528*  	dl BUF_17_029
040450 D4 01 00    0529*  	dl BUF_17_030
040453 D5 01 00    0530*  	dl BUF_17_031
040456 D6 01 00    0531*  	dl BUF_17_032
040459 D7 01 00    0532*  	dl BUF_17_035
04045C D8 01 00    0533*  	dl BUF_17_038
04045F D9 01 00    0534*  	dl BUF_17_039
040462 DA 01 00    0535*  	dl BUF_17_040
040465 DB 01 00    0536*  	dl BUF_17_041
040468 DC 01 00    0537*  	dl BUF_17_043
04046B DD 01 00    0538*  	dl BUF_17_045
04046E DE 01 00    0539*  	dl BUF_17_046
040471 DF 01 00    0540*  	dl BUF_17_047
040474 E0 01 00    0541*  	dl BUF_57_000
040477 E1 01 00    0542*  	dl BUF_57_001
04047A E2 01 00    0543*  	dl BUF_57_002
04047D E3 01 00    0544*  	dl BUF_57_007
040480 E4 01 00    0545*  	dl BUF_57_012
040483 E5 01 00    0546*  	dl BUF_57_013
040486 E6 01 00    0547*  	dl BUF_57_014
040489 E7 01 00    0548*  	dl BUF_57_015
04048C E8 01 00    0549*  	dl BUF_57_016
04048F E9 01 00    0550*  	dl BUF_57_017
040492 EA 01 00    0551*  	dl BUF_57_018
040495 EB 01 00    0552*  	dl BUF_57_019
040498 EC 01 00    0553*  	dl BUF_57_023
04049B ED 01 00    0554*  	dl BUF_57_027
04049E EE 01 00    0555*  	dl BUF_57_028
0404A1 EF 01 00    0556*  	dl BUF_57_029
0404A4 F0 01 00    0557*  	dl BUF_57_030
0404A7 F1 01 00    0558*  	dl BUF_57_031
0404AA F2 01 00    0559*  	dl BUF_57_032
0404AD F3 01 00    0560*  	dl BUF_57_035
0404B0 F4 01 00    0561*  	dl BUF_57_038
0404B3 F5 01 00    0562*  	dl BUF_57_039
0404B6 F6 01 00    0563*  	dl BUF_57_040
0404B9 F7 01 00    0564*  	dl BUF_57_041
0404BC F8 01 00    0565*  	dl BUF_57_043
0404BF F9 01 00    0566*  	dl BUF_57_045
0404C2 FA 01 00    0567*  	dl BUF_57_046
0404C5 FB 01 00    0568*  	dl BUF_57_047
0404C8 FC 01 00    0569*  	dl BUF_58_000
0404CB FD 01 00    0570*  	dl BUF_58_001
0404CE FE 01 00    0571*  	dl BUF_58_002
0404D1 FF 01 00    0572*  	dl BUF_58_007
0404D4 00 02 00    0573*  	dl BUF_58_012
0404D7 01 02 00    0574*  	dl BUF_58_013
0404DA 02 02 00    0575*  	dl BUF_58_014
0404DD 03 02 00    0576*  	dl BUF_58_015
0404E0 04 02 00    0577*  	dl BUF_58_016
0404E3 05 02 00    0578*  	dl BUF_58_017
0404E6 06 02 00    0579*  	dl BUF_58_018
0404E9 07 02 00    0580*  	dl BUF_58_019
0404EC 08 02 00    0581*  	dl BUF_58_023
0404EF 09 02 00    0582*  	dl BUF_58_027
0404F2 0A 02 00    0583*  	dl BUF_58_028
0404F5 0B 02 00    0584*  	dl BUF_58_029
0404F8 0C 02 00    0585*  	dl BUF_58_030
0404FB 0D 02 00    0586*  	dl BUF_58_031
0404FE 0E 02 00    0587*  	dl BUF_58_032
040501 0F 02 00    0588*  	dl BUF_58_035
040504 10 02 00    0589*  	dl BUF_58_038
040507 11 02 00    0590*  	dl BUF_58_039
04050A 12 02 00    0591*  	dl BUF_58_040
04050D 13 02 00    0592*  	dl BUF_58_041
040510 14 02 00    0593*  	dl BUF_58_043
040513 15 02 00    0594*  	dl BUF_58_045
040516 16 02 00    0595*  	dl BUF_58_046
040519 17 02 00    0596*  	dl BUF_58_047
04051C 18 02 00    0597*  	dl BUF_59_000
04051F 19 02 00    0598*  	dl BUF_59_001
040522 1A 02 00    0599*  	dl BUF_59_002
040525 1B 02 00    0600*  	dl BUF_59_007
040528 1C 02 00    0601*  	dl BUF_59_012
04052B 1D 02 00    0602*  	dl BUF_59_013
04052E 1E 02 00    0603*  	dl BUF_59_014
040531 1F 02 00    0604*  	dl BUF_59_015
040534 20 02 00    0605*  	dl BUF_59_016
040537 21 02 00    0606*  	dl BUF_59_017
04053A 22 02 00    0607*  	dl BUF_59_018
04053D 23 02 00    0608*  	dl BUF_59_019
040540 24 02 00    0609*  	dl BUF_59_023
040543 25 02 00    0610*  	dl BUF_59_027
040546 26 02 00    0611*  	dl BUF_59_028
040549 27 02 00    0612*  	dl BUF_59_029
04054C 28 02 00    0613*  	dl BUF_59_030
04054F 29 02 00    0614*  	dl BUF_59_031
040552 2A 02 00    0615*  	dl BUF_59_032
040555 2B 02 00    0616*  	dl BUF_59_035
040558 2C 02 00    0617*  	dl BUF_59_038
04055B 2D 02 00    0618*  	dl BUF_59_039
04055E 2E 02 00    0619*  	dl BUF_59_040
040561 2F 02 00    0620*  	dl BUF_59_041
040564 30 02 00    0621*  	dl BUF_59_043
040567 31 02 00    0622*  	dl BUF_59_045
04056A 32 02 00    0623*  	dl BUF_59_046
04056D 33 02 00    0624*  	dl BUF_59_047
040570             0625*  
040570             0626*  ; cube load routines jump table:
040570             0627*  cube_load_panels_table:
040570 0C 09 04    0628*  	dl ld_10_000
040573 36 09 04    0629*  	dl ld_10_001
040576 60 09 04    0630*  	dl ld_10_002
040579 8A 09 04    0631*  	dl ld_10_007
04057C B4 09 04    0632*  	dl ld_10_012
04057F DE 09 04    0633*  	dl ld_10_013
040582 08 0A 04    0634*  	dl ld_10_014
040585 32 0A 04    0635*  	dl ld_10_015
040588 5C 0A 04    0636*  	dl ld_10_016
04058B 86 0A 04    0637*  	dl ld_10_017
04058E B0 0A 04    0638*  	dl ld_10_018
040591 DA 0A 04    0639*  	dl ld_10_019
040594 04 0B 04    0640*  	dl ld_10_023
040597 2E 0B 04    0641*  	dl ld_10_027
04059A 58 0B 04    0642*  	dl ld_10_028
04059D 82 0B 04    0643*  	dl ld_10_029
0405A0 AC 0B 04    0644*  	dl ld_10_030
0405A3 D6 0B 04    0645*  	dl ld_10_031
0405A6 00 0C 04    0646*  	dl ld_10_032
0405A9 2A 0C 04    0647*  	dl ld_10_035
0405AC 54 0C 04    0648*  	dl ld_10_038
0405AF 7E 0C 04    0649*  	dl ld_10_039
0405B2 A8 0C 04    0650*  	dl ld_10_040
0405B5 D2 0C 04    0651*  	dl ld_10_041
0405B8 FC 0C 04    0652*  	dl ld_10_043
0405BB 26 0D 04    0653*  	dl ld_10_045
0405BE 50 0D 04    0654*  	dl ld_10_046
0405C1 7A 0D 04    0655*  	dl ld_10_047
0405C4 A4 0D 04    0656*  	dl ld_11_000
0405C7 CE 0D 04    0657*  	dl ld_11_001
0405CA F8 0D 04    0658*  	dl ld_11_002
0405CD 22 0E 04    0659*  	dl ld_11_007
0405D0 4C 0E 04    0660*  	dl ld_11_012
0405D3 76 0E 04    0661*  	dl ld_11_013
0405D6 A0 0E 04    0662*  	dl ld_11_014
0405D9 CA 0E 04    0663*  	dl ld_11_015
0405DC F4 0E 04    0664*  	dl ld_11_016
0405DF 1E 0F 04    0665*  	dl ld_11_017
0405E2 48 0F 04    0666*  	dl ld_11_018
0405E5 72 0F 04    0667*  	dl ld_11_019
0405E8 9C 0F 04    0668*  	dl ld_11_023
0405EB C6 0F 04    0669*  	dl ld_11_027
0405EE F0 0F 04    0670*  	dl ld_11_028
0405F1 1A 10 04    0671*  	dl ld_11_029
0405F4 44 10 04    0672*  	dl ld_11_030
0405F7 6E 10 04    0673*  	dl ld_11_031
0405FA 98 10 04    0674*  	dl ld_11_032
0405FD C2 10 04    0675*  	dl ld_11_035
040600 EC 10 04    0676*  	dl ld_11_038
040603 16 11 04    0677*  	dl ld_11_039
040606 40 11 04    0678*  	dl ld_11_040
040609 6A 11 04    0679*  	dl ld_11_041
04060C 94 11 04    0680*  	dl ld_11_043
04060F BE 11 04    0681*  	dl ld_11_045
040612 E8 11 04    0682*  	dl ld_11_046
040615 12 12 04    0683*  	dl ld_11_047
040618 3C 12 04    0684*  	dl ld_12_000
04061B 66 12 04    0685*  	dl ld_12_001
04061E 90 12 04    0686*  	dl ld_12_002
040621 BA 12 04    0687*  	dl ld_12_007
040624 E4 12 04    0688*  	dl ld_12_012
040627 0E 13 04    0689*  	dl ld_12_013
04062A 38 13 04    0690*  	dl ld_12_014
04062D 62 13 04    0691*  	dl ld_12_015
040630 8C 13 04    0692*  	dl ld_12_016
040633 B6 13 04    0693*  	dl ld_12_017
040636 E0 13 04    0694*  	dl ld_12_018
040639 0A 14 04    0695*  	dl ld_12_019
04063C 34 14 04    0696*  	dl ld_12_023
04063F 5E 14 04    0697*  	dl ld_12_027
040642 88 14 04    0698*  	dl ld_12_028
040645 B2 14 04    0699*  	dl ld_12_029
040648 DC 14 04    0700*  	dl ld_12_030
04064B 06 15 04    0701*  	dl ld_12_031
04064E 30 15 04    0702*  	dl ld_12_032
040651 5A 15 04    0703*  	dl ld_12_035
040654 84 15 04    0704*  	dl ld_12_038
040657 AE 15 04    0705*  	dl ld_12_039
04065A D8 15 04    0706*  	dl ld_12_040
04065D 02 16 04    0707*  	dl ld_12_041
040660 2C 16 04    0708*  	dl ld_12_043
040663 56 16 04    0709*  	dl ld_12_045
040666 80 16 04    0710*  	dl ld_12_046
040669 AA 16 04    0711*  	dl ld_12_047
04066C D4 16 04    0712*  	dl ld_13_000
04066F FE 16 04    0713*  	dl ld_13_001
040672 28 17 04    0714*  	dl ld_13_002
040675 52 17 04    0715*  	dl ld_13_007
040678 7C 17 04    0716*  	dl ld_13_012
04067B A6 17 04    0717*  	dl ld_13_013
04067E D0 17 04    0718*  	dl ld_13_014
040681 FA 17 04    0719*  	dl ld_13_015
040684 24 18 04    0720*  	dl ld_13_016
040687 4E 18 04    0721*  	dl ld_13_017
04068A 78 18 04    0722*  	dl ld_13_018
04068D A2 18 04    0723*  	dl ld_13_019
040690 CC 18 04    0724*  	dl ld_13_023
040693 F6 18 04    0725*  	dl ld_13_027
040696 20 19 04    0726*  	dl ld_13_028
040699 4A 19 04    0727*  	dl ld_13_029
04069C 74 19 04    0728*  	dl ld_13_030
04069F 9E 19 04    0729*  	dl ld_13_031
0406A2 C8 19 04    0730*  	dl ld_13_032
0406A5 F2 19 04    0731*  	dl ld_13_035
0406A8 1C 1A 04    0732*  	dl ld_13_038
0406AB 46 1A 04    0733*  	dl ld_13_039
0406AE 70 1A 04    0734*  	dl ld_13_040
0406B1 9A 1A 04    0735*  	dl ld_13_041
0406B4 C4 1A 04    0736*  	dl ld_13_043
0406B7 EE 1A 04    0737*  	dl ld_13_045
0406BA 18 1B 04    0738*  	dl ld_13_046
0406BD 42 1B 04    0739*  	dl ld_13_047
0406C0 6C 1B 04    0740*  	dl ld_14_000
0406C3 96 1B 04    0741*  	dl ld_14_001
0406C6 C0 1B 04    0742*  	dl ld_14_002
0406C9 EA 1B 04    0743*  	dl ld_14_007
0406CC 14 1C 04    0744*  	dl ld_14_012
0406CF 3E 1C 04    0745*  	dl ld_14_013
0406D2 68 1C 04    0746*  	dl ld_14_014
0406D5 92 1C 04    0747*  	dl ld_14_015
0406D8 BC 1C 04    0748*  	dl ld_14_016
0406DB E6 1C 04    0749*  	dl ld_14_017
0406DE 10 1D 04    0750*  	dl ld_14_018
0406E1 3A 1D 04    0751*  	dl ld_14_019
0406E4 64 1D 04    0752*  	dl ld_14_023
0406E7 8E 1D 04    0753*  	dl ld_14_027
0406EA B8 1D 04    0754*  	dl ld_14_028
0406ED E2 1D 04    0755*  	dl ld_14_029
0406F0 0C 1E 04    0756*  	dl ld_14_030
0406F3 36 1E 04    0757*  	dl ld_14_031
0406F6 60 1E 04    0758*  	dl ld_14_032
0406F9 8A 1E 04    0759*  	dl ld_14_035
0406FC B4 1E 04    0760*  	dl ld_14_038
0406FF DE 1E 04    0761*  	dl ld_14_039
040702 08 1F 04    0762*  	dl ld_14_040
040705 32 1F 04    0763*  	dl ld_14_041
040708 5C 1F 04    0764*  	dl ld_14_043
04070B 86 1F 04    0765*  	dl ld_14_045
04070E B0 1F 04    0766*  	dl ld_14_046
040711 DA 1F 04    0767*  	dl ld_14_047
040714 04 20 04    0768*  	dl ld_15_000
040717 2E 20 04    0769*  	dl ld_15_001
04071A 58 20 04    0770*  	dl ld_15_002
04071D 82 20 04    0771*  	dl ld_15_007
040720 AC 20 04    0772*  	dl ld_15_012
040723 D6 20 04    0773*  	dl ld_15_013
040726 00 21 04    0774*  	dl ld_15_014
040729 2A 21 04    0775*  	dl ld_15_015
04072C 54 21 04    0776*  	dl ld_15_016
04072F 7E 21 04    0777*  	dl ld_15_017
040732 A8 21 04    0778*  	dl ld_15_018
040735 D2 21 04    0779*  	dl ld_15_019
040738 FC 21 04    0780*  	dl ld_15_023
04073B 26 22 04    0781*  	dl ld_15_027
04073E 50 22 04    0782*  	dl ld_15_028
040741 7A 22 04    0783*  	dl ld_15_029
040744 A4 22 04    0784*  	dl ld_15_030
040747 CE 22 04    0785*  	dl ld_15_031
04074A F8 22 04    0786*  	dl ld_15_032
04074D 22 23 04    0787*  	dl ld_15_035
040750 4C 23 04    0788*  	dl ld_15_038
040753 76 23 04    0789*  	dl ld_15_039
040756 A0 23 04    0790*  	dl ld_15_040
040759 CA 23 04    0791*  	dl ld_15_041
04075C F4 23 04    0792*  	dl ld_15_043
04075F 1E 24 04    0793*  	dl ld_15_045
040762 48 24 04    0794*  	dl ld_15_046
040765 72 24 04    0795*  	dl ld_15_047
040768 9C 24 04    0796*  	dl ld_16_000
04076B C6 24 04    0797*  	dl ld_16_001
04076E F0 24 04    0798*  	dl ld_16_002
040771 1A 25 04    0799*  	dl ld_16_007
040774 44 25 04    0800*  	dl ld_16_012
040777 6E 25 04    0801*  	dl ld_16_013
04077A 98 25 04    0802*  	dl ld_16_014
04077D C2 25 04    0803*  	dl ld_16_015
040780 EC 25 04    0804*  	dl ld_16_016
040783 16 26 04    0805*  	dl ld_16_017
040786 40 26 04    0806*  	dl ld_16_018
040789 6A 26 04    0807*  	dl ld_16_019
04078C 94 26 04    0808*  	dl ld_16_023
04078F BE 26 04    0809*  	dl ld_16_027
040792 E8 26 04    0810*  	dl ld_16_028
040795 12 27 04    0811*  	dl ld_16_029
040798 3C 27 04    0812*  	dl ld_16_030
04079B 66 27 04    0813*  	dl ld_16_031
04079E 90 27 04    0814*  	dl ld_16_032
0407A1 BA 27 04    0815*  	dl ld_16_035
0407A4 E4 27 04    0816*  	dl ld_16_038
0407A7 0E 28 04    0817*  	dl ld_16_039
0407AA 38 28 04    0818*  	dl ld_16_040
0407AD 62 28 04    0819*  	dl ld_16_041
0407B0 8C 28 04    0820*  	dl ld_16_043
0407B3 B6 28 04    0821*  	dl ld_16_045
0407B6 E0 28 04    0822*  	dl ld_16_046
0407B9 0A 29 04    0823*  	dl ld_16_047
0407BC 34 29 04    0824*  	dl ld_17_000
0407BF 5E 29 04    0825*  	dl ld_17_001
0407C2 88 29 04    0826*  	dl ld_17_002
0407C5 B2 29 04    0827*  	dl ld_17_007
0407C8 DC 29 04    0828*  	dl ld_17_012
0407CB 06 2A 04    0829*  	dl ld_17_013
0407CE 30 2A 04    0830*  	dl ld_17_014
0407D1 5A 2A 04    0831*  	dl ld_17_015
0407D4 84 2A 04    0832*  	dl ld_17_016
0407D7 AE 2A 04    0833*  	dl ld_17_017
0407DA D8 2A 04    0834*  	dl ld_17_018
0407DD 02 2B 04    0835*  	dl ld_17_019
0407E0 2C 2B 04    0836*  	dl ld_17_023
0407E3 56 2B 04    0837*  	dl ld_17_027
0407E6 80 2B 04    0838*  	dl ld_17_028
0407E9 AA 2B 04    0839*  	dl ld_17_029
0407EC D4 2B 04    0840*  	dl ld_17_030
0407EF FE 2B 04    0841*  	dl ld_17_031
0407F2 28 2C 04    0842*  	dl ld_17_032
0407F5 52 2C 04    0843*  	dl ld_17_035
0407F8 7C 2C 04    0844*  	dl ld_17_038
0407FB A6 2C 04    0845*  	dl ld_17_039
0407FE D0 2C 04    0846*  	dl ld_17_040
040801 FA 2C 04    0847*  	dl ld_17_041
040804 24 2D 04    0848*  	dl ld_17_043
040807 4E 2D 04    0849*  	dl ld_17_045
04080A 78 2D 04    0850*  	dl ld_17_046
04080D A2 2D 04    0851*  	dl ld_17_047
040810 CC 2D 04    0852*  	dl ld_57_000
040813 F6 2D 04    0853*  	dl ld_57_001
040816 20 2E 04    0854*  	dl ld_57_002
040819 4A 2E 04    0855*  	dl ld_57_007
04081C 74 2E 04    0856*  	dl ld_57_012
04081F 9E 2E 04    0857*  	dl ld_57_013
040822 C8 2E 04    0858*  	dl ld_57_014
040825 F2 2E 04    0859*  	dl ld_57_015
040828 1C 2F 04    0860*  	dl ld_57_016
04082B 46 2F 04    0861*  	dl ld_57_017
04082E 70 2F 04    0862*  	dl ld_57_018
040831 9A 2F 04    0863*  	dl ld_57_019
040834 C4 2F 04    0864*  	dl ld_57_023
040837 EE 2F 04    0865*  	dl ld_57_027
04083A 18 30 04    0866*  	dl ld_57_028
04083D 42 30 04    0867*  	dl ld_57_029
040840 6C 30 04    0868*  	dl ld_57_030
040843 96 30 04    0869*  	dl ld_57_031
040846 C0 30 04    0870*  	dl ld_57_032
040849 EA 30 04    0871*  	dl ld_57_035
04084C 14 31 04    0872*  	dl ld_57_038
04084F 3E 31 04    0873*  	dl ld_57_039
040852 68 31 04    0874*  	dl ld_57_040
040855 92 31 04    0875*  	dl ld_57_041
040858 BC 31 04    0876*  	dl ld_57_043
04085B E6 31 04    0877*  	dl ld_57_045
04085E 10 32 04    0878*  	dl ld_57_046
040861 3A 32 04    0879*  	dl ld_57_047
040864 64 32 04    0880*  	dl ld_58_000
040867 8E 32 04    0881*  	dl ld_58_001
04086A B8 32 04    0882*  	dl ld_58_002
04086D E2 32 04    0883*  	dl ld_58_007
040870 0C 33 04    0884*  	dl ld_58_012
040873 36 33 04    0885*  	dl ld_58_013
040876 60 33 04    0886*  	dl ld_58_014
040879 8A 33 04    0887*  	dl ld_58_015
04087C B4 33 04    0888*  	dl ld_58_016
04087F DE 33 04    0889*  	dl ld_58_017
040882 08 34 04    0890*  	dl ld_58_018
040885 32 34 04    0891*  	dl ld_58_019
040888 5C 34 04    0892*  	dl ld_58_023
04088B 86 34 04    0893*  	dl ld_58_027
04088E B0 34 04    0894*  	dl ld_58_028
040891 DA 34 04    0895*  	dl ld_58_029
040894 04 35 04    0896*  	dl ld_58_030
040897 2E 35 04    0897*  	dl ld_58_031
04089A 58 35 04    0898*  	dl ld_58_032
04089D 82 35 04    0899*  	dl ld_58_035
0408A0 AC 35 04    0900*  	dl ld_58_038
0408A3 D6 35 04    0901*  	dl ld_58_039
0408A6 00 36 04    0902*  	dl ld_58_040
0408A9 2A 36 04    0903*  	dl ld_58_041
0408AC 54 36 04    0904*  	dl ld_58_043
0408AF 7E 36 04    0905*  	dl ld_58_045
0408B2 A8 36 04    0906*  	dl ld_58_046
0408B5 D2 36 04    0907*  	dl ld_58_047
0408B8 FC 36 04    0908*  	dl ld_59_000
0408BB 26 37 04    0909*  	dl ld_59_001
0408BE 50 37 04    0910*  	dl ld_59_002
0408C1 7A 37 04    0911*  	dl ld_59_007
0408C4 A4 37 04    0912*  	dl ld_59_012
0408C7 CE 37 04    0913*  	dl ld_59_013
0408CA F8 37 04    0914*  	dl ld_59_014
0408CD 22 38 04    0915*  	dl ld_59_015
0408D0 4C 38 04    0916*  	dl ld_59_016
0408D3 76 38 04    0917*  	dl ld_59_017
0408D6 A0 38 04    0918*  	dl ld_59_018
0408D9 CA 38 04    0919*  	dl ld_59_019
0408DC F4 38 04    0920*  	dl ld_59_023
0408DF 1E 39 04    0921*  	dl ld_59_027
0408E2 48 39 04    0922*  	dl ld_59_028
0408E5 72 39 04    0923*  	dl ld_59_029
0408E8 9C 39 04    0924*  	dl ld_59_030
0408EB C6 39 04    0925*  	dl ld_59_031
0408EE F0 39 04    0926*  	dl ld_59_032
0408F1 1A 3A 04    0927*  	dl ld_59_035
0408F4 44 3A 04    0928*  	dl ld_59_038
0408F7 6E 3A 04    0929*  	dl ld_59_039
0408FA 98 3A 04    0930*  	dl ld_59_040
0408FD C2 3A 04    0931*  	dl ld_59_041
040900 EC 3A 04    0932*  	dl ld_59_043
040903 16 3B 04    0933*  	dl ld_59_045
040906 40 3B 04    0934*  	dl ld_59_046
040909 6A 3B 04    0935*  	dl ld_59_047
04090C             0936*  
04090C             0937*  ; Import cube .rgba2 bitmap files and load them into VDP buffers
04090C             0938*  
04090C             0939*  ld_10_000:
04090C 21 94 3B 04 0940*  	ld hl,F10_000
040910 22 8A C7 04 0941*  	ld (cur_filename),hl
040914 11 C6 D3 04 0942*  	ld de,filedata
040918 01 00 00 01 0943*  	ld bc,65536
04091C 3E 01       0944*  	ld a,mos_load
04091E 5B CF       0945*  	RST.LIL 08h
040920 21 00 01 00 0946*  	ld hl,BUF_10_000
040924 01 10 00 00 0947*  	ld bc,16
040928 11 23 00 00 0948*  	ld de,35
04092C DD 21 30 02 0949*  	ld ix,560
       00          
040931 CD 05 C9 04 0950*  	call vdu_load_img
040935 C9          0951*  	ret
040936             0952*  
040936             0953*  ld_10_001:
040936 21 A8 3B 04 0954*  	ld hl,F10_001
04093A 22 8A C7 04 0955*  	ld (cur_filename),hl
04093E 11 C6 D3 04 0956*  	ld de,filedata
040942 01 00 00 01 0957*  	ld bc,65536
040946 3E 01       0958*  	ld a,mos_load
040948 5B CF       0959*  	RST.LIL 08h
04094A 21 01 01 00 0960*  	ld hl,BUF_10_001
04094E 01 0A 00 00 0961*  	ld bc,10
040952 11 23 00 00 0962*  	ld de,35
040956 DD 21 5E 01 0963*  	ld ix,350
       00          
04095B CD 05 C9 04 0964*  	call vdu_load_img
04095F C9          0965*  	ret
040960             0966*  
040960             0967*  ld_10_002:
040960 21 BC 3B 04 0968*  	ld hl,F10_002
040964 22 8A C7 04 0969*  	ld (cur_filename),hl
040968 11 C6 D3 04 0970*  	ld de,filedata
04096C 01 00 00 01 0971*  	ld bc,65536
040970 3E 01       0972*  	ld a,mos_load
040972 5B CF       0973*  	RST.LIL 08h
040974 21 02 01 00 0974*  	ld hl,BUF_10_002
040978 01 0A 00 00 0975*  	ld bc,10
04097C 11 23 00 00 0976*  	ld de,35
040980 DD 21 5E 01 0977*  	ld ix,350
       00          
040985 CD 05 C9 04 0978*  	call vdu_load_img
040989 C9          0979*  	ret
04098A             0980*  
04098A             0981*  ld_10_007:
04098A 21 D0 3B 04 0982*  	ld hl,F10_007
04098E 22 8A C7 04 0983*  	ld (cur_filename),hl
040992 11 C6 D3 04 0984*  	ld de,filedata
040996 01 00 00 01 0985*  	ld bc,65536
04099A 3E 01       0986*  	ld a,mos_load
04099C 5B CF       0987*  	RST.LIL 08h
04099E 21 03 01 00 0988*  	ld hl,BUF_10_007
0409A2 01 24 00 00 0989*  	ld bc,36
0409A6 11 23 00 00 0990*  	ld de,35
0409AA DD 21 EC 04 0991*  	ld ix,1260
       00          
0409AF CD 05 C9 04 0992*  	call vdu_load_img
0409B3 C9          0993*  	ret
0409B4             0994*  
0409B4             0995*  ld_10_012:
0409B4 21 E4 3B 04 0996*  	ld hl,F10_012
0409B8 22 8A C7 04 0997*  	ld (cur_filename),hl
0409BC 11 C6 D3 04 0998*  	ld de,filedata
0409C0 01 00 00 01 0999*  	ld bc,65536
0409C4 3E 01       1000*  	ld a,mos_load
0409C6 5B CF       1001*  	RST.LIL 08h
0409C8 21 04 01 00 1002*  	ld hl,BUF_10_012
0409CC 01 23 00 00 1003*  	ld bc,35
0409D0 11 2D 00 00 1004*  	ld de,45
0409D4 DD 21 27 06 1005*  	ld ix,1575
       00          
0409D9 CD 05 C9 04 1006*  	call vdu_load_img
0409DD C9          1007*  	ret
0409DE             1008*  
0409DE             1009*  ld_10_013:
0409DE 21 F8 3B 04 1010*  	ld hl,F10_013
0409E2 22 8A C7 04 1011*  	ld (cur_filename),hl
0409E6 11 C6 D3 04 1012*  	ld de,filedata
0409EA 01 00 00 01 1013*  	ld bc,65536
0409EE 3E 01       1014*  	ld a,mos_load
0409F0 5B CF       1015*  	RST.LIL 08h
0409F2 21 05 01 00 1016*  	ld hl,BUF_10_013
0409F6 01 1A 00 00 1017*  	ld bc,26
0409FA 11 2D 00 00 1018*  	ld de,45
0409FE DD 21 92 04 1019*  	ld ix,1170
       00          
040A03 CD 05 C9 04 1020*  	call vdu_load_img
040A07 C9          1021*  	ret
040A08             1022*  
040A08             1023*  ld_10_014:
040A08 21 0C 3C 04 1024*  	ld hl,F10_014
040A0C 22 8A C7 04 1025*  	ld (cur_filename),hl
040A10 11 C6 D3 04 1026*  	ld de,filedata
040A14 01 00 00 01 1027*  	ld bc,65536
040A18 3E 01       1028*  	ld a,mos_load
040A1A 5B CF       1029*  	RST.LIL 08h
040A1C 21 06 01 00 1030*  	ld hl,BUF_10_014
040A20 01 0F 00 00 1031*  	ld bc,15
040A24 11 2D 00 00 1032*  	ld de,45
040A28 DD 21 A3 02 1033*  	ld ix,675
       00          
040A2D CD 05 C9 04 1034*  	call vdu_load_img
040A31 C9          1035*  	ret
040A32             1036*  
040A32             1037*  ld_10_015:
040A32 21 20 3C 04 1038*  	ld hl,F10_015
040A36 22 8A C7 04 1039*  	ld (cur_filename),hl
040A3A 11 C6 D3 04 1040*  	ld de,filedata
040A3E 01 00 00 01 1041*  	ld bc,65536
040A42 3E 01       1042*  	ld a,mos_load
040A44 5B CF       1043*  	RST.LIL 08h
040A46 21 07 01 00 1044*  	ld hl,BUF_10_015
040A4A 01 05 00 00 1045*  	ld bc,5
040A4E 11 2D 00 00 1046*  	ld de,45
040A52 DD 21 E1 00 1047*  	ld ix,225
       00          
040A57 CD 05 C9 04 1048*  	call vdu_load_img
040A5B C9          1049*  	ret
040A5C             1050*  
040A5C             1051*  ld_10_016:
040A5C 21 34 3C 04 1052*  	ld hl,F10_016
040A60 22 8A C7 04 1053*  	ld (cur_filename),hl
040A64 11 C6 D3 04 1054*  	ld de,filedata
040A68 01 00 00 01 1055*  	ld bc,65536
040A6C 3E 01       1056*  	ld a,mos_load
040A6E 5B CF       1057*  	RST.LIL 08h
040A70 21 08 01 00 1058*  	ld hl,BUF_10_016
040A74 01 05 00 00 1059*  	ld bc,5
040A78 11 2B 00 00 1060*  	ld de,43
040A7C DD 21 D7 00 1061*  	ld ix,215
       00          
040A81 CD 05 C9 04 1062*  	call vdu_load_img
040A85 C9          1063*  	ret
040A86             1064*  
040A86             1065*  ld_10_017:
040A86 21 48 3C 04 1066*  	ld hl,F10_017
040A8A 22 8A C7 04 1067*  	ld (cur_filename),hl
040A8E 11 C6 D3 04 1068*  	ld de,filedata
040A92 01 00 00 01 1069*  	ld bc,65536
040A96 3E 01       1070*  	ld a,mos_load
040A98 5B CF       1071*  	RST.LIL 08h
040A9A 21 09 01 00 1072*  	ld hl,BUF_10_017
040A9E 01 0F 00 00 1073*  	ld bc,15
040AA2 11 2D 00 00 1074*  	ld de,45
040AA6 DD 21 A3 02 1075*  	ld ix,675
       00          
040AAB CD 05 C9 04 1076*  	call vdu_load_img
040AAF C9          1077*  	ret
040AB0             1078*  
040AB0             1079*  ld_10_018:
040AB0 21 5C 3C 04 1080*  	ld hl,F10_018
040AB4 22 8A C7 04 1081*  	ld (cur_filename),hl
040AB8 11 C6 D3 04 1082*  	ld de,filedata
040ABC 01 00 00 01 1083*  	ld bc,65536
040AC0 3E 01       1084*  	ld a,mos_load
040AC2 5B CF       1085*  	RST.LIL 08h
040AC4 21 0A 01 00 1086*  	ld hl,BUF_10_018
040AC8 01 1A 00 00 1087*  	ld bc,26
040ACC 11 2D 00 00 1088*  	ld de,45
040AD0 DD 21 92 04 1089*  	ld ix,1170
       00          
040AD5 CD 05 C9 04 1090*  	call vdu_load_img
040AD9 C9          1091*  	ret
040ADA             1092*  
040ADA             1093*  ld_10_019:
040ADA 21 70 3C 04 1094*  	ld hl,F10_019
040ADE 22 8A C7 04 1095*  	ld (cur_filename),hl
040AE2 11 C6 D3 04 1096*  	ld de,filedata
040AE6 01 00 00 01 1097*  	ld bc,65536
040AEA 3E 01       1098*  	ld a,mos_load
040AEC 5B CF       1099*  	RST.LIL 08h
040AEE 21 0B 01 00 1100*  	ld hl,BUF_10_019
040AF2 01 23 00 00 1101*  	ld bc,35
040AF6 11 2D 00 00 1102*  	ld de,45
040AFA DD 21 27 06 1103*  	ld ix,1575
       00          
040AFF CD 05 C9 04 1104*  	call vdu_load_img
040B03 C9          1105*  	ret
040B04             1106*  
040B04             1107*  ld_10_023:
040B04 21 84 3C 04 1108*  	ld hl,F10_023
040B08 22 8A C7 04 1109*  	ld (cur_filename),hl
040B0C 11 C6 D3 04 1110*  	ld de,filedata
040B10 01 00 00 01 1111*  	ld bc,65536
040B14 3E 01       1112*  	ld a,mos_load
040B16 5B CF       1113*  	RST.LIL 08h
040B18 21 0C 01 00 1114*  	ld hl,BUF_10_023
040B1C 01 2E 00 00 1115*  	ld bc,46
040B20 11 2D 00 00 1116*  	ld de,45
040B24 DD 21 16 08 1117*  	ld ix,2070
       00          
040B29 CD 05 C9 04 1118*  	call vdu_load_img
040B2D C9          1119*  	ret
040B2E             1120*  
040B2E             1121*  ld_10_027:
040B2E 21 98 3C 04 1122*  	ld hl,F10_027
040B32 22 8A C7 04 1123*  	ld (cur_filename),hl
040B36 11 C6 D3 04 1124*  	ld de,filedata
040B3A 01 00 00 01 1125*  	ld bc,65536
040B3E 3E 01       1126*  	ld a,mos_load
040B40 5B CF       1127*  	RST.LIL 08h
040B42 21 0D 01 00 1128*  	ld hl,BUF_10_027
040B46 01 2D 00 00 1129*  	ld bc,45
040B4A 11 3F 00 00 1130*  	ld de,63
040B4E DD 21 13 0B 1131*  	ld ix,2835
       00          
040B53 CD 05 C9 04 1132*  	call vdu_load_img
040B57 C9          1133*  	ret
040B58             1134*  
040B58             1135*  ld_10_028:
040B58 21 AC 3C 04 1136*  	ld hl,F10_028
040B5C 22 8A C7 04 1137*  	ld (cur_filename),hl
040B60 11 C6 D3 04 1138*  	ld de,filedata
040B64 01 00 00 01 1139*  	ld bc,65536
040B68 3E 01       1140*  	ld a,mos_load
040B6A 5B CF       1141*  	RST.LIL 08h
040B6C 21 0E 01 00 1142*  	ld hl,BUF_10_028
040B70 01 1B 00 00 1143*  	ld bc,27
040B74 11 3F 00 00 1144*  	ld de,63
040B78 DD 21 A5 06 1145*  	ld ix,1701
       00          
040B7D CD 05 C9 04 1146*  	call vdu_load_img
040B81 C9          1147*  	ret
040B82             1148*  
040B82             1149*  ld_10_029:
040B82 21 C0 3C 04 1150*  	ld hl,F10_029
040B86 22 8A C7 04 1151*  	ld (cur_filename),hl
040B8A 11 C6 D3 04 1152*  	ld de,filedata
040B8E 01 00 00 01 1153*  	ld bc,65536
040B92 3E 01       1154*  	ld a,mos_load
040B94 5B CF       1155*  	RST.LIL 08h
040B96 21 0F 01 00 1156*  	ld hl,BUF_10_029
040B9A 01 09 00 00 1157*  	ld bc,9
040B9E 11 3F 00 00 1158*  	ld de,63
040BA2 DD 21 37 02 1159*  	ld ix,567
       00          
040BA7 CD 05 C9 04 1160*  	call vdu_load_img
040BAB C9          1161*  	ret
040BAC             1162*  
040BAC             1163*  ld_10_030:
040BAC 21 D4 3C 04 1164*  	ld hl,F10_030
040BB0 22 8A C7 04 1165*  	ld (cur_filename),hl
040BB4 11 C6 D3 04 1166*  	ld de,filedata
040BB8 01 00 00 01 1167*  	ld bc,65536
040BBC 3E 01       1168*  	ld a,mos_load
040BBE 5B CF       1169*  	RST.LIL 08h
040BC0 21 10 01 00 1170*  	ld hl,BUF_10_030
040BC4 01 09 00 00 1171*  	ld bc,9
040BC8 11 3D 00 00 1172*  	ld de,61
040BCC DD 21 25 02 1173*  	ld ix,549
       00          
040BD1 CD 05 C9 04 1174*  	call vdu_load_img
040BD5 C9          1175*  	ret
040BD6             1176*  
040BD6             1177*  ld_10_031:
040BD6 21 E8 3C 04 1178*  	ld hl,F10_031
040BDA 22 8A C7 04 1179*  	ld (cur_filename),hl
040BDE 11 C6 D3 04 1180*  	ld de,filedata
040BE2 01 00 00 01 1181*  	ld bc,65536
040BE6 3E 01       1182*  	ld a,mos_load
040BE8 5B CF       1183*  	RST.LIL 08h
040BEA 21 11 01 00 1184*  	ld hl,BUF_10_031
040BEE 01 1B 00 00 1185*  	ld bc,27
040BF2 11 3F 00 00 1186*  	ld de,63
040BF6 DD 21 A5 06 1187*  	ld ix,1701
       00          
040BFB CD 05 C9 04 1188*  	call vdu_load_img
040BFF C9          1189*  	ret
040C00             1190*  
040C00             1191*  ld_10_032:
040C00 21 FC 3C 04 1192*  	ld hl,F10_032
040C04 22 8A C7 04 1193*  	ld (cur_filename),hl
040C08 11 C6 D3 04 1194*  	ld de,filedata
040C0C 01 00 00 01 1195*  	ld bc,65536
040C10 3E 01       1196*  	ld a,mos_load
040C12 5B CF       1197*  	RST.LIL 08h
040C14 21 12 01 00 1198*  	ld hl,BUF_10_032
040C18 01 2D 00 00 1199*  	ld bc,45
040C1C 11 3F 00 00 1200*  	ld de,63
040C20 DD 21 13 0B 1201*  	ld ix,2835
       00          
040C25 CD 05 C9 04 1202*  	call vdu_load_img
040C29 C9          1203*  	ret
040C2A             1204*  
040C2A             1205*  ld_10_035:
040C2A 21 10 3D 04 1206*  	ld hl,F10_035
040C2E 22 8A C7 04 1207*  	ld (cur_filename),hl
040C32 11 C6 D3 04 1208*  	ld de,filedata
040C36 01 00 00 01 1209*  	ld bc,65536
040C3A 3E 01       1210*  	ld a,mos_load
040C3C 5B CF       1211*  	RST.LIL 08h
040C3E 21 13 01 00 1212*  	ld hl,BUF_10_035
040C42 01 40 00 00 1213*  	ld bc,64
040C46 11 3F 00 00 1214*  	ld de,63
040C4A DD 21 C0 0F 1215*  	ld ix,4032
       00          
040C4F CD 05 C9 04 1216*  	call vdu_load_img
040C53 C9          1217*  	ret
040C54             1218*  
040C54             1219*  ld_10_038:
040C54 21 24 3D 04 1220*  	ld hl,F10_038
040C58 22 8A C7 04 1221*  	ld (cur_filename),hl
040C5C 11 C6 D3 04 1222*  	ld de,filedata
040C60 01 00 00 01 1223*  	ld bc,65536
040C64 3E 01       1224*  	ld a,mos_load
040C66 5B CF       1225*  	RST.LIL 08h
040C68 21 14 01 00 1226*  	ld hl,BUF_10_038
040C6C 01 40 00 00 1227*  	ld bc,64
040C70 11 6B 00 00 1228*  	ld de,107
040C74 DD 21 C0 1A 1229*  	ld ix,6848
       00          
040C79 CD 05 C9 04 1230*  	call vdu_load_img
040C7D C9          1231*  	ret
040C7E             1232*  
040C7E             1233*  ld_10_039:
040C7E 21 38 3D 04 1234*  	ld hl,F10_039
040C82 22 8A C7 04 1235*  	ld (cur_filename),hl
040C86 11 C6 D3 04 1236*  	ld de,filedata
040C8A 01 00 00 01 1237*  	ld bc,65536
040C8E 3E 01       1238*  	ld a,mos_load
040C90 5B CF       1239*  	RST.LIL 08h
040C92 21 15 01 00 1240*  	ld hl,BUF_10_039
040C96 01 16 00 00 1241*  	ld bc,22
040C9A 11 6B 00 00 1242*  	ld de,107
040C9E DD 21 32 09 1243*  	ld ix,2354
       00          
040CA3 CD 05 C9 04 1244*  	call vdu_load_img
040CA7 C9          1245*  	ret
040CA8             1246*  
040CA8             1247*  ld_10_040:
040CA8 21 4C 3D 04 1248*  	ld hl,F10_040
040CAC 22 8A C7 04 1249*  	ld (cur_filename),hl
040CB0 11 C6 D3 04 1250*  	ld de,filedata
040CB4 01 00 00 01 1251*  	ld bc,65536
040CB8 3E 01       1252*  	ld a,mos_load
040CBA 5B CF       1253*  	RST.LIL 08h
040CBC 21 16 01 00 1254*  	ld hl,BUF_10_040
040CC0 01 16 00 00 1255*  	ld bc,22
040CC4 11 69 00 00 1256*  	ld de,105
040CC8 DD 21 06 09 1257*  	ld ix,2310
       00          
040CCD CD 05 C9 04 1258*  	call vdu_load_img
040CD1 C9          1259*  	ret
040CD2             1260*  
040CD2             1261*  ld_10_041:
040CD2 21 60 3D 04 1262*  	ld hl,F10_041
040CD6 22 8A C7 04 1263*  	ld (cur_filename),hl
040CDA 11 C6 D3 04 1264*  	ld de,filedata
040CDE 01 00 00 01 1265*  	ld bc,65536
040CE2 3E 01       1266*  	ld a,mos_load
040CE4 5B CF       1267*  	RST.LIL 08h
040CE6 21 17 01 00 1268*  	ld hl,BUF_10_041
040CEA 01 40 00 00 1269*  	ld bc,64
040CEE 11 6B 00 00 1270*  	ld de,107
040CF2 DD 21 C0 1A 1271*  	ld ix,6848
       00          
040CF7 CD 05 C9 04 1272*  	call vdu_load_img
040CFB C9          1273*  	ret
040CFC             1274*  
040CFC             1275*  ld_10_043:
040CFC 21 74 3D 04 1276*  	ld hl,F10_043
040D00 22 8A C7 04 1277*  	ld (cur_filename),hl
040D04 11 C6 D3 04 1278*  	ld de,filedata
040D08 01 00 00 01 1279*  	ld bc,65536
040D0C 3E 01       1280*  	ld a,mos_load
040D0E 5B CF       1281*  	RST.LIL 08h
040D10 21 18 01 00 1282*  	ld hl,BUF_10_043
040D14 01 6C 00 00 1283*  	ld bc,108
040D18 11 6B 00 00 1284*  	ld de,107
040D1C DD 21 24 2D 1285*  	ld ix,11556
       00          
040D21 CD 05 C9 04 1286*  	call vdu_load_img
040D25 C9          1287*  	ret
040D26             1288*  
040D26             1289*  ld_10_045:
040D26 21 88 3D 04 1290*  	ld hl,F10_045
040D2A 22 8A C7 04 1291*  	ld (cur_filename),hl
040D2E 11 C6 D3 04 1292*  	ld de,filedata
040D32 01 00 00 01 1293*  	ld bc,65536
040D36 3E 01       1294*  	ld a,mos_load
040D38 5B CF       1295*  	RST.LIL 08h
040D3A 21 19 01 00 1296*  	ld hl,BUF_10_045
040D3E 01 6A 00 00 1297*  	ld bc,106
040D42 11 A0 00 00 1298*  	ld de,160
040D46 DD 21 40 42 1299*  	ld ix,16960
       00          
040D4B CD 05 C9 04 1300*  	call vdu_load_img
040D4F C9          1301*  	ret
040D50             1302*  
040D50             1303*  ld_10_046:
040D50 21 9C 3D 04 1304*  	ld hl,F10_046
040D54 22 8A C7 04 1305*  	ld (cur_filename),hl
040D58 11 C6 D3 04 1306*  	ld de,filedata
040D5C 01 00 00 01 1307*  	ld bc,65536
040D60 3E 01       1308*  	ld a,mos_load
040D62 5B CF       1309*  	RST.LIL 08h
040D64 21 1A 01 00 1310*  	ld hl,BUF_10_046
040D68 01 6A 00 00 1311*  	ld bc,106
040D6C 11 A0 00 00 1312*  	ld de,160
040D70 DD 21 40 42 1313*  	ld ix,16960
       00          
040D75 CD 05 C9 04 1314*  	call vdu_load_img
040D79 C9          1315*  	ret
040D7A             1316*  
040D7A             1317*  ld_10_047:
040D7A 21 B0 3D 04 1318*  	ld hl,F10_047
040D7E 22 8A C7 04 1319*  	ld (cur_filename),hl
040D82 11 C6 D3 04 1320*  	ld de,filedata
040D86 01 00 00 01 1321*  	ld bc,65536
040D8A 3E 01       1322*  	ld a,mos_load
040D8C 5B CF       1323*  	RST.LIL 08h
040D8E 21 1B 01 00 1324*  	ld hl,BUF_10_047
040D92 01 40 01 00 1325*  	ld bc,320
040D96 11 A0 00 00 1326*  	ld de,160
040D9A DD 21 00 C8 1327*  	ld ix,51200
       00          
040D9F CD 05 C9 04 1328*  	call vdu_load_img
040DA3 C9          1329*  	ret
040DA4             1330*  
040DA4             1331*  ld_11_000:
040DA4 21 C4 3D 04 1332*  	ld hl,F11_000
040DA8 22 8A C7 04 1333*  	ld (cur_filename),hl
040DAC 11 C6 D3 04 1334*  	ld de,filedata
040DB0 01 00 00 01 1335*  	ld bc,65536
040DB4 3E 01       1336*  	ld a,mos_load
040DB6 5B CF       1337*  	RST.LIL 08h
040DB8 21 1C 01 00 1338*  	ld hl,BUF_11_000
040DBC 01 10 00 00 1339*  	ld bc,16
040DC0 11 23 00 00 1340*  	ld de,35
040DC4 DD 21 30 02 1341*  	ld ix,560
       00          
040DC9 CD 05 C9 04 1342*  	call vdu_load_img
040DCD C9          1343*  	ret
040DCE             1344*  
040DCE             1345*  ld_11_001:
040DCE 21 D8 3D 04 1346*  	ld hl,F11_001
040DD2 22 8A C7 04 1347*  	ld (cur_filename),hl
040DD6 11 C6 D3 04 1348*  	ld de,filedata
040DDA 01 00 00 01 1349*  	ld bc,65536
040DDE 3E 01       1350*  	ld a,mos_load
040DE0 5B CF       1351*  	RST.LIL 08h
040DE2 21 1D 01 00 1352*  	ld hl,BUF_11_001
040DE6 01 0A 00 00 1353*  	ld bc,10
040DEA 11 23 00 00 1354*  	ld de,35
040DEE DD 21 5E 01 1355*  	ld ix,350
       00          
040DF3 CD 05 C9 04 1356*  	call vdu_load_img
040DF7 C9          1357*  	ret
040DF8             1358*  
040DF8             1359*  ld_11_002:
040DF8 21 EC 3D 04 1360*  	ld hl,F11_002
040DFC 22 8A C7 04 1361*  	ld (cur_filename),hl
040E00 11 C6 D3 04 1362*  	ld de,filedata
040E04 01 00 00 01 1363*  	ld bc,65536
040E08 3E 01       1364*  	ld a,mos_load
040E0A 5B CF       1365*  	RST.LIL 08h
040E0C 21 1E 01 00 1366*  	ld hl,BUF_11_002
040E10 01 0A 00 00 1367*  	ld bc,10
040E14 11 23 00 00 1368*  	ld de,35
040E18 DD 21 5E 01 1369*  	ld ix,350
       00          
040E1D CD 05 C9 04 1370*  	call vdu_load_img
040E21 C9          1371*  	ret
040E22             1372*  
040E22             1373*  ld_11_007:
040E22 21 00 3E 04 1374*  	ld hl,F11_007
040E26 22 8A C7 04 1375*  	ld (cur_filename),hl
040E2A 11 C6 D3 04 1376*  	ld de,filedata
040E2E 01 00 00 01 1377*  	ld bc,65536
040E32 3E 01       1378*  	ld a,mos_load
040E34 5B CF       1379*  	RST.LIL 08h
040E36 21 1F 01 00 1380*  	ld hl,BUF_11_007
040E3A 01 24 00 00 1381*  	ld bc,36
040E3E 11 23 00 00 1382*  	ld de,35
040E42 DD 21 EC 04 1383*  	ld ix,1260
       00          
040E47 CD 05 C9 04 1384*  	call vdu_load_img
040E4B C9          1385*  	ret
040E4C             1386*  
040E4C             1387*  ld_11_012:
040E4C 21 14 3E 04 1388*  	ld hl,F11_012
040E50 22 8A C7 04 1389*  	ld (cur_filename),hl
040E54 11 C6 D3 04 1390*  	ld de,filedata
040E58 01 00 00 01 1391*  	ld bc,65536
040E5C 3E 01       1392*  	ld a,mos_load
040E5E 5B CF       1393*  	RST.LIL 08h
040E60 21 20 01 00 1394*  	ld hl,BUF_11_012
040E64 01 23 00 00 1395*  	ld bc,35
040E68 11 2D 00 00 1396*  	ld de,45
040E6C DD 21 27 06 1397*  	ld ix,1575
       00          
040E71 CD 05 C9 04 1398*  	call vdu_load_img
040E75 C9          1399*  	ret
040E76             1400*  
040E76             1401*  ld_11_013:
040E76 21 28 3E 04 1402*  	ld hl,F11_013
040E7A 22 8A C7 04 1403*  	ld (cur_filename),hl
040E7E 11 C6 D3 04 1404*  	ld de,filedata
040E82 01 00 00 01 1405*  	ld bc,65536
040E86 3E 01       1406*  	ld a,mos_load
040E88 5B CF       1407*  	RST.LIL 08h
040E8A 21 21 01 00 1408*  	ld hl,BUF_11_013
040E8E 01 1A 00 00 1409*  	ld bc,26
040E92 11 2D 00 00 1410*  	ld de,45
040E96 DD 21 92 04 1411*  	ld ix,1170
       00          
040E9B CD 05 C9 04 1412*  	call vdu_load_img
040E9F C9          1413*  	ret
040EA0             1414*  
040EA0             1415*  ld_11_014:
040EA0 21 3C 3E 04 1416*  	ld hl,F11_014
040EA4 22 8A C7 04 1417*  	ld (cur_filename),hl
040EA8 11 C6 D3 04 1418*  	ld de,filedata
040EAC 01 00 00 01 1419*  	ld bc,65536
040EB0 3E 01       1420*  	ld a,mos_load
040EB2 5B CF       1421*  	RST.LIL 08h
040EB4 21 22 01 00 1422*  	ld hl,BUF_11_014
040EB8 01 0F 00 00 1423*  	ld bc,15
040EBC 11 2D 00 00 1424*  	ld de,45
040EC0 DD 21 A3 02 1425*  	ld ix,675
       00          
040EC5 CD 05 C9 04 1426*  	call vdu_load_img
040EC9 C9          1427*  	ret
040ECA             1428*  
040ECA             1429*  ld_11_015:
040ECA 21 50 3E 04 1430*  	ld hl,F11_015
040ECE 22 8A C7 04 1431*  	ld (cur_filename),hl
040ED2 11 C6 D3 04 1432*  	ld de,filedata
040ED6 01 00 00 01 1433*  	ld bc,65536
040EDA 3E 01       1434*  	ld a,mos_load
040EDC 5B CF       1435*  	RST.LIL 08h
040EDE 21 23 01 00 1436*  	ld hl,BUF_11_015
040EE2 01 05 00 00 1437*  	ld bc,5
040EE6 11 2D 00 00 1438*  	ld de,45
040EEA DD 21 E1 00 1439*  	ld ix,225
       00          
040EEF CD 05 C9 04 1440*  	call vdu_load_img
040EF3 C9          1441*  	ret
040EF4             1442*  
040EF4             1443*  ld_11_016:
040EF4 21 64 3E 04 1444*  	ld hl,F11_016
040EF8 22 8A C7 04 1445*  	ld (cur_filename),hl
040EFC 11 C6 D3 04 1446*  	ld de,filedata
040F00 01 00 00 01 1447*  	ld bc,65536
040F04 3E 01       1448*  	ld a,mos_load
040F06 5B CF       1449*  	RST.LIL 08h
040F08 21 24 01 00 1450*  	ld hl,BUF_11_016
040F0C 01 05 00 00 1451*  	ld bc,5
040F10 11 2B 00 00 1452*  	ld de,43
040F14 DD 21 D7 00 1453*  	ld ix,215
       00          
040F19 CD 05 C9 04 1454*  	call vdu_load_img
040F1D C9          1455*  	ret
040F1E             1456*  
040F1E             1457*  ld_11_017:
040F1E 21 78 3E 04 1458*  	ld hl,F11_017
040F22 22 8A C7 04 1459*  	ld (cur_filename),hl
040F26 11 C6 D3 04 1460*  	ld de,filedata
040F2A 01 00 00 01 1461*  	ld bc,65536
040F2E 3E 01       1462*  	ld a,mos_load
040F30 5B CF       1463*  	RST.LIL 08h
040F32 21 25 01 00 1464*  	ld hl,BUF_11_017
040F36 01 0F 00 00 1465*  	ld bc,15
040F3A 11 2D 00 00 1466*  	ld de,45
040F3E DD 21 A3 02 1467*  	ld ix,675
       00          
040F43 CD 05 C9 04 1468*  	call vdu_load_img
040F47 C9          1469*  	ret
040F48             1470*  
040F48             1471*  ld_11_018:
040F48 21 8C 3E 04 1472*  	ld hl,F11_018
040F4C 22 8A C7 04 1473*  	ld (cur_filename),hl
040F50 11 C6 D3 04 1474*  	ld de,filedata
040F54 01 00 00 01 1475*  	ld bc,65536
040F58 3E 01       1476*  	ld a,mos_load
040F5A 5B CF       1477*  	RST.LIL 08h
040F5C 21 26 01 00 1478*  	ld hl,BUF_11_018
040F60 01 1A 00 00 1479*  	ld bc,26
040F64 11 2D 00 00 1480*  	ld de,45
040F68 DD 21 92 04 1481*  	ld ix,1170
       00          
040F6D CD 05 C9 04 1482*  	call vdu_load_img
040F71 C9          1483*  	ret
040F72             1484*  
040F72             1485*  ld_11_019:
040F72 21 A0 3E 04 1486*  	ld hl,F11_019
040F76 22 8A C7 04 1487*  	ld (cur_filename),hl
040F7A 11 C6 D3 04 1488*  	ld de,filedata
040F7E 01 00 00 01 1489*  	ld bc,65536
040F82 3E 01       1490*  	ld a,mos_load
040F84 5B CF       1491*  	RST.LIL 08h
040F86 21 27 01 00 1492*  	ld hl,BUF_11_019
040F8A 01 23 00 00 1493*  	ld bc,35
040F8E 11 2D 00 00 1494*  	ld de,45
040F92 DD 21 27 06 1495*  	ld ix,1575
       00          
040F97 CD 05 C9 04 1496*  	call vdu_load_img
040F9B C9          1497*  	ret
040F9C             1498*  
040F9C             1499*  ld_11_023:
040F9C 21 B4 3E 04 1500*  	ld hl,F11_023
040FA0 22 8A C7 04 1501*  	ld (cur_filename),hl
040FA4 11 C6 D3 04 1502*  	ld de,filedata
040FA8 01 00 00 01 1503*  	ld bc,65536
040FAC 3E 01       1504*  	ld a,mos_load
040FAE 5B CF       1505*  	RST.LIL 08h
040FB0 21 28 01 00 1506*  	ld hl,BUF_11_023
040FB4 01 2E 00 00 1507*  	ld bc,46
040FB8 11 2D 00 00 1508*  	ld de,45
040FBC DD 21 16 08 1509*  	ld ix,2070
       00          
040FC1 CD 05 C9 04 1510*  	call vdu_load_img
040FC5 C9          1511*  	ret
040FC6             1512*  
040FC6             1513*  ld_11_027:
040FC6 21 C8 3E 04 1514*  	ld hl,F11_027
040FCA 22 8A C7 04 1515*  	ld (cur_filename),hl
040FCE 11 C6 D3 04 1516*  	ld de,filedata
040FD2 01 00 00 01 1517*  	ld bc,65536
040FD6 3E 01       1518*  	ld a,mos_load
040FD8 5B CF       1519*  	RST.LIL 08h
040FDA 21 29 01 00 1520*  	ld hl,BUF_11_027
040FDE 01 2D 00 00 1521*  	ld bc,45
040FE2 11 3F 00 00 1522*  	ld de,63
040FE6 DD 21 13 0B 1523*  	ld ix,2835
       00          
040FEB CD 05 C9 04 1524*  	call vdu_load_img
040FEF C9          1525*  	ret
040FF0             1526*  
040FF0             1527*  ld_11_028:
040FF0 21 DC 3E 04 1528*  	ld hl,F11_028
040FF4 22 8A C7 04 1529*  	ld (cur_filename),hl
040FF8 11 C6 D3 04 1530*  	ld de,filedata
040FFC 01 00 00 01 1531*  	ld bc,65536
041000 3E 01       1532*  	ld a,mos_load
041002 5B CF       1533*  	RST.LIL 08h
041004 21 2A 01 00 1534*  	ld hl,BUF_11_028
041008 01 1B 00 00 1535*  	ld bc,27
04100C 11 3F 00 00 1536*  	ld de,63
041010 DD 21 A5 06 1537*  	ld ix,1701
       00          
041015 CD 05 C9 04 1538*  	call vdu_load_img
041019 C9          1539*  	ret
04101A             1540*  
04101A             1541*  ld_11_029:
04101A 21 F0 3E 04 1542*  	ld hl,F11_029
04101E 22 8A C7 04 1543*  	ld (cur_filename),hl
041022 11 C6 D3 04 1544*  	ld de,filedata
041026 01 00 00 01 1545*  	ld bc,65536
04102A 3E 01       1546*  	ld a,mos_load
04102C 5B CF       1547*  	RST.LIL 08h
04102E 21 2B 01 00 1548*  	ld hl,BUF_11_029
041032 01 09 00 00 1549*  	ld bc,9
041036 11 3F 00 00 1550*  	ld de,63
04103A DD 21 37 02 1551*  	ld ix,567
       00          
04103F CD 05 C9 04 1552*  	call vdu_load_img
041043 C9          1553*  	ret
041044             1554*  
041044             1555*  ld_11_030:
041044 21 04 3F 04 1556*  	ld hl,F11_030
041048 22 8A C7 04 1557*  	ld (cur_filename),hl
04104C 11 C6 D3 04 1558*  	ld de,filedata
041050 01 00 00 01 1559*  	ld bc,65536
041054 3E 01       1560*  	ld a,mos_load
041056 5B CF       1561*  	RST.LIL 08h
041058 21 2C 01 00 1562*  	ld hl,BUF_11_030
04105C 01 09 00 00 1563*  	ld bc,9
041060 11 3D 00 00 1564*  	ld de,61
041064 DD 21 25 02 1565*  	ld ix,549
       00          
041069 CD 05 C9 04 1566*  	call vdu_load_img
04106D C9          1567*  	ret
04106E             1568*  
04106E             1569*  ld_11_031:
04106E 21 18 3F 04 1570*  	ld hl,F11_031
041072 22 8A C7 04 1571*  	ld (cur_filename),hl
041076 11 C6 D3 04 1572*  	ld de,filedata
04107A 01 00 00 01 1573*  	ld bc,65536
04107E 3E 01       1574*  	ld a,mos_load
041080 5B CF       1575*  	RST.LIL 08h
041082 21 2D 01 00 1576*  	ld hl,BUF_11_031
041086 01 1B 00 00 1577*  	ld bc,27
04108A 11 3F 00 00 1578*  	ld de,63
04108E DD 21 A5 06 1579*  	ld ix,1701
       00          
041093 CD 05 C9 04 1580*  	call vdu_load_img
041097 C9          1581*  	ret
041098             1582*  
041098             1583*  ld_11_032:
041098 21 2C 3F 04 1584*  	ld hl,F11_032
04109C 22 8A C7 04 1585*  	ld (cur_filename),hl
0410A0 11 C6 D3 04 1586*  	ld de,filedata
0410A4 01 00 00 01 1587*  	ld bc,65536
0410A8 3E 01       1588*  	ld a,mos_load
0410AA 5B CF       1589*  	RST.LIL 08h
0410AC 21 2E 01 00 1590*  	ld hl,BUF_11_032
0410B0 01 2D 00 00 1591*  	ld bc,45
0410B4 11 3F 00 00 1592*  	ld de,63
0410B8 DD 21 13 0B 1593*  	ld ix,2835
       00          
0410BD CD 05 C9 04 1594*  	call vdu_load_img
0410C1 C9          1595*  	ret
0410C2             1596*  
0410C2             1597*  ld_11_035:
0410C2 21 40 3F 04 1598*  	ld hl,F11_035
0410C6 22 8A C7 04 1599*  	ld (cur_filename),hl
0410CA 11 C6 D3 04 1600*  	ld de,filedata
0410CE 01 00 00 01 1601*  	ld bc,65536
0410D2 3E 01       1602*  	ld a,mos_load
0410D4 5B CF       1603*  	RST.LIL 08h
0410D6 21 2F 01 00 1604*  	ld hl,BUF_11_035
0410DA 01 40 00 00 1605*  	ld bc,64
0410DE 11 3F 00 00 1606*  	ld de,63
0410E2 DD 21 C0 0F 1607*  	ld ix,4032
       00          
0410E7 CD 05 C9 04 1608*  	call vdu_load_img
0410EB C9          1609*  	ret
0410EC             1610*  
0410EC             1611*  ld_11_038:
0410EC 21 54 3F 04 1612*  	ld hl,F11_038
0410F0 22 8A C7 04 1613*  	ld (cur_filename),hl
0410F4 11 C6 D3 04 1614*  	ld de,filedata
0410F8 01 00 00 01 1615*  	ld bc,65536
0410FC 3E 01       1616*  	ld a,mos_load
0410FE 5B CF       1617*  	RST.LIL 08h
041100 21 30 01 00 1618*  	ld hl,BUF_11_038
041104 01 40 00 00 1619*  	ld bc,64
041108 11 6B 00 00 1620*  	ld de,107
04110C DD 21 C0 1A 1621*  	ld ix,6848
       00          
041111 CD 05 C9 04 1622*  	call vdu_load_img
041115 C9          1623*  	ret
041116             1624*  
041116             1625*  ld_11_039:
041116 21 68 3F 04 1626*  	ld hl,F11_039
04111A 22 8A C7 04 1627*  	ld (cur_filename),hl
04111E 11 C6 D3 04 1628*  	ld de,filedata
041122 01 00 00 01 1629*  	ld bc,65536
041126 3E 01       1630*  	ld a,mos_load
041128 5B CF       1631*  	RST.LIL 08h
04112A 21 31 01 00 1632*  	ld hl,BUF_11_039
04112E 01 16 00 00 1633*  	ld bc,22
041132 11 6B 00 00 1634*  	ld de,107
041136 DD 21 32 09 1635*  	ld ix,2354
       00          
04113B CD 05 C9 04 1636*  	call vdu_load_img
04113F C9          1637*  	ret
041140             1638*  
041140             1639*  ld_11_040:
041140 21 7C 3F 04 1640*  	ld hl,F11_040
041144 22 8A C7 04 1641*  	ld (cur_filename),hl
041148 11 C6 D3 04 1642*  	ld de,filedata
04114C 01 00 00 01 1643*  	ld bc,65536
041150 3E 01       1644*  	ld a,mos_load
041152 5B CF       1645*  	RST.LIL 08h
041154 21 32 01 00 1646*  	ld hl,BUF_11_040
041158 01 16 00 00 1647*  	ld bc,22
04115C 11 69 00 00 1648*  	ld de,105
041160 DD 21 06 09 1649*  	ld ix,2310
       00          
041165 CD 05 C9 04 1650*  	call vdu_load_img
041169 C9          1651*  	ret
04116A             1652*  
04116A             1653*  ld_11_041:
04116A 21 90 3F 04 1654*  	ld hl,F11_041
04116E 22 8A C7 04 1655*  	ld (cur_filename),hl
041172 11 C6 D3 04 1656*  	ld de,filedata
041176 01 00 00 01 1657*  	ld bc,65536
04117A 3E 01       1658*  	ld a,mos_load
04117C 5B CF       1659*  	RST.LIL 08h
04117E 21 33 01 00 1660*  	ld hl,BUF_11_041
041182 01 40 00 00 1661*  	ld bc,64
041186 11 6B 00 00 1662*  	ld de,107
04118A DD 21 C0 1A 1663*  	ld ix,6848
       00          
04118F CD 05 C9 04 1664*  	call vdu_load_img
041193 C9          1665*  	ret
041194             1666*  
041194             1667*  ld_11_043:
041194 21 A4 3F 04 1668*  	ld hl,F11_043
041198 22 8A C7 04 1669*  	ld (cur_filename),hl
04119C 11 C6 D3 04 1670*  	ld de,filedata
0411A0 01 00 00 01 1671*  	ld bc,65536
0411A4 3E 01       1672*  	ld a,mos_load
0411A6 5B CF       1673*  	RST.LIL 08h
0411A8 21 34 01 00 1674*  	ld hl,BUF_11_043
0411AC 01 6C 00 00 1675*  	ld bc,108
0411B0 11 6B 00 00 1676*  	ld de,107
0411B4 DD 21 24 2D 1677*  	ld ix,11556
       00          
0411B9 CD 05 C9 04 1678*  	call vdu_load_img
0411BD C9          1679*  	ret
0411BE             1680*  
0411BE             1681*  ld_11_045:
0411BE 21 B8 3F 04 1682*  	ld hl,F11_045
0411C2 22 8A C7 04 1683*  	ld (cur_filename),hl
0411C6 11 C6 D3 04 1684*  	ld de,filedata
0411CA 01 00 00 01 1685*  	ld bc,65536
0411CE 3E 01       1686*  	ld a,mos_load
0411D0 5B CF       1687*  	RST.LIL 08h
0411D2 21 35 01 00 1688*  	ld hl,BUF_11_045
0411D6 01 6A 00 00 1689*  	ld bc,106
0411DA 11 A0 00 00 1690*  	ld de,160
0411DE DD 21 40 42 1691*  	ld ix,16960
       00          
0411E3 CD 05 C9 04 1692*  	call vdu_load_img
0411E7 C9          1693*  	ret
0411E8             1694*  
0411E8             1695*  ld_11_046:
0411E8 21 CC 3F 04 1696*  	ld hl,F11_046
0411EC 22 8A C7 04 1697*  	ld (cur_filename),hl
0411F0 11 C6 D3 04 1698*  	ld de,filedata
0411F4 01 00 00 01 1699*  	ld bc,65536
0411F8 3E 01       1700*  	ld a,mos_load
0411FA 5B CF       1701*  	RST.LIL 08h
0411FC 21 36 01 00 1702*  	ld hl,BUF_11_046
041200 01 6A 00 00 1703*  	ld bc,106
041204 11 A0 00 00 1704*  	ld de,160
041208 DD 21 40 42 1705*  	ld ix,16960
       00          
04120D CD 05 C9 04 1706*  	call vdu_load_img
041211 C9          1707*  	ret
041212             1708*  
041212             1709*  ld_11_047:
041212 21 E0 3F 04 1710*  	ld hl,F11_047
041216 22 8A C7 04 1711*  	ld (cur_filename),hl
04121A 11 C6 D3 04 1712*  	ld de,filedata
04121E 01 00 00 01 1713*  	ld bc,65536
041222 3E 01       1714*  	ld a,mos_load
041224 5B CF       1715*  	RST.LIL 08h
041226 21 37 01 00 1716*  	ld hl,BUF_11_047
04122A 01 40 01 00 1717*  	ld bc,320
04122E 11 A0 00 00 1718*  	ld de,160
041232 DD 21 00 C8 1719*  	ld ix,51200
       00          
041237 CD 05 C9 04 1720*  	call vdu_load_img
04123B C9          1721*  	ret
04123C             1722*  
04123C             1723*  ld_12_000:
04123C 21 F4 3F 04 1724*  	ld hl,F12_000
041240 22 8A C7 04 1725*  	ld (cur_filename),hl
041244 11 C6 D3 04 1726*  	ld de,filedata
041248 01 00 00 01 1727*  	ld bc,65536
04124C 3E 01       1728*  	ld a,mos_load
04124E 5B CF       1729*  	RST.LIL 08h
041250 21 38 01 00 1730*  	ld hl,BUF_12_000
041254 01 10 00 00 1731*  	ld bc,16
041258 11 23 00 00 1732*  	ld de,35
04125C DD 21 30 02 1733*  	ld ix,560
       00          
041261 CD 05 C9 04 1734*  	call vdu_load_img
041265 C9          1735*  	ret
041266             1736*  
041266             1737*  ld_12_001:
041266 21 08 40 04 1738*  	ld hl,F12_001
04126A 22 8A C7 04 1739*  	ld (cur_filename),hl
04126E 11 C6 D3 04 1740*  	ld de,filedata
041272 01 00 00 01 1741*  	ld bc,65536
041276 3E 01       1742*  	ld a,mos_load
041278 5B CF       1743*  	RST.LIL 08h
04127A 21 39 01 00 1744*  	ld hl,BUF_12_001
04127E 01 0A 00 00 1745*  	ld bc,10
041282 11 23 00 00 1746*  	ld de,35
041286 DD 21 5E 01 1747*  	ld ix,350
       00          
04128B CD 05 C9 04 1748*  	call vdu_load_img
04128F C9          1749*  	ret
041290             1750*  
041290             1751*  ld_12_002:
041290 21 1C 40 04 1752*  	ld hl,F12_002
041294 22 8A C7 04 1753*  	ld (cur_filename),hl
041298 11 C6 D3 04 1754*  	ld de,filedata
04129C 01 00 00 01 1755*  	ld bc,65536
0412A0 3E 01       1756*  	ld a,mos_load
0412A2 5B CF       1757*  	RST.LIL 08h
0412A4 21 3A 01 00 1758*  	ld hl,BUF_12_002
0412A8 01 0A 00 00 1759*  	ld bc,10
0412AC 11 23 00 00 1760*  	ld de,35
0412B0 DD 21 5E 01 1761*  	ld ix,350
       00          
0412B5 CD 05 C9 04 1762*  	call vdu_load_img
0412B9 C9          1763*  	ret
0412BA             1764*  
0412BA             1765*  ld_12_007:
0412BA 21 30 40 04 1766*  	ld hl,F12_007
0412BE 22 8A C7 04 1767*  	ld (cur_filename),hl
0412C2 11 C6 D3 04 1768*  	ld de,filedata
0412C6 01 00 00 01 1769*  	ld bc,65536
0412CA 3E 01       1770*  	ld a,mos_load
0412CC 5B CF       1771*  	RST.LIL 08h
0412CE 21 3B 01 00 1772*  	ld hl,BUF_12_007
0412D2 01 24 00 00 1773*  	ld bc,36
0412D6 11 23 00 00 1774*  	ld de,35
0412DA DD 21 EC 04 1775*  	ld ix,1260
       00          
0412DF CD 05 C9 04 1776*  	call vdu_load_img
0412E3 C9          1777*  	ret
0412E4             1778*  
0412E4             1779*  ld_12_012:
0412E4 21 44 40 04 1780*  	ld hl,F12_012
0412E8 22 8A C7 04 1781*  	ld (cur_filename),hl
0412EC 11 C6 D3 04 1782*  	ld de,filedata
0412F0 01 00 00 01 1783*  	ld bc,65536
0412F4 3E 01       1784*  	ld a,mos_load
0412F6 5B CF       1785*  	RST.LIL 08h
0412F8 21 3C 01 00 1786*  	ld hl,BUF_12_012
0412FC 01 23 00 00 1787*  	ld bc,35
041300 11 2D 00 00 1788*  	ld de,45
041304 DD 21 27 06 1789*  	ld ix,1575
       00          
041309 CD 05 C9 04 1790*  	call vdu_load_img
04130D C9          1791*  	ret
04130E             1792*  
04130E             1793*  ld_12_013:
04130E 21 58 40 04 1794*  	ld hl,F12_013
041312 22 8A C7 04 1795*  	ld (cur_filename),hl
041316 11 C6 D3 04 1796*  	ld de,filedata
04131A 01 00 00 01 1797*  	ld bc,65536
04131E 3E 01       1798*  	ld a,mos_load
041320 5B CF       1799*  	RST.LIL 08h
041322 21 3D 01 00 1800*  	ld hl,BUF_12_013
041326 01 1A 00 00 1801*  	ld bc,26
04132A 11 2D 00 00 1802*  	ld de,45
04132E DD 21 92 04 1803*  	ld ix,1170
       00          
041333 CD 05 C9 04 1804*  	call vdu_load_img
041337 C9          1805*  	ret
041338             1806*  
041338             1807*  ld_12_014:
041338 21 6C 40 04 1808*  	ld hl,F12_014
04133C 22 8A C7 04 1809*  	ld (cur_filename),hl
041340 11 C6 D3 04 1810*  	ld de,filedata
041344 01 00 00 01 1811*  	ld bc,65536
041348 3E 01       1812*  	ld a,mos_load
04134A 5B CF       1813*  	RST.LIL 08h
04134C 21 3E 01 00 1814*  	ld hl,BUF_12_014
041350 01 0F 00 00 1815*  	ld bc,15
041354 11 2D 00 00 1816*  	ld de,45
041358 DD 21 A3 02 1817*  	ld ix,675
       00          
04135D CD 05 C9 04 1818*  	call vdu_load_img
041361 C9          1819*  	ret
041362             1820*  
041362             1821*  ld_12_015:
041362 21 80 40 04 1822*  	ld hl,F12_015
041366 22 8A C7 04 1823*  	ld (cur_filename),hl
04136A 11 C6 D3 04 1824*  	ld de,filedata
04136E 01 00 00 01 1825*  	ld bc,65536
041372 3E 01       1826*  	ld a,mos_load
041374 5B CF       1827*  	RST.LIL 08h
041376 21 3F 01 00 1828*  	ld hl,BUF_12_015
04137A 01 05 00 00 1829*  	ld bc,5
04137E 11 2D 00 00 1830*  	ld de,45
041382 DD 21 E1 00 1831*  	ld ix,225
       00          
041387 CD 05 C9 04 1832*  	call vdu_load_img
04138B C9          1833*  	ret
04138C             1834*  
04138C             1835*  ld_12_016:
04138C 21 94 40 04 1836*  	ld hl,F12_016
041390 22 8A C7 04 1837*  	ld (cur_filename),hl
041394 11 C6 D3 04 1838*  	ld de,filedata
041398 01 00 00 01 1839*  	ld bc,65536
04139C 3E 01       1840*  	ld a,mos_load
04139E 5B CF       1841*  	RST.LIL 08h
0413A0 21 40 01 00 1842*  	ld hl,BUF_12_016
0413A4 01 05 00 00 1843*  	ld bc,5
0413A8 11 2B 00 00 1844*  	ld de,43
0413AC DD 21 D7 00 1845*  	ld ix,215
       00          
0413B1 CD 05 C9 04 1846*  	call vdu_load_img
0413B5 C9          1847*  	ret
0413B6             1848*  
0413B6             1849*  ld_12_017:
0413B6 21 A8 40 04 1850*  	ld hl,F12_017
0413BA 22 8A C7 04 1851*  	ld (cur_filename),hl
0413BE 11 C6 D3 04 1852*  	ld de,filedata
0413C2 01 00 00 01 1853*  	ld bc,65536
0413C6 3E 01       1854*  	ld a,mos_load
0413C8 5B CF       1855*  	RST.LIL 08h
0413CA 21 41 01 00 1856*  	ld hl,BUF_12_017
0413CE 01 0F 00 00 1857*  	ld bc,15
0413D2 11 2D 00 00 1858*  	ld de,45
0413D6 DD 21 A3 02 1859*  	ld ix,675
       00          
0413DB CD 05 C9 04 1860*  	call vdu_load_img
0413DF C9          1861*  	ret
0413E0             1862*  
0413E0             1863*  ld_12_018:
0413E0 21 BC 40 04 1864*  	ld hl,F12_018
0413E4 22 8A C7 04 1865*  	ld (cur_filename),hl
0413E8 11 C6 D3 04 1866*  	ld de,filedata
0413EC 01 00 00 01 1867*  	ld bc,65536
0413F0 3E 01       1868*  	ld a,mos_load
0413F2 5B CF       1869*  	RST.LIL 08h
0413F4 21 42 01 00 1870*  	ld hl,BUF_12_018
0413F8 01 1A 00 00 1871*  	ld bc,26
0413FC 11 2D 00 00 1872*  	ld de,45
041400 DD 21 92 04 1873*  	ld ix,1170
       00          
041405 CD 05 C9 04 1874*  	call vdu_load_img
041409 C9          1875*  	ret
04140A             1876*  
04140A             1877*  ld_12_019:
04140A 21 D0 40 04 1878*  	ld hl,F12_019
04140E 22 8A C7 04 1879*  	ld (cur_filename),hl
041412 11 C6 D3 04 1880*  	ld de,filedata
041416 01 00 00 01 1881*  	ld bc,65536
04141A 3E 01       1882*  	ld a,mos_load
04141C 5B CF       1883*  	RST.LIL 08h
04141E 21 43 01 00 1884*  	ld hl,BUF_12_019
041422 01 23 00 00 1885*  	ld bc,35
041426 11 2D 00 00 1886*  	ld de,45
04142A DD 21 27 06 1887*  	ld ix,1575
       00          
04142F CD 05 C9 04 1888*  	call vdu_load_img
041433 C9          1889*  	ret
041434             1890*  
041434             1891*  ld_12_023:
041434 21 E4 40 04 1892*  	ld hl,F12_023
041438 22 8A C7 04 1893*  	ld (cur_filename),hl
04143C 11 C6 D3 04 1894*  	ld de,filedata
041440 01 00 00 01 1895*  	ld bc,65536
041444 3E 01       1896*  	ld a,mos_load
041446 5B CF       1897*  	RST.LIL 08h
041448 21 44 01 00 1898*  	ld hl,BUF_12_023
04144C 01 2E 00 00 1899*  	ld bc,46
041450 11 2D 00 00 1900*  	ld de,45
041454 DD 21 16 08 1901*  	ld ix,2070
       00          
041459 CD 05 C9 04 1902*  	call vdu_load_img
04145D C9          1903*  	ret
04145E             1904*  
04145E             1905*  ld_12_027:
04145E 21 F8 40 04 1906*  	ld hl,F12_027
041462 22 8A C7 04 1907*  	ld (cur_filename),hl
041466 11 C6 D3 04 1908*  	ld de,filedata
04146A 01 00 00 01 1909*  	ld bc,65536
04146E 3E 01       1910*  	ld a,mos_load
041470 5B CF       1911*  	RST.LIL 08h
041472 21 45 01 00 1912*  	ld hl,BUF_12_027
041476 01 2D 00 00 1913*  	ld bc,45
04147A 11 3F 00 00 1914*  	ld de,63
04147E DD 21 13 0B 1915*  	ld ix,2835
       00          
041483 CD 05 C9 04 1916*  	call vdu_load_img
041487 C9          1917*  	ret
041488             1918*  
041488             1919*  ld_12_028:
041488 21 0C 41 04 1920*  	ld hl,F12_028
04148C 22 8A C7 04 1921*  	ld (cur_filename),hl
041490 11 C6 D3 04 1922*  	ld de,filedata
041494 01 00 00 01 1923*  	ld bc,65536
041498 3E 01       1924*  	ld a,mos_load
04149A 5B CF       1925*  	RST.LIL 08h
04149C 21 46 01 00 1926*  	ld hl,BUF_12_028
0414A0 01 1B 00 00 1927*  	ld bc,27
0414A4 11 3F 00 00 1928*  	ld de,63
0414A8 DD 21 A5 06 1929*  	ld ix,1701
       00          
0414AD CD 05 C9 04 1930*  	call vdu_load_img
0414B1 C9          1931*  	ret
0414B2             1932*  
0414B2             1933*  ld_12_029:
0414B2 21 20 41 04 1934*  	ld hl,F12_029
0414B6 22 8A C7 04 1935*  	ld (cur_filename),hl
0414BA 11 C6 D3 04 1936*  	ld de,filedata
0414BE 01 00 00 01 1937*  	ld bc,65536
0414C2 3E 01       1938*  	ld a,mos_load
0414C4 5B CF       1939*  	RST.LIL 08h
0414C6 21 47 01 00 1940*  	ld hl,BUF_12_029
0414CA 01 09 00 00 1941*  	ld bc,9
0414CE 11 3F 00 00 1942*  	ld de,63
0414D2 DD 21 37 02 1943*  	ld ix,567
       00          
0414D7 CD 05 C9 04 1944*  	call vdu_load_img
0414DB C9          1945*  	ret
0414DC             1946*  
0414DC             1947*  ld_12_030:
0414DC 21 34 41 04 1948*  	ld hl,F12_030
0414E0 22 8A C7 04 1949*  	ld (cur_filename),hl
0414E4 11 C6 D3 04 1950*  	ld de,filedata
0414E8 01 00 00 01 1951*  	ld bc,65536
0414EC 3E 01       1952*  	ld a,mos_load
0414EE 5B CF       1953*  	RST.LIL 08h
0414F0 21 48 01 00 1954*  	ld hl,BUF_12_030
0414F4 01 09 00 00 1955*  	ld bc,9
0414F8 11 3D 00 00 1956*  	ld de,61
0414FC DD 21 25 02 1957*  	ld ix,549
       00          
041501 CD 05 C9 04 1958*  	call vdu_load_img
041505 C9          1959*  	ret
041506             1960*  
041506             1961*  ld_12_031:
041506 21 48 41 04 1962*  	ld hl,F12_031
04150A 22 8A C7 04 1963*  	ld (cur_filename),hl
04150E 11 C6 D3 04 1964*  	ld de,filedata
041512 01 00 00 01 1965*  	ld bc,65536
041516 3E 01       1966*  	ld a,mos_load
041518 5B CF       1967*  	RST.LIL 08h
04151A 21 49 01 00 1968*  	ld hl,BUF_12_031
04151E 01 1B 00 00 1969*  	ld bc,27
041522 11 3F 00 00 1970*  	ld de,63
041526 DD 21 A5 06 1971*  	ld ix,1701
       00          
04152B CD 05 C9 04 1972*  	call vdu_load_img
04152F C9          1973*  	ret
041530             1974*  
041530             1975*  ld_12_032:
041530 21 5C 41 04 1976*  	ld hl,F12_032
041534 22 8A C7 04 1977*  	ld (cur_filename),hl
041538 11 C6 D3 04 1978*  	ld de,filedata
04153C 01 00 00 01 1979*  	ld bc,65536
041540 3E 01       1980*  	ld a,mos_load
041542 5B CF       1981*  	RST.LIL 08h
041544 21 4A 01 00 1982*  	ld hl,BUF_12_032
041548 01 2D 00 00 1983*  	ld bc,45
04154C 11 3F 00 00 1984*  	ld de,63
041550 DD 21 13 0B 1985*  	ld ix,2835
       00          
041555 CD 05 C9 04 1986*  	call vdu_load_img
041559 C9          1987*  	ret
04155A             1988*  
04155A             1989*  ld_12_035:
04155A 21 70 41 04 1990*  	ld hl,F12_035
04155E 22 8A C7 04 1991*  	ld (cur_filename),hl
041562 11 C6 D3 04 1992*  	ld de,filedata
041566 01 00 00 01 1993*  	ld bc,65536
04156A 3E 01       1994*  	ld a,mos_load
04156C 5B CF       1995*  	RST.LIL 08h
04156E 21 4B 01 00 1996*  	ld hl,BUF_12_035
041572 01 40 00 00 1997*  	ld bc,64
041576 11 3F 00 00 1998*  	ld de,63
04157A DD 21 C0 0F 1999*  	ld ix,4032
       00          
04157F CD 05 C9 04 2000*  	call vdu_load_img
041583 C9          2001*  	ret
041584             2002*  
041584             2003*  ld_12_038:
041584 21 84 41 04 2004*  	ld hl,F12_038
041588 22 8A C7 04 2005*  	ld (cur_filename),hl
04158C 11 C6 D3 04 2006*  	ld de,filedata
041590 01 00 00 01 2007*  	ld bc,65536
041594 3E 01       2008*  	ld a,mos_load
041596 5B CF       2009*  	RST.LIL 08h
041598 21 4C 01 00 2010*  	ld hl,BUF_12_038
04159C 01 40 00 00 2011*  	ld bc,64
0415A0 11 6B 00 00 2012*  	ld de,107
0415A4 DD 21 C0 1A 2013*  	ld ix,6848
       00          
0415A9 CD 05 C9 04 2014*  	call vdu_load_img
0415AD C9          2015*  	ret
0415AE             2016*  
0415AE             2017*  ld_12_039:
0415AE 21 98 41 04 2018*  	ld hl,F12_039
0415B2 22 8A C7 04 2019*  	ld (cur_filename),hl
0415B6 11 C6 D3 04 2020*  	ld de,filedata
0415BA 01 00 00 01 2021*  	ld bc,65536
0415BE 3E 01       2022*  	ld a,mos_load
0415C0 5B CF       2023*  	RST.LIL 08h
0415C2 21 4D 01 00 2024*  	ld hl,BUF_12_039
0415C6 01 16 00 00 2025*  	ld bc,22
0415CA 11 6B 00 00 2026*  	ld de,107
0415CE DD 21 32 09 2027*  	ld ix,2354
       00          
0415D3 CD 05 C9 04 2028*  	call vdu_load_img
0415D7 C9          2029*  	ret
0415D8             2030*  
0415D8             2031*  ld_12_040:
0415D8 21 AC 41 04 2032*  	ld hl,F12_040
0415DC 22 8A C7 04 2033*  	ld (cur_filename),hl
0415E0 11 C6 D3 04 2034*  	ld de,filedata
0415E4 01 00 00 01 2035*  	ld bc,65536
0415E8 3E 01       2036*  	ld a,mos_load
0415EA 5B CF       2037*  	RST.LIL 08h
0415EC 21 4E 01 00 2038*  	ld hl,BUF_12_040
0415F0 01 16 00 00 2039*  	ld bc,22
0415F4 11 69 00 00 2040*  	ld de,105
0415F8 DD 21 06 09 2041*  	ld ix,2310
       00          
0415FD CD 05 C9 04 2042*  	call vdu_load_img
041601 C9          2043*  	ret
041602             2044*  
041602             2045*  ld_12_041:
041602 21 C0 41 04 2046*  	ld hl,F12_041
041606 22 8A C7 04 2047*  	ld (cur_filename),hl
04160A 11 C6 D3 04 2048*  	ld de,filedata
04160E 01 00 00 01 2049*  	ld bc,65536
041612 3E 01       2050*  	ld a,mos_load
041614 5B CF       2051*  	RST.LIL 08h
041616 21 4F 01 00 2052*  	ld hl,BUF_12_041
04161A 01 40 00 00 2053*  	ld bc,64
04161E 11 6B 00 00 2054*  	ld de,107
041622 DD 21 C0 1A 2055*  	ld ix,6848
       00          
041627 CD 05 C9 04 2056*  	call vdu_load_img
04162B C9          2057*  	ret
04162C             2058*  
04162C             2059*  ld_12_043:
04162C 21 D4 41 04 2060*  	ld hl,F12_043
041630 22 8A C7 04 2061*  	ld (cur_filename),hl
041634 11 C6 D3 04 2062*  	ld de,filedata
041638 01 00 00 01 2063*  	ld bc,65536
04163C 3E 01       2064*  	ld a,mos_load
04163E 5B CF       2065*  	RST.LIL 08h
041640 21 50 01 00 2066*  	ld hl,BUF_12_043
041644 01 6C 00 00 2067*  	ld bc,108
041648 11 6B 00 00 2068*  	ld de,107
04164C DD 21 24 2D 2069*  	ld ix,11556
       00          
041651 CD 05 C9 04 2070*  	call vdu_load_img
041655 C9          2071*  	ret
041656             2072*  
041656             2073*  ld_12_045:
041656 21 E8 41 04 2074*  	ld hl,F12_045
04165A 22 8A C7 04 2075*  	ld (cur_filename),hl
04165E 11 C6 D3 04 2076*  	ld de,filedata
041662 01 00 00 01 2077*  	ld bc,65536
041666 3E 01       2078*  	ld a,mos_load
041668 5B CF       2079*  	RST.LIL 08h
04166A 21 51 01 00 2080*  	ld hl,BUF_12_045
04166E 01 6A 00 00 2081*  	ld bc,106
041672 11 A0 00 00 2082*  	ld de,160
041676 DD 21 40 42 2083*  	ld ix,16960
       00          
04167B CD 05 C9 04 2084*  	call vdu_load_img
04167F C9          2085*  	ret
041680             2086*  
041680             2087*  ld_12_046:
041680 21 FC 41 04 2088*  	ld hl,F12_046
041684 22 8A C7 04 2089*  	ld (cur_filename),hl
041688 11 C6 D3 04 2090*  	ld de,filedata
04168C 01 00 00 01 2091*  	ld bc,65536
041690 3E 01       2092*  	ld a,mos_load
041692 5B CF       2093*  	RST.LIL 08h
041694 21 52 01 00 2094*  	ld hl,BUF_12_046
041698 01 6A 00 00 2095*  	ld bc,106
04169C 11 A0 00 00 2096*  	ld de,160
0416A0 DD 21 40 42 2097*  	ld ix,16960
       00          
0416A5 CD 05 C9 04 2098*  	call vdu_load_img
0416A9 C9          2099*  	ret
0416AA             2100*  
0416AA             2101*  ld_12_047:
0416AA 21 10 42 04 2102*  	ld hl,F12_047
0416AE 22 8A C7 04 2103*  	ld (cur_filename),hl
0416B2 11 C6 D3 04 2104*  	ld de,filedata
0416B6 01 00 00 01 2105*  	ld bc,65536
0416BA 3E 01       2106*  	ld a,mos_load
0416BC 5B CF       2107*  	RST.LIL 08h
0416BE 21 53 01 00 2108*  	ld hl,BUF_12_047
0416C2 01 40 01 00 2109*  	ld bc,320
0416C6 11 A0 00 00 2110*  	ld de,160
0416CA DD 21 00 C8 2111*  	ld ix,51200
       00          
0416CF CD 05 C9 04 2112*  	call vdu_load_img
0416D3 C9          2113*  	ret
0416D4             2114*  
0416D4             2115*  ld_13_000:
0416D4 21 24 42 04 2116*  	ld hl,F13_000
0416D8 22 8A C7 04 2117*  	ld (cur_filename),hl
0416DC 11 C6 D3 04 2118*  	ld de,filedata
0416E0 01 00 00 01 2119*  	ld bc,65536
0416E4 3E 01       2120*  	ld a,mos_load
0416E6 5B CF       2121*  	RST.LIL 08h
0416E8 21 54 01 00 2122*  	ld hl,BUF_13_000
0416EC 01 10 00 00 2123*  	ld bc,16
0416F0 11 23 00 00 2124*  	ld de,35
0416F4 DD 21 30 02 2125*  	ld ix,560
       00          
0416F9 CD 05 C9 04 2126*  	call vdu_load_img
0416FD C9          2127*  	ret
0416FE             2128*  
0416FE             2129*  ld_13_001:
0416FE 21 38 42 04 2130*  	ld hl,F13_001
041702 22 8A C7 04 2131*  	ld (cur_filename),hl
041706 11 C6 D3 04 2132*  	ld de,filedata
04170A 01 00 00 01 2133*  	ld bc,65536
04170E 3E 01       2134*  	ld a,mos_load
041710 5B CF       2135*  	RST.LIL 08h
041712 21 55 01 00 2136*  	ld hl,BUF_13_001
041716 01 0A 00 00 2137*  	ld bc,10
04171A 11 23 00 00 2138*  	ld de,35
04171E DD 21 5E 01 2139*  	ld ix,350
       00          
041723 CD 05 C9 04 2140*  	call vdu_load_img
041727 C9          2141*  	ret
041728             2142*  
041728             2143*  ld_13_002:
041728 21 4C 42 04 2144*  	ld hl,F13_002
04172C 22 8A C7 04 2145*  	ld (cur_filename),hl
041730 11 C6 D3 04 2146*  	ld de,filedata
041734 01 00 00 01 2147*  	ld bc,65536
041738 3E 01       2148*  	ld a,mos_load
04173A 5B CF       2149*  	RST.LIL 08h
04173C 21 56 01 00 2150*  	ld hl,BUF_13_002
041740 01 0A 00 00 2151*  	ld bc,10
041744 11 23 00 00 2152*  	ld de,35
041748 DD 21 5E 01 2153*  	ld ix,350
       00          
04174D CD 05 C9 04 2154*  	call vdu_load_img
041751 C9          2155*  	ret
041752             2156*  
041752             2157*  ld_13_007:
041752 21 60 42 04 2158*  	ld hl,F13_007
041756 22 8A C7 04 2159*  	ld (cur_filename),hl
04175A 11 C6 D3 04 2160*  	ld de,filedata
04175E 01 00 00 01 2161*  	ld bc,65536
041762 3E 01       2162*  	ld a,mos_load
041764 5B CF       2163*  	RST.LIL 08h
041766 21 57 01 00 2164*  	ld hl,BUF_13_007
04176A 01 24 00 00 2165*  	ld bc,36
04176E 11 23 00 00 2166*  	ld de,35
041772 DD 21 EC 04 2167*  	ld ix,1260
       00          
041777 CD 05 C9 04 2168*  	call vdu_load_img
04177B C9          2169*  	ret
04177C             2170*  
04177C             2171*  ld_13_012:
04177C 21 74 42 04 2172*  	ld hl,F13_012
041780 22 8A C7 04 2173*  	ld (cur_filename),hl
041784 11 C6 D3 04 2174*  	ld de,filedata
041788 01 00 00 01 2175*  	ld bc,65536
04178C 3E 01       2176*  	ld a,mos_load
04178E 5B CF       2177*  	RST.LIL 08h
041790 21 58 01 00 2178*  	ld hl,BUF_13_012
041794 01 23 00 00 2179*  	ld bc,35
041798 11 2D 00 00 2180*  	ld de,45
04179C DD 21 27 06 2181*  	ld ix,1575
       00          
0417A1 CD 05 C9 04 2182*  	call vdu_load_img
0417A5 C9          2183*  	ret
0417A6             2184*  
0417A6             2185*  ld_13_013:
0417A6 21 88 42 04 2186*  	ld hl,F13_013
0417AA 22 8A C7 04 2187*  	ld (cur_filename),hl
0417AE 11 C6 D3 04 2188*  	ld de,filedata
0417B2 01 00 00 01 2189*  	ld bc,65536
0417B6 3E 01       2190*  	ld a,mos_load
0417B8 5B CF       2191*  	RST.LIL 08h
0417BA 21 59 01 00 2192*  	ld hl,BUF_13_013
0417BE 01 1A 00 00 2193*  	ld bc,26
0417C2 11 2D 00 00 2194*  	ld de,45
0417C6 DD 21 92 04 2195*  	ld ix,1170
       00          
0417CB CD 05 C9 04 2196*  	call vdu_load_img
0417CF C9          2197*  	ret
0417D0             2198*  
0417D0             2199*  ld_13_014:
0417D0 21 9C 42 04 2200*  	ld hl,F13_014
0417D4 22 8A C7 04 2201*  	ld (cur_filename),hl
0417D8 11 C6 D3 04 2202*  	ld de,filedata
0417DC 01 00 00 01 2203*  	ld bc,65536
0417E0 3E 01       2204*  	ld a,mos_load
0417E2 5B CF       2205*  	RST.LIL 08h
0417E4 21 5A 01 00 2206*  	ld hl,BUF_13_014
0417E8 01 0F 00 00 2207*  	ld bc,15
0417EC 11 2D 00 00 2208*  	ld de,45
0417F0 DD 21 A3 02 2209*  	ld ix,675
       00          
0417F5 CD 05 C9 04 2210*  	call vdu_load_img
0417F9 C9          2211*  	ret
0417FA             2212*  
0417FA             2213*  ld_13_015:
0417FA 21 B0 42 04 2214*  	ld hl,F13_015
0417FE 22 8A C7 04 2215*  	ld (cur_filename),hl
041802 11 C6 D3 04 2216*  	ld de,filedata
041806 01 00 00 01 2217*  	ld bc,65536
04180A 3E 01       2218*  	ld a,mos_load
04180C 5B CF       2219*  	RST.LIL 08h
04180E 21 5B 01 00 2220*  	ld hl,BUF_13_015
041812 01 05 00 00 2221*  	ld bc,5
041816 11 2D 00 00 2222*  	ld de,45
04181A DD 21 E1 00 2223*  	ld ix,225
       00          
04181F CD 05 C9 04 2224*  	call vdu_load_img
041823 C9          2225*  	ret
041824             2226*  
041824             2227*  ld_13_016:
041824 21 C4 42 04 2228*  	ld hl,F13_016
041828 22 8A C7 04 2229*  	ld (cur_filename),hl
04182C 11 C6 D3 04 2230*  	ld de,filedata
041830 01 00 00 01 2231*  	ld bc,65536
041834 3E 01       2232*  	ld a,mos_load
041836 5B CF       2233*  	RST.LIL 08h
041838 21 5C 01 00 2234*  	ld hl,BUF_13_016
04183C 01 05 00 00 2235*  	ld bc,5
041840 11 2B 00 00 2236*  	ld de,43
041844 DD 21 D7 00 2237*  	ld ix,215
       00          
041849 CD 05 C9 04 2238*  	call vdu_load_img
04184D C9          2239*  	ret
04184E             2240*  
04184E             2241*  ld_13_017:
04184E 21 D8 42 04 2242*  	ld hl,F13_017
041852 22 8A C7 04 2243*  	ld (cur_filename),hl
041856 11 C6 D3 04 2244*  	ld de,filedata
04185A 01 00 00 01 2245*  	ld bc,65536
04185E 3E 01       2246*  	ld a,mos_load
041860 5B CF       2247*  	RST.LIL 08h
041862 21 5D 01 00 2248*  	ld hl,BUF_13_017
041866 01 0F 00 00 2249*  	ld bc,15
04186A 11 2D 00 00 2250*  	ld de,45
04186E DD 21 A3 02 2251*  	ld ix,675
       00          
041873 CD 05 C9 04 2252*  	call vdu_load_img
041877 C9          2253*  	ret
041878             2254*  
041878             2255*  ld_13_018:
041878 21 EC 42 04 2256*  	ld hl,F13_018
04187C 22 8A C7 04 2257*  	ld (cur_filename),hl
041880 11 C6 D3 04 2258*  	ld de,filedata
041884 01 00 00 01 2259*  	ld bc,65536
041888 3E 01       2260*  	ld a,mos_load
04188A 5B CF       2261*  	RST.LIL 08h
04188C 21 5E 01 00 2262*  	ld hl,BUF_13_018
041890 01 1A 00 00 2263*  	ld bc,26
041894 11 2D 00 00 2264*  	ld de,45
041898 DD 21 92 04 2265*  	ld ix,1170
       00          
04189D CD 05 C9 04 2266*  	call vdu_load_img
0418A1 C9          2267*  	ret
0418A2             2268*  
0418A2             2269*  ld_13_019:
0418A2 21 00 43 04 2270*  	ld hl,F13_019
0418A6 22 8A C7 04 2271*  	ld (cur_filename),hl
0418AA 11 C6 D3 04 2272*  	ld de,filedata
0418AE 01 00 00 01 2273*  	ld bc,65536
0418B2 3E 01       2274*  	ld a,mos_load
0418B4 5B CF       2275*  	RST.LIL 08h
0418B6 21 5F 01 00 2276*  	ld hl,BUF_13_019
0418BA 01 23 00 00 2277*  	ld bc,35
0418BE 11 2D 00 00 2278*  	ld de,45
0418C2 DD 21 27 06 2279*  	ld ix,1575
       00          
0418C7 CD 05 C9 04 2280*  	call vdu_load_img
0418CB C9          2281*  	ret
0418CC             2282*  
0418CC             2283*  ld_13_023:
0418CC 21 14 43 04 2284*  	ld hl,F13_023
0418D0 22 8A C7 04 2285*  	ld (cur_filename),hl
0418D4 11 C6 D3 04 2286*  	ld de,filedata
0418D8 01 00 00 01 2287*  	ld bc,65536
0418DC 3E 01       2288*  	ld a,mos_load
0418DE 5B CF       2289*  	RST.LIL 08h
0418E0 21 60 01 00 2290*  	ld hl,BUF_13_023
0418E4 01 2E 00 00 2291*  	ld bc,46
0418E8 11 2D 00 00 2292*  	ld de,45
0418EC DD 21 16 08 2293*  	ld ix,2070
       00          
0418F1 CD 05 C9 04 2294*  	call vdu_load_img
0418F5 C9          2295*  	ret
0418F6             2296*  
0418F6             2297*  ld_13_027:
0418F6 21 28 43 04 2298*  	ld hl,F13_027
0418FA 22 8A C7 04 2299*  	ld (cur_filename),hl
0418FE 11 C6 D3 04 2300*  	ld de,filedata
041902 01 00 00 01 2301*  	ld bc,65536
041906 3E 01       2302*  	ld a,mos_load
041908 5B CF       2303*  	RST.LIL 08h
04190A 21 61 01 00 2304*  	ld hl,BUF_13_027
04190E 01 2D 00 00 2305*  	ld bc,45
041912 11 3F 00 00 2306*  	ld de,63
041916 DD 21 13 0B 2307*  	ld ix,2835
       00          
04191B CD 05 C9 04 2308*  	call vdu_load_img
04191F C9          2309*  	ret
041920             2310*  
041920             2311*  ld_13_028:
041920 21 3C 43 04 2312*  	ld hl,F13_028
041924 22 8A C7 04 2313*  	ld (cur_filename),hl
041928 11 C6 D3 04 2314*  	ld de,filedata
04192C 01 00 00 01 2315*  	ld bc,65536
041930 3E 01       2316*  	ld a,mos_load
041932 5B CF       2317*  	RST.LIL 08h
041934 21 62 01 00 2318*  	ld hl,BUF_13_028
041938 01 1B 00 00 2319*  	ld bc,27
04193C 11 3F 00 00 2320*  	ld de,63
041940 DD 21 A5 06 2321*  	ld ix,1701
       00          
041945 CD 05 C9 04 2322*  	call vdu_load_img
041949 C9          2323*  	ret
04194A             2324*  
04194A             2325*  ld_13_029:
04194A 21 50 43 04 2326*  	ld hl,F13_029
04194E 22 8A C7 04 2327*  	ld (cur_filename),hl
041952 11 C6 D3 04 2328*  	ld de,filedata
041956 01 00 00 01 2329*  	ld bc,65536
04195A 3E 01       2330*  	ld a,mos_load
04195C 5B CF       2331*  	RST.LIL 08h
04195E 21 63 01 00 2332*  	ld hl,BUF_13_029
041962 01 09 00 00 2333*  	ld bc,9
041966 11 3F 00 00 2334*  	ld de,63
04196A DD 21 37 02 2335*  	ld ix,567
       00          
04196F CD 05 C9 04 2336*  	call vdu_load_img
041973 C9          2337*  	ret
041974             2338*  
041974             2339*  ld_13_030:
041974 21 64 43 04 2340*  	ld hl,F13_030
041978 22 8A C7 04 2341*  	ld (cur_filename),hl
04197C 11 C6 D3 04 2342*  	ld de,filedata
041980 01 00 00 01 2343*  	ld bc,65536
041984 3E 01       2344*  	ld a,mos_load
041986 5B CF       2345*  	RST.LIL 08h
041988 21 64 01 00 2346*  	ld hl,BUF_13_030
04198C 01 09 00 00 2347*  	ld bc,9
041990 11 3D 00 00 2348*  	ld de,61
041994 DD 21 25 02 2349*  	ld ix,549
       00          
041999 CD 05 C9 04 2350*  	call vdu_load_img
04199D C9          2351*  	ret
04199E             2352*  
04199E             2353*  ld_13_031:
04199E 21 78 43 04 2354*  	ld hl,F13_031
0419A2 22 8A C7 04 2355*  	ld (cur_filename),hl
0419A6 11 C6 D3 04 2356*  	ld de,filedata
0419AA 01 00 00 01 2357*  	ld bc,65536
0419AE 3E 01       2358*  	ld a,mos_load
0419B0 5B CF       2359*  	RST.LIL 08h
0419B2 21 65 01 00 2360*  	ld hl,BUF_13_031
0419B6 01 1B 00 00 2361*  	ld bc,27
0419BA 11 3F 00 00 2362*  	ld de,63
0419BE DD 21 A5 06 2363*  	ld ix,1701
       00          
0419C3 CD 05 C9 04 2364*  	call vdu_load_img
0419C7 C9          2365*  	ret
0419C8             2366*  
0419C8             2367*  ld_13_032:
0419C8 21 8C 43 04 2368*  	ld hl,F13_032
0419CC 22 8A C7 04 2369*  	ld (cur_filename),hl
0419D0 11 C6 D3 04 2370*  	ld de,filedata
0419D4 01 00 00 01 2371*  	ld bc,65536
0419D8 3E 01       2372*  	ld a,mos_load
0419DA 5B CF       2373*  	RST.LIL 08h
0419DC 21 66 01 00 2374*  	ld hl,BUF_13_032
0419E0 01 2D 00 00 2375*  	ld bc,45
0419E4 11 3F 00 00 2376*  	ld de,63
0419E8 DD 21 13 0B 2377*  	ld ix,2835
       00          
0419ED CD 05 C9 04 2378*  	call vdu_load_img
0419F1 C9          2379*  	ret
0419F2             2380*  
0419F2             2381*  ld_13_035:
0419F2 21 A0 43 04 2382*  	ld hl,F13_035
0419F6 22 8A C7 04 2383*  	ld (cur_filename),hl
0419FA 11 C6 D3 04 2384*  	ld de,filedata
0419FE 01 00 00 01 2385*  	ld bc,65536
041A02 3E 01       2386*  	ld a,mos_load
041A04 5B CF       2387*  	RST.LIL 08h
041A06 21 67 01 00 2388*  	ld hl,BUF_13_035
041A0A 01 40 00 00 2389*  	ld bc,64
041A0E 11 3F 00 00 2390*  	ld de,63
041A12 DD 21 C0 0F 2391*  	ld ix,4032
       00          
041A17 CD 05 C9 04 2392*  	call vdu_load_img
041A1B C9          2393*  	ret
041A1C             2394*  
041A1C             2395*  ld_13_038:
041A1C 21 B4 43 04 2396*  	ld hl,F13_038
041A20 22 8A C7 04 2397*  	ld (cur_filename),hl
041A24 11 C6 D3 04 2398*  	ld de,filedata
041A28 01 00 00 01 2399*  	ld bc,65536
041A2C 3E 01       2400*  	ld a,mos_load
041A2E 5B CF       2401*  	RST.LIL 08h
041A30 21 68 01 00 2402*  	ld hl,BUF_13_038
041A34 01 40 00 00 2403*  	ld bc,64
041A38 11 6B 00 00 2404*  	ld de,107
041A3C DD 21 C0 1A 2405*  	ld ix,6848
       00          
041A41 CD 05 C9 04 2406*  	call vdu_load_img
041A45 C9          2407*  	ret
041A46             2408*  
041A46             2409*  ld_13_039:
041A46 21 C8 43 04 2410*  	ld hl,F13_039
041A4A 22 8A C7 04 2411*  	ld (cur_filename),hl
041A4E 11 C6 D3 04 2412*  	ld de,filedata
041A52 01 00 00 01 2413*  	ld bc,65536
041A56 3E 01       2414*  	ld a,mos_load
041A58 5B CF       2415*  	RST.LIL 08h
041A5A 21 69 01 00 2416*  	ld hl,BUF_13_039
041A5E 01 16 00 00 2417*  	ld bc,22
041A62 11 6B 00 00 2418*  	ld de,107
041A66 DD 21 32 09 2419*  	ld ix,2354
       00          
041A6B CD 05 C9 04 2420*  	call vdu_load_img
041A6F C9          2421*  	ret
041A70             2422*  
041A70             2423*  ld_13_040:
041A70 21 DC 43 04 2424*  	ld hl,F13_040
041A74 22 8A C7 04 2425*  	ld (cur_filename),hl
041A78 11 C6 D3 04 2426*  	ld de,filedata
041A7C 01 00 00 01 2427*  	ld bc,65536
041A80 3E 01       2428*  	ld a,mos_load
041A82 5B CF       2429*  	RST.LIL 08h
041A84 21 6A 01 00 2430*  	ld hl,BUF_13_040
041A88 01 16 00 00 2431*  	ld bc,22
041A8C 11 69 00 00 2432*  	ld de,105
041A90 DD 21 06 09 2433*  	ld ix,2310
       00          
041A95 CD 05 C9 04 2434*  	call vdu_load_img
041A99 C9          2435*  	ret
041A9A             2436*  
041A9A             2437*  ld_13_041:
041A9A 21 F0 43 04 2438*  	ld hl,F13_041
041A9E 22 8A C7 04 2439*  	ld (cur_filename),hl
041AA2 11 C6 D3 04 2440*  	ld de,filedata
041AA6 01 00 00 01 2441*  	ld bc,65536
041AAA 3E 01       2442*  	ld a,mos_load
041AAC 5B CF       2443*  	RST.LIL 08h
041AAE 21 6B 01 00 2444*  	ld hl,BUF_13_041
041AB2 01 40 00 00 2445*  	ld bc,64
041AB6 11 6B 00 00 2446*  	ld de,107
041ABA DD 21 C0 1A 2447*  	ld ix,6848
       00          
041ABF CD 05 C9 04 2448*  	call vdu_load_img
041AC3 C9          2449*  	ret
041AC4             2450*  
041AC4             2451*  ld_13_043:
041AC4 21 04 44 04 2452*  	ld hl,F13_043
041AC8 22 8A C7 04 2453*  	ld (cur_filename),hl
041ACC 11 C6 D3 04 2454*  	ld de,filedata
041AD0 01 00 00 01 2455*  	ld bc,65536
041AD4 3E 01       2456*  	ld a,mos_load
041AD6 5B CF       2457*  	RST.LIL 08h
041AD8 21 6C 01 00 2458*  	ld hl,BUF_13_043
041ADC 01 6C 00 00 2459*  	ld bc,108
041AE0 11 6B 00 00 2460*  	ld de,107
041AE4 DD 21 24 2D 2461*  	ld ix,11556
       00          
041AE9 CD 05 C9 04 2462*  	call vdu_load_img
041AED C9          2463*  	ret
041AEE             2464*  
041AEE             2465*  ld_13_045:
041AEE 21 18 44 04 2466*  	ld hl,F13_045
041AF2 22 8A C7 04 2467*  	ld (cur_filename),hl
041AF6 11 C6 D3 04 2468*  	ld de,filedata
041AFA 01 00 00 01 2469*  	ld bc,65536
041AFE 3E 01       2470*  	ld a,mos_load
041B00 5B CF       2471*  	RST.LIL 08h
041B02 21 6D 01 00 2472*  	ld hl,BUF_13_045
041B06 01 6A 00 00 2473*  	ld bc,106
041B0A 11 A0 00 00 2474*  	ld de,160
041B0E DD 21 40 42 2475*  	ld ix,16960
       00          
041B13 CD 05 C9 04 2476*  	call vdu_load_img
041B17 C9          2477*  	ret
041B18             2478*  
041B18             2479*  ld_13_046:
041B18 21 2C 44 04 2480*  	ld hl,F13_046
041B1C 22 8A C7 04 2481*  	ld (cur_filename),hl
041B20 11 C6 D3 04 2482*  	ld de,filedata
041B24 01 00 00 01 2483*  	ld bc,65536
041B28 3E 01       2484*  	ld a,mos_load
041B2A 5B CF       2485*  	RST.LIL 08h
041B2C 21 6E 01 00 2486*  	ld hl,BUF_13_046
041B30 01 6A 00 00 2487*  	ld bc,106
041B34 11 A0 00 00 2488*  	ld de,160
041B38 DD 21 40 42 2489*  	ld ix,16960
       00          
041B3D CD 05 C9 04 2490*  	call vdu_load_img
041B41 C9          2491*  	ret
041B42             2492*  
041B42             2493*  ld_13_047:
041B42 21 40 44 04 2494*  	ld hl,F13_047
041B46 22 8A C7 04 2495*  	ld (cur_filename),hl
041B4A 11 C6 D3 04 2496*  	ld de,filedata
041B4E 01 00 00 01 2497*  	ld bc,65536
041B52 3E 01       2498*  	ld a,mos_load
041B54 5B CF       2499*  	RST.LIL 08h
041B56 21 6F 01 00 2500*  	ld hl,BUF_13_047
041B5A 01 40 01 00 2501*  	ld bc,320
041B5E 11 A0 00 00 2502*  	ld de,160
041B62 DD 21 00 C8 2503*  	ld ix,51200
       00          
041B67 CD 05 C9 04 2504*  	call vdu_load_img
041B6B C9          2505*  	ret
041B6C             2506*  
041B6C             2507*  ld_14_000:
041B6C 21 54 44 04 2508*  	ld hl,F14_000
041B70 22 8A C7 04 2509*  	ld (cur_filename),hl
041B74 11 C6 D3 04 2510*  	ld de,filedata
041B78 01 00 00 01 2511*  	ld bc,65536
041B7C 3E 01       2512*  	ld a,mos_load
041B7E 5B CF       2513*  	RST.LIL 08h
041B80 21 70 01 00 2514*  	ld hl,BUF_14_000
041B84 01 10 00 00 2515*  	ld bc,16
041B88 11 23 00 00 2516*  	ld de,35
041B8C DD 21 30 02 2517*  	ld ix,560
       00          
041B91 CD 05 C9 04 2518*  	call vdu_load_img
041B95 C9          2519*  	ret
041B96             2520*  
041B96             2521*  ld_14_001:
041B96 21 68 44 04 2522*  	ld hl,F14_001
041B9A 22 8A C7 04 2523*  	ld (cur_filename),hl
041B9E 11 C6 D3 04 2524*  	ld de,filedata
041BA2 01 00 00 01 2525*  	ld bc,65536
041BA6 3E 01       2526*  	ld a,mos_load
041BA8 5B CF       2527*  	RST.LIL 08h
041BAA 21 71 01 00 2528*  	ld hl,BUF_14_001
041BAE 01 0A 00 00 2529*  	ld bc,10
041BB2 11 23 00 00 2530*  	ld de,35
041BB6 DD 21 5E 01 2531*  	ld ix,350
       00          
041BBB CD 05 C9 04 2532*  	call vdu_load_img
041BBF C9          2533*  	ret
041BC0             2534*  
041BC0             2535*  ld_14_002:
041BC0 21 7C 44 04 2536*  	ld hl,F14_002
041BC4 22 8A C7 04 2537*  	ld (cur_filename),hl
041BC8 11 C6 D3 04 2538*  	ld de,filedata
041BCC 01 00 00 01 2539*  	ld bc,65536
041BD0 3E 01       2540*  	ld a,mos_load
041BD2 5B CF       2541*  	RST.LIL 08h
041BD4 21 72 01 00 2542*  	ld hl,BUF_14_002
041BD8 01 0A 00 00 2543*  	ld bc,10
041BDC 11 23 00 00 2544*  	ld de,35
041BE0 DD 21 5E 01 2545*  	ld ix,350
       00          
041BE5 CD 05 C9 04 2546*  	call vdu_load_img
041BE9 C9          2547*  	ret
041BEA             2548*  
041BEA             2549*  ld_14_007:
041BEA 21 90 44 04 2550*  	ld hl,F14_007
041BEE 22 8A C7 04 2551*  	ld (cur_filename),hl
041BF2 11 C6 D3 04 2552*  	ld de,filedata
041BF6 01 00 00 01 2553*  	ld bc,65536
041BFA 3E 01       2554*  	ld a,mos_load
041BFC 5B CF       2555*  	RST.LIL 08h
041BFE 21 73 01 00 2556*  	ld hl,BUF_14_007
041C02 01 24 00 00 2557*  	ld bc,36
041C06 11 23 00 00 2558*  	ld de,35
041C0A DD 21 EC 04 2559*  	ld ix,1260
       00          
041C0F CD 05 C9 04 2560*  	call vdu_load_img
041C13 C9          2561*  	ret
041C14             2562*  
041C14             2563*  ld_14_012:
041C14 21 A4 44 04 2564*  	ld hl,F14_012
041C18 22 8A C7 04 2565*  	ld (cur_filename),hl
041C1C 11 C6 D3 04 2566*  	ld de,filedata
041C20 01 00 00 01 2567*  	ld bc,65536
041C24 3E 01       2568*  	ld a,mos_load
041C26 5B CF       2569*  	RST.LIL 08h
041C28 21 74 01 00 2570*  	ld hl,BUF_14_012
041C2C 01 23 00 00 2571*  	ld bc,35
041C30 11 2D 00 00 2572*  	ld de,45
041C34 DD 21 27 06 2573*  	ld ix,1575
       00          
041C39 CD 05 C9 04 2574*  	call vdu_load_img
041C3D C9          2575*  	ret
041C3E             2576*  
041C3E             2577*  ld_14_013:
041C3E 21 B8 44 04 2578*  	ld hl,F14_013
041C42 22 8A C7 04 2579*  	ld (cur_filename),hl
041C46 11 C6 D3 04 2580*  	ld de,filedata
041C4A 01 00 00 01 2581*  	ld bc,65536
041C4E 3E 01       2582*  	ld a,mos_load
041C50 5B CF       2583*  	RST.LIL 08h
041C52 21 75 01 00 2584*  	ld hl,BUF_14_013
041C56 01 1A 00 00 2585*  	ld bc,26
041C5A 11 2D 00 00 2586*  	ld de,45
041C5E DD 21 92 04 2587*  	ld ix,1170
       00          
041C63 CD 05 C9 04 2588*  	call vdu_load_img
041C67 C9          2589*  	ret
041C68             2590*  
041C68             2591*  ld_14_014:
041C68 21 CC 44 04 2592*  	ld hl,F14_014
041C6C 22 8A C7 04 2593*  	ld (cur_filename),hl
041C70 11 C6 D3 04 2594*  	ld de,filedata
041C74 01 00 00 01 2595*  	ld bc,65536
041C78 3E 01       2596*  	ld a,mos_load
041C7A 5B CF       2597*  	RST.LIL 08h
041C7C 21 76 01 00 2598*  	ld hl,BUF_14_014
041C80 01 0F 00 00 2599*  	ld bc,15
041C84 11 2D 00 00 2600*  	ld de,45
041C88 DD 21 A3 02 2601*  	ld ix,675
       00          
041C8D CD 05 C9 04 2602*  	call vdu_load_img
041C91 C9          2603*  	ret
041C92             2604*  
041C92             2605*  ld_14_015:
041C92 21 E0 44 04 2606*  	ld hl,F14_015
041C96 22 8A C7 04 2607*  	ld (cur_filename),hl
041C9A 11 C6 D3 04 2608*  	ld de,filedata
041C9E 01 00 00 01 2609*  	ld bc,65536
041CA2 3E 01       2610*  	ld a,mos_load
041CA4 5B CF       2611*  	RST.LIL 08h
041CA6 21 77 01 00 2612*  	ld hl,BUF_14_015
041CAA 01 05 00 00 2613*  	ld bc,5
041CAE 11 2D 00 00 2614*  	ld de,45
041CB2 DD 21 E1 00 2615*  	ld ix,225
       00          
041CB7 CD 05 C9 04 2616*  	call vdu_load_img
041CBB C9          2617*  	ret
041CBC             2618*  
041CBC             2619*  ld_14_016:
041CBC 21 F4 44 04 2620*  	ld hl,F14_016
041CC0 22 8A C7 04 2621*  	ld (cur_filename),hl
041CC4 11 C6 D3 04 2622*  	ld de,filedata
041CC8 01 00 00 01 2623*  	ld bc,65536
041CCC 3E 01       2624*  	ld a,mos_load
041CCE 5B CF       2625*  	RST.LIL 08h
041CD0 21 78 01 00 2626*  	ld hl,BUF_14_016
041CD4 01 05 00 00 2627*  	ld bc,5
041CD8 11 2B 00 00 2628*  	ld de,43
041CDC DD 21 D7 00 2629*  	ld ix,215
       00          
041CE1 CD 05 C9 04 2630*  	call vdu_load_img
041CE5 C9          2631*  	ret
041CE6             2632*  
041CE6             2633*  ld_14_017:
041CE6 21 08 45 04 2634*  	ld hl,F14_017
041CEA 22 8A C7 04 2635*  	ld (cur_filename),hl
041CEE 11 C6 D3 04 2636*  	ld de,filedata
041CF2 01 00 00 01 2637*  	ld bc,65536
041CF6 3E 01       2638*  	ld a,mos_load
041CF8 5B CF       2639*  	RST.LIL 08h
041CFA 21 79 01 00 2640*  	ld hl,BUF_14_017
041CFE 01 0F 00 00 2641*  	ld bc,15
041D02 11 2D 00 00 2642*  	ld de,45
041D06 DD 21 A3 02 2643*  	ld ix,675
       00          
041D0B CD 05 C9 04 2644*  	call vdu_load_img
041D0F C9          2645*  	ret
041D10             2646*  
041D10             2647*  ld_14_018:
041D10 21 1C 45 04 2648*  	ld hl,F14_018
041D14 22 8A C7 04 2649*  	ld (cur_filename),hl
041D18 11 C6 D3 04 2650*  	ld de,filedata
041D1C 01 00 00 01 2651*  	ld bc,65536
041D20 3E 01       2652*  	ld a,mos_load
041D22 5B CF       2653*  	RST.LIL 08h
041D24 21 7A 01 00 2654*  	ld hl,BUF_14_018
041D28 01 1A 00 00 2655*  	ld bc,26
041D2C 11 2D 00 00 2656*  	ld de,45
041D30 DD 21 92 04 2657*  	ld ix,1170
       00          
041D35 CD 05 C9 04 2658*  	call vdu_load_img
041D39 C9          2659*  	ret
041D3A             2660*  
041D3A             2661*  ld_14_019:
041D3A 21 30 45 04 2662*  	ld hl,F14_019
041D3E 22 8A C7 04 2663*  	ld (cur_filename),hl
041D42 11 C6 D3 04 2664*  	ld de,filedata
041D46 01 00 00 01 2665*  	ld bc,65536
041D4A 3E 01       2666*  	ld a,mos_load
041D4C 5B CF       2667*  	RST.LIL 08h
041D4E 21 7B 01 00 2668*  	ld hl,BUF_14_019
041D52 01 23 00 00 2669*  	ld bc,35
041D56 11 2D 00 00 2670*  	ld de,45
041D5A DD 21 27 06 2671*  	ld ix,1575
       00          
041D5F CD 05 C9 04 2672*  	call vdu_load_img
041D63 C9          2673*  	ret
041D64             2674*  
041D64             2675*  ld_14_023:
041D64 21 44 45 04 2676*  	ld hl,F14_023
041D68 22 8A C7 04 2677*  	ld (cur_filename),hl
041D6C 11 C6 D3 04 2678*  	ld de,filedata
041D70 01 00 00 01 2679*  	ld bc,65536
041D74 3E 01       2680*  	ld a,mos_load
041D76 5B CF       2681*  	RST.LIL 08h
041D78 21 7C 01 00 2682*  	ld hl,BUF_14_023
041D7C 01 2E 00 00 2683*  	ld bc,46
041D80 11 2D 00 00 2684*  	ld de,45
041D84 DD 21 16 08 2685*  	ld ix,2070
       00          
041D89 CD 05 C9 04 2686*  	call vdu_load_img
041D8D C9          2687*  	ret
041D8E             2688*  
041D8E             2689*  ld_14_027:
041D8E 21 58 45 04 2690*  	ld hl,F14_027
041D92 22 8A C7 04 2691*  	ld (cur_filename),hl
041D96 11 C6 D3 04 2692*  	ld de,filedata
041D9A 01 00 00 01 2693*  	ld bc,65536
041D9E 3E 01       2694*  	ld a,mos_load
041DA0 5B CF       2695*  	RST.LIL 08h
041DA2 21 7D 01 00 2696*  	ld hl,BUF_14_027
041DA6 01 2D 00 00 2697*  	ld bc,45
041DAA 11 3F 00 00 2698*  	ld de,63
041DAE DD 21 13 0B 2699*  	ld ix,2835
       00          
041DB3 CD 05 C9 04 2700*  	call vdu_load_img
041DB7 C9          2701*  	ret
041DB8             2702*  
041DB8             2703*  ld_14_028:
041DB8 21 6C 45 04 2704*  	ld hl,F14_028
041DBC 22 8A C7 04 2705*  	ld (cur_filename),hl
041DC0 11 C6 D3 04 2706*  	ld de,filedata
041DC4 01 00 00 01 2707*  	ld bc,65536
041DC8 3E 01       2708*  	ld a,mos_load
041DCA 5B CF       2709*  	RST.LIL 08h
041DCC 21 7E 01 00 2710*  	ld hl,BUF_14_028
041DD0 01 1B 00 00 2711*  	ld bc,27
041DD4 11 3F 00 00 2712*  	ld de,63
041DD8 DD 21 A5 06 2713*  	ld ix,1701
       00          
041DDD CD 05 C9 04 2714*  	call vdu_load_img
041DE1 C9          2715*  	ret
041DE2             2716*  
041DE2             2717*  ld_14_029:
041DE2 21 80 45 04 2718*  	ld hl,F14_029
041DE6 22 8A C7 04 2719*  	ld (cur_filename),hl
041DEA 11 C6 D3 04 2720*  	ld de,filedata
041DEE 01 00 00 01 2721*  	ld bc,65536
041DF2 3E 01       2722*  	ld a,mos_load
041DF4 5B CF       2723*  	RST.LIL 08h
041DF6 21 7F 01 00 2724*  	ld hl,BUF_14_029
041DFA 01 09 00 00 2725*  	ld bc,9
041DFE 11 3F 00 00 2726*  	ld de,63
041E02 DD 21 37 02 2727*  	ld ix,567
       00          
041E07 CD 05 C9 04 2728*  	call vdu_load_img
041E0B C9          2729*  	ret
041E0C             2730*  
041E0C             2731*  ld_14_030:
041E0C 21 94 45 04 2732*  	ld hl,F14_030
041E10 22 8A C7 04 2733*  	ld (cur_filename),hl
041E14 11 C6 D3 04 2734*  	ld de,filedata
041E18 01 00 00 01 2735*  	ld bc,65536
041E1C 3E 01       2736*  	ld a,mos_load
041E1E 5B CF       2737*  	RST.LIL 08h
041E20 21 80 01 00 2738*  	ld hl,BUF_14_030
041E24 01 09 00 00 2739*  	ld bc,9
041E28 11 3D 00 00 2740*  	ld de,61
041E2C DD 21 25 02 2741*  	ld ix,549
       00          
041E31 CD 05 C9 04 2742*  	call vdu_load_img
041E35 C9          2743*  	ret
041E36             2744*  
041E36             2745*  ld_14_031:
041E36 21 A8 45 04 2746*  	ld hl,F14_031
041E3A 22 8A C7 04 2747*  	ld (cur_filename),hl
041E3E 11 C6 D3 04 2748*  	ld de,filedata
041E42 01 00 00 01 2749*  	ld bc,65536
041E46 3E 01       2750*  	ld a,mos_load
041E48 5B CF       2751*  	RST.LIL 08h
041E4A 21 81 01 00 2752*  	ld hl,BUF_14_031
041E4E 01 1B 00 00 2753*  	ld bc,27
041E52 11 3F 00 00 2754*  	ld de,63
041E56 DD 21 A5 06 2755*  	ld ix,1701
       00          
041E5B CD 05 C9 04 2756*  	call vdu_load_img
041E5F C9          2757*  	ret
041E60             2758*  
041E60             2759*  ld_14_032:
041E60 21 BC 45 04 2760*  	ld hl,F14_032
041E64 22 8A C7 04 2761*  	ld (cur_filename),hl
041E68 11 C6 D3 04 2762*  	ld de,filedata
041E6C 01 00 00 01 2763*  	ld bc,65536
041E70 3E 01       2764*  	ld a,mos_load
041E72 5B CF       2765*  	RST.LIL 08h
041E74 21 82 01 00 2766*  	ld hl,BUF_14_032
041E78 01 2D 00 00 2767*  	ld bc,45
041E7C 11 3F 00 00 2768*  	ld de,63
041E80 DD 21 13 0B 2769*  	ld ix,2835
       00          
041E85 CD 05 C9 04 2770*  	call vdu_load_img
041E89 C9          2771*  	ret
041E8A             2772*  
041E8A             2773*  ld_14_035:
041E8A 21 D0 45 04 2774*  	ld hl,F14_035
041E8E 22 8A C7 04 2775*  	ld (cur_filename),hl
041E92 11 C6 D3 04 2776*  	ld de,filedata
041E96 01 00 00 01 2777*  	ld bc,65536
041E9A 3E 01       2778*  	ld a,mos_load
041E9C 5B CF       2779*  	RST.LIL 08h
041E9E 21 83 01 00 2780*  	ld hl,BUF_14_035
041EA2 01 40 00 00 2781*  	ld bc,64
041EA6 11 3F 00 00 2782*  	ld de,63
041EAA DD 21 C0 0F 2783*  	ld ix,4032
       00          
041EAF CD 05 C9 04 2784*  	call vdu_load_img
041EB3 C9          2785*  	ret
041EB4             2786*  
041EB4             2787*  ld_14_038:
041EB4 21 E4 45 04 2788*  	ld hl,F14_038
041EB8 22 8A C7 04 2789*  	ld (cur_filename),hl
041EBC 11 C6 D3 04 2790*  	ld de,filedata
041EC0 01 00 00 01 2791*  	ld bc,65536
041EC4 3E 01       2792*  	ld a,mos_load
041EC6 5B CF       2793*  	RST.LIL 08h
041EC8 21 84 01 00 2794*  	ld hl,BUF_14_038
041ECC 01 40 00 00 2795*  	ld bc,64
041ED0 11 6B 00 00 2796*  	ld de,107
041ED4 DD 21 C0 1A 2797*  	ld ix,6848
       00          
041ED9 CD 05 C9 04 2798*  	call vdu_load_img
041EDD C9          2799*  	ret
041EDE             2800*  
041EDE             2801*  ld_14_039:
041EDE 21 F8 45 04 2802*  	ld hl,F14_039
041EE2 22 8A C7 04 2803*  	ld (cur_filename),hl
041EE6 11 C6 D3 04 2804*  	ld de,filedata
041EEA 01 00 00 01 2805*  	ld bc,65536
041EEE 3E 01       2806*  	ld a,mos_load
041EF0 5B CF       2807*  	RST.LIL 08h
041EF2 21 85 01 00 2808*  	ld hl,BUF_14_039
041EF6 01 16 00 00 2809*  	ld bc,22
041EFA 11 6B 00 00 2810*  	ld de,107
041EFE DD 21 32 09 2811*  	ld ix,2354
       00          
041F03 CD 05 C9 04 2812*  	call vdu_load_img
041F07 C9          2813*  	ret
041F08             2814*  
041F08             2815*  ld_14_040:
041F08 21 0C 46 04 2816*  	ld hl,F14_040
041F0C 22 8A C7 04 2817*  	ld (cur_filename),hl
041F10 11 C6 D3 04 2818*  	ld de,filedata
041F14 01 00 00 01 2819*  	ld bc,65536
041F18 3E 01       2820*  	ld a,mos_load
041F1A 5B CF       2821*  	RST.LIL 08h
041F1C 21 86 01 00 2822*  	ld hl,BUF_14_040
041F20 01 16 00 00 2823*  	ld bc,22
041F24 11 69 00 00 2824*  	ld de,105
041F28 DD 21 06 09 2825*  	ld ix,2310
       00          
041F2D CD 05 C9 04 2826*  	call vdu_load_img
041F31 C9          2827*  	ret
041F32             2828*  
041F32             2829*  ld_14_041:
041F32 21 20 46 04 2830*  	ld hl,F14_041
041F36 22 8A C7 04 2831*  	ld (cur_filename),hl
041F3A 11 C6 D3 04 2832*  	ld de,filedata
041F3E 01 00 00 01 2833*  	ld bc,65536
041F42 3E 01       2834*  	ld a,mos_load
041F44 5B CF       2835*  	RST.LIL 08h
041F46 21 87 01 00 2836*  	ld hl,BUF_14_041
041F4A 01 40 00 00 2837*  	ld bc,64
041F4E 11 6B 00 00 2838*  	ld de,107
041F52 DD 21 C0 1A 2839*  	ld ix,6848
       00          
041F57 CD 05 C9 04 2840*  	call vdu_load_img
041F5B C9          2841*  	ret
041F5C             2842*  
041F5C             2843*  ld_14_043:
041F5C 21 34 46 04 2844*  	ld hl,F14_043
041F60 22 8A C7 04 2845*  	ld (cur_filename),hl
041F64 11 C6 D3 04 2846*  	ld de,filedata
041F68 01 00 00 01 2847*  	ld bc,65536
041F6C 3E 01       2848*  	ld a,mos_load
041F6E 5B CF       2849*  	RST.LIL 08h
041F70 21 88 01 00 2850*  	ld hl,BUF_14_043
041F74 01 6C 00 00 2851*  	ld bc,108
041F78 11 6B 00 00 2852*  	ld de,107
041F7C DD 21 24 2D 2853*  	ld ix,11556
       00          
041F81 CD 05 C9 04 2854*  	call vdu_load_img
041F85 C9          2855*  	ret
041F86             2856*  
041F86             2857*  ld_14_045:
041F86 21 48 46 04 2858*  	ld hl,F14_045
041F8A 22 8A C7 04 2859*  	ld (cur_filename),hl
041F8E 11 C6 D3 04 2860*  	ld de,filedata
041F92 01 00 00 01 2861*  	ld bc,65536
041F96 3E 01       2862*  	ld a,mos_load
041F98 5B CF       2863*  	RST.LIL 08h
041F9A 21 89 01 00 2864*  	ld hl,BUF_14_045
041F9E 01 6A 00 00 2865*  	ld bc,106
041FA2 11 A0 00 00 2866*  	ld de,160
041FA6 DD 21 40 42 2867*  	ld ix,16960
       00          
041FAB CD 05 C9 04 2868*  	call vdu_load_img
041FAF C9          2869*  	ret
041FB0             2870*  
041FB0             2871*  ld_14_046:
041FB0 21 5C 46 04 2872*  	ld hl,F14_046
041FB4 22 8A C7 04 2873*  	ld (cur_filename),hl
041FB8 11 C6 D3 04 2874*  	ld de,filedata
041FBC 01 00 00 01 2875*  	ld bc,65536
041FC0 3E 01       2876*  	ld a,mos_load
041FC2 5B CF       2877*  	RST.LIL 08h
041FC4 21 8A 01 00 2878*  	ld hl,BUF_14_046
041FC8 01 6A 00 00 2879*  	ld bc,106
041FCC 11 A0 00 00 2880*  	ld de,160
041FD0 DD 21 40 42 2881*  	ld ix,16960
       00          
041FD5 CD 05 C9 04 2882*  	call vdu_load_img
041FD9 C9          2883*  	ret
041FDA             2884*  
041FDA             2885*  ld_14_047:
041FDA 21 70 46 04 2886*  	ld hl,F14_047
041FDE 22 8A C7 04 2887*  	ld (cur_filename),hl
041FE2 11 C6 D3 04 2888*  	ld de,filedata
041FE6 01 00 00 01 2889*  	ld bc,65536
041FEA 3E 01       2890*  	ld a,mos_load
041FEC 5B CF       2891*  	RST.LIL 08h
041FEE 21 8B 01 00 2892*  	ld hl,BUF_14_047
041FF2 01 40 01 00 2893*  	ld bc,320
041FF6 11 A0 00 00 2894*  	ld de,160
041FFA DD 21 00 C8 2895*  	ld ix,51200
       00          
041FFF CD 05 C9 04 2896*  	call vdu_load_img
042003 C9          2897*  	ret
042004             2898*  
042004             2899*  ld_15_000:
042004 21 84 46 04 2900*  	ld hl,F15_000
042008 22 8A C7 04 2901*  	ld (cur_filename),hl
04200C 11 C6 D3 04 2902*  	ld de,filedata
042010 01 00 00 01 2903*  	ld bc,65536
042014 3E 01       2904*  	ld a,mos_load
042016 5B CF       2905*  	RST.LIL 08h
042018 21 8C 01 00 2906*  	ld hl,BUF_15_000
04201C 01 10 00 00 2907*  	ld bc,16
042020 11 23 00 00 2908*  	ld de,35
042024 DD 21 30 02 2909*  	ld ix,560
       00          
042029 CD 05 C9 04 2910*  	call vdu_load_img
04202D C9          2911*  	ret
04202E             2912*  
04202E             2913*  ld_15_001:
04202E 21 98 46 04 2914*  	ld hl,F15_001
042032 22 8A C7 04 2915*  	ld (cur_filename),hl
042036 11 C6 D3 04 2916*  	ld de,filedata
04203A 01 00 00 01 2917*  	ld bc,65536
04203E 3E 01       2918*  	ld a,mos_load
042040 5B CF       2919*  	RST.LIL 08h
042042 21 8D 01 00 2920*  	ld hl,BUF_15_001
042046 01 0A 00 00 2921*  	ld bc,10
04204A 11 23 00 00 2922*  	ld de,35
04204E DD 21 5E 01 2923*  	ld ix,350
       00          
042053 CD 05 C9 04 2924*  	call vdu_load_img
042057 C9          2925*  	ret
042058             2926*  
042058             2927*  ld_15_002:
042058 21 AC 46 04 2928*  	ld hl,F15_002
04205C 22 8A C7 04 2929*  	ld (cur_filename),hl
042060 11 C6 D3 04 2930*  	ld de,filedata
042064 01 00 00 01 2931*  	ld bc,65536
042068 3E 01       2932*  	ld a,mos_load
04206A 5B CF       2933*  	RST.LIL 08h
04206C 21 8E 01 00 2934*  	ld hl,BUF_15_002
042070 01 0A 00 00 2935*  	ld bc,10
042074 11 23 00 00 2936*  	ld de,35
042078 DD 21 5E 01 2937*  	ld ix,350
       00          
04207D CD 05 C9 04 2938*  	call vdu_load_img
042081 C9          2939*  	ret
042082             2940*  
042082             2941*  ld_15_007:
042082 21 C0 46 04 2942*  	ld hl,F15_007
042086 22 8A C7 04 2943*  	ld (cur_filename),hl
04208A 11 C6 D3 04 2944*  	ld de,filedata
04208E 01 00 00 01 2945*  	ld bc,65536
042092 3E 01       2946*  	ld a,mos_load
042094 5B CF       2947*  	RST.LIL 08h
042096 21 8F 01 00 2948*  	ld hl,BUF_15_007
04209A 01 24 00 00 2949*  	ld bc,36
04209E 11 23 00 00 2950*  	ld de,35
0420A2 DD 21 EC 04 2951*  	ld ix,1260
       00          
0420A7 CD 05 C9 04 2952*  	call vdu_load_img
0420AB C9          2953*  	ret
0420AC             2954*  
0420AC             2955*  ld_15_012:
0420AC 21 D4 46 04 2956*  	ld hl,F15_012
0420B0 22 8A C7 04 2957*  	ld (cur_filename),hl
0420B4 11 C6 D3 04 2958*  	ld de,filedata
0420B8 01 00 00 01 2959*  	ld bc,65536
0420BC 3E 01       2960*  	ld a,mos_load
0420BE 5B CF       2961*  	RST.LIL 08h
0420C0 21 90 01 00 2962*  	ld hl,BUF_15_012
0420C4 01 23 00 00 2963*  	ld bc,35
0420C8 11 2D 00 00 2964*  	ld de,45
0420CC DD 21 27 06 2965*  	ld ix,1575
       00          
0420D1 CD 05 C9 04 2966*  	call vdu_load_img
0420D5 C9          2967*  	ret
0420D6             2968*  
0420D6             2969*  ld_15_013:
0420D6 21 E8 46 04 2970*  	ld hl,F15_013
0420DA 22 8A C7 04 2971*  	ld (cur_filename),hl
0420DE 11 C6 D3 04 2972*  	ld de,filedata
0420E2 01 00 00 01 2973*  	ld bc,65536
0420E6 3E 01       2974*  	ld a,mos_load
0420E8 5B CF       2975*  	RST.LIL 08h
0420EA 21 91 01 00 2976*  	ld hl,BUF_15_013
0420EE 01 1A 00 00 2977*  	ld bc,26
0420F2 11 2D 00 00 2978*  	ld de,45
0420F6 DD 21 92 04 2979*  	ld ix,1170
       00          
0420FB CD 05 C9 04 2980*  	call vdu_load_img
0420FF C9          2981*  	ret
042100             2982*  
042100             2983*  ld_15_014:
042100 21 FC 46 04 2984*  	ld hl,F15_014
042104 22 8A C7 04 2985*  	ld (cur_filename),hl
042108 11 C6 D3 04 2986*  	ld de,filedata
04210C 01 00 00 01 2987*  	ld bc,65536
042110 3E 01       2988*  	ld a,mos_load
042112 5B CF       2989*  	RST.LIL 08h
042114 21 92 01 00 2990*  	ld hl,BUF_15_014
042118 01 0F 00 00 2991*  	ld bc,15
04211C 11 2D 00 00 2992*  	ld de,45
042120 DD 21 A3 02 2993*  	ld ix,675
       00          
042125 CD 05 C9 04 2994*  	call vdu_load_img
042129 C9          2995*  	ret
04212A             2996*  
04212A             2997*  ld_15_015:
04212A 21 10 47 04 2998*  	ld hl,F15_015
04212E 22 8A C7 04 2999*  	ld (cur_filename),hl
042132 11 C6 D3 04 3000*  	ld de,filedata
042136 01 00 00 01 3001*  	ld bc,65536
04213A 3E 01       3002*  	ld a,mos_load
04213C 5B CF       3003*  	RST.LIL 08h
04213E 21 93 01 00 3004*  	ld hl,BUF_15_015
042142 01 05 00 00 3005*  	ld bc,5
042146 11 2D 00 00 3006*  	ld de,45
04214A DD 21 E1 00 3007*  	ld ix,225
       00          
04214F CD 05 C9 04 3008*  	call vdu_load_img
042153 C9          3009*  	ret
042154             3010*  
042154             3011*  ld_15_016:
042154 21 24 47 04 3012*  	ld hl,F15_016
042158 22 8A C7 04 3013*  	ld (cur_filename),hl
04215C 11 C6 D3 04 3014*  	ld de,filedata
042160 01 00 00 01 3015*  	ld bc,65536
042164 3E 01       3016*  	ld a,mos_load
042166 5B CF       3017*  	RST.LIL 08h
042168 21 94 01 00 3018*  	ld hl,BUF_15_016
04216C 01 05 00 00 3019*  	ld bc,5
042170 11 2B 00 00 3020*  	ld de,43
042174 DD 21 D7 00 3021*  	ld ix,215
       00          
042179 CD 05 C9 04 3022*  	call vdu_load_img
04217D C9          3023*  	ret
04217E             3024*  
04217E             3025*  ld_15_017:
04217E 21 38 47 04 3026*  	ld hl,F15_017
042182 22 8A C7 04 3027*  	ld (cur_filename),hl
042186 11 C6 D3 04 3028*  	ld de,filedata
04218A 01 00 00 01 3029*  	ld bc,65536
04218E 3E 01       3030*  	ld a,mos_load
042190 5B CF       3031*  	RST.LIL 08h
042192 21 95 01 00 3032*  	ld hl,BUF_15_017
042196 01 0F 00 00 3033*  	ld bc,15
04219A 11 2D 00 00 3034*  	ld de,45
04219E DD 21 A3 02 3035*  	ld ix,675
       00          
0421A3 CD 05 C9 04 3036*  	call vdu_load_img
0421A7 C9          3037*  	ret
0421A8             3038*  
0421A8             3039*  ld_15_018:
0421A8 21 4C 47 04 3040*  	ld hl,F15_018
0421AC 22 8A C7 04 3041*  	ld (cur_filename),hl
0421B0 11 C6 D3 04 3042*  	ld de,filedata
0421B4 01 00 00 01 3043*  	ld bc,65536
0421B8 3E 01       3044*  	ld a,mos_load
0421BA 5B CF       3045*  	RST.LIL 08h
0421BC 21 96 01 00 3046*  	ld hl,BUF_15_018
0421C0 01 1A 00 00 3047*  	ld bc,26
0421C4 11 2D 00 00 3048*  	ld de,45
0421C8 DD 21 92 04 3049*  	ld ix,1170
       00          
0421CD CD 05 C9 04 3050*  	call vdu_load_img
0421D1 C9          3051*  	ret
0421D2             3052*  
0421D2             3053*  ld_15_019:
0421D2 21 60 47 04 3054*  	ld hl,F15_019
0421D6 22 8A C7 04 3055*  	ld (cur_filename),hl
0421DA 11 C6 D3 04 3056*  	ld de,filedata
0421DE 01 00 00 01 3057*  	ld bc,65536
0421E2 3E 01       3058*  	ld a,mos_load
0421E4 5B CF       3059*  	RST.LIL 08h
0421E6 21 97 01 00 3060*  	ld hl,BUF_15_019
0421EA 01 23 00 00 3061*  	ld bc,35
0421EE 11 2D 00 00 3062*  	ld de,45
0421F2 DD 21 27 06 3063*  	ld ix,1575
       00          
0421F7 CD 05 C9 04 3064*  	call vdu_load_img
0421FB C9          3065*  	ret
0421FC             3066*  
0421FC             3067*  ld_15_023:
0421FC 21 74 47 04 3068*  	ld hl,F15_023
042200 22 8A C7 04 3069*  	ld (cur_filename),hl
042204 11 C6 D3 04 3070*  	ld de,filedata
042208 01 00 00 01 3071*  	ld bc,65536
04220C 3E 01       3072*  	ld a,mos_load
04220E 5B CF       3073*  	RST.LIL 08h
042210 21 98 01 00 3074*  	ld hl,BUF_15_023
042214 01 2E 00 00 3075*  	ld bc,46
042218 11 2D 00 00 3076*  	ld de,45
04221C DD 21 16 08 3077*  	ld ix,2070
       00          
042221 CD 05 C9 04 3078*  	call vdu_load_img
042225 C9          3079*  	ret
042226             3080*  
042226             3081*  ld_15_027:
042226 21 88 47 04 3082*  	ld hl,F15_027
04222A 22 8A C7 04 3083*  	ld (cur_filename),hl
04222E 11 C6 D3 04 3084*  	ld de,filedata
042232 01 00 00 01 3085*  	ld bc,65536
042236 3E 01       3086*  	ld a,mos_load
042238 5B CF       3087*  	RST.LIL 08h
04223A 21 99 01 00 3088*  	ld hl,BUF_15_027
04223E 01 2D 00 00 3089*  	ld bc,45
042242 11 3F 00 00 3090*  	ld de,63
042246 DD 21 13 0B 3091*  	ld ix,2835
       00          
04224B CD 05 C9 04 3092*  	call vdu_load_img
04224F C9          3093*  	ret
042250             3094*  
042250             3095*  ld_15_028:
042250 21 9C 47 04 3096*  	ld hl,F15_028
042254 22 8A C7 04 3097*  	ld (cur_filename),hl
042258 11 C6 D3 04 3098*  	ld de,filedata
04225C 01 00 00 01 3099*  	ld bc,65536
042260 3E 01       3100*  	ld a,mos_load
042262 5B CF       3101*  	RST.LIL 08h
042264 21 9A 01 00 3102*  	ld hl,BUF_15_028
042268 01 1B 00 00 3103*  	ld bc,27
04226C 11 3F 00 00 3104*  	ld de,63
042270 DD 21 A5 06 3105*  	ld ix,1701
       00          
042275 CD 05 C9 04 3106*  	call vdu_load_img
042279 C9          3107*  	ret
04227A             3108*  
04227A             3109*  ld_15_029:
04227A 21 B0 47 04 3110*  	ld hl,F15_029
04227E 22 8A C7 04 3111*  	ld (cur_filename),hl
042282 11 C6 D3 04 3112*  	ld de,filedata
042286 01 00 00 01 3113*  	ld bc,65536
04228A 3E 01       3114*  	ld a,mos_load
04228C 5B CF       3115*  	RST.LIL 08h
04228E 21 9B 01 00 3116*  	ld hl,BUF_15_029
042292 01 09 00 00 3117*  	ld bc,9
042296 11 3F 00 00 3118*  	ld de,63
04229A DD 21 37 02 3119*  	ld ix,567
       00          
04229F CD 05 C9 04 3120*  	call vdu_load_img
0422A3 C9          3121*  	ret
0422A4             3122*  
0422A4             3123*  ld_15_030:
0422A4 21 C4 47 04 3124*  	ld hl,F15_030
0422A8 22 8A C7 04 3125*  	ld (cur_filename),hl
0422AC 11 C6 D3 04 3126*  	ld de,filedata
0422B0 01 00 00 01 3127*  	ld bc,65536
0422B4 3E 01       3128*  	ld a,mos_load
0422B6 5B CF       3129*  	RST.LIL 08h
0422B8 21 9C 01 00 3130*  	ld hl,BUF_15_030
0422BC 01 09 00 00 3131*  	ld bc,9
0422C0 11 3D 00 00 3132*  	ld de,61
0422C4 DD 21 25 02 3133*  	ld ix,549
       00          
0422C9 CD 05 C9 04 3134*  	call vdu_load_img
0422CD C9          3135*  	ret
0422CE             3136*  
0422CE             3137*  ld_15_031:
0422CE 21 D8 47 04 3138*  	ld hl,F15_031
0422D2 22 8A C7 04 3139*  	ld (cur_filename),hl
0422D6 11 C6 D3 04 3140*  	ld de,filedata
0422DA 01 00 00 01 3141*  	ld bc,65536
0422DE 3E 01       3142*  	ld a,mos_load
0422E0 5B CF       3143*  	RST.LIL 08h
0422E2 21 9D 01 00 3144*  	ld hl,BUF_15_031
0422E6 01 1B 00 00 3145*  	ld bc,27
0422EA 11 3F 00 00 3146*  	ld de,63
0422EE DD 21 A5 06 3147*  	ld ix,1701
       00          
0422F3 CD 05 C9 04 3148*  	call vdu_load_img
0422F7 C9          3149*  	ret
0422F8             3150*  
0422F8             3151*  ld_15_032:
0422F8 21 EC 47 04 3152*  	ld hl,F15_032
0422FC 22 8A C7 04 3153*  	ld (cur_filename),hl
042300 11 C6 D3 04 3154*  	ld de,filedata
042304 01 00 00 01 3155*  	ld bc,65536
042308 3E 01       3156*  	ld a,mos_load
04230A 5B CF       3157*  	RST.LIL 08h
04230C 21 9E 01 00 3158*  	ld hl,BUF_15_032
042310 01 2D 00 00 3159*  	ld bc,45
042314 11 3F 00 00 3160*  	ld de,63
042318 DD 21 13 0B 3161*  	ld ix,2835
       00          
04231D CD 05 C9 04 3162*  	call vdu_load_img
042321 C9          3163*  	ret
042322             3164*  
042322             3165*  ld_15_035:
042322 21 00 48 04 3166*  	ld hl,F15_035
042326 22 8A C7 04 3167*  	ld (cur_filename),hl
04232A 11 C6 D3 04 3168*  	ld de,filedata
04232E 01 00 00 01 3169*  	ld bc,65536
042332 3E 01       3170*  	ld a,mos_load
042334 5B CF       3171*  	RST.LIL 08h
042336 21 9F 01 00 3172*  	ld hl,BUF_15_035
04233A 01 40 00 00 3173*  	ld bc,64
04233E 11 3F 00 00 3174*  	ld de,63
042342 DD 21 C0 0F 3175*  	ld ix,4032
       00          
042347 CD 05 C9 04 3176*  	call vdu_load_img
04234B C9          3177*  	ret
04234C             3178*  
04234C             3179*  ld_15_038:
04234C 21 14 48 04 3180*  	ld hl,F15_038
042350 22 8A C7 04 3181*  	ld (cur_filename),hl
042354 11 C6 D3 04 3182*  	ld de,filedata
042358 01 00 00 01 3183*  	ld bc,65536
04235C 3E 01       3184*  	ld a,mos_load
04235E 5B CF       3185*  	RST.LIL 08h
042360 21 A0 01 00 3186*  	ld hl,BUF_15_038
042364 01 40 00 00 3187*  	ld bc,64
042368 11 6B 00 00 3188*  	ld de,107
04236C DD 21 C0 1A 3189*  	ld ix,6848
       00          
042371 CD 05 C9 04 3190*  	call vdu_load_img
042375 C9          3191*  	ret
042376             3192*  
042376             3193*  ld_15_039:
042376 21 28 48 04 3194*  	ld hl,F15_039
04237A 22 8A C7 04 3195*  	ld (cur_filename),hl
04237E 11 C6 D3 04 3196*  	ld de,filedata
042382 01 00 00 01 3197*  	ld bc,65536
042386 3E 01       3198*  	ld a,mos_load
042388 5B CF       3199*  	RST.LIL 08h
04238A 21 A1 01 00 3200*  	ld hl,BUF_15_039
04238E 01 16 00 00 3201*  	ld bc,22
042392 11 6B 00 00 3202*  	ld de,107
042396 DD 21 32 09 3203*  	ld ix,2354
       00          
04239B CD 05 C9 04 3204*  	call vdu_load_img
04239F C9          3205*  	ret
0423A0             3206*  
0423A0             3207*  ld_15_040:
0423A0 21 3C 48 04 3208*  	ld hl,F15_040
0423A4 22 8A C7 04 3209*  	ld (cur_filename),hl
0423A8 11 C6 D3 04 3210*  	ld de,filedata
0423AC 01 00 00 01 3211*  	ld bc,65536
0423B0 3E 01       3212*  	ld a,mos_load
0423B2 5B CF       3213*  	RST.LIL 08h
0423B4 21 A2 01 00 3214*  	ld hl,BUF_15_040
0423B8 01 16 00 00 3215*  	ld bc,22
0423BC 11 69 00 00 3216*  	ld de,105
0423C0 DD 21 06 09 3217*  	ld ix,2310
       00          
0423C5 CD 05 C9 04 3218*  	call vdu_load_img
0423C9 C9          3219*  	ret
0423CA             3220*  
0423CA             3221*  ld_15_041:
0423CA 21 50 48 04 3222*  	ld hl,F15_041
0423CE 22 8A C7 04 3223*  	ld (cur_filename),hl
0423D2 11 C6 D3 04 3224*  	ld de,filedata
0423D6 01 00 00 01 3225*  	ld bc,65536
0423DA 3E 01       3226*  	ld a,mos_load
0423DC 5B CF       3227*  	RST.LIL 08h
0423DE 21 A3 01 00 3228*  	ld hl,BUF_15_041
0423E2 01 40 00 00 3229*  	ld bc,64
0423E6 11 6B 00 00 3230*  	ld de,107
0423EA DD 21 C0 1A 3231*  	ld ix,6848
       00          
0423EF CD 05 C9 04 3232*  	call vdu_load_img
0423F3 C9          3233*  	ret
0423F4             3234*  
0423F4             3235*  ld_15_043:
0423F4 21 64 48 04 3236*  	ld hl,F15_043
0423F8 22 8A C7 04 3237*  	ld (cur_filename),hl
0423FC 11 C6 D3 04 3238*  	ld de,filedata
042400 01 00 00 01 3239*  	ld bc,65536
042404 3E 01       3240*  	ld a,mos_load
042406 5B CF       3241*  	RST.LIL 08h
042408 21 A4 01 00 3242*  	ld hl,BUF_15_043
04240C 01 6C 00 00 3243*  	ld bc,108
042410 11 6B 00 00 3244*  	ld de,107
042414 DD 21 24 2D 3245*  	ld ix,11556
       00          
042419 CD 05 C9 04 3246*  	call vdu_load_img
04241D C9          3247*  	ret
04241E             3248*  
04241E             3249*  ld_15_045:
04241E 21 78 48 04 3250*  	ld hl,F15_045
042422 22 8A C7 04 3251*  	ld (cur_filename),hl
042426 11 C6 D3 04 3252*  	ld de,filedata
04242A 01 00 00 01 3253*  	ld bc,65536
04242E 3E 01       3254*  	ld a,mos_load
042430 5B CF       3255*  	RST.LIL 08h
042432 21 A5 01 00 3256*  	ld hl,BUF_15_045
042436 01 6A 00 00 3257*  	ld bc,106
04243A 11 A0 00 00 3258*  	ld de,160
04243E DD 21 40 42 3259*  	ld ix,16960
       00          
042443 CD 05 C9 04 3260*  	call vdu_load_img
042447 C9          3261*  	ret
042448             3262*  
042448             3263*  ld_15_046:
042448 21 8C 48 04 3264*  	ld hl,F15_046
04244C 22 8A C7 04 3265*  	ld (cur_filename),hl
042450 11 C6 D3 04 3266*  	ld de,filedata
042454 01 00 00 01 3267*  	ld bc,65536
042458 3E 01       3268*  	ld a,mos_load
04245A 5B CF       3269*  	RST.LIL 08h
04245C 21 A6 01 00 3270*  	ld hl,BUF_15_046
042460 01 6A 00 00 3271*  	ld bc,106
042464 11 A0 00 00 3272*  	ld de,160
042468 DD 21 40 42 3273*  	ld ix,16960
       00          
04246D CD 05 C9 04 3274*  	call vdu_load_img
042471 C9          3275*  	ret
042472             3276*  
042472             3277*  ld_15_047:
042472 21 A0 48 04 3278*  	ld hl,F15_047
042476 22 8A C7 04 3279*  	ld (cur_filename),hl
04247A 11 C6 D3 04 3280*  	ld de,filedata
04247E 01 00 00 01 3281*  	ld bc,65536
042482 3E 01       3282*  	ld a,mos_load
042484 5B CF       3283*  	RST.LIL 08h
042486 21 A7 01 00 3284*  	ld hl,BUF_15_047
04248A 01 40 01 00 3285*  	ld bc,320
04248E 11 A0 00 00 3286*  	ld de,160
042492 DD 21 00 C8 3287*  	ld ix,51200
       00          
042497 CD 05 C9 04 3288*  	call vdu_load_img
04249B C9          3289*  	ret
04249C             3290*  
04249C             3291*  ld_16_000:
04249C 21 B4 48 04 3292*  	ld hl,F16_000
0424A0 22 8A C7 04 3293*  	ld (cur_filename),hl
0424A4 11 C6 D3 04 3294*  	ld de,filedata
0424A8 01 00 00 01 3295*  	ld bc,65536
0424AC 3E 01       3296*  	ld a,mos_load
0424AE 5B CF       3297*  	RST.LIL 08h
0424B0 21 A8 01 00 3298*  	ld hl,BUF_16_000
0424B4 01 10 00 00 3299*  	ld bc,16
0424B8 11 23 00 00 3300*  	ld de,35
0424BC DD 21 30 02 3301*  	ld ix,560
       00          
0424C1 CD 05 C9 04 3302*  	call vdu_load_img
0424C5 C9          3303*  	ret
0424C6             3304*  
0424C6             3305*  ld_16_001:
0424C6 21 C8 48 04 3306*  	ld hl,F16_001
0424CA 22 8A C7 04 3307*  	ld (cur_filename),hl
0424CE 11 C6 D3 04 3308*  	ld de,filedata
0424D2 01 00 00 01 3309*  	ld bc,65536
0424D6 3E 01       3310*  	ld a,mos_load
0424D8 5B CF       3311*  	RST.LIL 08h
0424DA 21 A9 01 00 3312*  	ld hl,BUF_16_001
0424DE 01 0A 00 00 3313*  	ld bc,10
0424E2 11 23 00 00 3314*  	ld de,35
0424E6 DD 21 5E 01 3315*  	ld ix,350
       00          
0424EB CD 05 C9 04 3316*  	call vdu_load_img
0424EF C9          3317*  	ret
0424F0             3318*  
0424F0             3319*  ld_16_002:
0424F0 21 DC 48 04 3320*  	ld hl,F16_002
0424F4 22 8A C7 04 3321*  	ld (cur_filename),hl
0424F8 11 C6 D3 04 3322*  	ld de,filedata
0424FC 01 00 00 01 3323*  	ld bc,65536
042500 3E 01       3324*  	ld a,mos_load
042502 5B CF       3325*  	RST.LIL 08h
042504 21 AA 01 00 3326*  	ld hl,BUF_16_002
042508 01 0A 00 00 3327*  	ld bc,10
04250C 11 23 00 00 3328*  	ld de,35
042510 DD 21 5E 01 3329*  	ld ix,350
       00          
042515 CD 05 C9 04 3330*  	call vdu_load_img
042519 C9          3331*  	ret
04251A             3332*  
04251A             3333*  ld_16_007:
04251A 21 F0 48 04 3334*  	ld hl,F16_007
04251E 22 8A C7 04 3335*  	ld (cur_filename),hl
042522 11 C6 D3 04 3336*  	ld de,filedata
042526 01 00 00 01 3337*  	ld bc,65536
04252A 3E 01       3338*  	ld a,mos_load
04252C 5B CF       3339*  	RST.LIL 08h
04252E 21 AB 01 00 3340*  	ld hl,BUF_16_007
042532 01 24 00 00 3341*  	ld bc,36
042536 11 23 00 00 3342*  	ld de,35
04253A DD 21 EC 04 3343*  	ld ix,1260
       00          
04253F CD 05 C9 04 3344*  	call vdu_load_img
042543 C9          3345*  	ret
042544             3346*  
042544             3347*  ld_16_012:
042544 21 04 49 04 3348*  	ld hl,F16_012
042548 22 8A C7 04 3349*  	ld (cur_filename),hl
04254C 11 C6 D3 04 3350*  	ld de,filedata
042550 01 00 00 01 3351*  	ld bc,65536
042554 3E 01       3352*  	ld a,mos_load
042556 5B CF       3353*  	RST.LIL 08h
042558 21 AC 01 00 3354*  	ld hl,BUF_16_012
04255C 01 23 00 00 3355*  	ld bc,35
042560 11 2D 00 00 3356*  	ld de,45
042564 DD 21 27 06 3357*  	ld ix,1575
       00          
042569 CD 05 C9 04 3358*  	call vdu_load_img
04256D C9          3359*  	ret
04256E             3360*  
04256E             3361*  ld_16_013:
04256E 21 18 49 04 3362*  	ld hl,F16_013
042572 22 8A C7 04 3363*  	ld (cur_filename),hl
042576 11 C6 D3 04 3364*  	ld de,filedata
04257A 01 00 00 01 3365*  	ld bc,65536
04257E 3E 01       3366*  	ld a,mos_load
042580 5B CF       3367*  	RST.LIL 08h
042582 21 AD 01 00 3368*  	ld hl,BUF_16_013
042586 01 1A 00 00 3369*  	ld bc,26
04258A 11 2D 00 00 3370*  	ld de,45
04258E DD 21 92 04 3371*  	ld ix,1170
       00          
042593 CD 05 C9 04 3372*  	call vdu_load_img
042597 C9          3373*  	ret
042598             3374*  
042598             3375*  ld_16_014:
042598 21 2C 49 04 3376*  	ld hl,F16_014
04259C 22 8A C7 04 3377*  	ld (cur_filename),hl
0425A0 11 C6 D3 04 3378*  	ld de,filedata
0425A4 01 00 00 01 3379*  	ld bc,65536
0425A8 3E 01       3380*  	ld a,mos_load
0425AA 5B CF       3381*  	RST.LIL 08h
0425AC 21 AE 01 00 3382*  	ld hl,BUF_16_014
0425B0 01 0F 00 00 3383*  	ld bc,15
0425B4 11 2D 00 00 3384*  	ld de,45
0425B8 DD 21 A3 02 3385*  	ld ix,675
       00          
0425BD CD 05 C9 04 3386*  	call vdu_load_img
0425C1 C9          3387*  	ret
0425C2             3388*  
0425C2             3389*  ld_16_015:
0425C2 21 40 49 04 3390*  	ld hl,F16_015
0425C6 22 8A C7 04 3391*  	ld (cur_filename),hl
0425CA 11 C6 D3 04 3392*  	ld de,filedata
0425CE 01 00 00 01 3393*  	ld bc,65536
0425D2 3E 01       3394*  	ld a,mos_load
0425D4 5B CF       3395*  	RST.LIL 08h
0425D6 21 AF 01 00 3396*  	ld hl,BUF_16_015
0425DA 01 05 00 00 3397*  	ld bc,5
0425DE 11 2D 00 00 3398*  	ld de,45
0425E2 DD 21 E1 00 3399*  	ld ix,225
       00          
0425E7 CD 05 C9 04 3400*  	call vdu_load_img
0425EB C9          3401*  	ret
0425EC             3402*  
0425EC             3403*  ld_16_016:
0425EC 21 54 49 04 3404*  	ld hl,F16_016
0425F0 22 8A C7 04 3405*  	ld (cur_filename),hl
0425F4 11 C6 D3 04 3406*  	ld de,filedata
0425F8 01 00 00 01 3407*  	ld bc,65536
0425FC 3E 01       3408*  	ld a,mos_load
0425FE 5B CF       3409*  	RST.LIL 08h
042600 21 B0 01 00 3410*  	ld hl,BUF_16_016
042604 01 05 00 00 3411*  	ld bc,5
042608 11 2B 00 00 3412*  	ld de,43
04260C DD 21 D7 00 3413*  	ld ix,215
       00          
042611 CD 05 C9 04 3414*  	call vdu_load_img
042615 C9          3415*  	ret
042616             3416*  
042616             3417*  ld_16_017:
042616 21 68 49 04 3418*  	ld hl,F16_017
04261A 22 8A C7 04 3419*  	ld (cur_filename),hl
04261E 11 C6 D3 04 3420*  	ld de,filedata
042622 01 00 00 01 3421*  	ld bc,65536
042626 3E 01       3422*  	ld a,mos_load
042628 5B CF       3423*  	RST.LIL 08h
04262A 21 B1 01 00 3424*  	ld hl,BUF_16_017
04262E 01 0F 00 00 3425*  	ld bc,15
042632 11 2D 00 00 3426*  	ld de,45
042636 DD 21 A3 02 3427*  	ld ix,675
       00          
04263B CD 05 C9 04 3428*  	call vdu_load_img
04263F C9          3429*  	ret
042640             3430*  
042640             3431*  ld_16_018:
042640 21 7C 49 04 3432*  	ld hl,F16_018
042644 22 8A C7 04 3433*  	ld (cur_filename),hl
042648 11 C6 D3 04 3434*  	ld de,filedata
04264C 01 00 00 01 3435*  	ld bc,65536
042650 3E 01       3436*  	ld a,mos_load
042652 5B CF       3437*  	RST.LIL 08h
042654 21 B2 01 00 3438*  	ld hl,BUF_16_018
042658 01 1A 00 00 3439*  	ld bc,26
04265C 11 2D 00 00 3440*  	ld de,45
042660 DD 21 92 04 3441*  	ld ix,1170
       00          
042665 CD 05 C9 04 3442*  	call vdu_load_img
042669 C9          3443*  	ret
04266A             3444*  
04266A             3445*  ld_16_019:
04266A 21 90 49 04 3446*  	ld hl,F16_019
04266E 22 8A C7 04 3447*  	ld (cur_filename),hl
042672 11 C6 D3 04 3448*  	ld de,filedata
042676 01 00 00 01 3449*  	ld bc,65536
04267A 3E 01       3450*  	ld a,mos_load
04267C 5B CF       3451*  	RST.LIL 08h
04267E 21 B3 01 00 3452*  	ld hl,BUF_16_019
042682 01 23 00 00 3453*  	ld bc,35
042686 11 2D 00 00 3454*  	ld de,45
04268A DD 21 27 06 3455*  	ld ix,1575
       00          
04268F CD 05 C9 04 3456*  	call vdu_load_img
042693 C9          3457*  	ret
042694             3458*  
042694             3459*  ld_16_023:
042694 21 A4 49 04 3460*  	ld hl,F16_023
042698 22 8A C7 04 3461*  	ld (cur_filename),hl
04269C 11 C6 D3 04 3462*  	ld de,filedata
0426A0 01 00 00 01 3463*  	ld bc,65536
0426A4 3E 01       3464*  	ld a,mos_load
0426A6 5B CF       3465*  	RST.LIL 08h
0426A8 21 B4 01 00 3466*  	ld hl,BUF_16_023
0426AC 01 2E 00 00 3467*  	ld bc,46
0426B0 11 2D 00 00 3468*  	ld de,45
0426B4 DD 21 16 08 3469*  	ld ix,2070
       00          
0426B9 CD 05 C9 04 3470*  	call vdu_load_img
0426BD C9          3471*  	ret
0426BE             3472*  
0426BE             3473*  ld_16_027:
0426BE 21 B8 49 04 3474*  	ld hl,F16_027
0426C2 22 8A C7 04 3475*  	ld (cur_filename),hl
0426C6 11 C6 D3 04 3476*  	ld de,filedata
0426CA 01 00 00 01 3477*  	ld bc,65536
0426CE 3E 01       3478*  	ld a,mos_load
0426D0 5B CF       3479*  	RST.LIL 08h
0426D2 21 B5 01 00 3480*  	ld hl,BUF_16_027
0426D6 01 2D 00 00 3481*  	ld bc,45
0426DA 11 3F 00 00 3482*  	ld de,63
0426DE DD 21 13 0B 3483*  	ld ix,2835
       00          
0426E3 CD 05 C9 04 3484*  	call vdu_load_img
0426E7 C9          3485*  	ret
0426E8             3486*  
0426E8             3487*  ld_16_028:
0426E8 21 CC 49 04 3488*  	ld hl,F16_028
0426EC 22 8A C7 04 3489*  	ld (cur_filename),hl
0426F0 11 C6 D3 04 3490*  	ld de,filedata
0426F4 01 00 00 01 3491*  	ld bc,65536
0426F8 3E 01       3492*  	ld a,mos_load
0426FA 5B CF       3493*  	RST.LIL 08h
0426FC 21 B6 01 00 3494*  	ld hl,BUF_16_028
042700 01 1B 00 00 3495*  	ld bc,27
042704 11 3F 00 00 3496*  	ld de,63
042708 DD 21 A5 06 3497*  	ld ix,1701
       00          
04270D CD 05 C9 04 3498*  	call vdu_load_img
042711 C9          3499*  	ret
042712             3500*  
042712             3501*  ld_16_029:
042712 21 E0 49 04 3502*  	ld hl,F16_029
042716 22 8A C7 04 3503*  	ld (cur_filename),hl
04271A 11 C6 D3 04 3504*  	ld de,filedata
04271E 01 00 00 01 3505*  	ld bc,65536
042722 3E 01       3506*  	ld a,mos_load
042724 5B CF       3507*  	RST.LIL 08h
042726 21 B7 01 00 3508*  	ld hl,BUF_16_029
04272A 01 09 00 00 3509*  	ld bc,9
04272E 11 3F 00 00 3510*  	ld de,63
042732 DD 21 37 02 3511*  	ld ix,567
       00          
042737 CD 05 C9 04 3512*  	call vdu_load_img
04273B C9          3513*  	ret
04273C             3514*  
04273C             3515*  ld_16_030:
04273C 21 F4 49 04 3516*  	ld hl,F16_030
042740 22 8A C7 04 3517*  	ld (cur_filename),hl
042744 11 C6 D3 04 3518*  	ld de,filedata
042748 01 00 00 01 3519*  	ld bc,65536
04274C 3E 01       3520*  	ld a,mos_load
04274E 5B CF       3521*  	RST.LIL 08h
042750 21 B8 01 00 3522*  	ld hl,BUF_16_030
042754 01 09 00 00 3523*  	ld bc,9
042758 11 3D 00 00 3524*  	ld de,61
04275C DD 21 25 02 3525*  	ld ix,549
       00          
042761 CD 05 C9 04 3526*  	call vdu_load_img
042765 C9          3527*  	ret
042766             3528*  
042766             3529*  ld_16_031:
042766 21 08 4A 04 3530*  	ld hl,F16_031
04276A 22 8A C7 04 3531*  	ld (cur_filename),hl
04276E 11 C6 D3 04 3532*  	ld de,filedata
042772 01 00 00 01 3533*  	ld bc,65536
042776 3E 01       3534*  	ld a,mos_load
042778 5B CF       3535*  	RST.LIL 08h
04277A 21 B9 01 00 3536*  	ld hl,BUF_16_031
04277E 01 1B 00 00 3537*  	ld bc,27
042782 11 3F 00 00 3538*  	ld de,63
042786 DD 21 A5 06 3539*  	ld ix,1701
       00          
04278B CD 05 C9 04 3540*  	call vdu_load_img
04278F C9          3541*  	ret
042790             3542*  
042790             3543*  ld_16_032:
042790 21 1C 4A 04 3544*  	ld hl,F16_032
042794 22 8A C7 04 3545*  	ld (cur_filename),hl
042798 11 C6 D3 04 3546*  	ld de,filedata
04279C 01 00 00 01 3547*  	ld bc,65536
0427A0 3E 01       3548*  	ld a,mos_load
0427A2 5B CF       3549*  	RST.LIL 08h
0427A4 21 BA 01 00 3550*  	ld hl,BUF_16_032
0427A8 01 2D 00 00 3551*  	ld bc,45
0427AC 11 3F 00 00 3552*  	ld de,63
0427B0 DD 21 13 0B 3553*  	ld ix,2835
       00          
0427B5 CD 05 C9 04 3554*  	call vdu_load_img
0427B9 C9          3555*  	ret
0427BA             3556*  
0427BA             3557*  ld_16_035:
0427BA 21 30 4A 04 3558*  	ld hl,F16_035
0427BE 22 8A C7 04 3559*  	ld (cur_filename),hl
0427C2 11 C6 D3 04 3560*  	ld de,filedata
0427C6 01 00 00 01 3561*  	ld bc,65536
0427CA 3E 01       3562*  	ld a,mos_load
0427CC 5B CF       3563*  	RST.LIL 08h
0427CE 21 BB 01 00 3564*  	ld hl,BUF_16_035
0427D2 01 40 00 00 3565*  	ld bc,64
0427D6 11 3F 00 00 3566*  	ld de,63
0427DA DD 21 C0 0F 3567*  	ld ix,4032
       00          
0427DF CD 05 C9 04 3568*  	call vdu_load_img
0427E3 C9          3569*  	ret
0427E4             3570*  
0427E4             3571*  ld_16_038:
0427E4 21 44 4A 04 3572*  	ld hl,F16_038
0427E8 22 8A C7 04 3573*  	ld (cur_filename),hl
0427EC 11 C6 D3 04 3574*  	ld de,filedata
0427F0 01 00 00 01 3575*  	ld bc,65536
0427F4 3E 01       3576*  	ld a,mos_load
0427F6 5B CF       3577*  	RST.LIL 08h
0427F8 21 BC 01 00 3578*  	ld hl,BUF_16_038
0427FC 01 40 00 00 3579*  	ld bc,64
042800 11 6B 00 00 3580*  	ld de,107
042804 DD 21 C0 1A 3581*  	ld ix,6848
       00          
042809 CD 05 C9 04 3582*  	call vdu_load_img
04280D C9          3583*  	ret
04280E             3584*  
04280E             3585*  ld_16_039:
04280E 21 58 4A 04 3586*  	ld hl,F16_039
042812 22 8A C7 04 3587*  	ld (cur_filename),hl
042816 11 C6 D3 04 3588*  	ld de,filedata
04281A 01 00 00 01 3589*  	ld bc,65536
04281E 3E 01       3590*  	ld a,mos_load
042820 5B CF       3591*  	RST.LIL 08h
042822 21 BD 01 00 3592*  	ld hl,BUF_16_039
042826 01 16 00 00 3593*  	ld bc,22
04282A 11 6B 00 00 3594*  	ld de,107
04282E DD 21 32 09 3595*  	ld ix,2354
       00          
042833 CD 05 C9 04 3596*  	call vdu_load_img
042837 C9          3597*  	ret
042838             3598*  
042838             3599*  ld_16_040:
042838 21 6C 4A 04 3600*  	ld hl,F16_040
04283C 22 8A C7 04 3601*  	ld (cur_filename),hl
042840 11 C6 D3 04 3602*  	ld de,filedata
042844 01 00 00 01 3603*  	ld bc,65536
042848 3E 01       3604*  	ld a,mos_load
04284A 5B CF       3605*  	RST.LIL 08h
04284C 21 BE 01 00 3606*  	ld hl,BUF_16_040
042850 01 16 00 00 3607*  	ld bc,22
042854 11 69 00 00 3608*  	ld de,105
042858 DD 21 06 09 3609*  	ld ix,2310
       00          
04285D CD 05 C9 04 3610*  	call vdu_load_img
042861 C9          3611*  	ret
042862             3612*  
042862             3613*  ld_16_041:
042862 21 80 4A 04 3614*  	ld hl,F16_041
042866 22 8A C7 04 3615*  	ld (cur_filename),hl
04286A 11 C6 D3 04 3616*  	ld de,filedata
04286E 01 00 00 01 3617*  	ld bc,65536
042872 3E 01       3618*  	ld a,mos_load
042874 5B CF       3619*  	RST.LIL 08h
042876 21 BF 01 00 3620*  	ld hl,BUF_16_041
04287A 01 40 00 00 3621*  	ld bc,64
04287E 11 6B 00 00 3622*  	ld de,107
042882 DD 21 C0 1A 3623*  	ld ix,6848
       00          
042887 CD 05 C9 04 3624*  	call vdu_load_img
04288B C9          3625*  	ret
04288C             3626*  
04288C             3627*  ld_16_043:
04288C 21 94 4A 04 3628*  	ld hl,F16_043
042890 22 8A C7 04 3629*  	ld (cur_filename),hl
042894 11 C6 D3 04 3630*  	ld de,filedata
042898 01 00 00 01 3631*  	ld bc,65536
04289C 3E 01       3632*  	ld a,mos_load
04289E 5B CF       3633*  	RST.LIL 08h
0428A0 21 C0 01 00 3634*  	ld hl,BUF_16_043
0428A4 01 6C 00 00 3635*  	ld bc,108
0428A8 11 6B 00 00 3636*  	ld de,107
0428AC DD 21 24 2D 3637*  	ld ix,11556
       00          
0428B1 CD 05 C9 04 3638*  	call vdu_load_img
0428B5 C9          3639*  	ret
0428B6             3640*  
0428B6             3641*  ld_16_045:
0428B6 21 A8 4A 04 3642*  	ld hl,F16_045
0428BA 22 8A C7 04 3643*  	ld (cur_filename),hl
0428BE 11 C6 D3 04 3644*  	ld de,filedata
0428C2 01 00 00 01 3645*  	ld bc,65536
0428C6 3E 01       3646*  	ld a,mos_load
0428C8 5B CF       3647*  	RST.LIL 08h
0428CA 21 C1 01 00 3648*  	ld hl,BUF_16_045
0428CE 01 6A 00 00 3649*  	ld bc,106
0428D2 11 A0 00 00 3650*  	ld de,160
0428D6 DD 21 40 42 3651*  	ld ix,16960
       00          
0428DB CD 05 C9 04 3652*  	call vdu_load_img
0428DF C9          3653*  	ret
0428E0             3654*  
0428E0             3655*  ld_16_046:
0428E0 21 BC 4A 04 3656*  	ld hl,F16_046
0428E4 22 8A C7 04 3657*  	ld (cur_filename),hl
0428E8 11 C6 D3 04 3658*  	ld de,filedata
0428EC 01 00 00 01 3659*  	ld bc,65536
0428F0 3E 01       3660*  	ld a,mos_load
0428F2 5B CF       3661*  	RST.LIL 08h
0428F4 21 C2 01 00 3662*  	ld hl,BUF_16_046
0428F8 01 6A 00 00 3663*  	ld bc,106
0428FC 11 A0 00 00 3664*  	ld de,160
042900 DD 21 40 42 3665*  	ld ix,16960
       00          
042905 CD 05 C9 04 3666*  	call vdu_load_img
042909 C9          3667*  	ret
04290A             3668*  
04290A             3669*  ld_16_047:
04290A 21 D0 4A 04 3670*  	ld hl,F16_047
04290E 22 8A C7 04 3671*  	ld (cur_filename),hl
042912 11 C6 D3 04 3672*  	ld de,filedata
042916 01 00 00 01 3673*  	ld bc,65536
04291A 3E 01       3674*  	ld a,mos_load
04291C 5B CF       3675*  	RST.LIL 08h
04291E 21 C3 01 00 3676*  	ld hl,BUF_16_047
042922 01 40 01 00 3677*  	ld bc,320
042926 11 A0 00 00 3678*  	ld de,160
04292A DD 21 00 C8 3679*  	ld ix,51200
       00          
04292F CD 05 C9 04 3680*  	call vdu_load_img
042933 C9          3681*  	ret
042934             3682*  
042934             3683*  ld_17_000:
042934 21 E4 4A 04 3684*  	ld hl,F17_000
042938 22 8A C7 04 3685*  	ld (cur_filename),hl
04293C 11 C6 D3 04 3686*  	ld de,filedata
042940 01 00 00 01 3687*  	ld bc,65536
042944 3E 01       3688*  	ld a,mos_load
042946 5B CF       3689*  	RST.LIL 08h
042948 21 C4 01 00 3690*  	ld hl,BUF_17_000
04294C 01 10 00 00 3691*  	ld bc,16
042950 11 23 00 00 3692*  	ld de,35
042954 DD 21 30 02 3693*  	ld ix,560
       00          
042959 CD 05 C9 04 3694*  	call vdu_load_img
04295D C9          3695*  	ret
04295E             3696*  
04295E             3697*  ld_17_001:
04295E 21 F8 4A 04 3698*  	ld hl,F17_001
042962 22 8A C7 04 3699*  	ld (cur_filename),hl
042966 11 C6 D3 04 3700*  	ld de,filedata
04296A 01 00 00 01 3701*  	ld bc,65536
04296E 3E 01       3702*  	ld a,mos_load
042970 5B CF       3703*  	RST.LIL 08h
042972 21 C5 01 00 3704*  	ld hl,BUF_17_001
042976 01 0A 00 00 3705*  	ld bc,10
04297A 11 23 00 00 3706*  	ld de,35
04297E DD 21 5E 01 3707*  	ld ix,350
       00          
042983 CD 05 C9 04 3708*  	call vdu_load_img
042987 C9          3709*  	ret
042988             3710*  
042988             3711*  ld_17_002:
042988 21 0C 4B 04 3712*  	ld hl,F17_002
04298C 22 8A C7 04 3713*  	ld (cur_filename),hl
042990 11 C6 D3 04 3714*  	ld de,filedata
042994 01 00 00 01 3715*  	ld bc,65536
042998 3E 01       3716*  	ld a,mos_load
04299A 5B CF       3717*  	RST.LIL 08h
04299C 21 C6 01 00 3718*  	ld hl,BUF_17_002
0429A0 01 0A 00 00 3719*  	ld bc,10
0429A4 11 23 00 00 3720*  	ld de,35
0429A8 DD 21 5E 01 3721*  	ld ix,350
       00          
0429AD CD 05 C9 04 3722*  	call vdu_load_img
0429B1 C9          3723*  	ret
0429B2             3724*  
0429B2             3725*  ld_17_007:
0429B2 21 20 4B 04 3726*  	ld hl,F17_007
0429B6 22 8A C7 04 3727*  	ld (cur_filename),hl
0429BA 11 C6 D3 04 3728*  	ld de,filedata
0429BE 01 00 00 01 3729*  	ld bc,65536
0429C2 3E 01       3730*  	ld a,mos_load
0429C4 5B CF       3731*  	RST.LIL 08h
0429C6 21 C7 01 00 3732*  	ld hl,BUF_17_007
0429CA 01 24 00 00 3733*  	ld bc,36
0429CE 11 23 00 00 3734*  	ld de,35
0429D2 DD 21 EC 04 3735*  	ld ix,1260
       00          
0429D7 CD 05 C9 04 3736*  	call vdu_load_img
0429DB C9          3737*  	ret
0429DC             3738*  
0429DC             3739*  ld_17_012:
0429DC 21 34 4B 04 3740*  	ld hl,F17_012
0429E0 22 8A C7 04 3741*  	ld (cur_filename),hl
0429E4 11 C6 D3 04 3742*  	ld de,filedata
0429E8 01 00 00 01 3743*  	ld bc,65536
0429EC 3E 01       3744*  	ld a,mos_load
0429EE 5B CF       3745*  	RST.LIL 08h
0429F0 21 C8 01 00 3746*  	ld hl,BUF_17_012
0429F4 01 23 00 00 3747*  	ld bc,35
0429F8 11 2D 00 00 3748*  	ld de,45
0429FC DD 21 27 06 3749*  	ld ix,1575
       00          
042A01 CD 05 C9 04 3750*  	call vdu_load_img
042A05 C9          3751*  	ret
042A06             3752*  
042A06             3753*  ld_17_013:
042A06 21 48 4B 04 3754*  	ld hl,F17_013
042A0A 22 8A C7 04 3755*  	ld (cur_filename),hl
042A0E 11 C6 D3 04 3756*  	ld de,filedata
042A12 01 00 00 01 3757*  	ld bc,65536
042A16 3E 01       3758*  	ld a,mos_load
042A18 5B CF       3759*  	RST.LIL 08h
042A1A 21 C9 01 00 3760*  	ld hl,BUF_17_013
042A1E 01 1A 00 00 3761*  	ld bc,26
042A22 11 2D 00 00 3762*  	ld de,45
042A26 DD 21 92 04 3763*  	ld ix,1170
       00          
042A2B CD 05 C9 04 3764*  	call vdu_load_img
042A2F C9          3765*  	ret
042A30             3766*  
042A30             3767*  ld_17_014:
042A30 21 5C 4B 04 3768*  	ld hl,F17_014
042A34 22 8A C7 04 3769*  	ld (cur_filename),hl
042A38 11 C6 D3 04 3770*  	ld de,filedata
042A3C 01 00 00 01 3771*  	ld bc,65536
042A40 3E 01       3772*  	ld a,mos_load
042A42 5B CF       3773*  	RST.LIL 08h
042A44 21 CA 01 00 3774*  	ld hl,BUF_17_014
042A48 01 0F 00 00 3775*  	ld bc,15
042A4C 11 2D 00 00 3776*  	ld de,45
042A50 DD 21 A3 02 3777*  	ld ix,675
       00          
042A55 CD 05 C9 04 3778*  	call vdu_load_img
042A59 C9          3779*  	ret
042A5A             3780*  
042A5A             3781*  ld_17_015:
042A5A 21 70 4B 04 3782*  	ld hl,F17_015
042A5E 22 8A C7 04 3783*  	ld (cur_filename),hl
042A62 11 C6 D3 04 3784*  	ld de,filedata
042A66 01 00 00 01 3785*  	ld bc,65536
042A6A 3E 01       3786*  	ld a,mos_load
042A6C 5B CF       3787*  	RST.LIL 08h
042A6E 21 CB 01 00 3788*  	ld hl,BUF_17_015
042A72 01 05 00 00 3789*  	ld bc,5
042A76 11 2D 00 00 3790*  	ld de,45
042A7A DD 21 E1 00 3791*  	ld ix,225
       00          
042A7F CD 05 C9 04 3792*  	call vdu_load_img
042A83 C9          3793*  	ret
042A84             3794*  
042A84             3795*  ld_17_016:
042A84 21 84 4B 04 3796*  	ld hl,F17_016
042A88 22 8A C7 04 3797*  	ld (cur_filename),hl
042A8C 11 C6 D3 04 3798*  	ld de,filedata
042A90 01 00 00 01 3799*  	ld bc,65536
042A94 3E 01       3800*  	ld a,mos_load
042A96 5B CF       3801*  	RST.LIL 08h
042A98 21 CC 01 00 3802*  	ld hl,BUF_17_016
042A9C 01 05 00 00 3803*  	ld bc,5
042AA0 11 2B 00 00 3804*  	ld de,43
042AA4 DD 21 D7 00 3805*  	ld ix,215
       00          
042AA9 CD 05 C9 04 3806*  	call vdu_load_img
042AAD C9          3807*  	ret
042AAE             3808*  
042AAE             3809*  ld_17_017:
042AAE 21 98 4B 04 3810*  	ld hl,F17_017
042AB2 22 8A C7 04 3811*  	ld (cur_filename),hl
042AB6 11 C6 D3 04 3812*  	ld de,filedata
042ABA 01 00 00 01 3813*  	ld bc,65536
042ABE 3E 01       3814*  	ld a,mos_load
042AC0 5B CF       3815*  	RST.LIL 08h
042AC2 21 CD 01 00 3816*  	ld hl,BUF_17_017
042AC6 01 0F 00 00 3817*  	ld bc,15
042ACA 11 2D 00 00 3818*  	ld de,45
042ACE DD 21 A3 02 3819*  	ld ix,675
       00          
042AD3 CD 05 C9 04 3820*  	call vdu_load_img
042AD7 C9          3821*  	ret
042AD8             3822*  
042AD8             3823*  ld_17_018:
042AD8 21 AC 4B 04 3824*  	ld hl,F17_018
042ADC 22 8A C7 04 3825*  	ld (cur_filename),hl
042AE0 11 C6 D3 04 3826*  	ld de,filedata
042AE4 01 00 00 01 3827*  	ld bc,65536
042AE8 3E 01       3828*  	ld a,mos_load
042AEA 5B CF       3829*  	RST.LIL 08h
042AEC 21 CE 01 00 3830*  	ld hl,BUF_17_018
042AF0 01 1A 00 00 3831*  	ld bc,26
042AF4 11 2D 00 00 3832*  	ld de,45
042AF8 DD 21 92 04 3833*  	ld ix,1170
       00          
042AFD CD 05 C9 04 3834*  	call vdu_load_img
042B01 C9          3835*  	ret
042B02             3836*  
042B02             3837*  ld_17_019:
042B02 21 C0 4B 04 3838*  	ld hl,F17_019
042B06 22 8A C7 04 3839*  	ld (cur_filename),hl
042B0A 11 C6 D3 04 3840*  	ld de,filedata
042B0E 01 00 00 01 3841*  	ld bc,65536
042B12 3E 01       3842*  	ld a,mos_load
042B14 5B CF       3843*  	RST.LIL 08h
042B16 21 CF 01 00 3844*  	ld hl,BUF_17_019
042B1A 01 23 00 00 3845*  	ld bc,35
042B1E 11 2D 00 00 3846*  	ld de,45
042B22 DD 21 27 06 3847*  	ld ix,1575
       00          
042B27 CD 05 C9 04 3848*  	call vdu_load_img
042B2B C9          3849*  	ret
042B2C             3850*  
042B2C             3851*  ld_17_023:
042B2C 21 D4 4B 04 3852*  	ld hl,F17_023
042B30 22 8A C7 04 3853*  	ld (cur_filename),hl
042B34 11 C6 D3 04 3854*  	ld de,filedata
042B38 01 00 00 01 3855*  	ld bc,65536
042B3C 3E 01       3856*  	ld a,mos_load
042B3E 5B CF       3857*  	RST.LIL 08h
042B40 21 D0 01 00 3858*  	ld hl,BUF_17_023
042B44 01 2E 00 00 3859*  	ld bc,46
042B48 11 2D 00 00 3860*  	ld de,45
042B4C DD 21 16 08 3861*  	ld ix,2070
       00          
042B51 CD 05 C9 04 3862*  	call vdu_load_img
042B55 C9          3863*  	ret
042B56             3864*  
042B56             3865*  ld_17_027:
042B56 21 E8 4B 04 3866*  	ld hl,F17_027
042B5A 22 8A C7 04 3867*  	ld (cur_filename),hl
042B5E 11 C6 D3 04 3868*  	ld de,filedata
042B62 01 00 00 01 3869*  	ld bc,65536
042B66 3E 01       3870*  	ld a,mos_load
042B68 5B CF       3871*  	RST.LIL 08h
042B6A 21 D1 01 00 3872*  	ld hl,BUF_17_027
042B6E 01 2D 00 00 3873*  	ld bc,45
042B72 11 3F 00 00 3874*  	ld de,63
042B76 DD 21 13 0B 3875*  	ld ix,2835
       00          
042B7B CD 05 C9 04 3876*  	call vdu_load_img
042B7F C9          3877*  	ret
042B80             3878*  
042B80             3879*  ld_17_028:
042B80 21 FC 4B 04 3880*  	ld hl,F17_028
042B84 22 8A C7 04 3881*  	ld (cur_filename),hl
042B88 11 C6 D3 04 3882*  	ld de,filedata
042B8C 01 00 00 01 3883*  	ld bc,65536
042B90 3E 01       3884*  	ld a,mos_load
042B92 5B CF       3885*  	RST.LIL 08h
042B94 21 D2 01 00 3886*  	ld hl,BUF_17_028
042B98 01 1B 00 00 3887*  	ld bc,27
042B9C 11 3F 00 00 3888*  	ld de,63
042BA0 DD 21 A5 06 3889*  	ld ix,1701
       00          
042BA5 CD 05 C9 04 3890*  	call vdu_load_img
042BA9 C9          3891*  	ret
042BAA             3892*  
042BAA             3893*  ld_17_029:
042BAA 21 10 4C 04 3894*  	ld hl,F17_029
042BAE 22 8A C7 04 3895*  	ld (cur_filename),hl
042BB2 11 C6 D3 04 3896*  	ld de,filedata
042BB6 01 00 00 01 3897*  	ld bc,65536
042BBA 3E 01       3898*  	ld a,mos_load
042BBC 5B CF       3899*  	RST.LIL 08h
042BBE 21 D3 01 00 3900*  	ld hl,BUF_17_029
042BC2 01 09 00 00 3901*  	ld bc,9
042BC6 11 3F 00 00 3902*  	ld de,63
042BCA DD 21 37 02 3903*  	ld ix,567
       00          
042BCF CD 05 C9 04 3904*  	call vdu_load_img
042BD3 C9          3905*  	ret
042BD4             3906*  
042BD4             3907*  ld_17_030:
042BD4 21 24 4C 04 3908*  	ld hl,F17_030
042BD8 22 8A C7 04 3909*  	ld (cur_filename),hl
042BDC 11 C6 D3 04 3910*  	ld de,filedata
042BE0 01 00 00 01 3911*  	ld bc,65536
042BE4 3E 01       3912*  	ld a,mos_load
042BE6 5B CF       3913*  	RST.LIL 08h
042BE8 21 D4 01 00 3914*  	ld hl,BUF_17_030
042BEC 01 09 00 00 3915*  	ld bc,9
042BF0 11 3D 00 00 3916*  	ld de,61
042BF4 DD 21 25 02 3917*  	ld ix,549
       00          
042BF9 CD 05 C9 04 3918*  	call vdu_load_img
042BFD C9          3919*  	ret
042BFE             3920*  
042BFE             3921*  ld_17_031:
042BFE 21 38 4C 04 3922*  	ld hl,F17_031
042C02 22 8A C7 04 3923*  	ld (cur_filename),hl
042C06 11 C6 D3 04 3924*  	ld de,filedata
042C0A 01 00 00 01 3925*  	ld bc,65536
042C0E 3E 01       3926*  	ld a,mos_load
042C10 5B CF       3927*  	RST.LIL 08h
042C12 21 D5 01 00 3928*  	ld hl,BUF_17_031
042C16 01 1B 00 00 3929*  	ld bc,27
042C1A 11 3F 00 00 3930*  	ld de,63
042C1E DD 21 A5 06 3931*  	ld ix,1701
       00          
042C23 CD 05 C9 04 3932*  	call vdu_load_img
042C27 C9          3933*  	ret
042C28             3934*  
042C28             3935*  ld_17_032:
042C28 21 4C 4C 04 3936*  	ld hl,F17_032
042C2C 22 8A C7 04 3937*  	ld (cur_filename),hl
042C30 11 C6 D3 04 3938*  	ld de,filedata
042C34 01 00 00 01 3939*  	ld bc,65536
042C38 3E 01       3940*  	ld a,mos_load
042C3A 5B CF       3941*  	RST.LIL 08h
042C3C 21 D6 01 00 3942*  	ld hl,BUF_17_032
042C40 01 2D 00 00 3943*  	ld bc,45
042C44 11 3F 00 00 3944*  	ld de,63
042C48 DD 21 13 0B 3945*  	ld ix,2835
       00          
042C4D CD 05 C9 04 3946*  	call vdu_load_img
042C51 C9          3947*  	ret
042C52             3948*  
042C52             3949*  ld_17_035:
042C52 21 60 4C 04 3950*  	ld hl,F17_035
042C56 22 8A C7 04 3951*  	ld (cur_filename),hl
042C5A 11 C6 D3 04 3952*  	ld de,filedata
042C5E 01 00 00 01 3953*  	ld bc,65536
042C62 3E 01       3954*  	ld a,mos_load
042C64 5B CF       3955*  	RST.LIL 08h
042C66 21 D7 01 00 3956*  	ld hl,BUF_17_035
042C6A 01 40 00 00 3957*  	ld bc,64
042C6E 11 3F 00 00 3958*  	ld de,63
042C72 DD 21 C0 0F 3959*  	ld ix,4032
       00          
042C77 CD 05 C9 04 3960*  	call vdu_load_img
042C7B C9          3961*  	ret
042C7C             3962*  
042C7C             3963*  ld_17_038:
042C7C 21 74 4C 04 3964*  	ld hl,F17_038
042C80 22 8A C7 04 3965*  	ld (cur_filename),hl
042C84 11 C6 D3 04 3966*  	ld de,filedata
042C88 01 00 00 01 3967*  	ld bc,65536
042C8C 3E 01       3968*  	ld a,mos_load
042C8E 5B CF       3969*  	RST.LIL 08h
042C90 21 D8 01 00 3970*  	ld hl,BUF_17_038
042C94 01 40 00 00 3971*  	ld bc,64
042C98 11 6B 00 00 3972*  	ld de,107
042C9C DD 21 C0 1A 3973*  	ld ix,6848
       00          
042CA1 CD 05 C9 04 3974*  	call vdu_load_img
042CA5 C9          3975*  	ret
042CA6             3976*  
042CA6             3977*  ld_17_039:
042CA6 21 88 4C 04 3978*  	ld hl,F17_039
042CAA 22 8A C7 04 3979*  	ld (cur_filename),hl
042CAE 11 C6 D3 04 3980*  	ld de,filedata
042CB2 01 00 00 01 3981*  	ld bc,65536
042CB6 3E 01       3982*  	ld a,mos_load
042CB8 5B CF       3983*  	RST.LIL 08h
042CBA 21 D9 01 00 3984*  	ld hl,BUF_17_039
042CBE 01 16 00 00 3985*  	ld bc,22
042CC2 11 6B 00 00 3986*  	ld de,107
042CC6 DD 21 32 09 3987*  	ld ix,2354
       00          
042CCB CD 05 C9 04 3988*  	call vdu_load_img
042CCF C9          3989*  	ret
042CD0             3990*  
042CD0             3991*  ld_17_040:
042CD0 21 9C 4C 04 3992*  	ld hl,F17_040
042CD4 22 8A C7 04 3993*  	ld (cur_filename),hl
042CD8 11 C6 D3 04 3994*  	ld de,filedata
042CDC 01 00 00 01 3995*  	ld bc,65536
042CE0 3E 01       3996*  	ld a,mos_load
042CE2 5B CF       3997*  	RST.LIL 08h
042CE4 21 DA 01 00 3998*  	ld hl,BUF_17_040
042CE8 01 16 00 00 3999*  	ld bc,22
042CEC 11 69 00 00 4000*  	ld de,105
042CF0 DD 21 06 09 4001*  	ld ix,2310
       00          
042CF5 CD 05 C9 04 4002*  	call vdu_load_img
042CF9 C9          4003*  	ret
042CFA             4004*  
042CFA             4005*  ld_17_041:
042CFA 21 B0 4C 04 4006*  	ld hl,F17_041
042CFE 22 8A C7 04 4007*  	ld (cur_filename),hl
042D02 11 C6 D3 04 4008*  	ld de,filedata
042D06 01 00 00 01 4009*  	ld bc,65536
042D0A 3E 01       4010*  	ld a,mos_load
042D0C 5B CF       4011*  	RST.LIL 08h
042D0E 21 DB 01 00 4012*  	ld hl,BUF_17_041
042D12 01 40 00 00 4013*  	ld bc,64
042D16 11 6B 00 00 4014*  	ld de,107
042D1A DD 21 C0 1A 4015*  	ld ix,6848
       00          
042D1F CD 05 C9 04 4016*  	call vdu_load_img
042D23 C9          4017*  	ret
042D24             4018*  
042D24             4019*  ld_17_043:
042D24 21 C4 4C 04 4020*  	ld hl,F17_043
042D28 22 8A C7 04 4021*  	ld (cur_filename),hl
042D2C 11 C6 D3 04 4022*  	ld de,filedata
042D30 01 00 00 01 4023*  	ld bc,65536
042D34 3E 01       4024*  	ld a,mos_load
042D36 5B CF       4025*  	RST.LIL 08h
042D38 21 DC 01 00 4026*  	ld hl,BUF_17_043
042D3C 01 6C 00 00 4027*  	ld bc,108
042D40 11 6B 00 00 4028*  	ld de,107
042D44 DD 21 24 2D 4029*  	ld ix,11556
       00          
042D49 CD 05 C9 04 4030*  	call vdu_load_img
042D4D C9          4031*  	ret
042D4E             4032*  
042D4E             4033*  ld_17_045:
042D4E 21 D8 4C 04 4034*  	ld hl,F17_045
042D52 22 8A C7 04 4035*  	ld (cur_filename),hl
042D56 11 C6 D3 04 4036*  	ld de,filedata
042D5A 01 00 00 01 4037*  	ld bc,65536
042D5E 3E 01       4038*  	ld a,mos_load
042D60 5B CF       4039*  	RST.LIL 08h
042D62 21 DD 01 00 4040*  	ld hl,BUF_17_045
042D66 01 6A 00 00 4041*  	ld bc,106
042D6A 11 A0 00 00 4042*  	ld de,160
042D6E DD 21 40 42 4043*  	ld ix,16960
       00          
042D73 CD 05 C9 04 4044*  	call vdu_load_img
042D77 C9          4045*  	ret
042D78             4046*  
042D78             4047*  ld_17_046:
042D78 21 EC 4C 04 4048*  	ld hl,F17_046
042D7C 22 8A C7 04 4049*  	ld (cur_filename),hl
042D80 11 C6 D3 04 4050*  	ld de,filedata
042D84 01 00 00 01 4051*  	ld bc,65536
042D88 3E 01       4052*  	ld a,mos_load
042D8A 5B CF       4053*  	RST.LIL 08h
042D8C 21 DE 01 00 4054*  	ld hl,BUF_17_046
042D90 01 6A 00 00 4055*  	ld bc,106
042D94 11 A0 00 00 4056*  	ld de,160
042D98 DD 21 40 42 4057*  	ld ix,16960
       00          
042D9D CD 05 C9 04 4058*  	call vdu_load_img
042DA1 C9          4059*  	ret
042DA2             4060*  
042DA2             4061*  ld_17_047:
042DA2 21 00 4D 04 4062*  	ld hl,F17_047
042DA6 22 8A C7 04 4063*  	ld (cur_filename),hl
042DAA 11 C6 D3 04 4064*  	ld de,filedata
042DAE 01 00 00 01 4065*  	ld bc,65536
042DB2 3E 01       4066*  	ld a,mos_load
042DB4 5B CF       4067*  	RST.LIL 08h
042DB6 21 DF 01 00 4068*  	ld hl,BUF_17_047
042DBA 01 40 01 00 4069*  	ld bc,320
042DBE 11 A0 00 00 4070*  	ld de,160
042DC2 DD 21 00 C8 4071*  	ld ix,51200
       00          
042DC7 CD 05 C9 04 4072*  	call vdu_load_img
042DCB C9          4073*  	ret
042DCC             4074*  
042DCC             4075*  ld_57_000:
042DCC 21 14 4D 04 4076*  	ld hl,F57_000
042DD0 22 8A C7 04 4077*  	ld (cur_filename),hl
042DD4 11 C6 D3 04 4078*  	ld de,filedata
042DD8 01 00 00 01 4079*  	ld bc,65536
042DDC 3E 01       4080*  	ld a,mos_load
042DDE 5B CF       4081*  	RST.LIL 08h
042DE0 21 E0 01 00 4082*  	ld hl,BUF_57_000
042DE4 01 10 00 00 4083*  	ld bc,16
042DE8 11 23 00 00 4084*  	ld de,35
042DEC DD 21 30 02 4085*  	ld ix,560
       00          
042DF1 CD 05 C9 04 4086*  	call vdu_load_img
042DF5 C9          4087*  	ret
042DF6             4088*  
042DF6             4089*  ld_57_001:
042DF6 21 28 4D 04 4090*  	ld hl,F57_001
042DFA 22 8A C7 04 4091*  	ld (cur_filename),hl
042DFE 11 C6 D3 04 4092*  	ld de,filedata
042E02 01 00 00 01 4093*  	ld bc,65536
042E06 3E 01       4094*  	ld a,mos_load
042E08 5B CF       4095*  	RST.LIL 08h
042E0A 21 E1 01 00 4096*  	ld hl,BUF_57_001
042E0E 01 0A 00 00 4097*  	ld bc,10
042E12 11 23 00 00 4098*  	ld de,35
042E16 DD 21 5E 01 4099*  	ld ix,350
       00          
042E1B CD 05 C9 04 4100*  	call vdu_load_img
042E1F C9          4101*  	ret
042E20             4102*  
042E20             4103*  ld_57_002:
042E20 21 3C 4D 04 4104*  	ld hl,F57_002
042E24 22 8A C7 04 4105*  	ld (cur_filename),hl
042E28 11 C6 D3 04 4106*  	ld de,filedata
042E2C 01 00 00 01 4107*  	ld bc,65536
042E30 3E 01       4108*  	ld a,mos_load
042E32 5B CF       4109*  	RST.LIL 08h
042E34 21 E2 01 00 4110*  	ld hl,BUF_57_002
042E38 01 0A 00 00 4111*  	ld bc,10
042E3C 11 23 00 00 4112*  	ld de,35
042E40 DD 21 5E 01 4113*  	ld ix,350
       00          
042E45 CD 05 C9 04 4114*  	call vdu_load_img
042E49 C9          4115*  	ret
042E4A             4116*  
042E4A             4117*  ld_57_007:
042E4A 21 50 4D 04 4118*  	ld hl,F57_007
042E4E 22 8A C7 04 4119*  	ld (cur_filename),hl
042E52 11 C6 D3 04 4120*  	ld de,filedata
042E56 01 00 00 01 4121*  	ld bc,65536
042E5A 3E 01       4122*  	ld a,mos_load
042E5C 5B CF       4123*  	RST.LIL 08h
042E5E 21 E3 01 00 4124*  	ld hl,BUF_57_007
042E62 01 24 00 00 4125*  	ld bc,36
042E66 11 23 00 00 4126*  	ld de,35
042E6A DD 21 EC 04 4127*  	ld ix,1260
       00          
042E6F CD 05 C9 04 4128*  	call vdu_load_img
042E73 C9          4129*  	ret
042E74             4130*  
042E74             4131*  ld_57_012:
042E74 21 64 4D 04 4132*  	ld hl,F57_012
042E78 22 8A C7 04 4133*  	ld (cur_filename),hl
042E7C 11 C6 D3 04 4134*  	ld de,filedata
042E80 01 00 00 01 4135*  	ld bc,65536
042E84 3E 01       4136*  	ld a,mos_load
042E86 5B CF       4137*  	RST.LIL 08h
042E88 21 E4 01 00 4138*  	ld hl,BUF_57_012
042E8C 01 23 00 00 4139*  	ld bc,35
042E90 11 2D 00 00 4140*  	ld de,45
042E94 DD 21 27 06 4141*  	ld ix,1575
       00          
042E99 CD 05 C9 04 4142*  	call vdu_load_img
042E9D C9          4143*  	ret
042E9E             4144*  
042E9E             4145*  ld_57_013:
042E9E 21 78 4D 04 4146*  	ld hl,F57_013
042EA2 22 8A C7 04 4147*  	ld (cur_filename),hl
042EA6 11 C6 D3 04 4148*  	ld de,filedata
042EAA 01 00 00 01 4149*  	ld bc,65536
042EAE 3E 01       4150*  	ld a,mos_load
042EB0 5B CF       4151*  	RST.LIL 08h
042EB2 21 E5 01 00 4152*  	ld hl,BUF_57_013
042EB6 01 1A 00 00 4153*  	ld bc,26
042EBA 11 2D 00 00 4154*  	ld de,45
042EBE DD 21 92 04 4155*  	ld ix,1170
       00          
042EC3 CD 05 C9 04 4156*  	call vdu_load_img
042EC7 C9          4157*  	ret
042EC8             4158*  
042EC8             4159*  ld_57_014:
042EC8 21 8C 4D 04 4160*  	ld hl,F57_014
042ECC 22 8A C7 04 4161*  	ld (cur_filename),hl
042ED0 11 C6 D3 04 4162*  	ld de,filedata
042ED4 01 00 00 01 4163*  	ld bc,65536
042ED8 3E 01       4164*  	ld a,mos_load
042EDA 5B CF       4165*  	RST.LIL 08h
042EDC 21 E6 01 00 4166*  	ld hl,BUF_57_014
042EE0 01 0F 00 00 4167*  	ld bc,15
042EE4 11 2D 00 00 4168*  	ld de,45
042EE8 DD 21 A3 02 4169*  	ld ix,675
       00          
042EED CD 05 C9 04 4170*  	call vdu_load_img
042EF1 C9          4171*  	ret
042EF2             4172*  
042EF2             4173*  ld_57_015:
042EF2 21 A0 4D 04 4174*  	ld hl,F57_015
042EF6 22 8A C7 04 4175*  	ld (cur_filename),hl
042EFA 11 C6 D3 04 4176*  	ld de,filedata
042EFE 01 00 00 01 4177*  	ld bc,65536
042F02 3E 01       4178*  	ld a,mos_load
042F04 5B CF       4179*  	RST.LIL 08h
042F06 21 E7 01 00 4180*  	ld hl,BUF_57_015
042F0A 01 05 00 00 4181*  	ld bc,5
042F0E 11 2D 00 00 4182*  	ld de,45
042F12 DD 21 E1 00 4183*  	ld ix,225
       00          
042F17 CD 05 C9 04 4184*  	call vdu_load_img
042F1B C9          4185*  	ret
042F1C             4186*  
042F1C             4187*  ld_57_016:
042F1C 21 B4 4D 04 4188*  	ld hl,F57_016
042F20 22 8A C7 04 4189*  	ld (cur_filename),hl
042F24 11 C6 D3 04 4190*  	ld de,filedata
042F28 01 00 00 01 4191*  	ld bc,65536
042F2C 3E 01       4192*  	ld a,mos_load
042F2E 5B CF       4193*  	RST.LIL 08h
042F30 21 E8 01 00 4194*  	ld hl,BUF_57_016
042F34 01 05 00 00 4195*  	ld bc,5
042F38 11 2B 00 00 4196*  	ld de,43
042F3C DD 21 D7 00 4197*  	ld ix,215
       00          
042F41 CD 05 C9 04 4198*  	call vdu_load_img
042F45 C9          4199*  	ret
042F46             4200*  
042F46             4201*  ld_57_017:
042F46 21 C8 4D 04 4202*  	ld hl,F57_017
042F4A 22 8A C7 04 4203*  	ld (cur_filename),hl
042F4E 11 C6 D3 04 4204*  	ld de,filedata
042F52 01 00 00 01 4205*  	ld bc,65536
042F56 3E 01       4206*  	ld a,mos_load
042F58 5B CF       4207*  	RST.LIL 08h
042F5A 21 E9 01 00 4208*  	ld hl,BUF_57_017
042F5E 01 0F 00 00 4209*  	ld bc,15
042F62 11 2D 00 00 4210*  	ld de,45
042F66 DD 21 A3 02 4211*  	ld ix,675
       00          
042F6B CD 05 C9 04 4212*  	call vdu_load_img
042F6F C9          4213*  	ret
042F70             4214*  
042F70             4215*  ld_57_018:
042F70 21 DC 4D 04 4216*  	ld hl,F57_018
042F74 22 8A C7 04 4217*  	ld (cur_filename),hl
042F78 11 C6 D3 04 4218*  	ld de,filedata
042F7C 01 00 00 01 4219*  	ld bc,65536
042F80 3E 01       4220*  	ld a,mos_load
042F82 5B CF       4221*  	RST.LIL 08h
042F84 21 EA 01 00 4222*  	ld hl,BUF_57_018
042F88 01 1A 00 00 4223*  	ld bc,26
042F8C 11 2D 00 00 4224*  	ld de,45
042F90 DD 21 92 04 4225*  	ld ix,1170
       00          
042F95 CD 05 C9 04 4226*  	call vdu_load_img
042F99 C9          4227*  	ret
042F9A             4228*  
042F9A             4229*  ld_57_019:
042F9A 21 F0 4D 04 4230*  	ld hl,F57_019
042F9E 22 8A C7 04 4231*  	ld (cur_filename),hl
042FA2 11 C6 D3 04 4232*  	ld de,filedata
042FA6 01 00 00 01 4233*  	ld bc,65536
042FAA 3E 01       4234*  	ld a,mos_load
042FAC 5B CF       4235*  	RST.LIL 08h
042FAE 21 EB 01 00 4236*  	ld hl,BUF_57_019
042FB2 01 23 00 00 4237*  	ld bc,35
042FB6 11 2D 00 00 4238*  	ld de,45
042FBA DD 21 27 06 4239*  	ld ix,1575
       00          
042FBF CD 05 C9 04 4240*  	call vdu_load_img
042FC3 C9          4241*  	ret
042FC4             4242*  
042FC4             4243*  ld_57_023:
042FC4 21 04 4E 04 4244*  	ld hl,F57_023
042FC8 22 8A C7 04 4245*  	ld (cur_filename),hl
042FCC 11 C6 D3 04 4246*  	ld de,filedata
042FD0 01 00 00 01 4247*  	ld bc,65536
042FD4 3E 01       4248*  	ld a,mos_load
042FD6 5B CF       4249*  	RST.LIL 08h
042FD8 21 EC 01 00 4250*  	ld hl,BUF_57_023
042FDC 01 2E 00 00 4251*  	ld bc,46
042FE0 11 2D 00 00 4252*  	ld de,45
042FE4 DD 21 16 08 4253*  	ld ix,2070
       00          
042FE9 CD 05 C9 04 4254*  	call vdu_load_img
042FED C9          4255*  	ret
042FEE             4256*  
042FEE             4257*  ld_57_027:
042FEE 21 18 4E 04 4258*  	ld hl,F57_027
042FF2 22 8A C7 04 4259*  	ld (cur_filename),hl
042FF6 11 C6 D3 04 4260*  	ld de,filedata
042FFA 01 00 00 01 4261*  	ld bc,65536
042FFE 3E 01       4262*  	ld a,mos_load
043000 5B CF       4263*  	RST.LIL 08h
043002 21 ED 01 00 4264*  	ld hl,BUF_57_027
043006 01 2D 00 00 4265*  	ld bc,45
04300A 11 3F 00 00 4266*  	ld de,63
04300E DD 21 13 0B 4267*  	ld ix,2835
       00          
043013 CD 05 C9 04 4268*  	call vdu_load_img
043017 C9          4269*  	ret
043018             4270*  
043018             4271*  ld_57_028:
043018 21 2C 4E 04 4272*  	ld hl,F57_028
04301C 22 8A C7 04 4273*  	ld (cur_filename),hl
043020 11 C6 D3 04 4274*  	ld de,filedata
043024 01 00 00 01 4275*  	ld bc,65536
043028 3E 01       4276*  	ld a,mos_load
04302A 5B CF       4277*  	RST.LIL 08h
04302C 21 EE 01 00 4278*  	ld hl,BUF_57_028
043030 01 1B 00 00 4279*  	ld bc,27
043034 11 3F 00 00 4280*  	ld de,63
043038 DD 21 A5 06 4281*  	ld ix,1701
       00          
04303D CD 05 C9 04 4282*  	call vdu_load_img
043041 C9          4283*  	ret
043042             4284*  
043042             4285*  ld_57_029:
043042 21 40 4E 04 4286*  	ld hl,F57_029
043046 22 8A C7 04 4287*  	ld (cur_filename),hl
04304A 11 C6 D3 04 4288*  	ld de,filedata
04304E 01 00 00 01 4289*  	ld bc,65536
043052 3E 01       4290*  	ld a,mos_load
043054 5B CF       4291*  	RST.LIL 08h
043056 21 EF 01 00 4292*  	ld hl,BUF_57_029
04305A 01 09 00 00 4293*  	ld bc,9
04305E 11 3F 00 00 4294*  	ld de,63
043062 DD 21 37 02 4295*  	ld ix,567
       00          
043067 CD 05 C9 04 4296*  	call vdu_load_img
04306B C9          4297*  	ret
04306C             4298*  
04306C             4299*  ld_57_030:
04306C 21 54 4E 04 4300*  	ld hl,F57_030
043070 22 8A C7 04 4301*  	ld (cur_filename),hl
043074 11 C6 D3 04 4302*  	ld de,filedata
043078 01 00 00 01 4303*  	ld bc,65536
04307C 3E 01       4304*  	ld a,mos_load
04307E 5B CF       4305*  	RST.LIL 08h
043080 21 F0 01 00 4306*  	ld hl,BUF_57_030
043084 01 09 00 00 4307*  	ld bc,9
043088 11 3D 00 00 4308*  	ld de,61
04308C DD 21 25 02 4309*  	ld ix,549
       00          
043091 CD 05 C9 04 4310*  	call vdu_load_img
043095 C9          4311*  	ret
043096             4312*  
043096             4313*  ld_57_031:
043096 21 68 4E 04 4314*  	ld hl,F57_031
04309A 22 8A C7 04 4315*  	ld (cur_filename),hl
04309E 11 C6 D3 04 4316*  	ld de,filedata
0430A2 01 00 00 01 4317*  	ld bc,65536
0430A6 3E 01       4318*  	ld a,mos_load
0430A8 5B CF       4319*  	RST.LIL 08h
0430AA 21 F1 01 00 4320*  	ld hl,BUF_57_031
0430AE 01 1B 00 00 4321*  	ld bc,27
0430B2 11 3F 00 00 4322*  	ld de,63
0430B6 DD 21 A5 06 4323*  	ld ix,1701
       00          
0430BB CD 05 C9 04 4324*  	call vdu_load_img
0430BF C9          4325*  	ret
0430C0             4326*  
0430C0             4327*  ld_57_032:
0430C0 21 7C 4E 04 4328*  	ld hl,F57_032
0430C4 22 8A C7 04 4329*  	ld (cur_filename),hl
0430C8 11 C6 D3 04 4330*  	ld de,filedata
0430CC 01 00 00 01 4331*  	ld bc,65536
0430D0 3E 01       4332*  	ld a,mos_load
0430D2 5B CF       4333*  	RST.LIL 08h
0430D4 21 F2 01 00 4334*  	ld hl,BUF_57_032
0430D8 01 2D 00 00 4335*  	ld bc,45
0430DC 11 3F 00 00 4336*  	ld de,63
0430E0 DD 21 13 0B 4337*  	ld ix,2835
       00          
0430E5 CD 05 C9 04 4338*  	call vdu_load_img
0430E9 C9          4339*  	ret
0430EA             4340*  
0430EA             4341*  ld_57_035:
0430EA 21 90 4E 04 4342*  	ld hl,F57_035
0430EE 22 8A C7 04 4343*  	ld (cur_filename),hl
0430F2 11 C6 D3 04 4344*  	ld de,filedata
0430F6 01 00 00 01 4345*  	ld bc,65536
0430FA 3E 01       4346*  	ld a,mos_load
0430FC 5B CF       4347*  	RST.LIL 08h
0430FE 21 F3 01 00 4348*  	ld hl,BUF_57_035
043102 01 40 00 00 4349*  	ld bc,64
043106 11 3F 00 00 4350*  	ld de,63
04310A DD 21 C0 0F 4351*  	ld ix,4032
       00          
04310F CD 05 C9 04 4352*  	call vdu_load_img
043113 C9          4353*  	ret
043114             4354*  
043114             4355*  ld_57_038:
043114 21 A4 4E 04 4356*  	ld hl,F57_038
043118 22 8A C7 04 4357*  	ld (cur_filename),hl
04311C 11 C6 D3 04 4358*  	ld de,filedata
043120 01 00 00 01 4359*  	ld bc,65536
043124 3E 01       4360*  	ld a,mos_load
043126 5B CF       4361*  	RST.LIL 08h
043128 21 F4 01 00 4362*  	ld hl,BUF_57_038
04312C 01 40 00 00 4363*  	ld bc,64
043130 11 6B 00 00 4364*  	ld de,107
043134 DD 21 C0 1A 4365*  	ld ix,6848
       00          
043139 CD 05 C9 04 4366*  	call vdu_load_img
04313D C9          4367*  	ret
04313E             4368*  
04313E             4369*  ld_57_039:
04313E 21 B8 4E 04 4370*  	ld hl,F57_039
043142 22 8A C7 04 4371*  	ld (cur_filename),hl
043146 11 C6 D3 04 4372*  	ld de,filedata
04314A 01 00 00 01 4373*  	ld bc,65536
04314E 3E 01       4374*  	ld a,mos_load
043150 5B CF       4375*  	RST.LIL 08h
043152 21 F5 01 00 4376*  	ld hl,BUF_57_039
043156 01 16 00 00 4377*  	ld bc,22
04315A 11 6B 00 00 4378*  	ld de,107
04315E DD 21 32 09 4379*  	ld ix,2354
       00          
043163 CD 05 C9 04 4380*  	call vdu_load_img
043167 C9          4381*  	ret
043168             4382*  
043168             4383*  ld_57_040:
043168 21 CC 4E 04 4384*  	ld hl,F57_040
04316C 22 8A C7 04 4385*  	ld (cur_filename),hl
043170 11 C6 D3 04 4386*  	ld de,filedata
043174 01 00 00 01 4387*  	ld bc,65536
043178 3E 01       4388*  	ld a,mos_load
04317A 5B CF       4389*  	RST.LIL 08h
04317C 21 F6 01 00 4390*  	ld hl,BUF_57_040
043180 01 16 00 00 4391*  	ld bc,22
043184 11 69 00 00 4392*  	ld de,105
043188 DD 21 06 09 4393*  	ld ix,2310
       00          
04318D CD 05 C9 04 4394*  	call vdu_load_img
043191 C9          4395*  	ret
043192             4396*  
043192             4397*  ld_57_041:
043192 21 E0 4E 04 4398*  	ld hl,F57_041
043196 22 8A C7 04 4399*  	ld (cur_filename),hl
04319A 11 C6 D3 04 4400*  	ld de,filedata
04319E 01 00 00 01 4401*  	ld bc,65536
0431A2 3E 01       4402*  	ld a,mos_load
0431A4 5B CF       4403*  	RST.LIL 08h
0431A6 21 F7 01 00 4404*  	ld hl,BUF_57_041
0431AA 01 40 00 00 4405*  	ld bc,64
0431AE 11 6B 00 00 4406*  	ld de,107
0431B2 DD 21 C0 1A 4407*  	ld ix,6848
       00          
0431B7 CD 05 C9 04 4408*  	call vdu_load_img
0431BB C9          4409*  	ret
0431BC             4410*  
0431BC             4411*  ld_57_043:
0431BC 21 F4 4E 04 4412*  	ld hl,F57_043
0431C0 22 8A C7 04 4413*  	ld (cur_filename),hl
0431C4 11 C6 D3 04 4414*  	ld de,filedata
0431C8 01 00 00 01 4415*  	ld bc,65536
0431CC 3E 01       4416*  	ld a,mos_load
0431CE 5B CF       4417*  	RST.LIL 08h
0431D0 21 F8 01 00 4418*  	ld hl,BUF_57_043
0431D4 01 6C 00 00 4419*  	ld bc,108
0431D8 11 6B 00 00 4420*  	ld de,107
0431DC DD 21 24 2D 4421*  	ld ix,11556
       00          
0431E1 CD 05 C9 04 4422*  	call vdu_load_img
0431E5 C9          4423*  	ret
0431E6             4424*  
0431E6             4425*  ld_57_045:
0431E6 21 08 4F 04 4426*  	ld hl,F57_045
0431EA 22 8A C7 04 4427*  	ld (cur_filename),hl
0431EE 11 C6 D3 04 4428*  	ld de,filedata
0431F2 01 00 00 01 4429*  	ld bc,65536
0431F6 3E 01       4430*  	ld a,mos_load
0431F8 5B CF       4431*  	RST.LIL 08h
0431FA 21 F9 01 00 4432*  	ld hl,BUF_57_045
0431FE 01 6A 00 00 4433*  	ld bc,106
043202 11 A0 00 00 4434*  	ld de,160
043206 DD 21 40 42 4435*  	ld ix,16960
       00          
04320B CD 05 C9 04 4436*  	call vdu_load_img
04320F C9          4437*  	ret
043210             4438*  
043210             4439*  ld_57_046:
043210 21 1C 4F 04 4440*  	ld hl,F57_046
043214 22 8A C7 04 4441*  	ld (cur_filename),hl
043218 11 C6 D3 04 4442*  	ld de,filedata
04321C 01 00 00 01 4443*  	ld bc,65536
043220 3E 01       4444*  	ld a,mos_load
043222 5B CF       4445*  	RST.LIL 08h
043224 21 FA 01 00 4446*  	ld hl,BUF_57_046
043228 01 6A 00 00 4447*  	ld bc,106
04322C 11 A0 00 00 4448*  	ld de,160
043230 DD 21 40 42 4449*  	ld ix,16960
       00          
043235 CD 05 C9 04 4450*  	call vdu_load_img
043239 C9          4451*  	ret
04323A             4452*  
04323A             4453*  ld_57_047:
04323A 21 30 4F 04 4454*  	ld hl,F57_047
04323E 22 8A C7 04 4455*  	ld (cur_filename),hl
043242 11 C6 D3 04 4456*  	ld de,filedata
043246 01 00 00 01 4457*  	ld bc,65536
04324A 3E 01       4458*  	ld a,mos_load
04324C 5B CF       4459*  	RST.LIL 08h
04324E 21 FB 01 00 4460*  	ld hl,BUF_57_047
043252 01 40 01 00 4461*  	ld bc,320
043256 11 A0 00 00 4462*  	ld de,160
04325A DD 21 00 C8 4463*  	ld ix,51200
       00          
04325F CD 05 C9 04 4464*  	call vdu_load_img
043263 C9          4465*  	ret
043264             4466*  
043264             4467*  ld_58_000:
043264 21 44 4F 04 4468*  	ld hl,F58_000
043268 22 8A C7 04 4469*  	ld (cur_filename),hl
04326C 11 C6 D3 04 4470*  	ld de,filedata
043270 01 00 00 01 4471*  	ld bc,65536
043274 3E 01       4472*  	ld a,mos_load
043276 5B CF       4473*  	RST.LIL 08h
043278 21 FC 01 00 4474*  	ld hl,BUF_58_000
04327C 01 10 00 00 4475*  	ld bc,16
043280 11 23 00 00 4476*  	ld de,35
043284 DD 21 30 02 4477*  	ld ix,560
       00          
043289 CD 05 C9 04 4478*  	call vdu_load_img
04328D C9          4479*  	ret
04328E             4480*  
04328E             4481*  ld_58_001:
04328E 21 58 4F 04 4482*  	ld hl,F58_001
043292 22 8A C7 04 4483*  	ld (cur_filename),hl
043296 11 C6 D3 04 4484*  	ld de,filedata
04329A 01 00 00 01 4485*  	ld bc,65536
04329E 3E 01       4486*  	ld a,mos_load
0432A0 5B CF       4487*  	RST.LIL 08h
0432A2 21 FD 01 00 4488*  	ld hl,BUF_58_001
0432A6 01 0A 00 00 4489*  	ld bc,10
0432AA 11 23 00 00 4490*  	ld de,35
0432AE DD 21 5E 01 4491*  	ld ix,350
       00          
0432B3 CD 05 C9 04 4492*  	call vdu_load_img
0432B7 C9          4493*  	ret
0432B8             4494*  
0432B8             4495*  ld_58_002:
0432B8 21 6C 4F 04 4496*  	ld hl,F58_002
0432BC 22 8A C7 04 4497*  	ld (cur_filename),hl
0432C0 11 C6 D3 04 4498*  	ld de,filedata
0432C4 01 00 00 01 4499*  	ld bc,65536
0432C8 3E 01       4500*  	ld a,mos_load
0432CA 5B CF       4501*  	RST.LIL 08h
0432CC 21 FE 01 00 4502*  	ld hl,BUF_58_002
0432D0 01 0A 00 00 4503*  	ld bc,10
0432D4 11 23 00 00 4504*  	ld de,35
0432D8 DD 21 5E 01 4505*  	ld ix,350
       00          
0432DD CD 05 C9 04 4506*  	call vdu_load_img
0432E1 C9          4507*  	ret
0432E2             4508*  
0432E2             4509*  ld_58_007:
0432E2 21 80 4F 04 4510*  	ld hl,F58_007
0432E6 22 8A C7 04 4511*  	ld (cur_filename),hl
0432EA 11 C6 D3 04 4512*  	ld de,filedata
0432EE 01 00 00 01 4513*  	ld bc,65536
0432F2 3E 01       4514*  	ld a,mos_load
0432F4 5B CF       4515*  	RST.LIL 08h
0432F6 21 FF 01 00 4516*  	ld hl,BUF_58_007
0432FA 01 24 00 00 4517*  	ld bc,36
0432FE 11 23 00 00 4518*  	ld de,35
043302 DD 21 EC 04 4519*  	ld ix,1260
       00          
043307 CD 05 C9 04 4520*  	call vdu_load_img
04330B C9          4521*  	ret
04330C             4522*  
04330C             4523*  ld_58_012:
04330C 21 94 4F 04 4524*  	ld hl,F58_012
043310 22 8A C7 04 4525*  	ld (cur_filename),hl
043314 11 C6 D3 04 4526*  	ld de,filedata
043318 01 00 00 01 4527*  	ld bc,65536
04331C 3E 01       4528*  	ld a,mos_load
04331E 5B CF       4529*  	RST.LIL 08h
043320 21 00 02 00 4530*  	ld hl,BUF_58_012
043324 01 23 00 00 4531*  	ld bc,35
043328 11 2D 00 00 4532*  	ld de,45
04332C DD 21 27 06 4533*  	ld ix,1575
       00          
043331 CD 05 C9 04 4534*  	call vdu_load_img
043335 C9          4535*  	ret
043336             4536*  
043336             4537*  ld_58_013:
043336 21 A8 4F 04 4538*  	ld hl,F58_013
04333A 22 8A C7 04 4539*  	ld (cur_filename),hl
04333E 11 C6 D3 04 4540*  	ld de,filedata
043342 01 00 00 01 4541*  	ld bc,65536
043346 3E 01       4542*  	ld a,mos_load
043348 5B CF       4543*  	RST.LIL 08h
04334A 21 01 02 00 4544*  	ld hl,BUF_58_013
04334E 01 1A 00 00 4545*  	ld bc,26
043352 11 2D 00 00 4546*  	ld de,45
043356 DD 21 92 04 4547*  	ld ix,1170
       00          
04335B CD 05 C9 04 4548*  	call vdu_load_img
04335F C9          4549*  	ret
043360             4550*  
043360             4551*  ld_58_014:
043360 21 BC 4F 04 4552*  	ld hl,F58_014
043364 22 8A C7 04 4553*  	ld (cur_filename),hl
043368 11 C6 D3 04 4554*  	ld de,filedata
04336C 01 00 00 01 4555*  	ld bc,65536
043370 3E 01       4556*  	ld a,mos_load
043372 5B CF       4557*  	RST.LIL 08h
043374 21 02 02 00 4558*  	ld hl,BUF_58_014
043378 01 0F 00 00 4559*  	ld bc,15
04337C 11 2D 00 00 4560*  	ld de,45
043380 DD 21 A3 02 4561*  	ld ix,675
       00          
043385 CD 05 C9 04 4562*  	call vdu_load_img
043389 C9          4563*  	ret
04338A             4564*  
04338A             4565*  ld_58_015:
04338A 21 D0 4F 04 4566*  	ld hl,F58_015
04338E 22 8A C7 04 4567*  	ld (cur_filename),hl
043392 11 C6 D3 04 4568*  	ld de,filedata
043396 01 00 00 01 4569*  	ld bc,65536
04339A 3E 01       4570*  	ld a,mos_load
04339C 5B CF       4571*  	RST.LIL 08h
04339E 21 03 02 00 4572*  	ld hl,BUF_58_015
0433A2 01 05 00 00 4573*  	ld bc,5
0433A6 11 2D 00 00 4574*  	ld de,45
0433AA DD 21 E1 00 4575*  	ld ix,225
       00          
0433AF CD 05 C9 04 4576*  	call vdu_load_img
0433B3 C9          4577*  	ret
0433B4             4578*  
0433B4             4579*  ld_58_016:
0433B4 21 E4 4F 04 4580*  	ld hl,F58_016
0433B8 22 8A C7 04 4581*  	ld (cur_filename),hl
0433BC 11 C6 D3 04 4582*  	ld de,filedata
0433C0 01 00 00 01 4583*  	ld bc,65536
0433C4 3E 01       4584*  	ld a,mos_load
0433C6 5B CF       4585*  	RST.LIL 08h
0433C8 21 04 02 00 4586*  	ld hl,BUF_58_016
0433CC 01 05 00 00 4587*  	ld bc,5
0433D0 11 2B 00 00 4588*  	ld de,43
0433D4 DD 21 D7 00 4589*  	ld ix,215
       00          
0433D9 CD 05 C9 04 4590*  	call vdu_load_img
0433DD C9          4591*  	ret
0433DE             4592*  
0433DE             4593*  ld_58_017:
0433DE 21 F8 4F 04 4594*  	ld hl,F58_017
0433E2 22 8A C7 04 4595*  	ld (cur_filename),hl
0433E6 11 C6 D3 04 4596*  	ld de,filedata
0433EA 01 00 00 01 4597*  	ld bc,65536
0433EE 3E 01       4598*  	ld a,mos_load
0433F0 5B CF       4599*  	RST.LIL 08h
0433F2 21 05 02 00 4600*  	ld hl,BUF_58_017
0433F6 01 0F 00 00 4601*  	ld bc,15
0433FA 11 2D 00 00 4602*  	ld de,45
0433FE DD 21 A3 02 4603*  	ld ix,675
       00          
043403 CD 05 C9 04 4604*  	call vdu_load_img
043407 C9          4605*  	ret
043408             4606*  
043408             4607*  ld_58_018:
043408 21 0C 50 04 4608*  	ld hl,F58_018
04340C 22 8A C7 04 4609*  	ld (cur_filename),hl
043410 11 C6 D3 04 4610*  	ld de,filedata
043414 01 00 00 01 4611*  	ld bc,65536
043418 3E 01       4612*  	ld a,mos_load
04341A 5B CF       4613*  	RST.LIL 08h
04341C 21 06 02 00 4614*  	ld hl,BUF_58_018
043420 01 1A 00 00 4615*  	ld bc,26
043424 11 2D 00 00 4616*  	ld de,45
043428 DD 21 92 04 4617*  	ld ix,1170
       00          
04342D CD 05 C9 04 4618*  	call vdu_load_img
043431 C9          4619*  	ret
043432             4620*  
043432             4621*  ld_58_019:
043432 21 20 50 04 4622*  	ld hl,F58_019
043436 22 8A C7 04 4623*  	ld (cur_filename),hl
04343A 11 C6 D3 04 4624*  	ld de,filedata
04343E 01 00 00 01 4625*  	ld bc,65536
043442 3E 01       4626*  	ld a,mos_load
043444 5B CF       4627*  	RST.LIL 08h
043446 21 07 02 00 4628*  	ld hl,BUF_58_019
04344A 01 23 00 00 4629*  	ld bc,35
04344E 11 2D 00 00 4630*  	ld de,45
043452 DD 21 27 06 4631*  	ld ix,1575
       00          
043457 CD 05 C9 04 4632*  	call vdu_load_img
04345B C9          4633*  	ret
04345C             4634*  
04345C             4635*  ld_58_023:
04345C 21 34 50 04 4636*  	ld hl,F58_023
043460 22 8A C7 04 4637*  	ld (cur_filename),hl
043464 11 C6 D3 04 4638*  	ld de,filedata
043468 01 00 00 01 4639*  	ld bc,65536
04346C 3E 01       4640*  	ld a,mos_load
04346E 5B CF       4641*  	RST.LIL 08h
043470 21 08 02 00 4642*  	ld hl,BUF_58_023
043474 01 2E 00 00 4643*  	ld bc,46
043478 11 2D 00 00 4644*  	ld de,45
04347C DD 21 16 08 4645*  	ld ix,2070
       00          
043481 CD 05 C9 04 4646*  	call vdu_load_img
043485 C9          4647*  	ret
043486             4648*  
043486             4649*  ld_58_027:
043486 21 48 50 04 4650*  	ld hl,F58_027
04348A 22 8A C7 04 4651*  	ld (cur_filename),hl
04348E 11 C6 D3 04 4652*  	ld de,filedata
043492 01 00 00 01 4653*  	ld bc,65536
043496 3E 01       4654*  	ld a,mos_load
043498 5B CF       4655*  	RST.LIL 08h
04349A 21 09 02 00 4656*  	ld hl,BUF_58_027
04349E 01 2D 00 00 4657*  	ld bc,45
0434A2 11 3F 00 00 4658*  	ld de,63
0434A6 DD 21 13 0B 4659*  	ld ix,2835
       00          
0434AB CD 05 C9 04 4660*  	call vdu_load_img
0434AF C9          4661*  	ret
0434B0             4662*  
0434B0             4663*  ld_58_028:
0434B0 21 5C 50 04 4664*  	ld hl,F58_028
0434B4 22 8A C7 04 4665*  	ld (cur_filename),hl
0434B8 11 C6 D3 04 4666*  	ld de,filedata
0434BC 01 00 00 01 4667*  	ld bc,65536
0434C0 3E 01       4668*  	ld a,mos_load
0434C2 5B CF       4669*  	RST.LIL 08h
0434C4 21 0A 02 00 4670*  	ld hl,BUF_58_028
0434C8 01 1B 00 00 4671*  	ld bc,27
0434CC 11 3F 00 00 4672*  	ld de,63
0434D0 DD 21 A5 06 4673*  	ld ix,1701
       00          
0434D5 CD 05 C9 04 4674*  	call vdu_load_img
0434D9 C9          4675*  	ret
0434DA             4676*  
0434DA             4677*  ld_58_029:
0434DA 21 70 50 04 4678*  	ld hl,F58_029
0434DE 22 8A C7 04 4679*  	ld (cur_filename),hl
0434E2 11 C6 D3 04 4680*  	ld de,filedata
0434E6 01 00 00 01 4681*  	ld bc,65536
0434EA 3E 01       4682*  	ld a,mos_load
0434EC 5B CF       4683*  	RST.LIL 08h
0434EE 21 0B 02 00 4684*  	ld hl,BUF_58_029
0434F2 01 09 00 00 4685*  	ld bc,9
0434F6 11 3F 00 00 4686*  	ld de,63
0434FA DD 21 37 02 4687*  	ld ix,567
       00          
0434FF CD 05 C9 04 4688*  	call vdu_load_img
043503 C9          4689*  	ret
043504             4690*  
043504             4691*  ld_58_030:
043504 21 84 50 04 4692*  	ld hl,F58_030
043508 22 8A C7 04 4693*  	ld (cur_filename),hl
04350C 11 C6 D3 04 4694*  	ld de,filedata
043510 01 00 00 01 4695*  	ld bc,65536
043514 3E 01       4696*  	ld a,mos_load
043516 5B CF       4697*  	RST.LIL 08h
043518 21 0C 02 00 4698*  	ld hl,BUF_58_030
04351C 01 09 00 00 4699*  	ld bc,9
043520 11 3D 00 00 4700*  	ld de,61
043524 DD 21 25 02 4701*  	ld ix,549
       00          
043529 CD 05 C9 04 4702*  	call vdu_load_img
04352D C9          4703*  	ret
04352E             4704*  
04352E             4705*  ld_58_031:
04352E 21 98 50 04 4706*  	ld hl,F58_031
043532 22 8A C7 04 4707*  	ld (cur_filename),hl
043536 11 C6 D3 04 4708*  	ld de,filedata
04353A 01 00 00 01 4709*  	ld bc,65536
04353E 3E 01       4710*  	ld a,mos_load
043540 5B CF       4711*  	RST.LIL 08h
043542 21 0D 02 00 4712*  	ld hl,BUF_58_031
043546 01 1B 00 00 4713*  	ld bc,27
04354A 11 3F 00 00 4714*  	ld de,63
04354E DD 21 A5 06 4715*  	ld ix,1701
       00          
043553 CD 05 C9 04 4716*  	call vdu_load_img
043557 C9          4717*  	ret
043558             4718*  
043558             4719*  ld_58_032:
043558 21 AC 50 04 4720*  	ld hl,F58_032
04355C 22 8A C7 04 4721*  	ld (cur_filename),hl
043560 11 C6 D3 04 4722*  	ld de,filedata
043564 01 00 00 01 4723*  	ld bc,65536
043568 3E 01       4724*  	ld a,mos_load
04356A 5B CF       4725*  	RST.LIL 08h
04356C 21 0E 02 00 4726*  	ld hl,BUF_58_032
043570 01 2D 00 00 4727*  	ld bc,45
043574 11 3F 00 00 4728*  	ld de,63
043578 DD 21 13 0B 4729*  	ld ix,2835
       00          
04357D CD 05 C9 04 4730*  	call vdu_load_img
043581 C9          4731*  	ret
043582             4732*  
043582             4733*  ld_58_035:
043582 21 C0 50 04 4734*  	ld hl,F58_035
043586 22 8A C7 04 4735*  	ld (cur_filename),hl
04358A 11 C6 D3 04 4736*  	ld de,filedata
04358E 01 00 00 01 4737*  	ld bc,65536
043592 3E 01       4738*  	ld a,mos_load
043594 5B CF       4739*  	RST.LIL 08h
043596 21 0F 02 00 4740*  	ld hl,BUF_58_035
04359A 01 40 00 00 4741*  	ld bc,64
04359E 11 3F 00 00 4742*  	ld de,63
0435A2 DD 21 C0 0F 4743*  	ld ix,4032
       00          
0435A7 CD 05 C9 04 4744*  	call vdu_load_img
0435AB C9          4745*  	ret
0435AC             4746*  
0435AC             4747*  ld_58_038:
0435AC 21 D4 50 04 4748*  	ld hl,F58_038
0435B0 22 8A C7 04 4749*  	ld (cur_filename),hl
0435B4 11 C6 D3 04 4750*  	ld de,filedata
0435B8 01 00 00 01 4751*  	ld bc,65536
0435BC 3E 01       4752*  	ld a,mos_load
0435BE 5B CF       4753*  	RST.LIL 08h
0435C0 21 10 02 00 4754*  	ld hl,BUF_58_038
0435C4 01 40 00 00 4755*  	ld bc,64
0435C8 11 6B 00 00 4756*  	ld de,107
0435CC DD 21 C0 1A 4757*  	ld ix,6848
       00          
0435D1 CD 05 C9 04 4758*  	call vdu_load_img
0435D5 C9          4759*  	ret
0435D6             4760*  
0435D6             4761*  ld_58_039:
0435D6 21 E8 50 04 4762*  	ld hl,F58_039
0435DA 22 8A C7 04 4763*  	ld (cur_filename),hl
0435DE 11 C6 D3 04 4764*  	ld de,filedata
0435E2 01 00 00 01 4765*  	ld bc,65536
0435E6 3E 01       4766*  	ld a,mos_load
0435E8 5B CF       4767*  	RST.LIL 08h
0435EA 21 11 02 00 4768*  	ld hl,BUF_58_039
0435EE 01 16 00 00 4769*  	ld bc,22
0435F2 11 6B 00 00 4770*  	ld de,107
0435F6 DD 21 32 09 4771*  	ld ix,2354
       00          
0435FB CD 05 C9 04 4772*  	call vdu_load_img
0435FF C9          4773*  	ret
043600             4774*  
043600             4775*  ld_58_040:
043600 21 FC 50 04 4776*  	ld hl,F58_040
043604 22 8A C7 04 4777*  	ld (cur_filename),hl
043608 11 C6 D3 04 4778*  	ld de,filedata
04360C 01 00 00 01 4779*  	ld bc,65536
043610 3E 01       4780*  	ld a,mos_load
043612 5B CF       4781*  	RST.LIL 08h
043614 21 12 02 00 4782*  	ld hl,BUF_58_040
043618 01 16 00 00 4783*  	ld bc,22
04361C 11 69 00 00 4784*  	ld de,105
043620 DD 21 06 09 4785*  	ld ix,2310
       00          
043625 CD 05 C9 04 4786*  	call vdu_load_img
043629 C9          4787*  	ret
04362A             4788*  
04362A             4789*  ld_58_041:
04362A 21 10 51 04 4790*  	ld hl,F58_041
04362E 22 8A C7 04 4791*  	ld (cur_filename),hl
043632 11 C6 D3 04 4792*  	ld de,filedata
043636 01 00 00 01 4793*  	ld bc,65536
04363A 3E 01       4794*  	ld a,mos_load
04363C 5B CF       4795*  	RST.LIL 08h
04363E 21 13 02 00 4796*  	ld hl,BUF_58_041
043642 01 40 00 00 4797*  	ld bc,64
043646 11 6B 00 00 4798*  	ld de,107
04364A DD 21 C0 1A 4799*  	ld ix,6848
       00          
04364F CD 05 C9 04 4800*  	call vdu_load_img
043653 C9          4801*  	ret
043654             4802*  
043654             4803*  ld_58_043:
043654 21 24 51 04 4804*  	ld hl,F58_043
043658 22 8A C7 04 4805*  	ld (cur_filename),hl
04365C 11 C6 D3 04 4806*  	ld de,filedata
043660 01 00 00 01 4807*  	ld bc,65536
043664 3E 01       4808*  	ld a,mos_load
043666 5B CF       4809*  	RST.LIL 08h
043668 21 14 02 00 4810*  	ld hl,BUF_58_043
04366C 01 6C 00 00 4811*  	ld bc,108
043670 11 6B 00 00 4812*  	ld de,107
043674 DD 21 24 2D 4813*  	ld ix,11556
       00          
043679 CD 05 C9 04 4814*  	call vdu_load_img
04367D C9          4815*  	ret
04367E             4816*  
04367E             4817*  ld_58_045:
04367E 21 38 51 04 4818*  	ld hl,F58_045
043682 22 8A C7 04 4819*  	ld (cur_filename),hl
043686 11 C6 D3 04 4820*  	ld de,filedata
04368A 01 00 00 01 4821*  	ld bc,65536
04368E 3E 01       4822*  	ld a,mos_load
043690 5B CF       4823*  	RST.LIL 08h
043692 21 15 02 00 4824*  	ld hl,BUF_58_045
043696 01 6A 00 00 4825*  	ld bc,106
04369A 11 A0 00 00 4826*  	ld de,160
04369E DD 21 40 42 4827*  	ld ix,16960
       00          
0436A3 CD 05 C9 04 4828*  	call vdu_load_img
0436A7 C9          4829*  	ret
0436A8             4830*  
0436A8             4831*  ld_58_046:
0436A8 21 4C 51 04 4832*  	ld hl,F58_046
0436AC 22 8A C7 04 4833*  	ld (cur_filename),hl
0436B0 11 C6 D3 04 4834*  	ld de,filedata
0436B4 01 00 00 01 4835*  	ld bc,65536
0436B8 3E 01       4836*  	ld a,mos_load
0436BA 5B CF       4837*  	RST.LIL 08h
0436BC 21 16 02 00 4838*  	ld hl,BUF_58_046
0436C0 01 6A 00 00 4839*  	ld bc,106
0436C4 11 A0 00 00 4840*  	ld de,160
0436C8 DD 21 40 42 4841*  	ld ix,16960
       00          
0436CD CD 05 C9 04 4842*  	call vdu_load_img
0436D1 C9          4843*  	ret
0436D2             4844*  
0436D2             4845*  ld_58_047:
0436D2 21 60 51 04 4846*  	ld hl,F58_047
0436D6 22 8A C7 04 4847*  	ld (cur_filename),hl
0436DA 11 C6 D3 04 4848*  	ld de,filedata
0436DE 01 00 00 01 4849*  	ld bc,65536
0436E2 3E 01       4850*  	ld a,mos_load
0436E4 5B CF       4851*  	RST.LIL 08h
0436E6 21 17 02 00 4852*  	ld hl,BUF_58_047
0436EA 01 40 01 00 4853*  	ld bc,320
0436EE 11 A0 00 00 4854*  	ld de,160
0436F2 DD 21 00 C8 4855*  	ld ix,51200
       00          
0436F7 CD 05 C9 04 4856*  	call vdu_load_img
0436FB C9          4857*  	ret
0436FC             4858*  
0436FC             4859*  ld_59_000:
0436FC 21 74 51 04 4860*  	ld hl,F59_000
043700 22 8A C7 04 4861*  	ld (cur_filename),hl
043704 11 C6 D3 04 4862*  	ld de,filedata
043708 01 00 00 01 4863*  	ld bc,65536
04370C 3E 01       4864*  	ld a,mos_load
04370E 5B CF       4865*  	RST.LIL 08h
043710 21 18 02 00 4866*  	ld hl,BUF_59_000
043714 01 10 00 00 4867*  	ld bc,16
043718 11 23 00 00 4868*  	ld de,35
04371C DD 21 30 02 4869*  	ld ix,560
       00          
043721 CD 05 C9 04 4870*  	call vdu_load_img
043725 C9          4871*  	ret
043726             4872*  
043726             4873*  ld_59_001:
043726 21 88 51 04 4874*  	ld hl,F59_001
04372A 22 8A C7 04 4875*  	ld (cur_filename),hl
04372E 11 C6 D3 04 4876*  	ld de,filedata
043732 01 00 00 01 4877*  	ld bc,65536
043736 3E 01       4878*  	ld a,mos_load
043738 5B CF       4879*  	RST.LIL 08h
04373A 21 19 02 00 4880*  	ld hl,BUF_59_001
04373E 01 0A 00 00 4881*  	ld bc,10
043742 11 23 00 00 4882*  	ld de,35
043746 DD 21 5E 01 4883*  	ld ix,350
       00          
04374B CD 05 C9 04 4884*  	call vdu_load_img
04374F C9          4885*  	ret
043750             4886*  
043750             4887*  ld_59_002:
043750 21 9C 51 04 4888*  	ld hl,F59_002
043754 22 8A C7 04 4889*  	ld (cur_filename),hl
043758 11 C6 D3 04 4890*  	ld de,filedata
04375C 01 00 00 01 4891*  	ld bc,65536
043760 3E 01       4892*  	ld a,mos_load
043762 5B CF       4893*  	RST.LIL 08h
043764 21 1A 02 00 4894*  	ld hl,BUF_59_002
043768 01 0A 00 00 4895*  	ld bc,10
04376C 11 23 00 00 4896*  	ld de,35
043770 DD 21 5E 01 4897*  	ld ix,350
       00          
043775 CD 05 C9 04 4898*  	call vdu_load_img
043779 C9          4899*  	ret
04377A             4900*  
04377A             4901*  ld_59_007:
04377A 21 B0 51 04 4902*  	ld hl,F59_007
04377E 22 8A C7 04 4903*  	ld (cur_filename),hl
043782 11 C6 D3 04 4904*  	ld de,filedata
043786 01 00 00 01 4905*  	ld bc,65536
04378A 3E 01       4906*  	ld a,mos_load
04378C 5B CF       4907*  	RST.LIL 08h
04378E 21 1B 02 00 4908*  	ld hl,BUF_59_007
043792 01 24 00 00 4909*  	ld bc,36
043796 11 23 00 00 4910*  	ld de,35
04379A DD 21 EC 04 4911*  	ld ix,1260
       00          
04379F CD 05 C9 04 4912*  	call vdu_load_img
0437A3 C9          4913*  	ret
0437A4             4914*  
0437A4             4915*  ld_59_012:
0437A4 21 C4 51 04 4916*  	ld hl,F59_012
0437A8 22 8A C7 04 4917*  	ld (cur_filename),hl
0437AC 11 C6 D3 04 4918*  	ld de,filedata
0437B0 01 00 00 01 4919*  	ld bc,65536
0437B4 3E 01       4920*  	ld a,mos_load
0437B6 5B CF       4921*  	RST.LIL 08h
0437B8 21 1C 02 00 4922*  	ld hl,BUF_59_012
0437BC 01 23 00 00 4923*  	ld bc,35
0437C0 11 2D 00 00 4924*  	ld de,45
0437C4 DD 21 27 06 4925*  	ld ix,1575
       00          
0437C9 CD 05 C9 04 4926*  	call vdu_load_img
0437CD C9          4927*  	ret
0437CE             4928*  
0437CE             4929*  ld_59_013:
0437CE 21 D8 51 04 4930*  	ld hl,F59_013
0437D2 22 8A C7 04 4931*  	ld (cur_filename),hl
0437D6 11 C6 D3 04 4932*  	ld de,filedata
0437DA 01 00 00 01 4933*  	ld bc,65536
0437DE 3E 01       4934*  	ld a,mos_load
0437E0 5B CF       4935*  	RST.LIL 08h
0437E2 21 1D 02 00 4936*  	ld hl,BUF_59_013
0437E6 01 1A 00 00 4937*  	ld bc,26
0437EA 11 2D 00 00 4938*  	ld de,45
0437EE DD 21 92 04 4939*  	ld ix,1170
       00          
0437F3 CD 05 C9 04 4940*  	call vdu_load_img
0437F7 C9          4941*  	ret
0437F8             4942*  
0437F8             4943*  ld_59_014:
0437F8 21 EC 51 04 4944*  	ld hl,F59_014
0437FC 22 8A C7 04 4945*  	ld (cur_filename),hl
043800 11 C6 D3 04 4946*  	ld de,filedata
043804 01 00 00 01 4947*  	ld bc,65536
043808 3E 01       4948*  	ld a,mos_load
04380A 5B CF       4949*  	RST.LIL 08h
04380C 21 1E 02 00 4950*  	ld hl,BUF_59_014
043810 01 0F 00 00 4951*  	ld bc,15
043814 11 2D 00 00 4952*  	ld de,45
043818 DD 21 A3 02 4953*  	ld ix,675
       00          
04381D CD 05 C9 04 4954*  	call vdu_load_img
043821 C9          4955*  	ret
043822             4956*  
043822             4957*  ld_59_015:
043822 21 00 52 04 4958*  	ld hl,F59_015
043826 22 8A C7 04 4959*  	ld (cur_filename),hl
04382A 11 C6 D3 04 4960*  	ld de,filedata
04382E 01 00 00 01 4961*  	ld bc,65536
043832 3E 01       4962*  	ld a,mos_load
043834 5B CF       4963*  	RST.LIL 08h
043836 21 1F 02 00 4964*  	ld hl,BUF_59_015
04383A 01 05 00 00 4965*  	ld bc,5
04383E 11 2D 00 00 4966*  	ld de,45
043842 DD 21 E1 00 4967*  	ld ix,225
       00          
043847 CD 05 C9 04 4968*  	call vdu_load_img
04384B C9          4969*  	ret
04384C             4970*  
04384C             4971*  ld_59_016:
04384C 21 14 52 04 4972*  	ld hl,F59_016
043850 22 8A C7 04 4973*  	ld (cur_filename),hl
043854 11 C6 D3 04 4974*  	ld de,filedata
043858 01 00 00 01 4975*  	ld bc,65536
04385C 3E 01       4976*  	ld a,mos_load
04385E 5B CF       4977*  	RST.LIL 08h
043860 21 20 02 00 4978*  	ld hl,BUF_59_016
043864 01 05 00 00 4979*  	ld bc,5
043868 11 2B 00 00 4980*  	ld de,43
04386C DD 21 D7 00 4981*  	ld ix,215
       00          
043871 CD 05 C9 04 4982*  	call vdu_load_img
043875 C9          4983*  	ret
043876             4984*  
043876             4985*  ld_59_017:
043876 21 28 52 04 4986*  	ld hl,F59_017
04387A 22 8A C7 04 4987*  	ld (cur_filename),hl
04387E 11 C6 D3 04 4988*  	ld de,filedata
043882 01 00 00 01 4989*  	ld bc,65536
043886 3E 01       4990*  	ld a,mos_load
043888 5B CF       4991*  	RST.LIL 08h
04388A 21 21 02 00 4992*  	ld hl,BUF_59_017
04388E 01 0F 00 00 4993*  	ld bc,15
043892 11 2D 00 00 4994*  	ld de,45
043896 DD 21 A3 02 4995*  	ld ix,675
       00          
04389B CD 05 C9 04 4996*  	call vdu_load_img
04389F C9          4997*  	ret
0438A0             4998*  
0438A0             4999*  ld_59_018:
0438A0 21 3C 52 04 5000*  	ld hl,F59_018
0438A4 22 8A C7 04 5001*  	ld (cur_filename),hl
0438A8 11 C6 D3 04 5002*  	ld de,filedata
0438AC 01 00 00 01 5003*  	ld bc,65536
0438B0 3E 01       5004*  	ld a,mos_load
0438B2 5B CF       5005*  	RST.LIL 08h
0438B4 21 22 02 00 5006*  	ld hl,BUF_59_018
0438B8 01 1A 00 00 5007*  	ld bc,26
0438BC 11 2D 00 00 5008*  	ld de,45
0438C0 DD 21 92 04 5009*  	ld ix,1170
       00          
0438C5 CD 05 C9 04 5010*  	call vdu_load_img
0438C9 C9          5011*  	ret
0438CA             5012*  
0438CA             5013*  ld_59_019:
0438CA 21 50 52 04 5014*  	ld hl,F59_019
0438CE 22 8A C7 04 5015*  	ld (cur_filename),hl
0438D2 11 C6 D3 04 5016*  	ld de,filedata
0438D6 01 00 00 01 5017*  	ld bc,65536
0438DA 3E 01       5018*  	ld a,mos_load
0438DC 5B CF       5019*  	RST.LIL 08h
0438DE 21 23 02 00 5020*  	ld hl,BUF_59_019
0438E2 01 23 00 00 5021*  	ld bc,35
0438E6 11 2D 00 00 5022*  	ld de,45
0438EA DD 21 27 06 5023*  	ld ix,1575
       00          
0438EF CD 05 C9 04 5024*  	call vdu_load_img
0438F3 C9          5025*  	ret
0438F4             5026*  
0438F4             5027*  ld_59_023:
0438F4 21 64 52 04 5028*  	ld hl,F59_023
0438F8 22 8A C7 04 5029*  	ld (cur_filename),hl
0438FC 11 C6 D3 04 5030*  	ld de,filedata
043900 01 00 00 01 5031*  	ld bc,65536
043904 3E 01       5032*  	ld a,mos_load
043906 5B CF       5033*  	RST.LIL 08h
043908 21 24 02 00 5034*  	ld hl,BUF_59_023
04390C 01 2E 00 00 5035*  	ld bc,46
043910 11 2D 00 00 5036*  	ld de,45
043914 DD 21 16 08 5037*  	ld ix,2070
       00          
043919 CD 05 C9 04 5038*  	call vdu_load_img
04391D C9          5039*  	ret
04391E             5040*  
04391E             5041*  ld_59_027:
04391E 21 78 52 04 5042*  	ld hl,F59_027
043922 22 8A C7 04 5043*  	ld (cur_filename),hl
043926 11 C6 D3 04 5044*  	ld de,filedata
04392A 01 00 00 01 5045*  	ld bc,65536
04392E 3E 01       5046*  	ld a,mos_load
043930 5B CF       5047*  	RST.LIL 08h
043932 21 25 02 00 5048*  	ld hl,BUF_59_027
043936 01 2D 00 00 5049*  	ld bc,45
04393A 11 3F 00 00 5050*  	ld de,63
04393E DD 21 13 0B 5051*  	ld ix,2835
       00          
043943 CD 05 C9 04 5052*  	call vdu_load_img
043947 C9          5053*  	ret
043948             5054*  
043948             5055*  ld_59_028:
043948 21 8C 52 04 5056*  	ld hl,F59_028
04394C 22 8A C7 04 5057*  	ld (cur_filename),hl
043950 11 C6 D3 04 5058*  	ld de,filedata
043954 01 00 00 01 5059*  	ld bc,65536
043958 3E 01       5060*  	ld a,mos_load
04395A 5B CF       5061*  	RST.LIL 08h
04395C 21 26 02 00 5062*  	ld hl,BUF_59_028
043960 01 1B 00 00 5063*  	ld bc,27
043964 11 3F 00 00 5064*  	ld de,63
043968 DD 21 A5 06 5065*  	ld ix,1701
       00          
04396D CD 05 C9 04 5066*  	call vdu_load_img
043971 C9          5067*  	ret
043972             5068*  
043972             5069*  ld_59_029:
043972 21 A0 52 04 5070*  	ld hl,F59_029
043976 22 8A C7 04 5071*  	ld (cur_filename),hl
04397A 11 C6 D3 04 5072*  	ld de,filedata
04397E 01 00 00 01 5073*  	ld bc,65536
043982 3E 01       5074*  	ld a,mos_load
043984 5B CF       5075*  	RST.LIL 08h
043986 21 27 02 00 5076*  	ld hl,BUF_59_029
04398A 01 09 00 00 5077*  	ld bc,9
04398E 11 3F 00 00 5078*  	ld de,63
043992 DD 21 37 02 5079*  	ld ix,567
       00          
043997 CD 05 C9 04 5080*  	call vdu_load_img
04399B C9          5081*  	ret
04399C             5082*  
04399C             5083*  ld_59_030:
04399C 21 B4 52 04 5084*  	ld hl,F59_030
0439A0 22 8A C7 04 5085*  	ld (cur_filename),hl
0439A4 11 C6 D3 04 5086*  	ld de,filedata
0439A8 01 00 00 01 5087*  	ld bc,65536
0439AC 3E 01       5088*  	ld a,mos_load
0439AE 5B CF       5089*  	RST.LIL 08h
0439B0 21 28 02 00 5090*  	ld hl,BUF_59_030
0439B4 01 09 00 00 5091*  	ld bc,9
0439B8 11 3D 00 00 5092*  	ld de,61
0439BC DD 21 25 02 5093*  	ld ix,549
       00          
0439C1 CD 05 C9 04 5094*  	call vdu_load_img
0439C5 C9          5095*  	ret
0439C6             5096*  
0439C6             5097*  ld_59_031:
0439C6 21 C8 52 04 5098*  	ld hl,F59_031
0439CA 22 8A C7 04 5099*  	ld (cur_filename),hl
0439CE 11 C6 D3 04 5100*  	ld de,filedata
0439D2 01 00 00 01 5101*  	ld bc,65536
0439D6 3E 01       5102*  	ld a,mos_load
0439D8 5B CF       5103*  	RST.LIL 08h
0439DA 21 29 02 00 5104*  	ld hl,BUF_59_031
0439DE 01 1B 00 00 5105*  	ld bc,27
0439E2 11 3F 00 00 5106*  	ld de,63
0439E6 DD 21 A5 06 5107*  	ld ix,1701
       00          
0439EB CD 05 C9 04 5108*  	call vdu_load_img
0439EF C9          5109*  	ret
0439F0             5110*  
0439F0             5111*  ld_59_032:
0439F0 21 DC 52 04 5112*  	ld hl,F59_032
0439F4 22 8A C7 04 5113*  	ld (cur_filename),hl
0439F8 11 C6 D3 04 5114*  	ld de,filedata
0439FC 01 00 00 01 5115*  	ld bc,65536
043A00 3E 01       5116*  	ld a,mos_load
043A02 5B CF       5117*  	RST.LIL 08h
043A04 21 2A 02 00 5118*  	ld hl,BUF_59_032
043A08 01 2D 00 00 5119*  	ld bc,45
043A0C 11 3F 00 00 5120*  	ld de,63
043A10 DD 21 13 0B 5121*  	ld ix,2835
       00          
043A15 CD 05 C9 04 5122*  	call vdu_load_img
043A19 C9          5123*  	ret
043A1A             5124*  
043A1A             5125*  ld_59_035:
043A1A 21 F0 52 04 5126*  	ld hl,F59_035
043A1E 22 8A C7 04 5127*  	ld (cur_filename),hl
043A22 11 C6 D3 04 5128*  	ld de,filedata
043A26 01 00 00 01 5129*  	ld bc,65536
043A2A 3E 01       5130*  	ld a,mos_load
043A2C 5B CF       5131*  	RST.LIL 08h
043A2E 21 2B 02 00 5132*  	ld hl,BUF_59_035
043A32 01 40 00 00 5133*  	ld bc,64
043A36 11 3F 00 00 5134*  	ld de,63
043A3A DD 21 C0 0F 5135*  	ld ix,4032
       00          
043A3F CD 05 C9 04 5136*  	call vdu_load_img
043A43 C9          5137*  	ret
043A44             5138*  
043A44             5139*  ld_59_038:
043A44 21 04 53 04 5140*  	ld hl,F59_038
043A48 22 8A C7 04 5141*  	ld (cur_filename),hl
043A4C 11 C6 D3 04 5142*  	ld de,filedata
043A50 01 00 00 01 5143*  	ld bc,65536
043A54 3E 01       5144*  	ld a,mos_load
043A56 5B CF       5145*  	RST.LIL 08h
043A58 21 2C 02 00 5146*  	ld hl,BUF_59_038
043A5C 01 40 00 00 5147*  	ld bc,64
043A60 11 6B 00 00 5148*  	ld de,107
043A64 DD 21 C0 1A 5149*  	ld ix,6848
       00          
043A69 CD 05 C9 04 5150*  	call vdu_load_img
043A6D C9          5151*  	ret
043A6E             5152*  
043A6E             5153*  ld_59_039:
043A6E 21 18 53 04 5154*  	ld hl,F59_039
043A72 22 8A C7 04 5155*  	ld (cur_filename),hl
043A76 11 C6 D3 04 5156*  	ld de,filedata
043A7A 01 00 00 01 5157*  	ld bc,65536
043A7E 3E 01       5158*  	ld a,mos_load
043A80 5B CF       5159*  	RST.LIL 08h
043A82 21 2D 02 00 5160*  	ld hl,BUF_59_039
043A86 01 16 00 00 5161*  	ld bc,22
043A8A 11 6B 00 00 5162*  	ld de,107
043A8E DD 21 32 09 5163*  	ld ix,2354
       00          
043A93 CD 05 C9 04 5164*  	call vdu_load_img
043A97 C9          5165*  	ret
043A98             5166*  
043A98             5167*  ld_59_040:
043A98 21 2C 53 04 5168*  	ld hl,F59_040
043A9C 22 8A C7 04 5169*  	ld (cur_filename),hl
043AA0 11 C6 D3 04 5170*  	ld de,filedata
043AA4 01 00 00 01 5171*  	ld bc,65536
043AA8 3E 01       5172*  	ld a,mos_load
043AAA 5B CF       5173*  	RST.LIL 08h
043AAC 21 2E 02 00 5174*  	ld hl,BUF_59_040
043AB0 01 16 00 00 5175*  	ld bc,22
043AB4 11 69 00 00 5176*  	ld de,105
043AB8 DD 21 06 09 5177*  	ld ix,2310
       00          
043ABD CD 05 C9 04 5178*  	call vdu_load_img
043AC1 C9          5179*  	ret
043AC2             5180*  
043AC2             5181*  ld_59_041:
043AC2 21 40 53 04 5182*  	ld hl,F59_041
043AC6 22 8A C7 04 5183*  	ld (cur_filename),hl
043ACA 11 C6 D3 04 5184*  	ld de,filedata
043ACE 01 00 00 01 5185*  	ld bc,65536
043AD2 3E 01       5186*  	ld a,mos_load
043AD4 5B CF       5187*  	RST.LIL 08h
043AD6 21 2F 02 00 5188*  	ld hl,BUF_59_041
043ADA 01 40 00 00 5189*  	ld bc,64
043ADE 11 6B 00 00 5190*  	ld de,107
043AE2 DD 21 C0 1A 5191*  	ld ix,6848
       00          
043AE7 CD 05 C9 04 5192*  	call vdu_load_img
043AEB C9          5193*  	ret
043AEC             5194*  
043AEC             5195*  ld_59_043:
043AEC 21 54 53 04 5196*  	ld hl,F59_043
043AF0 22 8A C7 04 5197*  	ld (cur_filename),hl
043AF4 11 C6 D3 04 5198*  	ld de,filedata
043AF8 01 00 00 01 5199*  	ld bc,65536
043AFC 3E 01       5200*  	ld a,mos_load
043AFE 5B CF       5201*  	RST.LIL 08h
043B00 21 30 02 00 5202*  	ld hl,BUF_59_043
043B04 01 6C 00 00 5203*  	ld bc,108
043B08 11 6B 00 00 5204*  	ld de,107
043B0C DD 21 24 2D 5205*  	ld ix,11556
       00          
043B11 CD 05 C9 04 5206*  	call vdu_load_img
043B15 C9          5207*  	ret
043B16             5208*  
043B16             5209*  ld_59_045:
043B16 21 68 53 04 5210*  	ld hl,F59_045
043B1A 22 8A C7 04 5211*  	ld (cur_filename),hl
043B1E 11 C6 D3 04 5212*  	ld de,filedata
043B22 01 00 00 01 5213*  	ld bc,65536
043B26 3E 01       5214*  	ld a,mos_load
043B28 5B CF       5215*  	RST.LIL 08h
043B2A 21 31 02 00 5216*  	ld hl,BUF_59_045
043B2E 01 6A 00 00 5217*  	ld bc,106
043B32 11 A0 00 00 5218*  	ld de,160
043B36 DD 21 40 42 5219*  	ld ix,16960
       00          
043B3B CD 05 C9 04 5220*  	call vdu_load_img
043B3F C9          5221*  	ret
043B40             5222*  
043B40             5223*  ld_59_046:
043B40 21 7C 53 04 5224*  	ld hl,F59_046
043B44 22 8A C7 04 5225*  	ld (cur_filename),hl
043B48 11 C6 D3 04 5226*  	ld de,filedata
043B4C 01 00 00 01 5227*  	ld bc,65536
043B50 3E 01       5228*  	ld a,mos_load
043B52 5B CF       5229*  	RST.LIL 08h
043B54 21 32 02 00 5230*  	ld hl,BUF_59_046
043B58 01 6A 00 00 5231*  	ld bc,106
043B5C 11 A0 00 00 5232*  	ld de,160
043B60 DD 21 40 42 5233*  	ld ix,16960
       00          
043B65 CD 05 C9 04 5234*  	call vdu_load_img
043B69 C9          5235*  	ret
043B6A             5236*  
043B6A             5237*  ld_59_047:
043B6A 21 90 53 04 5238*  	ld hl,F59_047
043B6E 22 8A C7 04 5239*  	ld (cur_filename),hl
043B72 11 C6 D3 04 5240*  	ld de,filedata
043B76 01 00 00 01 5241*  	ld bc,65536
043B7A 3E 01       5242*  	ld a,mos_load
043B7C 5B CF       5243*  	RST.LIL 08h
043B7E 21 33 02 00 5244*  	ld hl,BUF_59_047
043B82 01 40 01 00 5245*  	ld bc,320
043B86 11 A0 00 00 5246*  	ld de,160
043B8A DD 21 00 C8 5247*  	ld ix,51200
       00          
043B8F CD 05 C9 04 5248*  	call vdu_load_img
043B93 C9          5249*  	ret
043B94             5250*  
043B94             5251*  ; File name lookups:
043B94 70 61 6E 65 5252*  F10_000: db "panels/10_000.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
043BA8 70 61 6E 65 5253*  F10_001: db "panels/10_001.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
043BBC 70 61 6E 65 5254*  F10_002: db "panels/10_002.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
043BD0 70 61 6E 65 5255*  F10_007: db "panels/10_007.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
043BE4 70 61 6E 65 5256*  F10_012: db "panels/10_012.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043BF8 70 61 6E 65 5257*  F10_013: db "panels/10_013.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043C0C 70 61 6E 65 5258*  F10_014: db "panels/10_014.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043C20 70 61 6E 65 5259*  F10_015: db "panels/10_015.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043C34 70 61 6E 65 5260*  F10_016: db "panels/10_016.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043C48 70 61 6E 65 5261*  F10_017: db "panels/10_017.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
043C5C 70 61 6E 65 5262*  F10_018: db "panels/10_018.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
043C70 70 61 6E 65 5263*  F10_019: db "panels/10_019.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
043C84 70 61 6E 65 5264*  F10_023: db "panels/10_023.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
043C98 70 61 6E 65 5265*  F10_027: db "panels/10_027.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
043CAC 70 61 6E 65 5266*  F10_028: db "panels/10_028.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043CC0 70 61 6E 65 5267*  F10_029: db "panels/10_029.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043CD4 70 61 6E 65 5268*  F10_030: db "panels/10_030.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
043CE8 70 61 6E 65 5269*  F10_031: db "panels/10_031.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
043CFC 70 61 6E 65 5270*  F10_032: db "panels/10_032.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043D10 70 61 6E 65 5271*  F10_035: db "panels/10_035.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043D24 70 61 6E 65 5272*  F10_038: db "panels/10_038.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043D38 70 61 6E 65 5273*  F10_039: db "panels/10_039.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
043D4C 70 61 6E 65 5274*  F10_040: db "panels/10_040.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043D60 70 61 6E 65 5275*  F10_041: db "panels/10_041.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
043D74 70 61 6E 65 5276*  F10_043: db "panels/10_043.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
043D88 70 61 6E 65 5277*  F10_045: db "panels/10_045.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
043D9C 70 61 6E 65 5278*  F10_046: db "panels/10_046.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
043DB0 70 61 6E 65 5279*  F10_047: db "panels/10_047.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
043DC4 70 61 6E 65 5280*  F11_000: db "panels/11_000.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
043DD8 70 61 6E 65 5281*  F11_001: db "panels/11_001.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
043DEC 70 61 6E 65 5282*  F11_002: db "panels/11_002.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
043E00 70 61 6E 65 5283*  F11_007: db "panels/11_007.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
043E14 70 61 6E 65 5284*  F11_012: db "panels/11_012.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043E28 70 61 6E 65 5285*  F11_013: db "panels/11_013.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043E3C 70 61 6E 65 5286*  F11_014: db "panels/11_014.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043E50 70 61 6E 65 5287*  F11_015: db "panels/11_015.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043E64 70 61 6E 65 5288*  F11_016: db "panels/11_016.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043E78 70 61 6E 65 5289*  F11_017: db "panels/11_017.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
043E8C 70 61 6E 65 5290*  F11_018: db "panels/11_018.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
043EA0 70 61 6E 65 5291*  F11_019: db "panels/11_019.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
043EB4 70 61 6E 65 5292*  F11_023: db "panels/11_023.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
043EC8 70 61 6E 65 5293*  F11_027: db "panels/11_027.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
043EDC 70 61 6E 65 5294*  F11_028: db "panels/11_028.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043EF0 70 61 6E 65 5295*  F11_029: db "panels/11_029.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043F04 70 61 6E 65 5296*  F11_030: db "panels/11_030.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
043F18 70 61 6E 65 5297*  F11_031: db "panels/11_031.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
043F2C 70 61 6E 65 5298*  F11_032: db "panels/11_032.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043F40 70 61 6E 65 5299*  F11_035: db "panels/11_035.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043F54 70 61 6E 65 5300*  F11_038: db "panels/11_038.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043F68 70 61 6E 65 5301*  F11_039: db "panels/11_039.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
043F7C 70 61 6E 65 5302*  F11_040: db "panels/11_040.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043F90 70 61 6E 65 5303*  F11_041: db "panels/11_041.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
043FA4 70 61 6E 65 5304*  F11_043: db "panels/11_043.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
043FB8 70 61 6E 65 5305*  F11_045: db "panels/11_045.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
043FCC 70 61 6E 65 5306*  F11_046: db "panels/11_046.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
043FE0 70 61 6E 65 5307*  F11_047: db "panels/11_047.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
043FF4 70 61 6E 65 5308*  F12_000: db "panels/12_000.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044008 70 61 6E 65 5309*  F12_001: db "panels/12_001.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
04401C 70 61 6E 65 5310*  F12_002: db "panels/12_002.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044030 70 61 6E 65 5311*  F12_007: db "panels/12_007.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044044 70 61 6E 65 5312*  F12_012: db "panels/12_012.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044058 70 61 6E 65 5313*  F12_013: db "panels/12_013.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
04406C 70 61 6E 65 5314*  F12_014: db "panels/12_014.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044080 70 61 6E 65 5315*  F12_015: db "panels/12_015.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044094 70 61 6E 65 5316*  F12_016: db "panels/12_016.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
0440A8 70 61 6E 65 5317*  F12_017: db "panels/12_017.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
0440BC 70 61 6E 65 5318*  F12_018: db "panels/12_018.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
0440D0 70 61 6E 65 5319*  F12_019: db "panels/12_019.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
0440E4 70 61 6E 65 5320*  F12_023: db "panels/12_023.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0440F8 70 61 6E 65 5321*  F12_027: db "panels/12_027.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04410C 70 61 6E 65 5322*  F12_028: db "panels/12_028.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044120 70 61 6E 65 5323*  F12_029: db "panels/12_029.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
044134 70 61 6E 65 5324*  F12_030: db "panels/12_030.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
044148 70 61 6E 65 5325*  F12_031: db "panels/12_031.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
04415C 70 61 6E 65 5326*  F12_032: db "panels/12_032.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
044170 70 61 6E 65 5327*  F12_035: db "panels/12_035.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
044184 70 61 6E 65 5328*  F12_038: db "panels/12_038.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044198 70 61 6E 65 5329*  F12_039: db "panels/12_039.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
0441AC 70 61 6E 65 5330*  F12_040: db "panels/12_040.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
0441C0 70 61 6E 65 5331*  F12_041: db "panels/12_041.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
0441D4 70 61 6E 65 5332*  F12_043: db "panels/12_043.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0441E8 70 61 6E 65 5333*  F12_045: db "panels/12_045.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
0441FC 70 61 6E 65 5334*  F12_046: db "panels/12_046.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044210 70 61 6E 65 5335*  F12_047: db "panels/12_047.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044224 70 61 6E 65 5336*  F13_000: db "panels/13_000.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044238 70 61 6E 65 5337*  F13_001: db "panels/13_001.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
04424C 70 61 6E 65 5338*  F13_002: db "panels/13_002.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044260 70 61 6E 65 5339*  F13_007: db "panels/13_007.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044274 70 61 6E 65 5340*  F13_012: db "panels/13_012.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044288 70 61 6E 65 5341*  F13_013: db "panels/13_013.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
04429C 70 61 6E 65 5342*  F13_014: db "panels/13_014.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
0442B0 70 61 6E 65 5343*  F13_015: db "panels/13_015.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
0442C4 70 61 6E 65 5344*  F13_016: db "panels/13_016.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
0442D8 70 61 6E 65 5345*  F13_017: db "panels/13_017.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
0442EC 70 61 6E 65 5346*  F13_018: db "panels/13_018.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044300 70 61 6E 65 5347*  F13_019: db "panels/13_019.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
044314 70 61 6E 65 5348*  F13_023: db "panels/13_023.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
044328 70 61 6E 65 5349*  F13_027: db "panels/13_027.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04433C 70 61 6E 65 5350*  F13_028: db "panels/13_028.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044350 70 61 6E 65 5351*  F13_029: db "panels/13_029.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
044364 70 61 6E 65 5352*  F13_030: db "panels/13_030.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
044378 70 61 6E 65 5353*  F13_031: db "panels/13_031.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
04438C 70 61 6E 65 5354*  F13_032: db "panels/13_032.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0443A0 70 61 6E 65 5355*  F13_035: db "panels/13_035.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0443B4 70 61 6E 65 5356*  F13_038: db "panels/13_038.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
0443C8 70 61 6E 65 5357*  F13_039: db "panels/13_039.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
0443DC 70 61 6E 65 5358*  F13_040: db "panels/13_040.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
0443F0 70 61 6E 65 5359*  F13_041: db "panels/13_041.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044404 70 61 6E 65 5360*  F13_043: db "panels/13_043.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044418 70 61 6E 65 5361*  F13_045: db "panels/13_045.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
04442C 70 61 6E 65 5362*  F13_046: db "panels/13_046.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044440 70 61 6E 65 5363*  F13_047: db "panels/13_047.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044454 70 61 6E 65 5364*  F14_000: db "panels/14_000.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044468 70 61 6E 65 5365*  F14_001: db "panels/14_001.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
04447C 70 61 6E 65 5366*  F14_002: db "panels/14_002.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044490 70 61 6E 65 5367*  F14_007: db "panels/14_007.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0444A4 70 61 6E 65 5368*  F14_012: db "panels/14_012.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0444B8 70 61 6E 65 5369*  F14_013: db "panels/14_013.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0444CC 70 61 6E 65 5370*  F14_014: db "panels/14_014.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
0444E0 70 61 6E 65 5371*  F14_015: db "panels/14_015.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
0444F4 70 61 6E 65 5372*  F14_016: db "panels/14_016.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044508 70 61 6E 65 5373*  F14_017: db "panels/14_017.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
04451C 70 61 6E 65 5374*  F14_018: db "panels/14_018.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044530 70 61 6E 65 5375*  F14_019: db "panels/14_019.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
044544 70 61 6E 65 5376*  F14_023: db "panels/14_023.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
044558 70 61 6E 65 5377*  F14_027: db "panels/14_027.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04456C 70 61 6E 65 5378*  F14_028: db "panels/14_028.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044580 70 61 6E 65 5379*  F14_029: db "panels/14_029.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
044594 70 61 6E 65 5380*  F14_030: db "panels/14_030.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
0445A8 70 61 6E 65 5381*  F14_031: db "panels/14_031.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
0445BC 70 61 6E 65 5382*  F14_032: db "panels/14_032.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0445D0 70 61 6E 65 5383*  F14_035: db "panels/14_035.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0445E4 70 61 6E 65 5384*  F14_038: db "panels/14_038.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
0445F8 70 61 6E 65 5385*  F14_039: db "panels/14_039.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
04460C 70 61 6E 65 5386*  F14_040: db "panels/14_040.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044620 70 61 6E 65 5387*  F14_041: db "panels/14_041.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044634 70 61 6E 65 5388*  F14_043: db "panels/14_043.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044648 70 61 6E 65 5389*  F14_045: db "panels/14_045.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
04465C 70 61 6E 65 5390*  F14_046: db "panels/14_046.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044670 70 61 6E 65 5391*  F14_047: db "panels/14_047.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044684 70 61 6E 65 5392*  F15_000: db "panels/15_000.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044698 70 61 6E 65 5393*  F15_001: db "panels/15_001.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
0446AC 70 61 6E 65 5394*  F15_002: db "panels/15_002.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
0446C0 70 61 6E 65 5395*  F15_007: db "panels/15_007.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0446D4 70 61 6E 65 5396*  F15_012: db "panels/15_012.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0446E8 70 61 6E 65 5397*  F15_013: db "panels/15_013.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0446FC 70 61 6E 65 5398*  F15_014: db "panels/15_014.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044710 70 61 6E 65 5399*  F15_015: db "panels/15_015.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044724 70 61 6E 65 5400*  F15_016: db "panels/15_016.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044738 70 61 6E 65 5401*  F15_017: db "panels/15_017.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
04474C 70 61 6E 65 5402*  F15_018: db "panels/15_018.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044760 70 61 6E 65 5403*  F15_019: db "panels/15_019.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
044774 70 61 6E 65 5404*  F15_023: db "panels/15_023.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
044788 70 61 6E 65 5405*  F15_027: db "panels/15_027.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04479C 70 61 6E 65 5406*  F15_028: db "panels/15_028.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0447B0 70 61 6E 65 5407*  F15_029: db "panels/15_029.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0447C4 70 61 6E 65 5408*  F15_030: db "panels/15_030.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
0447D8 70 61 6E 65 5409*  F15_031: db "panels/15_031.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
0447EC 70 61 6E 65 5410*  F15_032: db "panels/15_032.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
044800 70 61 6E 65 5411*  F15_035: db "panels/15_035.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
044814 70 61 6E 65 5412*  F15_038: db "panels/15_038.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044828 70 61 6E 65 5413*  F15_039: db "panels/15_039.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
04483C 70 61 6E 65 5414*  F15_040: db "panels/15_040.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044850 70 61 6E 65 5415*  F15_041: db "panels/15_041.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044864 70 61 6E 65 5416*  F15_043: db "panels/15_043.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044878 70 61 6E 65 5417*  F15_045: db "panels/15_045.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
04488C 70 61 6E 65 5418*  F15_046: db "panels/15_046.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
0448A0 70 61 6E 65 5419*  F15_047: db "panels/15_047.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0448B4 70 61 6E 65 5420*  F16_000: db "panels/16_000.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
0448C8 70 61 6E 65 5421*  F16_001: db "panels/16_001.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
0448DC 70 61 6E 65 5422*  F16_002: db "panels/16_002.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
0448F0 70 61 6E 65 5423*  F16_007: db "panels/16_007.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044904 70 61 6E 65 5424*  F16_012: db "panels/16_012.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044918 70 61 6E 65 5425*  F16_013: db "panels/16_013.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
04492C 70 61 6E 65 5426*  F16_014: db "panels/16_014.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044940 70 61 6E 65 5427*  F16_015: db "panels/16_015.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044954 70 61 6E 65 5428*  F16_016: db "panels/16_016.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044968 70 61 6E 65 5429*  F16_017: db "panels/16_017.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
04497C 70 61 6E 65 5430*  F16_018: db "panels/16_018.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044990 70 61 6E 65 5431*  F16_019: db "panels/16_019.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
0449A4 70 61 6E 65 5432*  F16_023: db "panels/16_023.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0449B8 70 61 6E 65 5433*  F16_027: db "panels/16_027.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
0449CC 70 61 6E 65 5434*  F16_028: db "panels/16_028.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0449E0 70 61 6E 65 5435*  F16_029: db "panels/16_029.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0449F4 70 61 6E 65 5436*  F16_030: db "panels/16_030.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
044A08 70 61 6E 65 5437*  F16_031: db "panels/16_031.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
044A1C 70 61 6E 65 5438*  F16_032: db "panels/16_032.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
044A30 70 61 6E 65 5439*  F16_035: db "panels/16_035.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
044A44 70 61 6E 65 5440*  F16_038: db "panels/16_038.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044A58 70 61 6E 65 5441*  F16_039: db "panels/16_039.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
044A6C 70 61 6E 65 5442*  F16_040: db "panels/16_040.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044A80 70 61 6E 65 5443*  F16_041: db "panels/16_041.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044A94 70 61 6E 65 5444*  F16_043: db "panels/16_043.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044AA8 70 61 6E 65 5445*  F16_045: db "panels/16_045.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
044ABC 70 61 6E 65 5446*  F16_046: db "panels/16_046.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044AD0 70 61 6E 65 5447*  F16_047: db "panels/16_047.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044AE4 70 61 6E 65 5448*  F17_000: db "panels/17_000.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044AF8 70 61 6E 65 5449*  F17_001: db "panels/17_001.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
044B0C 70 61 6E 65 5450*  F17_002: db "panels/17_002.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044B20 70 61 6E 65 5451*  F17_007: db "panels/17_007.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044B34 70 61 6E 65 5452*  F17_012: db "panels/17_012.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044B48 70 61 6E 65 5453*  F17_013: db "panels/17_013.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
044B5C 70 61 6E 65 5454*  F17_014: db "panels/17_014.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044B70 70 61 6E 65 5455*  F17_015: db "panels/17_015.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044B84 70 61 6E 65 5456*  F17_016: db "panels/17_016.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044B98 70 61 6E 65 5457*  F17_017: db "panels/17_017.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
044BAC 70 61 6E 65 5458*  F17_018: db "panels/17_018.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044BC0 70 61 6E 65 5459*  F17_019: db "panels/17_019.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
044BD4 70 61 6E 65 5460*  F17_023: db "panels/17_023.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
044BE8 70 61 6E 65 5461*  F17_027: db "panels/17_027.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
044BFC 70 61 6E 65 5462*  F17_028: db "panels/17_028.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044C10 70 61 6E 65 5463*  F17_029: db "panels/17_029.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
044C24 70 61 6E 65 5464*  F17_030: db "panels/17_030.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
044C38 70 61 6E 65 5465*  F17_031: db "panels/17_031.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
044C4C 70 61 6E 65 5466*  F17_032: db "panels/17_032.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
044C60 70 61 6E 65 5467*  F17_035: db "panels/17_035.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
044C74 70 61 6E 65 5468*  F17_038: db "panels/17_038.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044C88 70 61 6E 65 5469*  F17_039: db "panels/17_039.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
044C9C 70 61 6E 65 5470*  F17_040: db "panels/17_040.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044CB0 70 61 6E 65 5471*  F17_041: db "panels/17_041.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044CC4 70 61 6E 65 5472*  F17_043: db "panels/17_043.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044CD8 70 61 6E 65 5473*  F17_045: db "panels/17_045.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
044CEC 70 61 6E 65 5474*  F17_046: db "panels/17_046.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044D00 70 61 6E 65 5475*  F17_047: db "panels/17_047.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044D14 70 61 6E 65 5476*  F57_000: db "panels/57_000.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044D28 70 61 6E 65 5477*  F57_001: db "panels/57_001.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
044D3C 70 61 6E 65 5478*  F57_002: db "panels/57_002.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044D50 70 61 6E 65 5479*  F57_007: db "panels/57_007.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044D64 70 61 6E 65 5480*  F57_012: db "panels/57_012.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044D78 70 61 6E 65 5481*  F57_013: db "panels/57_013.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
044D8C 70 61 6E 65 5482*  F57_014: db "panels/57_014.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044DA0 70 61 6E 65 5483*  F57_015: db "panels/57_015.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044DB4 70 61 6E 65 5484*  F57_016: db "panels/57_016.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044DC8 70 61 6E 65 5485*  F57_017: db "panels/57_017.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
044DDC 70 61 6E 65 5486*  F57_018: db "panels/57_018.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
044DF0 70 61 6E 65 5487*  F57_019: db "panels/57_019.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
044E04 70 61 6E 65 5488*  F57_023: db "panels/57_023.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
044E18 70 61 6E 65 5489*  F57_027: db "panels/57_027.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
044E2C 70 61 6E 65 5490*  F57_028: db "panels/57_028.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044E40 70 61 6E 65 5491*  F57_029: db "panels/57_029.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
044E54 70 61 6E 65 5492*  F57_030: db "panels/57_030.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
044E68 70 61 6E 65 5493*  F57_031: db "panels/57_031.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
044E7C 70 61 6E 65 5494*  F57_032: db "panels/57_032.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
044E90 70 61 6E 65 5495*  F57_035: db "panels/57_035.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
044EA4 70 61 6E 65 5496*  F57_038: db "panels/57_038.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044EB8 70 61 6E 65 5497*  F57_039: db "panels/57_039.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
044ECC 70 61 6E 65 5498*  F57_040: db "panels/57_040.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044EE0 70 61 6E 65 5499*  F57_041: db "panels/57_041.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
044EF4 70 61 6E 65 5500*  F57_043: db "panels/57_043.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044F08 70 61 6E 65 5501*  F57_045: db "panels/57_045.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
044F1C 70 61 6E 65 5502*  F57_046: db "panels/57_046.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
044F30 70 61 6E 65 5503*  F57_047: db "panels/57_047.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
044F44 70 61 6E 65 5504*  F58_000: db "panels/58_000.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
044F58 70 61 6E 65 5505*  F58_001: db "panels/58_001.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
044F6C 70 61 6E 65 5506*  F58_002: db "panels/58_002.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
044F80 70 61 6E 65 5507*  F58_007: db "panels/58_007.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
044F94 70 61 6E 65 5508*  F58_012: db "panels/58_012.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
044FA8 70 61 6E 65 5509*  F58_013: db "panels/58_013.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
044FBC 70 61 6E 65 5510*  F58_014: db "panels/58_014.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044FD0 70 61 6E 65 5511*  F58_015: db "panels/58_015.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044FE4 70 61 6E 65 5512*  F58_016: db "panels/58_016.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044FF8 70 61 6E 65 5513*  F58_017: db "panels/58_017.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
04500C 70 61 6E 65 5514*  F58_018: db "panels/58_018.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
045020 70 61 6E 65 5515*  F58_019: db "panels/58_019.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
045034 70 61 6E 65 5516*  F58_023: db "panels/58_023.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
045048 70 61 6E 65 5517*  F58_027: db "panels/58_027.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04505C 70 61 6E 65 5518*  F58_028: db "panels/58_028.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
045070 70 61 6E 65 5519*  F58_029: db "panels/58_029.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
045084 70 61 6E 65 5520*  F58_030: db "panels/58_030.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
045098 70 61 6E 65 5521*  F58_031: db "panels/58_031.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
0450AC 70 61 6E 65 5522*  F58_032: db "panels/58_032.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0450C0 70 61 6E 65 5523*  F58_035: db "panels/58_035.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0450D4 70 61 6E 65 5524*  F58_038: db "panels/58_038.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
0450E8 70 61 6E 65 5525*  F58_039: db "panels/58_039.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
0450FC 70 61 6E 65 5526*  F58_040: db "panels/58_040.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045110 70 61 6E 65 5527*  F58_041: db "panels/58_041.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
045124 70 61 6E 65 5528*  F58_043: db "panels/58_043.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
045138 70 61 6E 65 5529*  F58_045: db "panels/58_045.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
04514C 70 61 6E 65 5530*  F58_046: db "panels/58_046.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
045160 70 61 6E 65 5531*  F58_047: db "panels/58_047.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
045174 70 61 6E 65 5532*  F59_000: db "panels/59_000.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       30 2E 72 67 
       62 61 32 00 
045188 70 61 6E 65 5533*  F59_001: db "panels/59_001.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       31 2E 72 67 
       62 61 32 00 
04519C 70 61 6E 65 5534*  F59_002: db "panels/59_002.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       32 2E 72 67 
       62 61 32 00 
0451B0 70 61 6E 65 5535*  F59_007: db "panels/59_007.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0451C4 70 61 6E 65 5536*  F59_012: db "panels/59_012.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0451D8 70 61 6E 65 5537*  F59_013: db "panels/59_013.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0451EC 70 61 6E 65 5538*  F59_014: db "panels/59_014.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
045200 70 61 6E 65 5539*  F59_015: db "panels/59_015.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
045214 70 61 6E 65 5540*  F59_016: db "panels/59_016.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
045228 70 61 6E 65 5541*  F59_017: db "panels/59_017.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       37 2E 72 67 
       62 61 32 00 
04523C 70 61 6E 65 5542*  F59_018: db "panels/59_018.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       38 2E 72 67 
       62 61 32 00 
045250 70 61 6E 65 5543*  F59_019: db "panels/59_019.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       39 2E 72 67 
       62 61 32 00 
045264 70 61 6E 65 5544*  F59_023: db "panels/59_023.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
045278 70 61 6E 65 5545*  F59_027: db "panels/59_027.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04528C 70 61 6E 65 5546*  F59_028: db "panels/59_028.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0452A0 70 61 6E 65 5547*  F59_029: db "panels/59_029.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0452B4 70 61 6E 65 5548*  F59_030: db "panels/59_030.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       30 2E 72 67 
       62 61 32 00 
0452C8 70 61 6E 65 5549*  F59_031: db "panels/59_031.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       31 2E 72 67 
       62 61 32 00 
0452DC 70 61 6E 65 5550*  F59_032: db "panels/59_032.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0452F0 70 61 6E 65 5551*  F59_035: db "panels/59_035.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
045304 70 61 6E 65 5552*  F59_038: db "panels/59_038.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
045318 70 61 6E 65 5553*  F59_039: db "panels/59_039.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       39 2E 72 67 
       62 61 32 00 
04532C 70 61 6E 65 5554*  F59_040: db "panels/59_040.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045340 70 61 6E 65 5555*  F59_041: db "panels/59_041.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       31 2E 72 67 
       62 61 32 00 
045354 70 61 6E 65 5556*  F59_043: db "panels/59_043.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
045368 70 61 6E 65 5557*  F59_045: db "panels/59_045.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       35 2E 72 67 
       62 61 32 00 
04537C 70 61 6E 65 5558*  F59_046: db "panels/59_046.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       36 2E 72 67 
       62 61 32 00 
045390 70 61 6E 65 5559*  F59_047: db "panels/59_047.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0453A4             5560*  
0453A4             5561*  ; sprite buffer ids:
0453A4             5562*  BUF_20_007: equ 0x0234
0453A4             5563*  BUF_20_023: equ 0x0235
0453A4             5564*  BUF_20_035: equ 0x0236
0453A4             5565*  BUF_20_043: equ 0x0237
0453A4             5566*  BUF_20_047: equ 0x0238
0453A4             5567*  BUF_21_007: equ 0x0239
0453A4             5568*  BUF_21_023: equ 0x023A
0453A4             5569*  BUF_21_035: equ 0x023B
0453A4             5570*  BUF_21_043: equ 0x023C
0453A4             5571*  BUF_21_047: equ 0x023D
0453A4             5572*  BUF_22_007: equ 0x023E
0453A4             5573*  BUF_22_023: equ 0x023F
0453A4             5574*  BUF_22_035: equ 0x0240
0453A4             5575*  BUF_22_043: equ 0x0241
0453A4             5576*  BUF_22_047: equ 0x0242
0453A4             5577*  BUF_23_007: equ 0x0243
0453A4             5578*  BUF_23_023: equ 0x0244
0453A4             5579*  BUF_23_035: equ 0x0245
0453A4             5580*  BUF_23_043: equ 0x0246
0453A4             5581*  BUF_23_047: equ 0x0247
0453A4             5582*  BUF_24_007: equ 0x0248
0453A4             5583*  BUF_24_023: equ 0x0249
0453A4             5584*  BUF_24_035: equ 0x024A
0453A4             5585*  BUF_24_043: equ 0x024B
0453A4             5586*  BUF_24_047: equ 0x024C
0453A4             5587*  BUF_40_007: equ 0x024D
0453A4             5588*  BUF_40_023: equ 0x024E
0453A4             5589*  BUF_40_035: equ 0x024F
0453A4             5590*  BUF_40_043: equ 0x0250
0453A4             5591*  BUF_40_047: equ 0x0251
0453A4             5592*  BUF_41_007: equ 0x0252
0453A4             5593*  BUF_41_023: equ 0x0253
0453A4             5594*  BUF_41_035: equ 0x0254
0453A4             5595*  BUF_41_043: equ 0x0255
0453A4             5596*  BUF_41_047: equ 0x0256
0453A4             5597*  BUF_42_007: equ 0x0257
0453A4             5598*  BUF_42_023: equ 0x0258
0453A4             5599*  BUF_42_035: equ 0x0259
0453A4             5600*  BUF_42_043: equ 0x025A
0453A4             5601*  BUF_42_047: equ 0x025B
0453A4             5602*  BUF_43_007: equ 0x025C
0453A4             5603*  BUF_43_023: equ 0x025D
0453A4             5604*  BUF_43_035: equ 0x025E
0453A4             5605*  BUF_43_043: equ 0x025F
0453A4             5606*  BUF_43_047: equ 0x0260
0453A4             5607*  BUF_44_007: equ 0x0261
0453A4             5608*  BUF_44_023: equ 0x0262
0453A4             5609*  BUF_44_035: equ 0x0263
0453A4             5610*  BUF_44_043: equ 0x0264
0453A4             5611*  BUF_44_047: equ 0x0265
0453A4             5612*  BUF_45_007: equ 0x0266
0453A4             5613*  BUF_45_023: equ 0x0267
0453A4             5614*  BUF_45_035: equ 0x0268
0453A4             5615*  BUF_45_043: equ 0x0269
0453A4             5616*  BUF_45_047: equ 0x026A
0453A4             5617*  BUF_46_007: equ 0x026B
0453A4             5618*  BUF_46_023: equ 0x026C
0453A4             5619*  BUF_46_035: equ 0x026D
0453A4             5620*  BUF_46_043: equ 0x026E
0453A4             5621*  BUF_46_047: equ 0x026F
0453A4             5622*  BUF_47_007: equ 0x0270
0453A4             5623*  BUF_47_023: equ 0x0271
0453A4             5624*  BUF_47_035: equ 0x0272
0453A4             5625*  BUF_47_043: equ 0x0273
0453A4             5626*  BUF_47_047: equ 0x0274
0453A4             5627*  BUF_48_007: equ 0x0275
0453A4             5628*  BUF_48_023: equ 0x0276
0453A4             5629*  BUF_48_035: equ 0x0277
0453A4             5630*  BUF_48_043: equ 0x0278
0453A4             5631*  BUF_48_047: equ 0x0279
0453A4             5632*  BUF_49_007: equ 0x027A
0453A4             5633*  BUF_49_023: equ 0x027B
0453A4             5634*  BUF_49_035: equ 0x027C
0453A4             5635*  BUF_49_043: equ 0x027D
0453A4             5636*  BUF_49_047: equ 0x027E
0453A4             5637*  BUF_50_007: equ 0x027F
0453A4             5638*  BUF_50_023: equ 0x0280
0453A4             5639*  BUF_50_035: equ 0x0281
0453A4             5640*  BUF_50_043: equ 0x0282
0453A4             5641*  BUF_50_047: equ 0x0283
0453A4             5642*  BUF_51_007: equ 0x0284
0453A4             5643*  BUF_51_023: equ 0x0285
0453A4             5644*  BUF_51_035: equ 0x0286
0453A4             5645*  BUF_51_043: equ 0x0287
0453A4             5646*  BUF_51_047: equ 0x0288
0453A4             5647*  BUF_52_007: equ 0x0289
0453A4             5648*  BUF_52_023: equ 0x028A
0453A4             5649*  BUF_52_035: equ 0x028B
0453A4             5650*  BUF_52_043: equ 0x028C
0453A4             5651*  BUF_52_047: equ 0x028D
0453A4             5652*  BUF_56_007: equ 0x028E
0453A4             5653*  BUF_56_023: equ 0x028F
0453A4             5654*  BUF_56_035: equ 0x0290
0453A4             5655*  BUF_56_043: equ 0x0291
0453A4             5656*  BUF_56_047: equ 0x0292
0453A4             5657*  BUF_60_007: equ 0x0293
0453A4             5658*  BUF_60_023: equ 0x0294
0453A4             5659*  BUF_60_035: equ 0x0295
0453A4             5660*  BUF_60_043: equ 0x0296
0453A4             5661*  BUF_60_047: equ 0x0297
0453A4             5662*  
0453A4             5663*  sprite_num_panels: equ 100
0453A4             5664*  
0453A4             5665*  ; sprite buffer id reverse lookup:
0453A4             5666*  sprite_buffer_id_lut:
0453A4 34 02 00    5667*  	dl BUF_20_007
0453A7 35 02 00    5668*  	dl BUF_20_023
0453AA 36 02 00    5669*  	dl BUF_20_035
0453AD 37 02 00    5670*  	dl BUF_20_043
0453B0 38 02 00    5671*  	dl BUF_20_047
0453B3 39 02 00    5672*  	dl BUF_21_007
0453B6 3A 02 00    5673*  	dl BUF_21_023
0453B9 3B 02 00    5674*  	dl BUF_21_035
0453BC 3C 02 00    5675*  	dl BUF_21_043
0453BF 3D 02 00    5676*  	dl BUF_21_047
0453C2 3E 02 00    5677*  	dl BUF_22_007
0453C5 3F 02 00    5678*  	dl BUF_22_023
0453C8 40 02 00    5679*  	dl BUF_22_035
0453CB 41 02 00    5680*  	dl BUF_22_043
0453CE 42 02 00    5681*  	dl BUF_22_047
0453D1 43 02 00    5682*  	dl BUF_23_007
0453D4 44 02 00    5683*  	dl BUF_23_023
0453D7 45 02 00    5684*  	dl BUF_23_035
0453DA 46 02 00    5685*  	dl BUF_23_043
0453DD 47 02 00    5686*  	dl BUF_23_047
0453E0 48 02 00    5687*  	dl BUF_24_007
0453E3 49 02 00    5688*  	dl BUF_24_023
0453E6 4A 02 00    5689*  	dl BUF_24_035
0453E9 4B 02 00    5690*  	dl BUF_24_043
0453EC 4C 02 00    5691*  	dl BUF_24_047
0453EF 4D 02 00    5692*  	dl BUF_40_007
0453F2 4E 02 00    5693*  	dl BUF_40_023
0453F5 4F 02 00    5694*  	dl BUF_40_035
0453F8 50 02 00    5695*  	dl BUF_40_043
0453FB 51 02 00    5696*  	dl BUF_40_047
0453FE 52 02 00    5697*  	dl BUF_41_007
045401 53 02 00    5698*  	dl BUF_41_023
045404 54 02 00    5699*  	dl BUF_41_035
045407 55 02 00    5700*  	dl BUF_41_043
04540A 56 02 00    5701*  	dl BUF_41_047
04540D 57 02 00    5702*  	dl BUF_42_007
045410 58 02 00    5703*  	dl BUF_42_023
045413 59 02 00    5704*  	dl BUF_42_035
045416 5A 02 00    5705*  	dl BUF_42_043
045419 5B 02 00    5706*  	dl BUF_42_047
04541C 5C 02 00    5707*  	dl BUF_43_007
04541F 5D 02 00    5708*  	dl BUF_43_023
045422 5E 02 00    5709*  	dl BUF_43_035
045425 5F 02 00    5710*  	dl BUF_43_043
045428 60 02 00    5711*  	dl BUF_43_047
04542B 61 02 00    5712*  	dl BUF_44_007
04542E 62 02 00    5713*  	dl BUF_44_023
045431 63 02 00    5714*  	dl BUF_44_035
045434 64 02 00    5715*  	dl BUF_44_043
045437 65 02 00    5716*  	dl BUF_44_047
04543A 66 02 00    5717*  	dl BUF_45_007
04543D 67 02 00    5718*  	dl BUF_45_023
045440 68 02 00    5719*  	dl BUF_45_035
045443 69 02 00    5720*  	dl BUF_45_043
045446 6A 02 00    5721*  	dl BUF_45_047
045449 6B 02 00    5722*  	dl BUF_46_007
04544C 6C 02 00    5723*  	dl BUF_46_023
04544F 6D 02 00    5724*  	dl BUF_46_035
045452 6E 02 00    5725*  	dl BUF_46_043
045455 6F 02 00    5726*  	dl BUF_46_047
045458 70 02 00    5727*  	dl BUF_47_007
04545B 71 02 00    5728*  	dl BUF_47_023
04545E 72 02 00    5729*  	dl BUF_47_035
045461 73 02 00    5730*  	dl BUF_47_043
045464 74 02 00    5731*  	dl BUF_47_047
045467 75 02 00    5732*  	dl BUF_48_007
04546A 76 02 00    5733*  	dl BUF_48_023
04546D 77 02 00    5734*  	dl BUF_48_035
045470 78 02 00    5735*  	dl BUF_48_043
045473 79 02 00    5736*  	dl BUF_48_047
045476 7A 02 00    5737*  	dl BUF_49_007
045479 7B 02 00    5738*  	dl BUF_49_023
04547C 7C 02 00    5739*  	dl BUF_49_035
04547F 7D 02 00    5740*  	dl BUF_49_043
045482 7E 02 00    5741*  	dl BUF_49_047
045485 7F 02 00    5742*  	dl BUF_50_007
045488 80 02 00    5743*  	dl BUF_50_023
04548B 81 02 00    5744*  	dl BUF_50_035
04548E 82 02 00    5745*  	dl BUF_50_043
045491 83 02 00    5746*  	dl BUF_50_047
045494 84 02 00    5747*  	dl BUF_51_007
045497 85 02 00    5748*  	dl BUF_51_023
04549A 86 02 00    5749*  	dl BUF_51_035
04549D 87 02 00    5750*  	dl BUF_51_043
0454A0 88 02 00    5751*  	dl BUF_51_047
0454A3 89 02 00    5752*  	dl BUF_52_007
0454A6 8A 02 00    5753*  	dl BUF_52_023
0454A9 8B 02 00    5754*  	dl BUF_52_035
0454AC 8C 02 00    5755*  	dl BUF_52_043
0454AF 8D 02 00    5756*  	dl BUF_52_047
0454B2 8E 02 00    5757*  	dl BUF_56_007
0454B5 8F 02 00    5758*  	dl BUF_56_023
0454B8 90 02 00    5759*  	dl BUF_56_035
0454BB 91 02 00    5760*  	dl BUF_56_043
0454BE 92 02 00    5761*  	dl BUF_56_047
0454C1 93 02 00    5762*  	dl BUF_60_007
0454C4 94 02 00    5763*  	dl BUF_60_023
0454C7 95 02 00    5764*  	dl BUF_60_035
0454CA 96 02 00    5765*  	dl BUF_60_043
0454CD 97 02 00    5766*  	dl BUF_60_047
0454D0             5767*  
0454D0             5768*  ; sprite load routines jump table:
0454D0             5769*  sprite_load_panels_table:
0454D0 FC 55 04    5770*  	dl ld_20_007
0454D3 26 56 04    5771*  	dl ld_20_023
0454D6 50 56 04    5772*  	dl ld_20_035
0454D9 7A 56 04    5773*  	dl ld_20_043
0454DC A4 56 04    5774*  	dl ld_20_047
0454DF CE 56 04    5775*  	dl ld_21_007
0454E2 F8 56 04    5776*  	dl ld_21_023
0454E5 22 57 04    5777*  	dl ld_21_035
0454E8 4C 57 04    5778*  	dl ld_21_043
0454EB 76 57 04    5779*  	dl ld_21_047
0454EE A0 57 04    5780*  	dl ld_22_007
0454F1 CA 57 04    5781*  	dl ld_22_023
0454F4 F4 57 04    5782*  	dl ld_22_035
0454F7 1E 58 04    5783*  	dl ld_22_043
0454FA 48 58 04    5784*  	dl ld_22_047
0454FD 72 58 04    5785*  	dl ld_23_007
045500 9C 58 04    5786*  	dl ld_23_023
045503 C6 58 04    5787*  	dl ld_23_035
045506 F0 58 04    5788*  	dl ld_23_043
045509 1A 59 04    5789*  	dl ld_23_047
04550C 44 59 04    5790*  	dl ld_24_007
04550F 6E 59 04    5791*  	dl ld_24_023
045512 98 59 04    5792*  	dl ld_24_035
045515 C2 59 04    5793*  	dl ld_24_043
045518 EC 59 04    5794*  	dl ld_24_047
04551B 16 5A 04    5795*  	dl ld_40_007
04551E 40 5A 04    5796*  	dl ld_40_023
045521 6A 5A 04    5797*  	dl ld_40_035
045524 94 5A 04    5798*  	dl ld_40_043
045527 BE 5A 04    5799*  	dl ld_40_047
04552A E8 5A 04    5800*  	dl ld_41_007
04552D 12 5B 04    5801*  	dl ld_41_023
045530 3C 5B 04    5802*  	dl ld_41_035
045533 66 5B 04    5803*  	dl ld_41_043
045536 90 5B 04    5804*  	dl ld_41_047
045539 BA 5B 04    5805*  	dl ld_42_007
04553C E4 5B 04    5806*  	dl ld_42_023
04553F 0E 5C 04    5807*  	dl ld_42_035
045542 38 5C 04    5808*  	dl ld_42_043
045545 62 5C 04    5809*  	dl ld_42_047
045548 8C 5C 04    5810*  	dl ld_43_007
04554B B6 5C 04    5811*  	dl ld_43_023
04554E E0 5C 04    5812*  	dl ld_43_035
045551 0A 5D 04    5813*  	dl ld_43_043
045554 34 5D 04    5814*  	dl ld_43_047
045557 5E 5D 04    5815*  	dl ld_44_007
04555A 88 5D 04    5816*  	dl ld_44_023
04555D B2 5D 04    5817*  	dl ld_44_035
045560 DC 5D 04    5818*  	dl ld_44_043
045563 06 5E 04    5819*  	dl ld_44_047
045566 30 5E 04    5820*  	dl ld_45_007
045569 5A 5E 04    5821*  	dl ld_45_023
04556C 84 5E 04    5822*  	dl ld_45_035
04556F AE 5E 04    5823*  	dl ld_45_043
045572 D8 5E 04    5824*  	dl ld_45_047
045575 02 5F 04    5825*  	dl ld_46_007
045578 2C 5F 04    5826*  	dl ld_46_023
04557B 56 5F 04    5827*  	dl ld_46_035
04557E 80 5F 04    5828*  	dl ld_46_043
045581 AA 5F 04    5829*  	dl ld_46_047
045584 D4 5F 04    5830*  	dl ld_47_007
045587 FE 5F 04    5831*  	dl ld_47_023
04558A 28 60 04    5832*  	dl ld_47_035
04558D 52 60 04    5833*  	dl ld_47_043
045590 7C 60 04    5834*  	dl ld_47_047
045593 A6 60 04    5835*  	dl ld_48_007
045596 D0 60 04    5836*  	dl ld_48_023
045599 FA 60 04    5837*  	dl ld_48_035
04559C 24 61 04    5838*  	dl ld_48_043
04559F 4E 61 04    5839*  	dl ld_48_047
0455A2 78 61 04    5840*  	dl ld_49_007
0455A5 A2 61 04    5841*  	dl ld_49_023
0455A8 CC 61 04    5842*  	dl ld_49_035
0455AB F6 61 04    5843*  	dl ld_49_043
0455AE 20 62 04    5844*  	dl ld_49_047
0455B1 4A 62 04    5845*  	dl ld_50_007
0455B4 74 62 04    5846*  	dl ld_50_023
0455B7 9E 62 04    5847*  	dl ld_50_035
0455BA C8 62 04    5848*  	dl ld_50_043
0455BD F2 62 04    5849*  	dl ld_50_047
0455C0 1C 63 04    5850*  	dl ld_51_007
0455C3 46 63 04    5851*  	dl ld_51_023
0455C6 70 63 04    5852*  	dl ld_51_035
0455C9 9A 63 04    5853*  	dl ld_51_043
0455CC C4 63 04    5854*  	dl ld_51_047
0455CF EE 63 04    5855*  	dl ld_52_007
0455D2 18 64 04    5856*  	dl ld_52_023
0455D5 42 64 04    5857*  	dl ld_52_035
0455D8 6C 64 04    5858*  	dl ld_52_043
0455DB 96 64 04    5859*  	dl ld_52_047
0455DE C0 64 04    5860*  	dl ld_56_007
0455E1 EA 64 04    5861*  	dl ld_56_023
0455E4 14 65 04    5862*  	dl ld_56_035
0455E7 3E 65 04    5863*  	dl ld_56_043
0455EA 68 65 04    5864*  	dl ld_56_047
0455ED 92 65 04    5865*  	dl ld_60_007
0455F0 BC 65 04    5866*  	dl ld_60_023
0455F3 E6 65 04    5867*  	dl ld_60_035
0455F6 10 66 04    5868*  	dl ld_60_043
0455F9 3A 66 04    5869*  	dl ld_60_047
0455FC             5870*  
0455FC             5871*  ; Import sprite .rgba2 bitmap files and load them into VDP buffers
0455FC             5872*  
0455FC             5873*  ld_20_007:
0455FC 21 64 66 04 5874*  	ld hl,F20_007
045600 22 8A C7 04 5875*  	ld (cur_filename),hl
045604 11 C6 D3 04 5876*  	ld de,filedata
045608 01 00 00 01 5877*  	ld bc,65536
04560C 3E 01       5878*  	ld a,mos_load
04560E 5B CF       5879*  	RST.LIL 08h
045610 21 34 02 00 5880*  	ld hl,BUF_20_007
045614 01 13 00 00 5881*  	ld bc,19
045618 11 12 00 00 5882*  	ld de,18
04561C DD 21 56 01 5883*  	ld ix,342
       00          
045621 CD 05 C9 04 5884*  	call vdu_load_img
045625 C9          5885*  	ret
045626             5886*  
045626             5887*  ld_20_023:
045626 21 78 66 04 5888*  	ld hl,F20_023
04562A 22 8A C7 04 5889*  	ld (cur_filename),hl
04562E 11 C6 D3 04 5890*  	ld de,filedata
045632 01 00 00 01 5891*  	ld bc,65536
045636 3E 01       5892*  	ld a,mos_load
045638 5B CF       5893*  	RST.LIL 08h
04563A 21 35 02 00 5894*  	ld hl,BUF_20_023
04563E 01 17 00 00 5895*  	ld bc,23
045642 11 17 00 00 5896*  	ld de,23
045646 DD 21 11 02 5897*  	ld ix,529
       00          
04564B CD 05 C9 04 5898*  	call vdu_load_img
04564F C9          5899*  	ret
045650             5900*  
045650             5901*  ld_20_035:
045650 21 8C 66 04 5902*  	ld hl,F20_035
045654 22 8A C7 04 5903*  	ld (cur_filename),hl
045658 11 C6 D3 04 5904*  	ld de,filedata
04565C 01 00 00 01 5905*  	ld bc,65536
045660 3E 01       5906*  	ld a,mos_load
045662 5B CF       5907*  	RST.LIL 08h
045664 21 36 02 00 5908*  	ld hl,BUF_20_035
045668 01 1F 00 00 5909*  	ld bc,31
04566C 11 21 00 00 5910*  	ld de,33
045670 DD 21 FF 03 5911*  	ld ix,1023
       00          
045675 CD 05 C9 04 5912*  	call vdu_load_img
045679 C9          5913*  	ret
04567A             5914*  
04567A             5915*  ld_20_043:
04567A 21 A0 66 04 5916*  	ld hl,F20_043
04567E 22 8A C7 04 5917*  	ld (cur_filename),hl
045682 11 C6 D3 04 5918*  	ld de,filedata
045686 01 00 00 01 5919*  	ld bc,65536
04568A 3E 01       5920*  	ld a,mos_load
04568C 5B CF       5921*  	RST.LIL 08h
04568E 21 37 02 00 5922*  	ld hl,BUF_20_043
045692 01 36 00 00 5923*  	ld bc,54
045696 11 38 00 00 5924*  	ld de,56
04569A DD 21 D0 0B 5925*  	ld ix,3024
       00          
04569F CD 05 C9 04 5926*  	call vdu_load_img
0456A3 C9          5927*  	ret
0456A4             5928*  
0456A4             5929*  ld_20_047:
0456A4 21 B4 66 04 5930*  	ld hl,F20_047
0456A8 22 8A C7 04 5931*  	ld (cur_filename),hl
0456AC 11 C6 D3 04 5932*  	ld de,filedata
0456B0 01 00 00 01 5933*  	ld bc,65536
0456B4 3E 01       5934*  	ld a,mos_load
0456B6 5B CF       5935*  	RST.LIL 08h
0456B8 21 38 02 00 5936*  	ld hl,BUF_20_047
0456BC 01 6A 00 00 5937*  	ld bc,106
0456C0 11 5A 00 00 5938*  	ld de,90
0456C4 DD 21 44 25 5939*  	ld ix,9540
       00          
0456C9 CD 05 C9 04 5940*  	call vdu_load_img
0456CD C9          5941*  	ret
0456CE             5942*  
0456CE             5943*  ld_21_007:
0456CE 21 C8 66 04 5944*  	ld hl,F21_007
0456D2 22 8A C7 04 5945*  	ld (cur_filename),hl
0456D6 11 C6 D3 04 5946*  	ld de,filedata
0456DA 01 00 00 01 5947*  	ld bc,65536
0456DE 3E 01       5948*  	ld a,mos_load
0456E0 5B CF       5949*  	RST.LIL 08h
0456E2 21 39 02 00 5950*  	ld hl,BUF_21_007
0456E6 01 0B 00 00 5951*  	ld bc,11
0456EA 11 0B 00 00 5952*  	ld de,11
0456EE DD 21 79 00 5953*  	ld ix,121
       00          
0456F3 CD 05 C9 04 5954*  	call vdu_load_img
0456F7 C9          5955*  	ret
0456F8             5956*  
0456F8             5957*  ld_21_023:
0456F8 21 DC 66 04 5958*  	ld hl,F21_023
0456FC 22 8A C7 04 5959*  	ld (cur_filename),hl
045700 11 C6 D3 04 5960*  	ld de,filedata
045704 01 00 00 01 5961*  	ld bc,65536
045708 3E 01       5962*  	ld a,mos_load
04570A 5B CF       5963*  	RST.LIL 08h
04570C 21 3A 02 00 5964*  	ld hl,BUF_21_023
045710 01 0E 00 00 5965*  	ld bc,14
045714 11 0E 00 00 5966*  	ld de,14
045718 DD 21 C4 00 5967*  	ld ix,196
       00          
04571D CD 05 C9 04 5968*  	call vdu_load_img
045721 C9          5969*  	ret
045722             5970*  
045722             5971*  ld_21_035:
045722 21 F0 66 04 5972*  	ld hl,F21_035
045726 22 8A C7 04 5973*  	ld (cur_filename),hl
04572A 11 C6 D3 04 5974*  	ld de,filedata
04572E 01 00 00 01 5975*  	ld bc,65536
045732 3E 01       5976*  	ld a,mos_load
045734 5B CF       5977*  	RST.LIL 08h
045736 21 3B 02 00 5978*  	ld hl,BUF_21_035
04573A 01 14 00 00 5979*  	ld bc,20
04573E 11 15 00 00 5980*  	ld de,21
045742 DD 21 A4 01 5981*  	ld ix,420
       00          
045747 CD 05 C9 04 5982*  	call vdu_load_img
04574B C9          5983*  	ret
04574C             5984*  
04574C             5985*  ld_21_043:
04574C 21 04 67 04 5986*  	ld hl,F21_043
045750 22 8A C7 04 5987*  	ld (cur_filename),hl
045754 11 C6 D3 04 5988*  	ld de,filedata
045758 01 00 00 01 5989*  	ld bc,65536
04575C 3E 01       5990*  	ld a,mos_load
04575E 5B CF       5991*  	RST.LIL 08h
045760 21 3C 02 00 5992*  	ld hl,BUF_21_043
045764 01 21 00 00 5993*  	ld bc,33
045768 11 24 00 00 5994*  	ld de,36
04576C DD 21 A4 04 5995*  	ld ix,1188
       00          
045771 CD 05 C9 04 5996*  	call vdu_load_img
045775 C9          5997*  	ret
045776             5998*  
045776             5999*  ld_21_047:
045776 21 18 67 04 6000*  	ld hl,F21_047
04577A 22 8A C7 04 6001*  	ld (cur_filename),hl
04577E 11 C6 D3 04 6002*  	ld de,filedata
045782 01 00 00 01 6003*  	ld bc,65536
045786 3E 01       6004*  	ld a,mos_load
045788 5B CF       6005*  	RST.LIL 08h
04578A 21 3D 02 00 6006*  	ld hl,BUF_21_047
04578E 01 64 00 00 6007*  	ld bc,100
045792 11 1E 00 00 6008*  	ld de,30
045796 DD 21 B8 0B 6009*  	ld ix,3000
       00          
04579B CD 05 C9 04 6010*  	call vdu_load_img
04579F C9          6011*  	ret
0457A0             6012*  
0457A0             6013*  ld_22_007:
0457A0 21 2C 67 04 6014*  	ld hl,F22_007
0457A4 22 8A C7 04 6015*  	ld (cur_filename),hl
0457A8 11 C6 D3 04 6016*  	ld de,filedata
0457AC 01 00 00 01 6017*  	ld bc,65536
0457B0 3E 01       6018*  	ld a,mos_load
0457B2 5B CF       6019*  	RST.LIL 08h
0457B4 21 3E 02 00 6020*  	ld hl,BUF_22_007
0457B8 01 11 00 00 6021*  	ld bc,17
0457BC 11 0B 00 00 6022*  	ld de,11
0457C0 DD 21 BB 00 6023*  	ld ix,187
       00          
0457C5 CD 05 C9 04 6024*  	call vdu_load_img
0457C9 C9          6025*  	ret
0457CA             6026*  
0457CA             6027*  ld_22_023:
0457CA 21 40 67 04 6028*  	ld hl,F22_023
0457CE 22 8A C7 04 6029*  	ld (cur_filename),hl
0457D2 11 C6 D3 04 6030*  	ld de,filedata
0457D6 01 00 00 01 6031*  	ld bc,65536
0457DA 3E 01       6032*  	ld a,mos_load
0457DC 5B CF       6033*  	RST.LIL 08h
0457DE 21 3F 02 00 6034*  	ld hl,BUF_22_023
0457E2 01 16 00 00 6035*  	ld bc,22
0457E6 11 0E 00 00 6036*  	ld de,14
0457EA DD 21 34 01 6037*  	ld ix,308
       00          
0457EF CD 05 C9 04 6038*  	call vdu_load_img
0457F3 C9          6039*  	ret
0457F4             6040*  
0457F4             6041*  ld_22_035:
0457F4 21 54 67 04 6042*  	ld hl,F22_035
0457F8 22 8A C7 04 6043*  	ld (cur_filename),hl
0457FC 11 C6 D3 04 6044*  	ld de,filedata
045800 01 00 00 01 6045*  	ld bc,65536
045804 3E 01       6046*  	ld a,mos_load
045806 5B CF       6047*  	RST.LIL 08h
045808 21 40 02 00 6048*  	ld hl,BUF_22_035
04580C 01 1E 00 00 6049*  	ld bc,30
045810 11 15 00 00 6050*  	ld de,21
045814 DD 21 76 02 6051*  	ld ix,630
       00          
045819 CD 05 C9 04 6052*  	call vdu_load_img
04581D C9          6053*  	ret
04581E             6054*  
04581E             6055*  ld_22_043:
04581E 21 68 67 04 6056*  	ld hl,F22_043
045822 22 8A C7 04 6057*  	ld (cur_filename),hl
045826 11 C6 D3 04 6058*  	ld de,filedata
04582A 01 00 00 01 6059*  	ld bc,65536
04582E 3E 01       6060*  	ld a,mos_load
045830 5B CF       6061*  	RST.LIL 08h
045832 21 41 02 00 6062*  	ld hl,BUF_22_043
045836 01 33 00 00 6063*  	ld bc,51
04583A 11 24 00 00 6064*  	ld de,36
04583E DD 21 2C 07 6065*  	ld ix,1836
       00          
045843 CD 05 C9 04 6066*  	call vdu_load_img
045847 C9          6067*  	ret
045848             6068*  
045848             6069*  ld_22_047:
045848 21 7C 67 04 6070*  	ld hl,F22_047
04584C 22 8A C7 04 6071*  	ld (cur_filename),hl
045850 11 C6 D3 04 6072*  	ld de,filedata
045854 01 00 00 01 6073*  	ld bc,65536
045858 3E 01       6074*  	ld a,mos_load
04585A 5B CF       6075*  	RST.LIL 08h
04585C 21 42 02 00 6076*  	ld hl,BUF_22_047
045860 01 96 00 00 6077*  	ld bc,150
045864 11 1E 00 00 6078*  	ld de,30
045868 DD 21 94 11 6079*  	ld ix,4500
       00          
04586D CD 05 C9 04 6080*  	call vdu_load_img
045871 C9          6081*  	ret
045872             6082*  
045872             6083*  ld_23_007:
045872 21 90 67 04 6084*  	ld hl,F23_007
045876 22 8A C7 04 6085*  	ld (cur_filename),hl
04587A 11 C6 D3 04 6086*  	ld de,filedata
04587E 01 00 00 01 6087*  	ld bc,65536
045882 3E 01       6088*  	ld a,mos_load
045884 5B CF       6089*  	RST.LIL 08h
045886 21 43 02 00 6090*  	ld hl,BUF_23_007
04588A 01 0E 00 00 6091*  	ld bc,14
04588E 11 06 00 00 6092*  	ld de,6
045892 DD 21 54 00 6093*  	ld ix,84
       00          
045897 CD 05 C9 04 6094*  	call vdu_load_img
04589B C9          6095*  	ret
04589C             6096*  
04589C             6097*  ld_23_023:
04589C 21 A4 67 04 6098*  	ld hl,F23_023
0458A0 22 8A C7 04 6099*  	ld (cur_filename),hl
0458A4 11 C6 D3 04 6100*  	ld de,filedata
0458A8 01 00 00 01 6101*  	ld bc,65536
0458AC 3E 01       6102*  	ld a,mos_load
0458AE 5B CF       6103*  	RST.LIL 08h
0458B0 21 44 02 00 6104*  	ld hl,BUF_23_023
0458B4 01 11 00 00 6105*  	ld bc,17
0458B8 11 08 00 00 6106*  	ld de,8
0458BC DD 21 88 00 6107*  	ld ix,136
       00          
0458C1 CD 05 C9 04 6108*  	call vdu_load_img
0458C5 C9          6109*  	ret
0458C6             6110*  
0458C6             6111*  ld_23_035:
0458C6 21 B8 67 04 6112*  	ld hl,F23_035
0458CA 22 8A C7 04 6113*  	ld (cur_filename),hl
0458CE 11 C6 D3 04 6114*  	ld de,filedata
0458D2 01 00 00 01 6115*  	ld bc,65536
0458D6 3E 01       6116*  	ld a,mos_load
0458D8 5B CF       6117*  	RST.LIL 08h
0458DA 21 45 02 00 6118*  	ld hl,BUF_23_035
0458DE 01 18 00 00 6119*  	ld bc,24
0458E2 11 0B 00 00 6120*  	ld de,11
0458E6 DD 21 08 01 6121*  	ld ix,264
       00          
0458EB CD 05 C9 04 6122*  	call vdu_load_img
0458EF C9          6123*  	ret
0458F0             6124*  
0458F0             6125*  ld_23_043:
0458F0 21 CC 67 04 6126*  	ld hl,F23_043
0458F4 22 8A C7 04 6127*  	ld (cur_filename),hl
0458F8 11 C6 D3 04 6128*  	ld de,filedata
0458FC 01 00 00 01 6129*  	ld bc,65536
045900 3E 01       6130*  	ld a,mos_load
045902 5B CF       6131*  	RST.LIL 08h
045904 21 46 02 00 6132*  	ld hl,BUF_23_043
045908 01 28 00 00 6133*  	ld bc,40
04590C 11 12 00 00 6134*  	ld de,18
045910 DD 21 D0 02 6135*  	ld ix,720
       00          
045915 CD 05 C9 04 6136*  	call vdu_load_img
045919 C9          6137*  	ret
04591A             6138*  
04591A             6139*  ld_23_047:
04591A 21 E0 67 04 6140*  	ld hl,F23_047
04591E 22 8A C7 04 6141*  	ld (cur_filename),hl
045922 11 C6 D3 04 6142*  	ld de,filedata
045926 01 00 00 01 6143*  	ld bc,65536
04592A 3E 01       6144*  	ld a,mos_load
04592C 5B CF       6145*  	RST.LIL 08h
04592E 21 47 02 00 6146*  	ld hl,BUF_23_047
045932 01 01 00 00 6147*  	ld bc,1
045936 11 01 00 00 6148*  	ld de,1
04593A DD 21 01 00 6149*  	ld ix,1
       00          
04593F CD 05 C9 04 6150*  	call vdu_load_img
045943 C9          6151*  	ret
045944             6152*  
045944             6153*  ld_24_007:
045944 21 F4 67 04 6154*  	ld hl,F24_007
045948 22 8A C7 04 6155*  	ld (cur_filename),hl
04594C 11 C6 D3 04 6156*  	ld de,filedata
045950 01 00 00 01 6157*  	ld bc,65536
045954 3E 01       6158*  	ld a,mos_load
045956 5B CF       6159*  	RST.LIL 08h
045958 21 48 02 00 6160*  	ld hl,BUF_24_007
04595C 01 0B 00 00 6161*  	ld bc,11
045960 11 0B 00 00 6162*  	ld de,11
045964 DD 21 79 00 6163*  	ld ix,121
       00          
045969 CD 05 C9 04 6164*  	call vdu_load_img
04596D C9          6165*  	ret
04596E             6166*  
04596E             6167*  ld_24_023:
04596E 21 08 68 04 6168*  	ld hl,F24_023
045972 22 8A C7 04 6169*  	ld (cur_filename),hl
045976 11 C6 D3 04 6170*  	ld de,filedata
04597A 01 00 00 01 6171*  	ld bc,65536
04597E 3E 01       6172*  	ld a,mos_load
045980 5B CF       6173*  	RST.LIL 08h
045982 21 49 02 00 6174*  	ld hl,BUF_24_023
045986 01 0E 00 00 6175*  	ld bc,14
04598A 11 0E 00 00 6176*  	ld de,14
04598E DD 21 C4 00 6177*  	ld ix,196
       00          
045993 CD 05 C9 04 6178*  	call vdu_load_img
045997 C9          6179*  	ret
045998             6180*  
045998             6181*  ld_24_035:
045998 21 1C 68 04 6182*  	ld hl,F24_035
04599C 22 8A C7 04 6183*  	ld (cur_filename),hl
0459A0 11 C6 D3 04 6184*  	ld de,filedata
0459A4 01 00 00 01 6185*  	ld bc,65536
0459A8 3E 01       6186*  	ld a,mos_load
0459AA 5B CF       6187*  	RST.LIL 08h
0459AC 21 4A 02 00 6188*  	ld hl,BUF_24_035
0459B0 01 14 00 00 6189*  	ld bc,20
0459B4 11 15 00 00 6190*  	ld de,21
0459B8 DD 21 A4 01 6191*  	ld ix,420
       00          
0459BD CD 05 C9 04 6192*  	call vdu_load_img
0459C1 C9          6193*  	ret
0459C2             6194*  
0459C2             6195*  ld_24_043:
0459C2 21 30 68 04 6196*  	ld hl,F24_043
0459C6 22 8A C7 04 6197*  	ld (cur_filename),hl
0459CA 11 C6 D3 04 6198*  	ld de,filedata
0459CE 01 00 00 01 6199*  	ld bc,65536
0459D2 3E 01       6200*  	ld a,mos_load
0459D4 5B CF       6201*  	RST.LIL 08h
0459D6 21 4B 02 00 6202*  	ld hl,BUF_24_043
0459DA 01 21 00 00 6203*  	ld bc,33
0459DE 11 24 00 00 6204*  	ld de,36
0459E2 DD 21 A4 04 6205*  	ld ix,1188
       00          
0459E7 CD 05 C9 04 6206*  	call vdu_load_img
0459EB C9          6207*  	ret
0459EC             6208*  
0459EC             6209*  ld_24_047:
0459EC 21 44 68 04 6210*  	ld hl,F24_047
0459F0 22 8A C7 04 6211*  	ld (cur_filename),hl
0459F4 11 C6 D3 04 6212*  	ld de,filedata
0459F8 01 00 00 01 6213*  	ld bc,65536
0459FC 3E 01       6214*  	ld a,mos_load
0459FE 5B CF       6215*  	RST.LIL 08h
045A00 21 4C 02 00 6216*  	ld hl,BUF_24_047
045A04 01 64 00 00 6217*  	ld bc,100
045A08 11 1E 00 00 6218*  	ld de,30
045A0C DD 21 B8 0B 6219*  	ld ix,3000
       00          
045A11 CD 05 C9 04 6220*  	call vdu_load_img
045A15 C9          6221*  	ret
045A16             6222*  
045A16             6223*  ld_40_007:
045A16 21 58 68 04 6224*  	ld hl,F40_007
045A1A 22 8A C7 04 6225*  	ld (cur_filename),hl
045A1E 11 C6 D3 04 6226*  	ld de,filedata
045A22 01 00 00 01 6227*  	ld bc,65536
045A26 3E 01       6228*  	ld a,mos_load
045A28 5B CF       6229*  	RST.LIL 08h
045A2A 21 4D 02 00 6230*  	ld hl,BUF_40_007
045A2E 01 0E 00 00 6231*  	ld bc,14
045A32 11 07 00 00 6232*  	ld de,7
045A36 DD 21 62 00 6233*  	ld ix,98
       00          
045A3B CD 05 C9 04 6234*  	call vdu_load_img
045A3F C9          6235*  	ret
045A40             6236*  
045A40             6237*  ld_40_023:
045A40 21 6C 68 04 6238*  	ld hl,F40_023
045A44 22 8A C7 04 6239*  	ld (cur_filename),hl
045A48 11 C6 D3 04 6240*  	ld de,filedata
045A4C 01 00 00 01 6241*  	ld bc,65536
045A50 3E 01       6242*  	ld a,mos_load
045A52 5B CF       6243*  	RST.LIL 08h
045A54 21 4E 02 00 6244*  	ld hl,BUF_40_023
045A58 01 12 00 00 6245*  	ld bc,18
045A5C 11 0A 00 00 6246*  	ld de,10
045A60 DD 21 B4 00 6247*  	ld ix,180
       00          
045A65 CD 05 C9 04 6248*  	call vdu_load_img
045A69 C9          6249*  	ret
045A6A             6250*  
045A6A             6251*  ld_40_035:
045A6A 21 80 68 04 6252*  	ld hl,F40_035
045A6E 22 8A C7 04 6253*  	ld (cur_filename),hl
045A72 11 C6 D3 04 6254*  	ld de,filedata
045A76 01 00 00 01 6255*  	ld bc,65536
045A7A 3E 01       6256*  	ld a,mos_load
045A7C 5B CF       6257*  	RST.LIL 08h
045A7E 21 4F 02 00 6258*  	ld hl,BUF_40_035
045A82 01 19 00 00 6259*  	ld bc,25
045A86 11 0E 00 00 6260*  	ld de,14
045A8A DD 21 5E 01 6261*  	ld ix,350
       00          
045A8F CD 05 C9 04 6262*  	call vdu_load_img
045A93 C9          6263*  	ret
045A94             6264*  
045A94             6265*  ld_40_043:
045A94 21 94 68 04 6266*  	ld hl,F40_043
045A98 22 8A C7 04 6267*  	ld (cur_filename),hl
045A9C 11 C6 D3 04 6268*  	ld de,filedata
045AA0 01 00 00 01 6269*  	ld bc,65536
045AA4 3E 01       6270*  	ld a,mos_load
045AA6 5B CF       6271*  	RST.LIL 08h
045AA8 21 50 02 00 6272*  	ld hl,BUF_40_043
045AAC 01 2B 00 00 6273*  	ld bc,43
045AB0 11 17 00 00 6274*  	ld de,23
045AB4 DD 21 DD 03 6275*  	ld ix,989
       00          
045AB9 CD 05 C9 04 6276*  	call vdu_load_img
045ABD C9          6277*  	ret
045ABE             6278*  
045ABE             6279*  ld_40_047:
045ABE 21 A8 68 04 6280*  	ld hl,F40_047
045AC2 22 8A C7 04 6281*  	ld (cur_filename),hl
045AC6 11 C6 D3 04 6282*  	ld de,filedata
045ACA 01 00 00 01 6283*  	ld bc,65536
045ACE 3E 01       6284*  	ld a,mos_load
045AD0 5B CF       6285*  	RST.LIL 08h
045AD2 21 51 02 00 6286*  	ld hl,BUF_40_047
045AD6 01 01 00 00 6287*  	ld bc,1
045ADA 11 01 00 00 6288*  	ld de,1
045ADE DD 21 01 00 6289*  	ld ix,1
       00          
045AE3 CD 05 C9 04 6290*  	call vdu_load_img
045AE7 C9          6291*  	ret
045AE8             6292*  
045AE8             6293*  ld_41_007:
045AE8 21 BC 68 04 6294*  	ld hl,F41_007
045AEC 22 8A C7 04 6295*  	ld (cur_filename),hl
045AF0 11 C6 D3 04 6296*  	ld de,filedata
045AF4 01 00 00 01 6297*  	ld bc,65536
045AF8 3E 01       6298*  	ld a,mos_load
045AFA 5B CF       6299*  	RST.LIL 08h
045AFC 21 52 02 00 6300*  	ld hl,BUF_41_007
045B00 01 0B 00 00 6301*  	ld bc,11
045B04 11 0B 00 00 6302*  	ld de,11
045B08 DD 21 79 00 6303*  	ld ix,121
       00          
045B0D CD 05 C9 04 6304*  	call vdu_load_img
045B11 C9          6305*  	ret
045B12             6306*  
045B12             6307*  ld_41_023:
045B12 21 D0 68 04 6308*  	ld hl,F41_023
045B16 22 8A C7 04 6309*  	ld (cur_filename),hl
045B1A 11 C6 D3 04 6310*  	ld de,filedata
045B1E 01 00 00 01 6311*  	ld bc,65536
045B22 3E 01       6312*  	ld a,mos_load
045B24 5B CF       6313*  	RST.LIL 08h
045B26 21 53 02 00 6314*  	ld hl,BUF_41_023
045B2A 01 10 00 00 6315*  	ld bc,16
045B2E 11 0E 00 00 6316*  	ld de,14
045B32 DD 21 E0 00 6317*  	ld ix,224
       00          
045B37 CD 05 C9 04 6318*  	call vdu_load_img
045B3B C9          6319*  	ret
045B3C             6320*  
045B3C             6321*  ld_41_035:
045B3C 21 E4 68 04 6322*  	ld hl,F41_035
045B40 22 8A C7 04 6323*  	ld (cur_filename),hl
045B44 11 C6 D3 04 6324*  	ld de,filedata
045B48 01 00 00 01 6325*  	ld bc,65536
045B4C 3E 01       6326*  	ld a,mos_load
045B4E 5B CF       6327*  	RST.LIL 08h
045B50 21 54 02 00 6328*  	ld hl,BUF_41_035
045B54 01 16 00 00 6329*  	ld bc,22
045B58 11 14 00 00 6330*  	ld de,20
045B5C DD 21 B8 01 6331*  	ld ix,440
       00          
045B61 CD 05 C9 04 6332*  	call vdu_load_img
045B65 C9          6333*  	ret
045B66             6334*  
045B66             6335*  ld_41_043:
045B66 21 F8 68 04 6336*  	ld hl,F41_043
045B6A 22 8A C7 04 6337*  	ld (cur_filename),hl
045B6E 11 C6 D3 04 6338*  	ld de,filedata
045B72 01 00 00 01 6339*  	ld bc,65536
045B76 3E 01       6340*  	ld a,mos_load
045B78 5B CF       6341*  	RST.LIL 08h
045B7A 21 55 02 00 6342*  	ld hl,BUF_41_043
045B7E 01 25 00 00 6343*  	ld bc,37
045B82 11 22 00 00 6344*  	ld de,34
045B86 DD 21 EA 04 6345*  	ld ix,1258
       00          
045B8B CD 05 C9 04 6346*  	call vdu_load_img
045B8F C9          6347*  	ret
045B90             6348*  
045B90             6349*  ld_41_047:
045B90 21 0C 69 04 6350*  	ld hl,F41_047
045B94 22 8A C7 04 6351*  	ld (cur_filename),hl
045B98 11 C6 D3 04 6352*  	ld de,filedata
045B9C 01 00 00 01 6353*  	ld bc,65536
045BA0 3E 01       6354*  	ld a,mos_load
045BA2 5B CF       6355*  	RST.LIL 08h
045BA4 21 56 02 00 6356*  	ld hl,BUF_41_047
045BA8 01 23 00 00 6357*  	ld bc,35
045BAC 11 19 00 00 6358*  	ld de,25
045BB0 DD 21 6B 03 6359*  	ld ix,875
       00          
045BB5 CD 05 C9 04 6360*  	call vdu_load_img
045BB9 C9          6361*  	ret
045BBA             6362*  
045BBA             6363*  ld_42_007:
045BBA 21 20 69 04 6364*  	ld hl,F42_007
045BBE 22 8A C7 04 6365*  	ld (cur_filename),hl
045BC2 11 C6 D3 04 6366*  	ld de,filedata
045BC6 01 00 00 01 6367*  	ld bc,65536
045BCA 3E 01       6368*  	ld a,mos_load
045BCC 5B CF       6369*  	RST.LIL 08h
045BCE 21 57 02 00 6370*  	ld hl,BUF_42_007
045BD2 01 0A 00 00 6371*  	ld bc,10
045BD6 11 09 00 00 6372*  	ld de,9
045BDA DD 21 5A 00 6373*  	ld ix,90
       00          
045BDF CD 05 C9 04 6374*  	call vdu_load_img
045BE3 C9          6375*  	ret
045BE4             6376*  
045BE4             6377*  ld_42_023:
045BE4 21 34 69 04 6378*  	ld hl,F42_023
045BE8 22 8A C7 04 6379*  	ld (cur_filename),hl
045BEC 11 C6 D3 04 6380*  	ld de,filedata
045BF0 01 00 00 01 6381*  	ld bc,65536
045BF4 3E 01       6382*  	ld a,mos_load
045BF6 5B CF       6383*  	RST.LIL 08h
045BF8 21 58 02 00 6384*  	ld hl,BUF_42_023
045BFC 01 0E 00 00 6385*  	ld bc,14
045C00 11 0B 00 00 6386*  	ld de,11
045C04 DD 21 9A 00 6387*  	ld ix,154
       00          
045C09 CD 05 C9 04 6388*  	call vdu_load_img
045C0D C9          6389*  	ret
045C0E             6390*  
045C0E             6391*  ld_42_035:
045C0E 21 48 69 04 6392*  	ld hl,F42_035
045C12 22 8A C7 04 6393*  	ld (cur_filename),hl
045C16 11 C6 D3 04 6394*  	ld de,filedata
045C1A 01 00 00 01 6395*  	ld bc,65536
045C1E 3E 01       6396*  	ld a,mos_load
045C20 5B CF       6397*  	RST.LIL 08h
045C22 21 59 02 00 6398*  	ld hl,BUF_42_035
045C26 01 13 00 00 6399*  	ld bc,19
045C2A 11 10 00 00 6400*  	ld de,16
045C2E DD 21 30 01 6401*  	ld ix,304
       00          
045C33 CD 05 C9 04 6402*  	call vdu_load_img
045C37 C9          6403*  	ret
045C38             6404*  
045C38             6405*  ld_42_043:
045C38 21 5C 69 04 6406*  	ld hl,F42_043
045C3C 22 8A C7 04 6407*  	ld (cur_filename),hl
045C40 11 C6 D3 04 6408*  	ld de,filedata
045C44 01 00 00 01 6409*  	ld bc,65536
045C48 3E 01       6410*  	ld a,mos_load
045C4A 5B CF       6411*  	RST.LIL 08h
045C4C 21 5A 02 00 6412*  	ld hl,BUF_42_043
045C50 01 20 00 00 6413*  	ld bc,32
045C54 11 1B 00 00 6414*  	ld de,27
045C58 DD 21 60 03 6415*  	ld ix,864
       00          
045C5D CD 05 C9 04 6416*  	call vdu_load_img
045C61 C9          6417*  	ret
045C62             6418*  
045C62             6419*  ld_42_047:
045C62 21 70 69 04 6420*  	ld hl,F42_047
045C66 22 8A C7 04 6421*  	ld (cur_filename),hl
045C6A 11 C6 D3 04 6422*  	ld de,filedata
045C6E 01 00 00 01 6423*  	ld bc,65536
045C72 3E 01       6424*  	ld a,mos_load
045C74 5B CF       6425*  	RST.LIL 08h
045C76 21 5B 02 00 6426*  	ld hl,BUF_42_047
045C7A 01 3F 00 00 6427*  	ld bc,63
045C7E 11 04 00 00 6428*  	ld de,4
045C82 DD 21 FC 00 6429*  	ld ix,252
       00          
045C87 CD 05 C9 04 6430*  	call vdu_load_img
045C8B C9          6431*  	ret
045C8C             6432*  
045C8C             6433*  ld_43_007:
045C8C 21 84 69 04 6434*  	ld hl,F43_007
045C90 22 8A C7 04 6435*  	ld (cur_filename),hl
045C94 11 C6 D3 04 6436*  	ld de,filedata
045C98 01 00 00 01 6437*  	ld bc,65536
045C9C 3E 01       6438*  	ld a,mos_load
045C9E 5B CF       6439*  	RST.LIL 08h
045CA0 21 5C 02 00 6440*  	ld hl,BUF_43_007
045CA4 01 0B 00 00 6441*  	ld bc,11
045CA8 11 04 00 00 6442*  	ld de,4
045CAC DD 21 2C 00 6443*  	ld ix,44
       00          
045CB1 CD 05 C9 04 6444*  	call vdu_load_img
045CB5 C9          6445*  	ret
045CB6             6446*  
045CB6             6447*  ld_43_023:
045CB6 21 98 69 04 6448*  	ld hl,F43_023
045CBA 22 8A C7 04 6449*  	ld (cur_filename),hl
045CBE 11 C6 D3 04 6450*  	ld de,filedata
045CC2 01 00 00 01 6451*  	ld bc,65536
045CC6 3E 01       6452*  	ld a,mos_load
045CC8 5B CF       6453*  	RST.LIL 08h
045CCA 21 5D 02 00 6454*  	ld hl,BUF_43_023
045CCE 01 0F 00 00 6455*  	ld bc,15
045CD2 11 04 00 00 6456*  	ld de,4
045CD6 DD 21 3C 00 6457*  	ld ix,60
       00          
045CDB CD 05 C9 04 6458*  	call vdu_load_img
045CDF C9          6459*  	ret
045CE0             6460*  
045CE0             6461*  ld_43_035:
045CE0 21 AC 69 04 6462*  	ld hl,F43_035
045CE4 22 8A C7 04 6463*  	ld (cur_filename),hl
045CE8 11 C6 D3 04 6464*  	ld de,filedata
045CEC 01 00 00 01 6465*  	ld bc,65536
045CF0 3E 01       6466*  	ld a,mos_load
045CF2 5B CF       6467*  	RST.LIL 08h
045CF4 21 5E 02 00 6468*  	ld hl,BUF_43_035
045CF8 01 15 00 00 6469*  	ld bc,21
045CFC 11 06 00 00 6470*  	ld de,6
045D00 DD 21 7E 00 6471*  	ld ix,126
       00          
045D05 CD 05 C9 04 6472*  	call vdu_load_img
045D09 C9          6473*  	ret
045D0A             6474*  
045D0A             6475*  ld_43_043:
045D0A 21 C0 69 04 6476*  	ld hl,F43_043
045D0E 22 8A C7 04 6477*  	ld (cur_filename),hl
045D12 11 C6 D3 04 6478*  	ld de,filedata
045D16 01 00 00 01 6479*  	ld bc,65536
045D1A 3E 01       6480*  	ld a,mos_load
045D1C 5B CF       6481*  	RST.LIL 08h
045D1E 21 5F 02 00 6482*  	ld hl,BUF_43_043
045D22 01 23 00 00 6483*  	ld bc,35
045D26 11 0D 00 00 6484*  	ld de,13
045D2A DD 21 C7 01 6485*  	ld ix,455
       00          
045D2F CD 05 C9 04 6486*  	call vdu_load_img
045D33 C9          6487*  	ret
045D34             6488*  
045D34             6489*  ld_43_047:
045D34 21 D4 69 04 6490*  	ld hl,F43_047
045D38 22 8A C7 04 6491*  	ld (cur_filename),hl
045D3C 11 C6 D3 04 6492*  	ld de,filedata
045D40 01 00 00 01 6493*  	ld bc,65536
045D44 3E 01       6494*  	ld a,mos_load
045D46 5B CF       6495*  	RST.LIL 08h
045D48 21 60 02 00 6496*  	ld hl,BUF_43_047
045D4C 01 01 00 00 6497*  	ld bc,1
045D50 11 01 00 00 6498*  	ld de,1
045D54 DD 21 01 00 6499*  	ld ix,1
       00          
045D59 CD 05 C9 04 6500*  	call vdu_load_img
045D5D C9          6501*  	ret
045D5E             6502*  
045D5E             6503*  ld_44_007:
045D5E 21 E8 69 04 6504*  	ld hl,F44_007
045D62 22 8A C7 04 6505*  	ld (cur_filename),hl
045D66 11 C6 D3 04 6506*  	ld de,filedata
045D6A 01 00 00 01 6507*  	ld bc,65536
045D6E 3E 01       6508*  	ld a,mos_load
045D70 5B CF       6509*  	RST.LIL 08h
045D72 21 61 02 00 6510*  	ld hl,BUF_44_007
045D76 01 05 00 00 6511*  	ld bc,5
045D7A 11 04 00 00 6512*  	ld de,4
045D7E DD 21 14 00 6513*  	ld ix,20
       00          
045D83 CD 05 C9 04 6514*  	call vdu_load_img
045D87 C9          6515*  	ret
045D88             6516*  
045D88             6517*  ld_44_023:
045D88 21 FC 69 04 6518*  	ld hl,F44_023
045D8C 22 8A C7 04 6519*  	ld (cur_filename),hl
045D90 11 C6 D3 04 6520*  	ld de,filedata
045D94 01 00 00 01 6521*  	ld bc,65536
045D98 3E 01       6522*  	ld a,mos_load
045D9A 5B CF       6523*  	RST.LIL 08h
045D9C 21 62 02 00 6524*  	ld hl,BUF_44_023
045DA0 01 08 00 00 6525*  	ld bc,8
045DA4 11 06 00 00 6526*  	ld de,6
045DA8 DD 21 30 00 6527*  	ld ix,48
       00          
045DAD CD 05 C9 04 6528*  	call vdu_load_img
045DB1 C9          6529*  	ret
045DB2             6530*  
045DB2             6531*  ld_44_035:
045DB2 21 10 6A 04 6532*  	ld hl,F44_035
045DB6 22 8A C7 04 6533*  	ld (cur_filename),hl
045DBA 11 C6 D3 04 6534*  	ld de,filedata
045DBE 01 00 00 01 6535*  	ld bc,65536
045DC2 3E 01       6536*  	ld a,mos_load
045DC4 5B CF       6537*  	RST.LIL 08h
045DC6 21 63 02 00 6538*  	ld hl,BUF_44_035
045DCA 01 0C 00 00 6539*  	ld bc,12
045DCE 11 09 00 00 6540*  	ld de,9
045DD2 DD 21 6C 00 6541*  	ld ix,108
       00          
045DD7 CD 05 C9 04 6542*  	call vdu_load_img
045DDB C9          6543*  	ret
045DDC             6544*  
045DDC             6545*  ld_44_043:
045DDC 21 24 6A 04 6546*  	ld hl,F44_043
045DE0 22 8A C7 04 6547*  	ld (cur_filename),hl
045DE4 11 C6 D3 04 6548*  	ld de,filedata
045DE8 01 00 00 01 6549*  	ld bc,65536
045DEC 3E 01       6550*  	ld a,mos_load
045DEE 5B CF       6551*  	RST.LIL 08h
045DF0 21 64 02 00 6552*  	ld hl,BUF_44_043
045DF4 01 14 00 00 6553*  	ld bc,20
045DF8 11 0F 00 00 6554*  	ld de,15
045DFC DD 21 2C 01 6555*  	ld ix,300
       00          
045E01 CD 05 C9 04 6556*  	call vdu_load_img
045E05 C9          6557*  	ret
045E06             6558*  
045E06             6559*  ld_44_047:
045E06 21 38 6A 04 6560*  	ld hl,F44_047
045E0A 22 8A C7 04 6561*  	ld (cur_filename),hl
045E0E 11 C6 D3 04 6562*  	ld de,filedata
045E12 01 00 00 01 6563*  	ld bc,65536
045E16 3E 01       6564*  	ld a,mos_load
045E18 5B CF       6565*  	RST.LIL 08h
045E1A 21 65 02 00 6566*  	ld hl,BUF_44_047
045E1E 01 01 00 00 6567*  	ld bc,1
045E22 11 01 00 00 6568*  	ld de,1
045E26 DD 21 01 00 6569*  	ld ix,1
       00          
045E2B CD 05 C9 04 6570*  	call vdu_load_img
045E2F C9          6571*  	ret
045E30             6572*  
045E30             6573*  ld_45_007:
045E30 21 4C 6A 04 6574*  	ld hl,F45_007
045E34 22 8A C7 04 6575*  	ld (cur_filename),hl
045E38 11 C6 D3 04 6576*  	ld de,filedata
045E3C 01 00 00 01 6577*  	ld bc,65536
045E40 3E 01       6578*  	ld a,mos_load
045E42 5B CF       6579*  	RST.LIL 08h
045E44 21 66 02 00 6580*  	ld hl,BUF_45_007
045E48 01 10 00 00 6581*  	ld bc,16
045E4C 11 0A 00 00 6582*  	ld de,10
045E50 DD 21 A0 00 6583*  	ld ix,160
       00          
045E55 CD 05 C9 04 6584*  	call vdu_load_img
045E59 C9          6585*  	ret
045E5A             6586*  
045E5A             6587*  ld_45_023:
045E5A 21 60 6A 04 6588*  	ld hl,F45_023
045E5E 22 8A C7 04 6589*  	ld (cur_filename),hl
045E62 11 C6 D3 04 6590*  	ld de,filedata
045E66 01 00 00 01 6591*  	ld bc,65536
045E6A 3E 01       6592*  	ld a,mos_load
045E6C 5B CF       6593*  	RST.LIL 08h
045E6E 21 67 02 00 6594*  	ld hl,BUF_45_023
045E72 01 14 00 00 6595*  	ld bc,20
045E76 11 0D 00 00 6596*  	ld de,13
045E7A DD 21 04 01 6597*  	ld ix,260
       00          
045E7F CD 05 C9 04 6598*  	call vdu_load_img
045E83 C9          6599*  	ret
045E84             6600*  
045E84             6601*  ld_45_035:
045E84 21 74 6A 04 6602*  	ld hl,F45_035
045E88 22 8A C7 04 6603*  	ld (cur_filename),hl
045E8C 11 C6 D3 04 6604*  	ld de,filedata
045E90 01 00 00 01 6605*  	ld bc,65536
045E94 3E 01       6606*  	ld a,mos_load
045E96 5B CF       6607*  	RST.LIL 08h
045E98 21 68 02 00 6608*  	ld hl,BUF_45_035
045E9C 01 1C 00 00 6609*  	ld bc,28
045EA0 11 13 00 00 6610*  	ld de,19
045EA4 DD 21 14 02 6611*  	ld ix,532
       00          
045EA9 CD 05 C9 04 6612*  	call vdu_load_img
045EAD C9          6613*  	ret
045EAE             6614*  
045EAE             6615*  ld_45_043:
045EAE 21 88 6A 04 6616*  	ld hl,F45_043
045EB2 22 8A C7 04 6617*  	ld (cur_filename),hl
045EB6 11 C6 D3 04 6618*  	ld de,filedata
045EBA 01 00 00 01 6619*  	ld bc,65536
045EBE 3E 01       6620*  	ld a,mos_load
045EC0 5B CF       6621*  	RST.LIL 08h
045EC2 21 69 02 00 6622*  	ld hl,BUF_45_043
045EC6 01 30 00 00 6623*  	ld bc,48
045ECA 11 21 00 00 6624*  	ld de,33
045ECE DD 21 30 06 6625*  	ld ix,1584
       00          
045ED3 CD 05 C9 04 6626*  	call vdu_load_img
045ED7 C9          6627*  	ret
045ED8             6628*  
045ED8             6629*  ld_45_047:
045ED8 21 9C 6A 04 6630*  	ld hl,F45_047
045EDC 22 8A C7 04 6631*  	ld (cur_filename),hl
045EE0 11 C6 D3 04 6632*  	ld de,filedata
045EE4 01 00 00 01 6633*  	ld bc,65536
045EE8 3E 01       6634*  	ld a,mos_load
045EEA 5B CF       6635*  	RST.LIL 08h
045EEC 21 6A 02 00 6636*  	ld hl,BUF_45_047
045EF0 01 75 00 00 6637*  	ld bc,117
045EF4 11 13 00 00 6638*  	ld de,19
045EF8 DD 21 AF 08 6639*  	ld ix,2223
       00          
045EFD CD 05 C9 04 6640*  	call vdu_load_img
045F01 C9          6641*  	ret
045F02             6642*  
045F02             6643*  ld_46_007:
045F02 21 B0 6A 04 6644*  	ld hl,F46_007
045F06 22 8A C7 04 6645*  	ld (cur_filename),hl
045F0A 11 C6 D3 04 6646*  	ld de,filedata
045F0E 01 00 00 01 6647*  	ld bc,65536
045F12 3E 01       6648*  	ld a,mos_load
045F14 5B CF       6649*  	RST.LIL 08h
045F16 21 6B 02 00 6650*  	ld hl,BUF_46_007
045F1A 01 10 00 00 6651*  	ld bc,16
045F1E 11 08 00 00 6652*  	ld de,8
045F22 DD 21 80 00 6653*  	ld ix,128
       00          
045F27 CD 05 C9 04 6654*  	call vdu_load_img
045F2B C9          6655*  	ret
045F2C             6656*  
045F2C             6657*  ld_46_023:
045F2C 21 C4 6A 04 6658*  	ld hl,F46_023
045F30 22 8A C7 04 6659*  	ld (cur_filename),hl
045F34 11 C6 D3 04 6660*  	ld de,filedata
045F38 01 00 00 01 6661*  	ld bc,65536
045F3C 3E 01       6662*  	ld a,mos_load
045F3E 5B CF       6663*  	RST.LIL 08h
045F40 21 6C 02 00 6664*  	ld hl,BUF_46_023
045F44 01 14 00 00 6665*  	ld bc,20
045F48 11 0B 00 00 6666*  	ld de,11
045F4C DD 21 DC 00 6667*  	ld ix,220
       00          
045F51 CD 05 C9 04 6668*  	call vdu_load_img
045F55 C9          6669*  	ret
045F56             6670*  
045F56             6671*  ld_46_035:
045F56 21 D8 6A 04 6672*  	ld hl,F46_035
045F5A 22 8A C7 04 6673*  	ld (cur_filename),hl
045F5E 11 C6 D3 04 6674*  	ld de,filedata
045F62 01 00 00 01 6675*  	ld bc,65536
045F66 3E 01       6676*  	ld a,mos_load
045F68 5B CF       6677*  	RST.LIL 08h
045F6A 21 6D 02 00 6678*  	ld hl,BUF_46_035
045F6E 01 1C 00 00 6679*  	ld bc,28
045F72 11 0F 00 00 6680*  	ld de,15
045F76 DD 21 A4 01 6681*  	ld ix,420
       00          
045F7B CD 05 C9 04 6682*  	call vdu_load_img
045F7F C9          6683*  	ret
045F80             6684*  
045F80             6685*  ld_46_043:
045F80 21 EC 6A 04 6686*  	ld hl,F46_043
045F84 22 8A C7 04 6687*  	ld (cur_filename),hl
045F88 11 C6 D3 04 6688*  	ld de,filedata
045F8C 01 00 00 01 6689*  	ld bc,65536
045F90 3E 01       6690*  	ld a,mos_load
045F92 5B CF       6691*  	RST.LIL 08h
045F94 21 6E 02 00 6692*  	ld hl,BUF_46_043
045F98 01 30 00 00 6693*  	ld bc,48
045F9C 11 1B 00 00 6694*  	ld de,27
045FA0 DD 21 10 05 6695*  	ld ix,1296
       00          
045FA5 CD 05 C9 04 6696*  	call vdu_load_img
045FA9 C9          6697*  	ret
045FAA             6698*  
045FAA             6699*  ld_46_047:
045FAA 21 00 6B 04 6700*  	ld hl,F46_047
045FAE 22 8A C7 04 6701*  	ld (cur_filename),hl
045FB2 11 C6 D3 04 6702*  	ld de,filedata
045FB6 01 00 00 01 6703*  	ld bc,65536
045FBA 3E 01       6704*  	ld a,mos_load
045FBC 5B CF       6705*  	RST.LIL 08h
045FBE 21 6F 02 00 6706*  	ld hl,BUF_46_047
045FC2 01 51 00 00 6707*  	ld bc,81
045FC6 11 01 00 00 6708*  	ld de,1
045FCA DD 21 51 00 6709*  	ld ix,81
       00          
045FCF CD 05 C9 04 6710*  	call vdu_load_img
045FD3 C9          6711*  	ret
045FD4             6712*  
045FD4             6713*  ld_47_007:
045FD4 21 14 6B 04 6714*  	ld hl,F47_007
045FD8 22 8A C7 04 6715*  	ld (cur_filename),hl
045FDC 11 C6 D3 04 6716*  	ld de,filedata
045FE0 01 00 00 01 6717*  	ld bc,65536
045FE4 3E 01       6718*  	ld a,mos_load
045FE6 5B CF       6719*  	RST.LIL 08h
045FE8 21 70 02 00 6720*  	ld hl,BUF_47_007
045FEC 01 10 00 00 6721*  	ld bc,16
045FF0 11 09 00 00 6722*  	ld de,9
045FF4 DD 21 90 00 6723*  	ld ix,144
       00          
045FF9 CD 05 C9 04 6724*  	call vdu_load_img
045FFD C9          6725*  	ret
045FFE             6726*  
045FFE             6727*  ld_47_023:
045FFE 21 28 6B 04 6728*  	ld hl,F47_023
046002 22 8A C7 04 6729*  	ld (cur_filename),hl
046006 11 C6 D3 04 6730*  	ld de,filedata
04600A 01 00 00 01 6731*  	ld bc,65536
04600E 3E 01       6732*  	ld a,mos_load
046010 5B CF       6733*  	RST.LIL 08h
046012 21 71 02 00 6734*  	ld hl,BUF_47_023
046016 01 14 00 00 6735*  	ld bc,20
04601A 11 0B 00 00 6736*  	ld de,11
04601E DD 21 DC 00 6737*  	ld ix,220
       00          
046023 CD 05 C9 04 6738*  	call vdu_load_img
046027 C9          6739*  	ret
046028             6740*  
046028             6741*  ld_47_035:
046028 21 3C 6B 04 6742*  	ld hl,F47_035
04602C 22 8A C7 04 6743*  	ld (cur_filename),hl
046030 11 C6 D3 04 6744*  	ld de,filedata
046034 01 00 00 01 6745*  	ld bc,65536
046038 3E 01       6746*  	ld a,mos_load
04603A 5B CF       6747*  	RST.LIL 08h
04603C 21 72 02 00 6748*  	ld hl,BUF_47_035
046040 01 1C 00 00 6749*  	ld bc,28
046044 11 10 00 00 6750*  	ld de,16
046048 DD 21 C0 01 6751*  	ld ix,448
       00          
04604D CD 05 C9 04 6752*  	call vdu_load_img
046051 C9          6753*  	ret
046052             6754*  
046052             6755*  ld_47_043:
046052 21 50 6B 04 6756*  	ld hl,F47_043
046056 22 8A C7 04 6757*  	ld (cur_filename),hl
04605A 11 C6 D3 04 6758*  	ld de,filedata
04605E 01 00 00 01 6759*  	ld bc,65536
046062 3E 01       6760*  	ld a,mos_load
046064 5B CF       6761*  	RST.LIL 08h
046066 21 73 02 00 6762*  	ld hl,BUF_47_043
04606A 01 30 00 00 6763*  	ld bc,48
04606E 11 1B 00 00 6764*  	ld de,27
046072 DD 21 10 05 6765*  	ld ix,1296
       00          
046077 CD 05 C9 04 6766*  	call vdu_load_img
04607B C9          6767*  	ret
04607C             6768*  
04607C             6769*  ld_47_047:
04607C 21 64 6B 04 6770*  	ld hl,F47_047
046080 22 8A C7 04 6771*  	ld (cur_filename),hl
046084 11 C6 D3 04 6772*  	ld de,filedata
046088 01 00 00 01 6773*  	ld bc,65536
04608C 3E 01       6774*  	ld a,mos_load
04608E 5B CF       6775*  	RST.LIL 08h
046090 21 74 02 00 6776*  	ld hl,BUF_47_047
046094 01 1B 00 00 6777*  	ld bc,27
046098 11 0A 00 00 6778*  	ld de,10
04609C DD 21 0E 01 6779*  	ld ix,270
       00          
0460A1 CD 05 C9 04 6780*  	call vdu_load_img
0460A5 C9          6781*  	ret
0460A6             6782*  
0460A6             6783*  ld_48_007:
0460A6 21 78 6B 04 6784*  	ld hl,F48_007
0460AA 22 8A C7 04 6785*  	ld (cur_filename),hl
0460AE 11 C6 D3 04 6786*  	ld de,filedata
0460B2 01 00 00 01 6787*  	ld bc,65536
0460B6 3E 01       6788*  	ld a,mos_load
0460B8 5B CF       6789*  	RST.LIL 08h
0460BA 21 75 02 00 6790*  	ld hl,BUF_48_007
0460BE 01 12 00 00 6791*  	ld bc,18
0460C2 11 07 00 00 6792*  	ld de,7
0460C6 DD 21 7E 00 6793*  	ld ix,126
       00          
0460CB CD 05 C9 04 6794*  	call vdu_load_img
0460CF C9          6795*  	ret
0460D0             6796*  
0460D0             6797*  ld_48_023:
0460D0 21 8C 6B 04 6798*  	ld hl,F48_023
0460D4 22 8A C7 04 6799*  	ld (cur_filename),hl
0460D8 11 C6 D3 04 6800*  	ld de,filedata
0460DC 01 00 00 01 6801*  	ld bc,65536
0460E0 3E 01       6802*  	ld a,mos_load
0460E2 5B CF       6803*  	RST.LIL 08h
0460E4 21 76 02 00 6804*  	ld hl,BUF_48_023
0460E8 01 17 00 00 6805*  	ld bc,23
0460EC 11 0A 00 00 6806*  	ld de,10
0460F0 DD 21 E6 00 6807*  	ld ix,230
       00          
0460F5 CD 05 C9 04 6808*  	call vdu_load_img
0460F9 C9          6809*  	ret
0460FA             6810*  
0460FA             6811*  ld_48_035:
0460FA 21 A0 6B 04 6812*  	ld hl,F48_035
0460FE 22 8A C7 04 6813*  	ld (cur_filename),hl
046102 11 C6 D3 04 6814*  	ld de,filedata
046106 01 00 00 01 6815*  	ld bc,65536
04610A 3E 01       6816*  	ld a,mos_load
04610C 5B CF       6817*  	RST.LIL 08h
04610E 21 77 02 00 6818*  	ld hl,BUF_48_035
046112 01 1F 00 00 6819*  	ld bc,31
046116 11 0D 00 00 6820*  	ld de,13
04611A DD 21 93 01 6821*  	ld ix,403
       00          
04611F CD 05 C9 04 6822*  	call vdu_load_img
046123 C9          6823*  	ret
046124             6824*  
046124             6825*  ld_48_043:
046124 21 B4 6B 04 6826*  	ld hl,F48_043
046128 22 8A C7 04 6827*  	ld (cur_filename),hl
04612C 11 C6 D3 04 6828*  	ld de,filedata
046130 01 00 00 01 6829*  	ld bc,65536
046134 3E 01       6830*  	ld a,mos_load
046136 5B CF       6831*  	RST.LIL 08h
046138 21 78 02 00 6832*  	ld hl,BUF_48_043
04613C 01 35 00 00 6833*  	ld bc,53
046140 11 18 00 00 6834*  	ld de,24
046144 DD 21 F8 04 6835*  	ld ix,1272
       00          
046149 CD 05 C9 04 6836*  	call vdu_load_img
04614D C9          6837*  	ret
04614E             6838*  
04614E             6839*  ld_48_047:
04614E 21 C8 6B 04 6840*  	ld hl,F48_047
046152 22 8A C7 04 6841*  	ld (cur_filename),hl
046156 11 C6 D3 04 6842*  	ld de,filedata
04615A 01 00 00 01 6843*  	ld bc,65536
04615E 3E 01       6844*  	ld a,mos_load
046160 5B CF       6845*  	RST.LIL 08h
046162 21 79 02 00 6846*  	ld hl,BUF_48_047
046166 01 01 00 00 6847*  	ld bc,1
04616A 11 01 00 00 6848*  	ld de,1
04616E DD 21 01 00 6849*  	ld ix,1
       00          
046173 CD 05 C9 04 6850*  	call vdu_load_img
046177 C9          6851*  	ret
046178             6852*  
046178             6853*  ld_49_007:
046178 21 DC 6B 04 6854*  	ld hl,F49_007
04617C 22 8A C7 04 6855*  	ld (cur_filename),hl
046180 11 C6 D3 04 6856*  	ld de,filedata
046184 01 00 00 01 6857*  	ld bc,65536
046188 3E 01       6858*  	ld a,mos_load
04618A 5B CF       6859*  	RST.LIL 08h
04618C 21 7A 02 00 6860*  	ld hl,BUF_49_007
046190 01 0E 00 00 6861*  	ld bc,14
046194 11 06 00 00 6862*  	ld de,6
046198 DD 21 54 00 6863*  	ld ix,84
       00          
04619D CD 05 C9 04 6864*  	call vdu_load_img
0461A1 C9          6865*  	ret
0461A2             6866*  
0461A2             6867*  ld_49_023:
0461A2 21 F0 6B 04 6868*  	ld hl,F49_023
0461A6 22 8A C7 04 6869*  	ld (cur_filename),hl
0461AA 11 C6 D3 04 6870*  	ld de,filedata
0461AE 01 00 00 01 6871*  	ld bc,65536
0461B2 3E 01       6872*  	ld a,mos_load
0461B4 5B CF       6873*  	RST.LIL 08h
0461B6 21 7B 02 00 6874*  	ld hl,BUF_49_023
0461BA 01 12 00 00 6875*  	ld bc,18
0461BE 11 08 00 00 6876*  	ld de,8
0461C2 DD 21 90 00 6877*  	ld ix,144
       00          
0461C7 CD 05 C9 04 6878*  	call vdu_load_img
0461CB C9          6879*  	ret
0461CC             6880*  
0461CC             6881*  ld_49_035:
0461CC 21 04 6C 04 6882*  	ld hl,F49_035
0461D0 22 8A C7 04 6883*  	ld (cur_filename),hl
0461D4 11 C6 D3 04 6884*  	ld de,filedata
0461D8 01 00 00 01 6885*  	ld bc,65536
0461DC 3E 01       6886*  	ld a,mos_load
0461DE 5B CF       6887*  	RST.LIL 08h
0461E0 21 7C 02 00 6888*  	ld hl,BUF_49_035
0461E4 01 1A 00 00 6889*  	ld bc,26
0461E8 11 0B 00 00 6890*  	ld de,11
0461EC DD 21 1E 01 6891*  	ld ix,286
       00          
0461F1 CD 05 C9 04 6892*  	call vdu_load_img
0461F5 C9          6893*  	ret
0461F6             6894*  
0461F6             6895*  ld_49_043:
0461F6 21 18 6C 04 6896*  	ld hl,F49_043
0461FA 22 8A C7 04 6897*  	ld (cur_filename),hl
0461FE 11 C6 D3 04 6898*  	ld de,filedata
046202 01 00 00 01 6899*  	ld bc,65536
046206 3E 01       6900*  	ld a,mos_load
046208 5B CF       6901*  	RST.LIL 08h
04620A 21 7D 02 00 6902*  	ld hl,BUF_49_043
04620E 01 2B 00 00 6903*  	ld bc,43
046212 11 12 00 00 6904*  	ld de,18
046216 DD 21 06 03 6905*  	ld ix,774
       00          
04621B CD 05 C9 04 6906*  	call vdu_load_img
04621F C9          6907*  	ret
046220             6908*  
046220             6909*  ld_49_047:
046220 21 2C 6C 04 6910*  	ld hl,F49_047
046224 22 8A C7 04 6911*  	ld (cur_filename),hl
046228 11 C6 D3 04 6912*  	ld de,filedata
04622C 01 00 00 01 6913*  	ld bc,65536
046230 3E 01       6914*  	ld a,mos_load
046232 5B CF       6915*  	RST.LIL 08h
046234 21 7E 02 00 6916*  	ld hl,BUF_49_047
046238 01 01 00 00 6917*  	ld bc,1
04623C 11 01 00 00 6918*  	ld de,1
046240 DD 21 01 00 6919*  	ld ix,1
       00          
046245 CD 05 C9 04 6920*  	call vdu_load_img
046249 C9          6921*  	ret
04624A             6922*  
04624A             6923*  ld_50_007:
04624A 21 40 6C 04 6924*  	ld hl,F50_007
04624E 22 8A C7 04 6925*  	ld (cur_filename),hl
046252 11 C6 D3 04 6926*  	ld de,filedata
046256 01 00 00 01 6927*  	ld bc,65536
04625A 3E 01       6928*  	ld a,mos_load
04625C 5B CF       6929*  	RST.LIL 08h
04625E 21 7F 02 00 6930*  	ld hl,BUF_50_007
046262 01 0A 00 00 6931*  	ld bc,10
046266 11 0D 00 00 6932*  	ld de,13
04626A DD 21 82 00 6933*  	ld ix,130
       00          
04626F CD 05 C9 04 6934*  	call vdu_load_img
046273 C9          6935*  	ret
046274             6936*  
046274             6937*  ld_50_023:
046274 21 54 6C 04 6938*  	ld hl,F50_023
046278 22 8A C7 04 6939*  	ld (cur_filename),hl
04627C 11 C6 D3 04 6940*  	ld de,filedata
046280 01 00 00 01 6941*  	ld bc,65536
046284 3E 01       6942*  	ld a,mos_load
046286 5B CF       6943*  	RST.LIL 08h
046288 21 80 02 00 6944*  	ld hl,BUF_50_023
04628C 01 0D 00 00 6945*  	ld bc,13
046290 11 11 00 00 6946*  	ld de,17
046294 DD 21 DD 00 6947*  	ld ix,221
       00          
046299 CD 05 C9 04 6948*  	call vdu_load_img
04629D C9          6949*  	ret
04629E             6950*  
04629E             6951*  ld_50_035:
04629E 21 68 6C 04 6952*  	ld hl,F50_035
0462A2 22 8A C7 04 6953*  	ld (cur_filename),hl
0462A6 11 C6 D3 04 6954*  	ld de,filedata
0462AA 01 00 00 01 6955*  	ld bc,65536
0462AE 3E 01       6956*  	ld a,mos_load
0462B0 5B CF       6957*  	RST.LIL 08h
0462B2 21 81 02 00 6958*  	ld hl,BUF_50_035
0462B6 01 12 00 00 6959*  	ld bc,18
0462BA 11 19 00 00 6960*  	ld de,25
0462BE DD 21 C2 01 6961*  	ld ix,450
       00          
0462C3 CD 05 C9 04 6962*  	call vdu_load_img
0462C7 C9          6963*  	ret
0462C8             6964*  
0462C8             6965*  ld_50_043:
0462C8 21 7C 6C 04 6966*  	ld hl,F50_043
0462CC 22 8A C7 04 6967*  	ld (cur_filename),hl
0462D0 11 C6 D3 04 6968*  	ld de,filedata
0462D4 01 00 00 01 6969*  	ld bc,65536
0462D8 3E 01       6970*  	ld a,mos_load
0462DA 5B CF       6971*  	RST.LIL 08h
0462DC 21 82 02 00 6972*  	ld hl,BUF_50_043
0462E0 01 1E 00 00 6973*  	ld bc,30
0462E4 11 2A 00 00 6974*  	ld de,42
0462E8 DD 21 EC 04 6975*  	ld ix,1260
       00          
0462ED CD 05 C9 04 6976*  	call vdu_load_img
0462F1 C9          6977*  	ret
0462F2             6978*  
0462F2             6979*  ld_50_047:
0462F2 21 90 6C 04 6980*  	ld hl,F50_047
0462F6 22 8A C7 04 6981*  	ld (cur_filename),hl
0462FA 11 C6 D3 04 6982*  	ld de,filedata
0462FE 01 00 00 01 6983*  	ld bc,65536
046302 3E 01       6984*  	ld a,mos_load
046304 5B CF       6985*  	RST.LIL 08h
046306 21 83 02 00 6986*  	ld hl,BUF_50_047
04630A 01 46 00 00 6987*  	ld bc,70
04630E 11 32 00 00 6988*  	ld de,50
046312 DD 21 AC 0D 6989*  	ld ix,3500
       00          
046317 CD 05 C9 04 6990*  	call vdu_load_img
04631B C9          6991*  	ret
04631C             6992*  
04631C             6993*  ld_51_007:
04631C 21 A4 6C 04 6994*  	ld hl,F51_007
046320 22 8A C7 04 6995*  	ld (cur_filename),hl
046324 11 C6 D3 04 6996*  	ld de,filedata
046328 01 00 00 01 6997*  	ld bc,65536
04632C 3E 01       6998*  	ld a,mos_load
04632E 5B CF       6999*  	RST.LIL 08h
046330 21 84 02 00 7000*  	ld hl,BUF_51_007
046334 01 11 00 00 7001*  	ld bc,17
046338 11 17 00 00 7002*  	ld de,23
04633C DD 21 87 01 7003*  	ld ix,391
       00          
046341 CD 05 C9 04 7004*  	call vdu_load_img
046345 C9          7005*  	ret
046346             7006*  
046346             7007*  ld_51_023:
046346 21 B8 6C 04 7008*  	ld hl,F51_023
04634A 22 8A C7 04 7009*  	ld (cur_filename),hl
04634E 11 C6 D3 04 7010*  	ld de,filedata
046352 01 00 00 01 7011*  	ld bc,65536
046356 3E 01       7012*  	ld a,mos_load
046358 5B CF       7013*  	RST.LIL 08h
04635A 21 85 02 00 7014*  	ld hl,BUF_51_023
04635E 01 15 00 00 7015*  	ld bc,21
046362 11 1D 00 00 7016*  	ld de,29
046366 DD 21 61 02 7017*  	ld ix,609
       00          
04636B CD 05 C9 04 7018*  	call vdu_load_img
04636F C9          7019*  	ret
046370             7020*  
046370             7021*  ld_51_035:
046370 21 CC 6C 04 7022*  	ld hl,F51_035
046374 22 8A C7 04 7023*  	ld (cur_filename),hl
046378 11 C6 D3 04 7024*  	ld de,filedata
04637C 01 00 00 01 7025*  	ld bc,65536
046380 3E 01       7026*  	ld a,mos_load
046382 5B CF       7027*  	RST.LIL 08h
046384 21 86 02 00 7028*  	ld hl,BUF_51_035
046388 01 1D 00 00 7029*  	ld bc,29
04638C 11 29 00 00 7030*  	ld de,41
046390 DD 21 A5 04 7031*  	ld ix,1189
       00          
046395 CD 05 C9 04 7032*  	call vdu_load_img
046399 C9          7033*  	ret
04639A             7034*  
04639A             7035*  ld_51_043:
04639A 21 E0 6C 04 7036*  	ld hl,F51_043
04639E 22 8A C7 04 7037*  	ld (cur_filename),hl
0463A2 11 C6 D3 04 7038*  	ld de,filedata
0463A6 01 00 00 01 7039*  	ld bc,65536
0463AA 3E 01       7040*  	ld a,mos_load
0463AC 5B CF       7041*  	RST.LIL 08h
0463AE 21 87 02 00 7042*  	ld hl,BUF_51_043
0463B2 01 31 00 00 7043*  	ld bc,49
0463B6 11 46 00 00 7044*  	ld de,70
0463BA DD 21 66 0D 7045*  	ld ix,3430
       00          
0463BF CD 05 C9 04 7046*  	call vdu_load_img
0463C3 C9          7047*  	ret
0463C4             7048*  
0463C4             7049*  ld_51_047:
0463C4 21 F4 6C 04 7050*  	ld hl,F51_047
0463C8 22 8A C7 04 7051*  	ld (cur_filename),hl
0463CC 11 C6 D3 04 7052*  	ld de,filedata
0463D0 01 00 00 01 7053*  	ld bc,65536
0463D4 3E 01       7054*  	ld a,mos_load
0463D6 5B CF       7055*  	RST.LIL 08h
0463D8 21 88 02 00 7056*  	ld hl,BUF_51_047
0463DC 01 91 00 00 7057*  	ld bc,145
0463E0 11 82 00 00 7058*  	ld de,130
0463E4 DD 21 A2 49 7059*  	ld ix,18850
       00          
0463E9 CD 05 C9 04 7060*  	call vdu_load_img
0463ED C9          7061*  	ret
0463EE             7062*  
0463EE             7063*  ld_52_007:
0463EE 21 08 6D 04 7064*  	ld hl,F52_007
0463F2 22 8A C7 04 7065*  	ld (cur_filename),hl
0463F6 11 C6 D3 04 7066*  	ld de,filedata
0463FA 01 00 00 01 7067*  	ld bc,65536
0463FE 3E 01       7068*  	ld a,mos_load
046400 5B CF       7069*  	RST.LIL 08h
046402 21 89 02 00 7070*  	ld hl,BUF_52_007
046406 01 0E 00 00 7071*  	ld bc,14
04640A 11 17 00 00 7072*  	ld de,23
04640E DD 21 42 01 7073*  	ld ix,322
       00          
046413 CD 05 C9 04 7074*  	call vdu_load_img
046417 C9          7075*  	ret
046418             7076*  
046418             7077*  ld_52_023:
046418 21 1C 6D 04 7078*  	ld hl,F52_023
04641C 22 8A C7 04 7079*  	ld (cur_filename),hl
046420 11 C6 D3 04 7080*  	ld de,filedata
046424 01 00 00 01 7081*  	ld bc,65536
046428 3E 01       7082*  	ld a,mos_load
04642A 5B CF       7083*  	RST.LIL 08h
04642C 21 8A 02 00 7084*  	ld hl,BUF_52_023
046430 01 11 00 00 7085*  	ld bc,17
046434 11 1D 00 00 7086*  	ld de,29
046438 DD 21 ED 01 7087*  	ld ix,493
       00          
04643D CD 05 C9 04 7088*  	call vdu_load_img
046441 C9          7089*  	ret
046442             7090*  
046442             7091*  ld_52_035:
046442 21 30 6D 04 7092*  	ld hl,F52_035
046446 22 8A C7 04 7093*  	ld (cur_filename),hl
04644A 11 C6 D3 04 7094*  	ld de,filedata
04644E 01 00 00 01 7095*  	ld bc,65536
046452 3E 01       7096*  	ld a,mos_load
046454 5B CF       7097*  	RST.LIL 08h
046456 21 8B 02 00 7098*  	ld hl,BUF_52_035
04645A 01 18 00 00 7099*  	ld bc,24
04645E 11 29 00 00 7100*  	ld de,41
046462 DD 21 D8 03 7101*  	ld ix,984
       00          
046467 CD 05 C9 04 7102*  	call vdu_load_img
04646B C9          7103*  	ret
04646C             7104*  
04646C             7105*  ld_52_043:
04646C 21 44 6D 04 7106*  	ld hl,F52_043
046470 22 8A C7 04 7107*  	ld (cur_filename),hl
046474 11 C6 D3 04 7108*  	ld de,filedata
046478 01 00 00 01 7109*  	ld bc,65536
04647C 3E 01       7110*  	ld a,mos_load
04647E 5B CF       7111*  	RST.LIL 08h
046480 21 8C 02 00 7112*  	ld hl,BUF_52_043
046484 01 28 00 00 7113*  	ld bc,40
046488 11 46 00 00 7114*  	ld de,70
04648C DD 21 F0 0A 7115*  	ld ix,2800
       00          
046491 CD 05 C9 04 7116*  	call vdu_load_img
046495 C9          7117*  	ret
046496             7118*  
046496             7119*  ld_52_047:
046496 21 58 6D 04 7120*  	ld hl,F52_047
04649A 22 8A C7 04 7121*  	ld (cur_filename),hl
04649E 11 C6 D3 04 7122*  	ld de,filedata
0464A2 01 00 00 01 7123*  	ld bc,65536
0464A6 3E 01       7124*  	ld a,mos_load
0464A8 5B CF       7125*  	RST.LIL 08h
0464AA 21 8D 02 00 7126*  	ld hl,BUF_52_047
0464AE 01 77 00 00 7127*  	ld bc,119
0464B2 11 82 00 00 7128*  	ld de,130
0464B6 DD 21 6E 3C 7129*  	ld ix,15470
       00          
0464BB CD 05 C9 04 7130*  	call vdu_load_img
0464BF C9          7131*  	ret
0464C0             7132*  
0464C0             7133*  ld_56_007:
0464C0 21 6C 6D 04 7134*  	ld hl,F56_007
0464C4 22 8A C7 04 7135*  	ld (cur_filename),hl
0464C8 11 C6 D3 04 7136*  	ld de,filedata
0464CC 01 00 00 01 7137*  	ld bc,65536
0464D0 3E 01       7138*  	ld a,mos_load
0464D2 5B CF       7139*  	RST.LIL 08h
0464D4 21 8E 02 00 7140*  	ld hl,BUF_56_007
0464D8 01 15 00 00 7141*  	ld bc,21
0464DC 11 0A 00 00 7142*  	ld de,10
0464E0 DD 21 D2 00 7143*  	ld ix,210
       00          
0464E5 CD 05 C9 04 7144*  	call vdu_load_img
0464E9 C9          7145*  	ret
0464EA             7146*  
0464EA             7147*  ld_56_023:
0464EA 21 80 6D 04 7148*  	ld hl,F56_023
0464EE 22 8A C7 04 7149*  	ld (cur_filename),hl
0464F2 11 C6 D3 04 7150*  	ld de,filedata
0464F6 01 00 00 01 7151*  	ld bc,65536
0464FA 3E 01       7152*  	ld a,mos_load
0464FC 5B CF       7153*  	RST.LIL 08h
0464FE 21 8F 02 00 7154*  	ld hl,BUF_56_023
046502 01 1A 00 00 7155*  	ld bc,26
046506 11 0C 00 00 7156*  	ld de,12
04650A DD 21 38 01 7157*  	ld ix,312
       00          
04650F CD 05 C9 04 7158*  	call vdu_load_img
046513 C9          7159*  	ret
046514             7160*  
046514             7161*  ld_56_035:
046514 21 94 6D 04 7162*  	ld hl,F56_035
046518 22 8A C7 04 7163*  	ld (cur_filename),hl
04651C 11 C6 D3 04 7164*  	ld de,filedata
046520 01 00 00 01 7165*  	ld bc,65536
046524 3E 01       7166*  	ld a,mos_load
046526 5B CF       7167*  	RST.LIL 08h
046528 21 90 02 00 7168*  	ld hl,BUF_56_035
04652C 01 27 00 00 7169*  	ld bc,39
046530 11 11 00 00 7170*  	ld de,17
046534 DD 21 97 02 7171*  	ld ix,663
       00          
046539 CD 05 C9 04 7172*  	call vdu_load_img
04653D C9          7173*  	ret
04653E             7174*  
04653E             7175*  ld_56_043:
04653E 21 A8 6D 04 7176*  	ld hl,F56_043
046542 22 8A C7 04 7177*  	ld (cur_filename),hl
046546 11 C6 D3 04 7178*  	ld de,filedata
04654A 01 00 00 01 7179*  	ld bc,65536
04654E 3E 01       7180*  	ld a,mos_load
046550 5B CF       7181*  	RST.LIL 08h
046552 21 91 02 00 7182*  	ld hl,BUF_56_043
046556 01 42 00 00 7183*  	ld bc,66
04655A 11 1E 00 00 7184*  	ld de,30
04655E DD 21 BC 07 7185*  	ld ix,1980
       00          
046563 CD 05 C9 04 7186*  	call vdu_load_img
046567 C9          7187*  	ret
046568             7188*  
046568             7189*  ld_56_047:
046568 21 BC 6D 04 7190*  	ld hl,F56_047
04656C 22 8A C7 04 7191*  	ld (cur_filename),hl
046570 11 C6 D3 04 7192*  	ld de,filedata
046574 01 00 00 01 7193*  	ld bc,65536
046578 3E 01       7194*  	ld a,mos_load
04657A 5B CF       7195*  	RST.LIL 08h
04657C 21 92 02 00 7196*  	ld hl,BUF_56_047
046580 01 35 00 00 7197*  	ld bc,53
046584 11 0C 00 00 7198*  	ld de,12
046588 DD 21 7C 02 7199*  	ld ix,636
       00          
04658D CD 05 C9 04 7200*  	call vdu_load_img
046591 C9          7201*  	ret
046592             7202*  
046592             7203*  ld_60_007:
046592 21 D0 6D 04 7204*  	ld hl,F60_007
046596 22 8A C7 04 7205*  	ld (cur_filename),hl
04659A 11 C6 D3 04 7206*  	ld de,filedata
04659E 01 00 00 01 7207*  	ld bc,65536
0465A2 3E 01       7208*  	ld a,mos_load
0465A4 5B CF       7209*  	RST.LIL 08h
0465A6 21 93 02 00 7210*  	ld hl,BUF_60_007
0465AA 01 1F 00 00 7211*  	ld bc,31
0465AE 11 20 00 00 7212*  	ld de,32
0465B2 DD 21 E0 03 7213*  	ld ix,992
       00          
0465B7 CD 05 C9 04 7214*  	call vdu_load_img
0465BB C9          7215*  	ret
0465BC             7216*  
0465BC             7217*  ld_60_023:
0465BC 21 E4 6D 04 7218*  	ld hl,F60_023
0465C0 22 8A C7 04 7219*  	ld (cur_filename),hl
0465C4 11 C6 D3 04 7220*  	ld de,filedata
0465C8 01 00 00 01 7221*  	ld bc,65536
0465CC 3E 01       7222*  	ld a,mos_load
0465CE 5B CF       7223*  	RST.LIL 08h
0465D0 21 94 02 00 7224*  	ld hl,BUF_60_023
0465D4 01 29 00 00 7225*  	ld bc,41
0465D8 11 2A 00 00 7226*  	ld de,42
0465DC DD 21 BA 06 7227*  	ld ix,1722
       00          
0465E1 CD 05 C9 04 7228*  	call vdu_load_img
0465E5 C9          7229*  	ret
0465E6             7230*  
0465E6             7231*  ld_60_035:
0465E6 21 F8 6D 04 7232*  	ld hl,F60_035
0465EA 22 8A C7 04 7233*  	ld (cur_filename),hl
0465EE 11 C6 D3 04 7234*  	ld de,filedata
0465F2 01 00 00 01 7235*  	ld bc,65536
0465F6 3E 01       7236*  	ld a,mos_load
0465F8 5B CF       7237*  	RST.LIL 08h
0465FA 21 95 02 00 7238*  	ld hl,BUF_60_035
0465FE 01 38 00 00 7239*  	ld bc,56
046602 11 3B 00 00 7240*  	ld de,59
046606 DD 21 E8 0C 7241*  	ld ix,3304
       00          
04660B CD 05 C9 04 7242*  	call vdu_load_img
04660F C9          7243*  	ret
046610             7244*  
046610             7245*  ld_60_043:
046610 21 0C 6E 04 7246*  	ld hl,F60_043
046614 22 8A C7 04 7247*  	ld (cur_filename),hl
046618 11 C6 D3 04 7248*  	ld de,filedata
04661C 01 00 00 01 7249*  	ld bc,65536
046620 3E 01       7250*  	ld a,mos_load
046622 5B CF       7251*  	RST.LIL 08h
046624 21 96 02 00 7252*  	ld hl,BUF_60_043
046628 01 5F 00 00 7253*  	ld bc,95
04662C 11 64 00 00 7254*  	ld de,100
046630 DD 21 1C 25 7255*  	ld ix,9500
       00          
046635 CD 05 C9 04 7256*  	call vdu_load_img
046639 C9          7257*  	ret
04663A             7258*  
04663A             7259*  ld_60_047:
04663A 21 20 6E 04 7260*  	ld hl,F60_047
04663E 22 8A C7 04 7261*  	ld (cur_filename),hl
046642 11 C6 D3 04 7262*  	ld de,filedata
046646 01 00 00 01 7263*  	ld bc,65536
04664A 3E 01       7264*  	ld a,mos_load
04664C 5B CF       7265*  	RST.LIL 08h
04664E 21 97 02 00 7266*  	ld hl,BUF_60_047
046652 01 18 01 00 7267*  	ld bc,280
046656 11 A0 00 00 7268*  	ld de,160
04665A DD 21 00 AF 7269*  	ld ix,44800
       00          
04665F CD 05 C9 04 7270*  	call vdu_load_img
046663 C9          7271*  	ret
046664             7272*  
046664             7273*  ; File name lookups:
046664 70 61 6E 65 7274*  F20_007: db "panels/20_007.rgba2",0
       6C 73 2F 32 
       30 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046678 70 61 6E 65 7275*  F20_023: db "panels/20_023.rgba2",0
       6C 73 2F 32 
       30 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
04668C 70 61 6E 65 7276*  F20_035: db "panels/20_035.rgba2",0
       6C 73 2F 32 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0466A0 70 61 6E 65 7277*  F20_043: db "panels/20_043.rgba2",0
       6C 73 2F 32 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0466B4 70 61 6E 65 7278*  F20_047: db "panels/20_047.rgba2",0
       6C 73 2F 32 
       30 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0466C8 70 61 6E 65 7279*  F21_007: db "panels/21_007.rgba2",0
       6C 73 2F 32 
       31 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0466DC 70 61 6E 65 7280*  F21_023: db "panels/21_023.rgba2",0
       6C 73 2F 32 
       31 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0466F0 70 61 6E 65 7281*  F21_035: db "panels/21_035.rgba2",0
       6C 73 2F 32 
       31 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046704 70 61 6E 65 7282*  F21_043: db "panels/21_043.rgba2",0
       6C 73 2F 32 
       31 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046718 70 61 6E 65 7283*  F21_047: db "panels/21_047.rgba2",0
       6C 73 2F 32 
       31 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
04672C 70 61 6E 65 7284*  F22_007: db "panels/22_007.rgba2",0
       6C 73 2F 32 
       32 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046740 70 61 6E 65 7285*  F22_023: db "panels/22_023.rgba2",0
       6C 73 2F 32 
       32 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046754 70 61 6E 65 7286*  F22_035: db "panels/22_035.rgba2",0
       6C 73 2F 32 
       32 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046768 70 61 6E 65 7287*  F22_043: db "panels/22_043.rgba2",0
       6C 73 2F 32 
       32 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
04677C 70 61 6E 65 7288*  F22_047: db "panels/22_047.rgba2",0
       6C 73 2F 32 
       32 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046790 70 61 6E 65 7289*  F23_007: db "panels/23_007.rgba2",0
       6C 73 2F 32 
       33 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0467A4 70 61 6E 65 7290*  F23_023: db "panels/23_023.rgba2",0
       6C 73 2F 32 
       33 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0467B8 70 61 6E 65 7291*  F23_035: db "panels/23_035.rgba2",0
       6C 73 2F 32 
       33 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0467CC 70 61 6E 65 7292*  F23_043: db "panels/23_043.rgba2",0
       6C 73 2F 32 
       33 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0467E0 70 61 6E 65 7293*  F23_047: db "panels/23_047.rgba2",0
       6C 73 2F 32 
       33 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0467F4 70 61 6E 65 7294*  F24_007: db "panels/24_007.rgba2",0
       6C 73 2F 32 
       34 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046808 70 61 6E 65 7295*  F24_023: db "panels/24_023.rgba2",0
       6C 73 2F 32 
       34 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
04681C 70 61 6E 65 7296*  F24_035: db "panels/24_035.rgba2",0
       6C 73 2F 32 
       34 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046830 70 61 6E 65 7297*  F24_043: db "panels/24_043.rgba2",0
       6C 73 2F 32 
       34 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046844 70 61 6E 65 7298*  F24_047: db "panels/24_047.rgba2",0
       6C 73 2F 32 
       34 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046858 70 61 6E 65 7299*  F40_007: db "panels/40_007.rgba2",0
       6C 73 2F 34 
       30 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
04686C 70 61 6E 65 7300*  F40_023: db "panels/40_023.rgba2",0
       6C 73 2F 34 
       30 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046880 70 61 6E 65 7301*  F40_035: db "panels/40_035.rgba2",0
       6C 73 2F 34 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046894 70 61 6E 65 7302*  F40_043: db "panels/40_043.rgba2",0
       6C 73 2F 34 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0468A8 70 61 6E 65 7303*  F40_047: db "panels/40_047.rgba2",0
       6C 73 2F 34 
       30 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0468BC 70 61 6E 65 7304*  F41_007: db "panels/41_007.rgba2",0
       6C 73 2F 34 
       31 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0468D0 70 61 6E 65 7305*  F41_023: db "panels/41_023.rgba2",0
       6C 73 2F 34 
       31 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0468E4 70 61 6E 65 7306*  F41_035: db "panels/41_035.rgba2",0
       6C 73 2F 34 
       31 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0468F8 70 61 6E 65 7307*  F41_043: db "panels/41_043.rgba2",0
       6C 73 2F 34 
       31 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
04690C 70 61 6E 65 7308*  F41_047: db "panels/41_047.rgba2",0
       6C 73 2F 34 
       31 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046920 70 61 6E 65 7309*  F42_007: db "panels/42_007.rgba2",0
       6C 73 2F 34 
       32 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046934 70 61 6E 65 7310*  F42_023: db "panels/42_023.rgba2",0
       6C 73 2F 34 
       32 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046948 70 61 6E 65 7311*  F42_035: db "panels/42_035.rgba2",0
       6C 73 2F 34 
       32 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
04695C 70 61 6E 65 7312*  F42_043: db "panels/42_043.rgba2",0
       6C 73 2F 34 
       32 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046970 70 61 6E 65 7313*  F42_047: db "panels/42_047.rgba2",0
       6C 73 2F 34 
       32 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046984 70 61 6E 65 7314*  F43_007: db "panels/43_007.rgba2",0
       6C 73 2F 34 
       33 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046998 70 61 6E 65 7315*  F43_023: db "panels/43_023.rgba2",0
       6C 73 2F 34 
       33 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
0469AC 70 61 6E 65 7316*  F43_035: db "panels/43_035.rgba2",0
       6C 73 2F 34 
       33 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0469C0 70 61 6E 65 7317*  F43_043: db "panels/43_043.rgba2",0
       6C 73 2F 34 
       33 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0469D4 70 61 6E 65 7318*  F43_047: db "panels/43_047.rgba2",0
       6C 73 2F 34 
       33 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
0469E8 70 61 6E 65 7319*  F44_007: db "panels/44_007.rgba2",0
       6C 73 2F 34 
       34 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
0469FC 70 61 6E 65 7320*  F44_023: db "panels/44_023.rgba2",0
       6C 73 2F 34 
       34 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046A10 70 61 6E 65 7321*  F44_035: db "panels/44_035.rgba2",0
       6C 73 2F 34 
       34 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046A24 70 61 6E 65 7322*  F44_043: db "panels/44_043.rgba2",0
       6C 73 2F 34 
       34 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046A38 70 61 6E 65 7323*  F44_047: db "panels/44_047.rgba2",0
       6C 73 2F 34 
       34 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046A4C 70 61 6E 65 7324*  F45_007: db "panels/45_007.rgba2",0
       6C 73 2F 34 
       35 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046A60 70 61 6E 65 7325*  F45_023: db "panels/45_023.rgba2",0
       6C 73 2F 34 
       35 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046A74 70 61 6E 65 7326*  F45_035: db "panels/45_035.rgba2",0
       6C 73 2F 34 
       35 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046A88 70 61 6E 65 7327*  F45_043: db "panels/45_043.rgba2",0
       6C 73 2F 34 
       35 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046A9C 70 61 6E 65 7328*  F45_047: db "panels/45_047.rgba2",0
       6C 73 2F 34 
       35 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046AB0 70 61 6E 65 7329*  F46_007: db "panels/46_007.rgba2",0
       6C 73 2F 34 
       36 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046AC4 70 61 6E 65 7330*  F46_023: db "panels/46_023.rgba2",0
       6C 73 2F 34 
       36 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046AD8 70 61 6E 65 7331*  F46_035: db "panels/46_035.rgba2",0
       6C 73 2F 34 
       36 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046AEC 70 61 6E 65 7332*  F46_043: db "panels/46_043.rgba2",0
       6C 73 2F 34 
       36 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046B00 70 61 6E 65 7333*  F46_047: db "panels/46_047.rgba2",0
       6C 73 2F 34 
       36 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046B14 70 61 6E 65 7334*  F47_007: db "panels/47_007.rgba2",0
       6C 73 2F 34 
       37 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046B28 70 61 6E 65 7335*  F47_023: db "panels/47_023.rgba2",0
       6C 73 2F 34 
       37 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046B3C 70 61 6E 65 7336*  F47_035: db "panels/47_035.rgba2",0
       6C 73 2F 34 
       37 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046B50 70 61 6E 65 7337*  F47_043: db "panels/47_043.rgba2",0
       6C 73 2F 34 
       37 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046B64 70 61 6E 65 7338*  F47_047: db "panels/47_047.rgba2",0
       6C 73 2F 34 
       37 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046B78 70 61 6E 65 7339*  F48_007: db "panels/48_007.rgba2",0
       6C 73 2F 34 
       38 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046B8C 70 61 6E 65 7340*  F48_023: db "panels/48_023.rgba2",0
       6C 73 2F 34 
       38 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046BA0 70 61 6E 65 7341*  F48_035: db "panels/48_035.rgba2",0
       6C 73 2F 34 
       38 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046BB4 70 61 6E 65 7342*  F48_043: db "panels/48_043.rgba2",0
       6C 73 2F 34 
       38 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046BC8 70 61 6E 65 7343*  F48_047: db "panels/48_047.rgba2",0
       6C 73 2F 34 
       38 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046BDC 70 61 6E 65 7344*  F49_007: db "panels/49_007.rgba2",0
       6C 73 2F 34 
       39 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046BF0 70 61 6E 65 7345*  F49_023: db "panels/49_023.rgba2",0
       6C 73 2F 34 
       39 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046C04 70 61 6E 65 7346*  F49_035: db "panels/49_035.rgba2",0
       6C 73 2F 34 
       39 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046C18 70 61 6E 65 7347*  F49_043: db "panels/49_043.rgba2",0
       6C 73 2F 34 
       39 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046C2C 70 61 6E 65 7348*  F49_047: db "panels/49_047.rgba2",0
       6C 73 2F 34 
       39 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046C40 70 61 6E 65 7349*  F50_007: db "panels/50_007.rgba2",0
       6C 73 2F 35 
       30 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046C54 70 61 6E 65 7350*  F50_023: db "panels/50_023.rgba2",0
       6C 73 2F 35 
       30 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046C68 70 61 6E 65 7351*  F50_035: db "panels/50_035.rgba2",0
       6C 73 2F 35 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046C7C 70 61 6E 65 7352*  F50_043: db "panels/50_043.rgba2",0
       6C 73 2F 35 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046C90 70 61 6E 65 7353*  F50_047: db "panels/50_047.rgba2",0
       6C 73 2F 35 
       30 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046CA4 70 61 6E 65 7354*  F51_007: db "panels/51_007.rgba2",0
       6C 73 2F 35 
       31 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046CB8 70 61 6E 65 7355*  F51_023: db "panels/51_023.rgba2",0
       6C 73 2F 35 
       31 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046CCC 70 61 6E 65 7356*  F51_035: db "panels/51_035.rgba2",0
       6C 73 2F 35 
       31 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046CE0 70 61 6E 65 7357*  F51_043: db "panels/51_043.rgba2",0
       6C 73 2F 35 
       31 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046CF4 70 61 6E 65 7358*  F51_047: db "panels/51_047.rgba2",0
       6C 73 2F 35 
       31 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046D08 70 61 6E 65 7359*  F52_007: db "panels/52_007.rgba2",0
       6C 73 2F 35 
       32 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046D1C 70 61 6E 65 7360*  F52_023: db "panels/52_023.rgba2",0
       6C 73 2F 35 
       32 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046D30 70 61 6E 65 7361*  F52_035: db "panels/52_035.rgba2",0
       6C 73 2F 35 
       32 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046D44 70 61 6E 65 7362*  F52_043: db "panels/52_043.rgba2",0
       6C 73 2F 35 
       32 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046D58 70 61 6E 65 7363*  F52_047: db "panels/52_047.rgba2",0
       6C 73 2F 35 
       32 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046D6C 70 61 6E 65 7364*  F56_007: db "panels/56_007.rgba2",0
       6C 73 2F 35 
       36 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046D80 70 61 6E 65 7365*  F56_023: db "panels/56_023.rgba2",0
       6C 73 2F 35 
       36 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046D94 70 61 6E 65 7366*  F56_035: db "panels/56_035.rgba2",0
       6C 73 2F 35 
       36 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046DA8 70 61 6E 65 7367*  F56_043: db "panels/56_043.rgba2",0
       6C 73 2F 35 
       36 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046DBC 70 61 6E 65 7368*  F56_047: db "panels/56_047.rgba2",0
       6C 73 2F 35 
       36 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046DD0 70 61 6E 65 7369*  F60_007: db "panels/60_007.rgba2",0
       6C 73 2F 36 
       30 5F 30 30 
       37 2E 72 67 
       62 61 32 00 
046DE4 70 61 6E 65 7370*  F60_023: db "panels/60_023.rgba2",0
       6C 73 2F 36 
       30 5F 30 32 
       33 2E 72 67 
       62 61 32 00 
046DF8 70 61 6E 65 7371*  F60_035: db "panels/60_035.rgba2",0
       6C 73 2F 36 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
046E0C 70 61 6E 65 7372*  F60_043: db "panels/60_043.rgba2",0
       6C 73 2F 36 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
046E20 70 61 6E 65 7373*  F60_047: db "panels/60_047.rgba2",0
       6C 73 2F 36 
       30 5F 30 34 
       37 2E 72 67 
       62 61 32 00 
046E34             7374*  
046E34             7375*  ; dws buffer ids:
046E34             7376*  BUF_DW_6: equ 0x0298
046E34             7377*  BUF_DW_7: equ 0x0299
046E34             7378*  BUF_DW_8: equ 0x029A
046E34             7379*  BUF_DW_9: equ 0x029B
046E34             7380*  BUF_DW_10: equ 0x029C
046E34             7381*  BUF_DW_11: equ 0x029D
046E34             7382*  BUF_DW_12: equ 0x029E
046E34             7383*  BUF_DW_13: equ 0x029F
046E34             7384*  BUF_DW_14: equ 0x02A0
046E34             7385*  
046E34             7386*  dws_num_panels: equ 9
046E34             7387*  
046E34             7388*  ; dws buffer id reverse lookup:
046E34             7389*  dws_buffer_id_lut:
046E34 98 02 00    7390*  	dl BUF_DW_6
046E37 99 02 00    7391*  	dl BUF_DW_7
046E3A 9A 02 00    7392*  	dl BUF_DW_8
046E3D 9B 02 00    7393*  	dl BUF_DW_9
046E40 9C 02 00    7394*  	dl BUF_DW_10
046E43 9D 02 00    7395*  	dl BUF_DW_11
046E46 9E 02 00    7396*  	dl BUF_DW_12
046E49 9F 02 00    7397*  	dl BUF_DW_13
046E4C A0 02 00    7398*  	dl BUF_DW_14
046E4F             7399*  
046E4F             7400*  ; dws load routines jump table:
046E4F             7401*  dws_load_panels_table:
046E4F 6A 6E 04    7402*  	dl ld_dw_6
046E52 94 6E 04    7403*  	dl ld_dw_7
046E55 BE 6E 04    7404*  	dl ld_dw_8
046E58 E8 6E 04    7405*  	dl ld_dw_9
046E5B 12 6F 04    7406*  	dl ld_dw_10
046E5E 3C 6F 04    7407*  	dl ld_dw_11
046E61 66 6F 04    7408*  	dl ld_dw_12
046E64 90 6F 04    7409*  	dl ld_dw_13
046E67 BA 6F 04    7410*  	dl ld_dw_14
046E6A             7411*  
046E6A             7412*  ; Import dws .rgba2 bitmap files and load them into VDP buffers
046E6A             7413*  
046E6A             7414*  ld_dw_6:
046E6A 21 E4 6F 04 7415*  	ld hl,Fdw_6
046E6E 22 8A C7 04 7416*  	ld (cur_filename),hl
046E72 11 C6 D3 04 7417*  	ld de,filedata
046E76 01 00 00 01 7418*  	ld bc,65536
046E7A 3E 01       7419*  	ld a,mos_load
046E7C 5B CF       7420*  	RST.LIL 08h
046E7E 21 98 02 00 7421*  	ld hl,BUF_DW_6
046E82 01 40 01 00 7422*  	ld bc,320
046E86 11 1E 00 00 7423*  	ld de,30
046E8A DD 21 80 25 7424*  	ld ix,9600
       00          
046E8F CD 05 C9 04 7425*  	call vdu_load_img
046E93 C9          7426*  	ret
046E94             7427*  
046E94             7428*  ld_dw_7:
046E94 21 F3 6F 04 7429*  	ld hl,Fdw_7
046E98 22 8A C7 04 7430*  	ld (cur_filename),hl
046E9C 11 C6 D3 04 7431*  	ld de,filedata
046EA0 01 00 00 01 7432*  	ld bc,65536
046EA4 3E 01       7433*  	ld a,mos_load
046EA6 5B CF       7434*  	RST.LIL 08h
046EA8 21 99 02 00 7435*  	ld hl,BUF_DW_7
046EAC 01 40 01 00 7436*  	ld bc,320
046EB0 11 18 00 00 7437*  	ld de,24
046EB4 DD 21 00 1E 7438*  	ld ix,7680
       00          
046EB9 CD 05 C9 04 7439*  	call vdu_load_img
046EBD C9          7440*  	ret
046EBE             7441*  
046EBE             7442*  ld_dw_8:
046EBE 21 02 70 04 7443*  	ld hl,Fdw_8
046EC2 22 8A C7 04 7444*  	ld (cur_filename),hl
046EC6 11 C6 D3 04 7445*  	ld de,filedata
046ECA 01 00 00 01 7446*  	ld bc,65536
046ECE 3E 01       7447*  	ld a,mos_load
046ED0 5B CF       7448*  	RST.LIL 08h
046ED2 21 9A 02 00 7449*  	ld hl,BUF_DW_8
046ED6 01 40 01 00 7450*  	ld bc,320
046EDA 11 12 00 00 7451*  	ld de,18
046EDE DD 21 80 16 7452*  	ld ix,5760
       00          
046EE3 CD 05 C9 04 7453*  	call vdu_load_img
046EE7 C9          7454*  	ret
046EE8             7455*  
046EE8             7456*  ld_dw_9:
046EE8 21 11 70 04 7457*  	ld hl,Fdw_9
046EEC 22 8A C7 04 7458*  	ld (cur_filename),hl
046EF0 11 C6 D3 04 7459*  	ld de,filedata
046EF4 01 00 00 01 7460*  	ld bc,65536
046EF8 3E 01       7461*  	ld a,mos_load
046EFA 5B CF       7462*  	RST.LIL 08h
046EFC 21 9B 02 00 7463*  	ld hl,BUF_DW_9
046F00 01 40 01 00 7464*  	ld bc,320
046F04 11 10 00 00 7465*  	ld de,16
046F08 DD 21 00 14 7466*  	ld ix,5120
       00          
046F0D CD 05 C9 04 7467*  	call vdu_load_img
046F11 C9          7468*  	ret
046F12             7469*  
046F12             7470*  ld_dw_10:
046F12 21 20 70 04 7471*  	ld hl,Fdw_10
046F16 22 8A C7 04 7472*  	ld (cur_filename),hl
046F1A 11 C6 D3 04 7473*  	ld de,filedata
046F1E 01 00 00 01 7474*  	ld bc,65536
046F22 3E 01       7475*  	ld a,mos_load
046F24 5B CF       7476*  	RST.LIL 08h
046F26 21 9C 02 00 7477*  	ld hl,BUF_DW_10
046F2A 01 40 01 00 7478*  	ld bc,320
046F2E 11 10 00 00 7479*  	ld de,16
046F32 DD 21 00 14 7480*  	ld ix,5120
       00          
046F37 CD 05 C9 04 7481*  	call vdu_load_img
046F3B C9          7482*  	ret
046F3C             7483*  
046F3C             7484*  ld_dw_11:
046F3C 21 30 70 04 7485*  	ld hl,Fdw_11
046F40 22 8A C7 04 7486*  	ld (cur_filename),hl
046F44 11 C6 D3 04 7487*  	ld de,filedata
046F48 01 00 00 01 7488*  	ld bc,65536
046F4C 3E 01       7489*  	ld a,mos_load
046F4E 5B CF       7490*  	RST.LIL 08h
046F50 21 9D 02 00 7491*  	ld hl,BUF_DW_11
046F54 01 40 01 00 7492*  	ld bc,320
046F58 11 0E 00 00 7493*  	ld de,14
046F5C DD 21 80 11 7494*  	ld ix,4480
       00          
046F61 CD 05 C9 04 7495*  	call vdu_load_img
046F65 C9          7496*  	ret
046F66             7497*  
046F66             7498*  ld_dw_12:
046F66 21 40 70 04 7499*  	ld hl,Fdw_12
046F6A 22 8A C7 04 7500*  	ld (cur_filename),hl
046F6E 11 C6 D3 04 7501*  	ld de,filedata
046F72 01 00 00 01 7502*  	ld bc,65536
046F76 3E 01       7503*  	ld a,mos_load
046F78 5B CF       7504*  	RST.LIL 08h
046F7A 21 9E 02 00 7505*  	ld hl,BUF_DW_12
046F7E 01 40 01 00 7506*  	ld bc,320
046F82 11 0C 00 00 7507*  	ld de,12
046F86 DD 21 00 0F 7508*  	ld ix,3840
       00          
046F8B CD 05 C9 04 7509*  	call vdu_load_img
046F8F C9          7510*  	ret
046F90             7511*  
046F90             7512*  ld_dw_13:
046F90 21 50 70 04 7513*  	ld hl,Fdw_13
046F94 22 8A C7 04 7514*  	ld (cur_filename),hl
046F98 11 C6 D3 04 7515*  	ld de,filedata
046F9C 01 00 00 01 7516*  	ld bc,65536
046FA0 3E 01       7517*  	ld a,mos_load
046FA2 5B CF       7518*  	RST.LIL 08h
046FA4 21 9F 02 00 7519*  	ld hl,BUF_DW_13
046FA8 01 40 01 00 7520*  	ld bc,320
046FAC 11 0C 00 00 7521*  	ld de,12
046FB0 DD 21 00 0F 7522*  	ld ix,3840
       00          
046FB5 CD 05 C9 04 7523*  	call vdu_load_img
046FB9 C9          7524*  	ret
046FBA             7525*  
046FBA             7526*  ld_dw_14:
046FBA 21 60 70 04 7527*  	ld hl,Fdw_14
046FBE 22 8A C7 04 7528*  	ld (cur_filename),hl
046FC2 11 C6 D3 04 7529*  	ld de,filedata
046FC6 01 00 00 01 7530*  	ld bc,65536
046FCA 3E 01       7531*  	ld a,mos_load
046FCC 5B CF       7532*  	RST.LIL 08h
046FCE 21 A0 02 00 7533*  	ld hl,BUF_DW_14
046FD2 01 40 01 00 7534*  	ld bc,320
046FD6 11 0C 00 00 7535*  	ld de,12
046FDA DD 21 00 0F 7536*  	ld ix,3840
       00          
046FDF CD 05 C9 04 7537*  	call vdu_load_img
046FE3 C9          7538*  	ret
046FE4             7539*  
046FE4             7540*  ; File name lookups:
046FE4 64 77 73 2F 7541*  Fdw_6: db "dws/dw_6.rgba2",0
       64 77 5F 36 
       2E 72 67 62 
       61 32 00    
046FF3 64 77 73 2F 7542*  Fdw_7: db "dws/dw_7.rgba2",0
       64 77 5F 37 
       2E 72 67 62 
       61 32 00    
047002 64 77 73 2F 7543*  Fdw_8: db "dws/dw_8.rgba2",0
       64 77 5F 38 
       2E 72 67 62 
       61 32 00    
047011 64 77 73 2F 7544*  Fdw_9: db "dws/dw_9.rgba2",0
       64 77 5F 39 
       2E 72 67 62 
       61 32 00    
047020 64 77 73 2F 7545*  Fdw_10: db "dws/dw_10.rgba2",0
       64 77 5F 31 
       30 2E 72 67 
       62 61 32 00 
047030 64 77 73 2F 7546*  Fdw_11: db "dws/dw_11.rgba2",0
       64 77 5F 31 
       31 2E 72 67 
       62 61 32 00 
047040 64 77 73 2F 7547*  Fdw_12: db "dws/dw_12.rgba2",0
       64 77 5F 31 
       32 2E 72 67 
       62 61 32 00 
047050 64 77 73 2F 7548*  Fdw_13: db "dws/dw_13.rgba2",0
       64 77 5F 31 
       33 2E 72 67 
       62 61 32 00 
047060 64 77 73 2F 7549*  Fdw_14: db "dws/dw_14.rgba2",0
       64 77 5F 31 
       34 2E 72 67 
       62 61 32 00 
047070             0014   	include "src/asm/fonts_bmp.asm"
047070             0001*  ; plots a bitmap character to the screen
047070             0002*  ; inputs: a; ascii character to plot
047070             0003*  ;      bc,de = x,y screen coordinates in pixels
047070             0004*  ;      ix pointed at the font definition lut
047070             0005*  ; returns: bc as the next x coordinate to plot
047070             0006*  ;          pretty pixels which hopefully resemble readable text
047070             0007*  ; destroys: lotsa stuff
047070             0008*  font_bmp_plot:
047070             0009*  ; back up bc,de
047070 C5          0010*      push bc
047071 D5          0011*      push de
047072             0012*  ; get the buffer id of the character
047072 D6 20       0013*      sub 32 ; lookup table starts at ascii 32
047074 06 06       0014*      ld b,6 ; six bytes per lookup record
047076 4F          0015*      ld c,a
047077 ED 4C       0016*      mlt bc
047079 DD 09       0017*      add ix,bc ; now ix points to the character definition
04707B DD 27 03    0018*      ld hl,(ix+3) ; hl has the buffer id
04707E CD 48 B9 04 0019*      call vdu_buff_select
047082             0020*  ; plot the character
047082 D1          0021*      pop de
047083 DD 7E 02    0022*      ld a,(ix+2) ; a has the y-offset of the character
047086 83          0023*      add a,e ; add the y-coordinate
047087 5F          0024*      ld e,a
047088 3E 00       0025*      ld a,0 ; can't xor it because we need carry
04708A 8A          0026*      adc a,d
04708B 57          0027*      ld d,a ; plot_y now correct for the character
04708C C1          0028*      pop bc ; plot_x
04708D C5          0029*      push bc ; we want it back after the plot
04708E CD 19 BB 04 0030*      call vdu_plot_bmp
047092             0031*  ; now set bc to the next x coordinate
047092 C1          0032*      pop bc
047093 DD 7E 00    0033*      ld a,(ix+0) ; a has the width of the character
047096 C6 02       0034*      add a,2 ; add a little padding between characters
047098 81          0035*      add a,c ; bump the original x-coordinate
047099 4F          0036*      ld c,a
04709A 3E 00       0037*      ld a,0 ; can't xor it because we need carry
04709C 88          0038*      adc a,b
04709D 47          0039*      ld b,a ; plot_x now correct for the next character
04709E C9          0040*      ret
04709F             0041*  
04709F             0042*  ; plots a zero-terminated string of bitmap characters to the screen
04709F             0043*  ; inputs: hl; pointer to the string
04709F             0044*  ;       bc,de = x,y screen coordinates in pixels
04709F             0045*  ;       ix pointed at the font definition lut
04709F             0046*  ; returns: bc as the next x coordinate to plot
04709F             0047*  ;          de as the next y coordinate to plot
04709F             0048*  ;          pretty pixels which hopefully resemble readable text
04709F             0049*  font_bmp_print:
04709F             0050*  @next_char:
04709F             0051*  ; fetch the next character in the string
04709F 7E          0052*      ld a,(hl) ; a has the ascii value of the character
0470A0 FE 00       0053*      cp 0 ; is it zero?
0470A2 C8          0054*      ret z ; if so, we're done
0470A3 23          0055*      inc hl ; point to the next character
0470A4 E5          0056*      push hl ; save the pointer
0470A5 D5          0057*      push de ; save our y-coordinate
0470A6 DD E5       0058*      push ix ; save the font lut pointer
0470A8 CD 70 70 04 0059*      call font_bmp_plot ; plot the character
0470AC DD E1       0060*      pop ix ; restore the font lut pointer
0470AE D1          0061*      pop de ; restore our y-coordinate
0470AF E1          0062*      pop hl ; restore the pointer
0470B0 C3 9F 70 04 0063*      jp @next_char ; loop
0470B4             0015   	include "src/asm/maps.asm"
0470B4             0001*  ; ############# MAP CONSTANTS #############
0470B4             0002*  ; map tables addresses
0470B4             0003*  cell_status: 		equ 0xB7E000 ; base of on-chip high speed SRAM
0470B4             0004*  cell_views: 		equ 0xB7E400 ; cell_status + 256*4
0470B4             0005*  
0470B4             0006*  ; map status/type flags
0470B4             0007*  cell_is_door:     	equ %10000000  ; Bit 7: door flag
0470B4             0008*  cell_is_wall:     	equ %01000000  ; Bit 6: wall flag
0470B4             0009*  cell_is_trigger:  	equ %00100000  ; Bit 5: trigger flag
0470B4             0010*  cell_is_blocking: 	equ %00010000  ; Bit 4: blocking flag
0470B4             0011*  cell_is_start:		equ %00001000  ; Bit 3: start flag
0470B4             0012*  cell_is_to_room:    equ %00000100  ; Bit 2: to room flag
0470B4             0013*  ; bits 1 and 0 are the render_type mask
0470B4             0014*  render_type_cube:   equ %00000000  ; 0
0470B4             0015*  render_type_floor:  equ %00000001  ; 1
0470B4             0016*  render_type_null:   equ %00000010  ; 2
0470B4             0017*  render_type_sprite: equ %00000011  ; 3
0470B4             0018*  
0470B4             0019*  ; HOW THE MAP TABLE IS LAID OUT
0470B4             0020*  ; map table field offset constants
0470B4             0021*  ; (mind the little-endianess)
0470B4             0022*  map_type_status: 	equ 0
0470B4             0023*  map_img_idx: 		equ 1
0470B4             0024*  map_obj_id: 		equ 2
0470B4             0025*  map_sprite_id: 		equ 3
0470B4             0026*  map_record_size: 	equ 4 ; bytes per cell_status record
0470B4             0027*  
0470B4             0028*  ; gets cell info from a directional displacement from a given map location
0470B4             0029*  ; inputs: ; d = distance ; e = direction, b,c = y,x
0470B4             0030*  ; returns: ix = pointer to cell_status lut; a = obj_id; hl = address of cell base render routine
0470B4             0031*  ; calls: get_dx_dy, get_cell_from_coords
0470B4             0032*  get_neighbor:
0470B4             0033*  ; modulo 4 on orientation
0470B4 7B          0034*      ld a,e
0470B5 E6 03       0035*      and 0x03
0470B7 5F          0036*      ld e,a
0470B8 CD E7 70 04 0037*  	call get_dx_dy ; d,e = dy,dx
0470BC             0038*  ; add add b,c to the deltas in d,e
0470BC 79          0039*  	ld a,c
0470BD 83          0040*  	add a,e
0470BE 5F          0041*  	ld e,a
0470BF 78          0042*  	ld a,b
0470C0 82          0043*  	add a,d
0470C1 57          0044*  	ld d,a
0470C2             0045*  ; fall through to get_cell_from_coords
0470C2             0046*  
0470C2             0047*  ; gets cell info from a given x,y map coordinate
0470C2             0048*  ; inputs: ; d,e = map_y,map_x
0470C2             0049*  ; returns: ix = pointer to cell_status lut; a = obj_id, bc = cell_id
0470C2             0050*  get_cell_from_coords:
0470C2             0051*  ; modulo 16 on input coords
0470C2 7B          0052*  	ld a,e
0470C3 E6 0F       0053*  	and 0x0F
0470C5 5F          0054*  	ld e,a
0470C6 7A          0055*  	ld a,d
0470C7 E6 0F       0056*  	and 0x0F
0470C9 57          0057*  	ld d,a
0470CA             0058*  ; get cell_id from x,y
0470CA 42          0059*  	ld b,d ; y
0470CB 0E 10       0060*  	ld c,16 ; number of cells in a column
0470CD ED 4C       0061*  	mlt bc ; bc = cell_id of y,0
0470CF 21 00 00 00 0062*  	ld hl,0 ; make sure uhl is zero
0470D3 6B          0063*  	ld l,e ; x
0470D4 09          0064*  	add hl,bc ; hl = cell_id of x,y
0470D5 E5          0065*  	push hl ; so we can return cell_id
0470D6 4D          0066*  	ld c,l ; c = cell_id
0470D7             0067*  ; get address of cell record in cell_status table
0470D7 06 04       0068*  	ld b,map_record_size ; b = bytes per record
0470D9 ED 4C       0069*  	mlt bc ; bc = offset to cell record
0470DB DD 21 00 E0 0070*  	ld ix,cell_status ; base address of lookup table
       B7          
0470E0 DD 09       0071*  	add ix,bc ; ix = address of cell record
0470E2 DD 7E 02    0072*  	ld a,(ix+map_obj_id) ; a = obj_id
0470E5 C1          0073*  	pop bc ; bc = cell_id
0470E6 C9          0074*  	ret
0470E7             0075*  
0470E7             0076*  ; gets dx,dy from orientation and distance
0470E7             0077*  ; d = distance ; e = orientation
0470E7             0078*  ; returns: d,e = dy,dx
0470E7             0079*  get_dx_dy:
0470E7             0080*  ; make sure deu is zero
0470E7 E5          0081*  	push hl
0470E8 21 00 00 00 0082*  	ld hl,0
0470EC 62          0083*  	ld h,d
0470ED 6B          0084*  	ld l,e
0470EE EB          0085*  	ex de,hl
0470EF E1          0086*  	pop hl
0470F0             0087*  ; modulo 4 on orientation
0470F0 7B          0088*  	ld a,e
0470F1 E6 03       0089*  	and 0x03
0470F3 FE 00       0090*  	cp 0
0470F5 28 11       0091*  	jr z,@north
0470F7 FE 01       0092*  	cp 1
0470F9 28 14       0093*  	jr z,@east
0470FB FE 02       0094*  	cp 2
0470FD 28 14       0095*  	jr z,@south
0470FF FE 03       0096*  	cp 3
047101 28 13       0097*  	jr z,@west
047103             0098*  ; if none of those, return zeroes
047103 11 00 00 00 0099*  	ld de,0
047107 C9          0100*  	ret
047108             0101*  @north:
047108             0102*  ; x = 0, y = -d
047108 1E 00       0103*  	ld e,0
04710A 7A          0104*  	ld a,d
04710B ED 44       0105*  	neg
04710D 57          0106*  	ld d,a
04710E C9          0107*  	ret
04710F             0108*  @east:
04710F             0109*  ; x = d, y = 0
04710F 5A          0110*  	ld e,d
047110 16 00       0111*  	ld d,0
047112 C9          0112*  	ret
047113             0113*  @south:
047113             0114*  ; x = 0, y = d
047113 1E 00       0115*  	ld e,0
047115 C9          0116*  	ret
047116             0117*  @west:
047116             0118*  ; x = -d, y = 0
047116 7A          0119*  	ld a,d
047117 ED 44       0120*  	neg
047119 5F          0121*  	ld e,a
04711A 16 00       0122*  	ld d,0
04711C C9          0123*  	ret
04711D             0124*  
04711D             0125*  ; gets the direction from a dy,dx pair
04711D             0126*  ; basically atan2(dy,dx) but for only the 4 cardinal directions
04711D             0127*  ; inputs: ; d = dy ; e = dx
04711D             0128*  ; returns: a = orientation
04711D             0129*  get_dir_from_dy_dx:
04711D AF          0130*  	xor a
04711E 93          0131*  	sub e
04711F 28 06       0132*  	jr z,@not_x
047121 3E 01       0133*  	ld a,1
047123 F8          0134*  	ret m
047124 3E 03       0135*  	ld a,3
047126 C9          0136*  	ret
047127             0137*  @not_x:
047127 AF          0138*  	xor a
047128 92          0139*  	sub d
047129 C8          0140*  	ret z
04712A 3E 02       0141*  	ld a,2
04712C F8          0142*  	ret m
04712D AF          0143*  	xor a
04712E C9          0144*  	ret
04712F             0145*  
04712F             0146*  
04712F             0147*  ; translate camera relative x,y deltas to map x,y deltas
04712F             0148*  ; inputs: ; d = dy ; e = dx ; a = camera orientation
04712F             0149*  ; returns:	d = map_dy ; e = map_dx
04712F             0150*  trans_dx_dy:
04712F             0151*  ; modulo 4 on orientation
04712F E6 03       0152*  	and 0x03
047131 28 11       0153*  	jr z,@north
047133 FE 01       0154*  	cp 1 ; east
047135 28 12       0155*  	jr z,@east
047137 FE 02       0156*  	cp 2 ; south
047139 28 12       0157*  	jr z,@south
04713B FE 03       0158*  	cp 3 ; west
04713D 28 13       0159*  	jr z,@west
04713F             0160*  ; if none of those, return zeroes
04713F 11 00 00 00 0161*  	ld de,0
047143 C9          0162*  	ret
047144             0163*  @north: ; invert y axis, x unnchanged
047144 7A          0164*  	ld a,d
047145 ED 44       0165*  	neg
047147 57          0166*  	ld d,a
047148 C9          0167*  	ret
047149             0168*  @east: ; +x = +y, +y = +x
047149 7A          0169*  	ld a,d
04714A 53          0170*  	ld d,e
04714B 5F          0171*  	ld e,a
04714C C9          0172*  	ret
04714D             0173*  @south: ; invert x axis, y unchanged
04714D 7B          0174*  	ld a,e
04714E ED 44       0175*  	neg
047150 5F          0176*  	ld e,a
047151 C9          0177*  	ret
047152             0178*  @west: ; +x = -y, +y = -x
047152 7A          0179*  	ld a,d ; y
047153 ED 44       0180*  	neg ; -y
047155 53          0181*  	ld d,e ; x
047156 5F          0182*  	ld e,a ; -y
047157 7A          0183*  	ld a,d ; x
047158 ED 44       0184*  	neg ; -x
04715A 57          0185*  	ld d,a ; -x
04715B C9          0186*  	ret
04715C             0187*  
04715C             0188*  ; initialize map variables and load map file
04715C             0189*  ; inputs: none
04715C             0190*  map_init:
04715C AF          0191*  	xor a
04715D 32 F8 C1 04 0192*  	ld (cur_floor),a
047161 32 F9 C1 04 0193*  	ld (cur_room),a
047165             0194*  ; load room file
047165 CD 6A 71 04 0195*  	call map_load
047169             0196*  ; set player initial position
047169 C9          0197*  	ret
04716A             0198*  
04716A             0199*  ; load map file
04716A             0200*  ; inputs: cur_floor, cur_room set
04716A             0201*  map_load:
04716A 21 FC 72 04 0202*  	ld hl,floors ; address of floors lut
04716E 3A F8 C1 04 0203*  	ld a,(cur_floor)
047172 5F          0204*  	ld e,a
047173 16 03       0205*  	ld d,3 ; three bytes per lookup record
047175 ED 5C       0206*  	mlt de ; de = offset to floor lut entry
047177 19          0207*  	add hl,de ; hl = address of floor lut entry
047178 ED 27       0208*  	ld hl,(hl) ; hl = base address of rooms for given floor
04717A 3A F9 C1 04 0209*  	ld a,(cur_room)
04717E 5F          0210*  	ld e,a
04717F 16 03       0211*  	ld d,3 ; three bytes per lookup record
047181 ED 5C       0212*  	mlt de ; de = offset to room lut entry
047183 19          0213*  	add hl,de ; hl = address of room lut entry
047184 ED 27       0214*  	ld hl,(hl) ; hl = address of room file name
047186 22 8A C7 04 0215*  	ld (cur_filename),hl ; DEBUG
04718A 11 00 E0 B7 0216*  	ld de,cell_status ; address to load map data
04718E 01 00 20 00 0217*  	ld bc,8*1024 ; size of map data in bytes
047192 3E 01       0218*  	ld a,mos_load
047194 5B CF       0219*  	RST.LIL 08h
047196             0220*  ; load sprite data
047196 CD 9B 71 04 0221*  	call map_init_sprites
04719A C9          0222*  	ret
04719B             0223*  
04719B             0224*  ; initialize sprite data for the current room into sprite table
04719B             0225*  ; inputs: map data loaded
04719B             0226*  map_init_sprites:
04719B             0227*  ; initialize pointers
04719B DD 21 00 E0 0228*  	ld ix,cell_status
       B7          
0471A0 FD 21 00 FC 0229*  	ld iy,sprite_table_base
       B7          
0471A5 AF          0230*  	xor a
0471A6 32 EA 71 04 0231*  	ld (@cell_id),a
0471AA             0232*  @loop:
0471AA FD 22 F4 AE 0233*  	ld (sprite_table_pointer),iy ; probably don't strictly need this but why not
       04          
0471AF DD 7E 03    0234*  	ld a,(ix+map_sprite_id)
0471B2 FE FF       0235*  	cp 255 ; check for no sprite
0471B4 28 1B       0236*  	jr z,@next_cell
0471B6 FD 77 00    0237*  	ld (iy+sprite_id),a
0471B9 DD 7E 01    0238*  	ld a,(ix+map_img_idx)
0471BC FD 77 01    0239*  	ld (iy+sprite_obj),a
0471BF CD 94 B0 04 0240*  	call sprite_init_data
0471C3 3A EA 71 04 0241*  	ld a,(@cell_id)
0471C7 CD EB 71 04 0242*  	call cell_id_to_coords ; d = map_y, e = map_x
0471CB FD 1F 04    0243*  	ld (iy+sprite_x),de ; set sprite x,y
0471CE ED 33 10    0244*  	lea iy,iy+sprite_record_size ; advance pointer to next sprite record
0471D1             0245*  @next_cell:
0471D1 ED 32 04    0246*  	lea ix,ix+map_record_size ; advance pointer to next cell
0471D4             0247*  ; check if we've reached the end of the map data
0471D4 3A EA 71 04 0248*  	ld a,(@cell_id)
0471D8 3C          0249*  	inc a
0471D9 32 EA 71 04 0250*  	ld (@cell_id),a
0471DD 20 CB       0251*  	jr nz,@loop ; still more to do
0471DF             0252*  ; cleanup and return
0471DF FD 21 00 FC 0253*  	ld iy,sprite_table_base ; reset pointer
       B7          
0471E4 FD 22 F4 AE 0254*  	ld (sprite_table_pointer),iy
       04          
0471E9 C9          0255*  	ret
0471EA 00          0256*  @cell_id: db 0
0471EB             0257*  
0471EB             0258*  ; get the x,y map coordinates from a cell_id
0471EB             0259*  ; inputs: a = cell_id
0471EB             0260*  ; returns: a = cell_id, d = map_y, e = map_x
0471EB             0261*  cell_id_to_coords:
0471EB 11 00 00 00 0262*  	ld de,0 ; make sure deu is zero
0471EF F5          0263*  	push af	; Save the cell id
0471F0             0264*  ; Calculate the y coordinate by dividing the index by 16
0471F0 57          0265*  	ld d,a      ; Move index into d
0471F1 CB 3A       0266*  	srl d        ; Shift right once (d = d / 2)
0471F3 CB 3A       0267*  	srl d        ; Shift right again (d = d / 4)
0471F5 CB 3A       0268*  	srl d        ; Shift right again (d = d / 8)
0471F7 CB 3A       0269*  	srl d        ; Shift right again (d = d / 16)
0471F9             0270*  ; Calculate the x coordinate by taking the index modulo 16
0471F9 E6 0F       0271*  	and 15       ; e = e & 15 (retain the lower 4 bits of the cell id, which is modulo 16)
0471FB 5F          0272*  	ld e,a      ; e is now the x coordinate
0471FC F1          0273*  	pop af	; a is cell id
0471FD C9          0274*  	ret
0471FE             0275*  
0471FE             0276*  ; get starting position in room 0 of a floor based on is_start flag being set
0471FE             0277*  ; inputs: none
0471FE             0278*  ; returns: a = cell_id, d = map_y, e = map_x, ix pointed to cell address
0471FE             0279*  ; destroys: c,iy
0471FE             0280*  get_floor_start:
0471FE             0281*  ; loop through map data to find the obj_id in a
0471FE DD 21 00 E0 0282*  	ld ix,cell_status
       B7          
047203 0E 00       0283*  	ld c,0 ; c will be a loop counter giving us cell_id
047205             0284*  @start_cell_loop:
047205 DD 7E 00    0285*  	ld a,(ix+map_type_status)
047208 E6 08       0286*  	and cell_is_start
04720A 20 06       0287*  	jr nz,@start_cell_found
04720C ED 32 04    0288*  	lea ix,ix+map_record_size
04720F 0C          0289*  	inc c
047210 18 F3       0290*  	jr @start_cell_loop
047212             0291*  @start_cell_found:
047212 79          0292*  	ld a,c
047213 CD EB 71 04 0293*  	call cell_id_to_coords ; d = map_y, e = map_x, a = cell_id
047217 ED 53 FE C1 0294*  	ld (cur_x),de
       04          
04721C C9          0295*  	ret
04721D             0296*  
04721D             0297*  ; get starting position based an obj_id
04721D             0298*  ; inputs: a is the obj_id to search for
04721D             0299*  ; returns: a = cell_id, d = map_y, e = map_x, ix pointed to cell address
04721D             0300*  ; destroys: c,iy
04721D             0301*  get_room_start:
04721D             0302*  ; loop through map data to find the obj_id in a
04721D DD 21 00 E0 0303*  	ld ix,cell_status
       B7          
047222 0E 00       0304*  	ld c,0 ; c will be a loop counter giving us cell_id
047224             0305*  @start_cell_loop:
047224 DD BE 02    0306*  	cp (ix+map_obj_id)
047227 28 06       0307*  	jr z,@start_cell_found
047229 ED 32 04    0308*  	lea ix,ix+map_record_size
04722C 0C          0309*  	inc c
04722D 18 F5       0310*  	jr @start_cell_loop
04722F             0311*  @start_cell_found:
04722F 79          0312*  	ld a,c
047230 CD EB 71 04 0313*  	call cell_id_to_coords ; d = map_y, e = map_x, a = cell_id
047234 ED 53 FE C1 0314*  	ld (cur_x),de
       04          
047239 C9          0315*  	ret
04723A             0316*  
04723A             0317*  
04723A             0318*  ; moves player to the room indicated by the too room cell they've just entered
04723A             0319*  ; inputs: ix = pointer to the cell containing the too room door
04723A             0320*  change_room:
04723A             0321*  ; set visited flag for old room
04723A 3A F9 C1 04 0322*  	ld a,(cur_room)
04723E 21 D4 72 04 0323*  	ld hl,room_flags
047242 11 00 00 00 0324*  	ld de,0 ; make sure deu and d are zero
047246 5F          0325*  	ld e,a
047247 19          0326*  	add hl,de ; hl = address of room flags entry
047248 3E 01       0327*  	ld a,room_flag_visited
04724A B6          0328*  	or (hl)
04724B 77          0329*  	ld (hl),a
04724C             0330*  ; update from_room
04724C 3A F9 C1 04 0331*  	ld a,(cur_room)
047250 32 FC C1 04 0332*  	ld (from_room),a
047254             0333*  ; get the new room id from the cell and update cur_room
047254 21 CA 72 04 0334*  	ld hl,to_room_obj_lut
047258 DD 7E 02    0335*  	ld a,(ix+map_obj_id)
04725B 96          0336*  	sub (hl)
04725C 32 F9 C1 04 0337*  	ld (cur_room),a
047260             0338*  ; save old room state to room dat memory location
047260 21 DE 72 04 0339*  	ld hl,room_dat_lut
047264 3A FC C1 04 0340*  	ld a,(from_room)
047268 57          0341*  	ld d,a
047269 1E 03       0342*  	ld e,3 ; three bytes per lookup record
04726B ED 5C       0343*  	mlt de ; de = offset to room dat entry
04726D 19          0344*  	add hl,de ; hl = address of room dat entry
04726E ED 17       0345*  	ld de,(hl) ; destination address for room data
047270 21 00 E0 B7 0346*  	ld hl,cell_status ; source address for room data
047274 01 00 20 00 0347*  	ld bc,8*1024 ; size of room data
047278 ED B0       0348*  	ldir
04727A             0349*  ; check room visited flag for target room
04727A 21 D4 72 04 0350*  	ld hl,room_flags
04727E 3A F9 C1 04 0351*  	ld a,(cur_room)
047282 11 00 00 00 0352*  	ld de,0 ; make sure deu and d are zero
047286 5F          0353*  	ld e,a
047287 19          0354*  	add hl,de ; hl = address of room flags entry
047288 3E 01       0355*  	ld a,room_flag_visited
04728A A6          0356*  	and (hl)
04728B 20 0A       0357*  	jr nz,@room_visited
04728D             0358*  ; room not visited so load room data from file
04728D CD 6A 71 04 0359*  	call map_load
047291 CD 9B 71 04 0360*  	call map_init_sprites
047295 18 1A       0361*  	jr @get_room_start
047297             0362*  @room_visited:
047297             0363*  ; fetch new room state from room dat memory location
047297 21 DE 72 04 0364*  	ld hl,room_dat_lut
04729B 3A F9 C1 04 0365*  	ld a,(cur_room)
04729F 57          0366*  	ld d,a
0472A0 1E 03       0367*  	ld e,3 ; three bytes per lookup record
0472A2 ED 5C       0368*  	mlt de ; de = offset to room dat entry
0472A4 19          0369*  	add hl,de ; hl = address of room dat entry
0472A5 ED 27       0370*  	ld hl,(hl) ; source address for room data
0472A7 11 00 E0 B7 0371*  	ld de,cell_status ; destination address for room data
0472AB 01 00 20 00 0372*  	ld bc,8*1024 ; size of room data
0472AF ED B0       0373*  	ldir
0472B1             0374*  @get_room_start:
0472B1             0375*  ; get player starting position from to_room_obj_lut
0472B1 3A FC C1 04 0376*  	ld a,(from_room)
0472B5 21 CA 72 04 0377*  	ld hl,to_room_obj_lut
0472B9 11 00 00 00 0378*  	ld de,0 ; make sure deu and d are zero
0472BD 5F          0379*  	ld e,a
0472BE 19          0380*  	add hl,de ; hl = address of to_room_obj_lut entry
0472BF 7E          0381*  	ld a,(hl)
0472C0 CD 1D 72 04 0382*  	call get_room_start
0472C4 ED 53 FE C1 0383*  	ld (cur_x),de
       04          
0472C9 C9          0384*  	ret
0472CA             0385*  
0472CA 1E 1F 20 21 0386*  to_room_obj_lut: db 30,31,32,33,34,35,36,37,38,39
       22 23 24 25 
       26 27       
0472D4             0387*  
0472D4 00 00 00 00 0388*  room_flags: blkb 10,0
       00 00 00 00 
       00 00       
0472DE             0389*  room_flag_visited: equ %00000001
0472DE             0390*  
0472DE             0391*  room_dat_lut:
0472DE 00 00 0A    0392*  room_00_dat: dl 0x0A0000
0472E1 00 20 0A    0393*  room_01_dat: dl 0x0A2000
0472E4 00 40 0A    0394*  room_02_dat: dl 0x0A4000
0472E7 00 60 0A    0395*  room_03_dat: dl 0x0A6000
0472EA 00 80 0A    0396*  room_04_dat: dl 0x0A8000
0472ED 00 A0 0A    0397*  room_05_dat: dl 0x0AA000
0472F0 00 C0 0A    0398*  room_06_dat: dl 0x0AC000
0472F3 00 E0 0A    0399*  room_07_dat: dl 0x0AE000
0472F6 00 00 0B    0400*  room_08_dat: dl 0x0B0000
0472F9 00 20 0B    0401*  room_09_dat: dl 0x0B2000
0472FC             0402*  
0472FC             0403*  ; #### AUTO-GENERATED MAP DATA BELOW THIS LINE DO NOT EDIT ####
0472FC             0404*  
0472FC             0405*  start_obj_id: equ 28
0472FC             0406*  
0472FC             0407*  floors:
0472FC FF 72 04    0408*  	dl floor_00
0472FF             0409*  
0472FF             0410*  room_files:
0472FF             0411*  floor_00:
0472FF 08 73 04    0412*  	dl room_00_0
047302 1A 73 04    0413*  	dl room_00_1
047305 2C 73 04    0414*  	dl room_00_2
047308             0415*  
047308 6D 61 70 73 0416*  room_00_0: db "maps/map_00_0.bin",0
       2F 6D 61 70 
       5F 30 30 5F 
       30 2E 62 69 
       6E 00       
04731A 6D 61 70 73 0417*  room_00_1: db "maps/map_00_1.bin",0
       2F 6D 61 70 
       5F 30 30 5F 
       31 2E 62 69 
       6E 00       
04732C 6D 61 70 73 0418*  room_00_2: db "maps/map_00_2.bin",0
       2F 6D 61 70 
       5F 30 30 5F 
       32 2E 62 69 
       6E 00       
04733E             0016   	include "src/asm/render.asm"
04733E             0001*  ; #### RENDERING SCRATCH VARIABLES ####
04733E             0002*  ; first three bytes of cell_status record in little-endian order
04733E             0003*  to_cell_status:
04733E             0004*  to_map_type_status: ds 1
04733F             0005*  to_img_idx: ds 1
047340             0006*  to_obj_id: ds 1
047341             0007*  ; fourth byte of cell_status record
047341             0008*  to_sprite_id: ds 1
047342             0009*  
047342             0010*  to_poly_id: ds 1
047343             0011*  to_buffer_id: ds 3
047346             0012*  
047346             0013*  cur_cell_views: ds 3
047349             0014*  
047349             0015*  view_distance: equ 5 ; furthest player can see or be seen in map units
047349             0016*  
047349 03 20 00    0017*  bj_health_image: dl BUF_UI_BJ_100 ; 100% health default
04734C             0018*  
04734C             0019*  ; render background as a prelude to rendering panels and sprites
04734C             0020*  ; hl is the buffer id, bc and de are plot_x and plot_y
04734C             0021*  render_background:
04734C             0022*  ; back up everything
04734C C5          0023*      push bc
04734D D5          0024*      push de
04734E E5          0025*      push hl
04734F             0026*  ; plot background
04734F AF          0027*      xor a ; color mode
047350 0E 08       0028*      ld c,c_grey_dk ; color
047352 CD 09 B8 04 0029*      call vdu_gcol_fg
047356 01 00 00 00 0030*      ld bc,0 ; x0
04735A 11 00 00 00 0031*      ld de,0 ; y0
04735E DD 21 3F 01 0032*      ld ix,319
       00          
047363 FD 21 50 00 0033*      ld iy,80
       00          
047368 CD 56 BB 04 0034*      call vdu_plot_rf
04736C AF          0035*      xor a ; color mode
04736D 0E 07       0036*      ld c,c_grey ; color
04736F CD 09 B8 04 0037*      call vdu_gcol_fg
047373 01 00 00 00 0038*      ld bc,0 ; x0
047377 11 50 00 00 0039*      ld de,80 ; y0
04737B DD 21 3F 01 0040*      ld ix,319
       00          
047380 FD 21 9F 00 0041*      ld iy,159
       00          
047385 CD 56 BB 04 0042*      call vdu_plot_rf
047389             0043*  ; plot the background
047389 E1          0044*      pop hl ; get back the buffer id
04738A CD 48 B9 04 0045*      call vdu_buff_select
04738E D1          0046*      pop de ; get back plot_y
04738F C1          0047*      pop bc ; get back plot_x
047390 CD 19 BB 04 0048*      call vdu_plot_bmp
047394 C9          0049*      ret
047395             0050*  
047395             0051*  ; render a 3D panel
047395             0052*  ; inputs: to_poly_id set, to_buffer_id set
047395             0053*  render_panel:
047395             0054*  ; make the bitmap buffer active
047395 2A 43 73 04 0055*      ld hl,(to_buffer_id)
047399 CD 48 B9 04 0056*      call vdu_buff_select
04739D             0057*  ; get the coordinates of the panel
04739D DD 21 CD 75 0058*      ld ix,polys_lookup_plot ; pointer to polys lookup table
       04          
0473A2             0059*  ; get the panel's poly_id
0473A2 3A 42 73 04 0060*      ld a,(to_poly_id)
0473A6             0061*  ; multiply a by 6 to get the offset
0473A6 47          0062*      ld b,a
0473A7 0E 06       0063*      ld c,6
0473A9 ED 4C       0064*      mlt bc
0473AB             0065*  ; add the offset to the lookup table
0473AB DD 09       0066*      add ix,bc
0473AD             0067*  ; get the panel coordinates
0473AD DD 07 00    0068*      ld bc,(ix) ; plot_x
0473B0 DD 17 03    0069*      ld de,(ix+3) ; plot_y
0473B3             0070*  ; plot that mofo and go home
0473B3 CD 19 BB 04 0071*      call vdu_plot_bmp
0473B7 C9          0072*      ret
0473B8             0073*  
0473B8             0074*  ; render a 3D sprite
0473B8             0075*  ; inputs: a is sprite_id, to_poly_id set, to_cell_status fields set
0473B8             0076*  ; (ix should also be pointed to cell_status record but we don't depend on it for the time being)
0473B8             0077*  render_sprite:
0473B8             0078*  ; look up sprite_obj in sprite table
0473B8 FD 21 00 FC 0079*      ld iy,sprite_table_base
       B7          
0473BD 47          0080*      ld b,a ; sprite id
0473BE 0E 10       0081*      ld c,sprite_record_size
0473C0 ED 4C       0082*      mlt bc
0473C2 FD 09       0083*      add iy,bc ; iy points to sprite record
0473C4 FD 22 F4 AE 0084*      ld (sprite_table_pointer),iy
       04          
0473C9             0085*  ; get sprite imgs lookup
0473C9 FD 7E 01    0086*      ld a,(iy+sprite_obj) ; a is sprite_obj
0473CC FD 21 EE 78 0087*      ld iy,sprite_imgs_lookup ; base address of sprite_imgs lookup table
       04          
0473D1 47          0088*      ld b,a
0473D2 0E 03       0089*      ld c,3 ; 3 bytes per record
0473D4 ED 4C       0090*      mlt bc
0473D6 FD 09       0091*      add iy,bc ; iy points to the sprite's sprite_imgs_lookup record
0473D8 FD 37 00    0092*      ld iy,(iy) ; iy is the base address of the sprite's image defs lookup
0473DB             0093*  ; convert to_poly_id to sprite_poly
0473DB 21 BE 78 04 0094*      ld hl,sprite_polys_lookup
0473DF 3A 42 73 04 0095*      ld a,(to_poly_id)
0473E3 01 00 00 00 0096*      ld bc,0  ; make sure bcu and b are zero
0473E7 4F          0097*      ld c,a
0473E8 09          0098*      add hl,bc ; hl points to the sprite's poly id
0473E9             0099*  ; get the sprites image defs for the particular poly id
0473E9 7E          0100*      ld a,(hl)
0473EA 47          0101*      ld b,a
0473EB 0E 09       0102*      ld c,9  ; 9 bytes per record
0473ED ED 4C       0103*      mlt bc
0473EF FD 09       0104*      add iy,bc ; iy is the offset to the sprite's image def
0473F1             0105*  ; select buffer
0473F1 FD 27 06    0106*      ld hl,(iy+6)
0473F4 CD 48 B9 04 0107*      call vdu_buff_select
0473F8             0108*  ; plot sprite
0473F8 FD 07 00    0109*      ld bc,(iy+0) ; plot_x
0473FB FD 17 03    0110*      ld de,(iy+3) ; plot_y
0473FE CD 19 BB 04 0111*      call vdu_plot_bmp
047402 C9          0112*      ret
047403             0113*  
047403             0114*  ; render the object in a given cell and poly_id
047403             0115*  ; inputs: to_poly_id set, d,e are the cell coords
047403             0116*  render_cell:
047403             0117*  ; get the cell to render's cell_status data and store it in scratch
047403 CD C2 70 04 0118*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
047407 DD 27 00    0119*      ld hl,(ix) ; l = to_map_type_status, h = to_img_idx, hlu = to_obj_id
04740A 22 3E 73 04 0120*      ld (to_cell_status),hl
04740E             0121*  ; get sprite_id from cell_status lut
04740E DD 7E 03    0122*      ld a,(ix+map_sprite_id)
047411 FE FF       0123*      cp 255 ; value if no sprite present
047413 C2 B8 73 04 0124*      jp nz,render_sprite
047417             0125*  ; get cell's render_type
047417 7D          0126*      ld a,l ; map_type_status
047418 E6 02       0127*      and 2 ; mask off everything but lowest two bits
04741A 28 02       0128*      jr z,@cube ; render_type_cube is 0
04741C 18 32       0129*      jr @nodraw ; placeholder for future implementation TODO
04741E             0130*  @cube:
04741E             0131*      ; get map_img_idx from cell_status lut
04741E 3A 3F 73 04 0132*      ld a,(to_img_idx)
047422 FE FF       0133*      cp 255 ; value for cell with nothing to draw
047424 28 2A       0134*      jr z,@nodraw
047426             0135*  ; prepare render_panel ; inputs: to_poly_id set, to_buffer_id set
047426 21 1D 77 04 0136*      ld hl,cube_img_idx_lookup
04742A 47          0137*      ld b,a
04742B 0E 03       0138*      ld c,3 ; three bytes per record
04742D ED 4C       0139*      mlt bc
04742F 09          0140*      add hl,bc ; hl points to the cube's base buffer id
047430 ED 27       0141*      ld hl,(hl) ; hl is the base buffer id
047432 EB          0142*      ex de,hl ; stash the base buffer id in de for later
047433 21 ED 76 04 0143*      ld hl,cube_poly_idx_lookup
047437 3A 42 73 04 0144*      ld a,(to_poly_id)
04743B 01 00 00 00 0145*      ld bc,0 ; make sure bcu is zero
04743F 4F          0146*      ld c,a
047440 09          0147*      add hl,bc ; hl is the buffer id index address
047441 7E          0148*      ld a,(hl) ; a is the buffer id index value
047442 21 00 00 00 0149*      ld hl,0 ; make sure hlu is zero
047446 6F          0150*      ld l,a ; hl is the buffer id index value
047447 19          0151*      add hl,de ; hl is the buffer id
047448 22 43 73 04 0152*      ld (to_buffer_id),hl
04744C C3 95 73 04 0153*      jp render_panel
047450             0154*  @nodraw:
047450 C9          0155*      ret
047451             0156*  
047451             0157*  ; render a full 3d scene
047451             0158*  ; inputs: cur_x, cur_y, orientation set
047451             0159*  ; outputs: pretty pictures
047451             0160*  ; destroys: everything
047451             0161*  render_scene:
047451             0162*  ; clear the screen
047451 CD 4C 73 04 0163*      call render_background
047455             0164*  ; get current map position and camera orientation
047455 ED 5B FE C1 0165*      ld de,(cur_x) ; d,e = cur_y,x
       04          
04745A CD C2 70 04 0166*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
04745E             0167*  ; get cell_views address for this cell and orientation
04745E 3A FD C1 04 0168*      ld a,(orientation)
047462 5F          0169*      ld e,a
047463 16 06       0170*      ld d,6 ; 6 bytes per orientation
047465 ED 5C       0171*      mlt de ; de = orientation offset
047467 EB          0172*      ex de,hl ; hl = orientation offset
047468 06 18       0173*      ld b,24 ; 24 bytes per cell in cell_views lut
04746A ED 4C       0174*      mlt bc ; bc = offset from base address of cell_views lut
04746C 09          0175*      add hl,bc ; hl = total offset from cell_views base address
04746D EB          0176*      ex de,hl ; becaue we can't add iy to hl
04746E FD 21 00 E4 0177*      ld iy,cell_views ; base address of cell_views lut
       B7          
047473 FD 19       0178*      add iy,de ; iy = cell_views address
047475 FD 22 46 73 0179*      ld (cur_cell_views),iy
       04          
04747A             0180*  ; cycle through the cell views masks and render the appropriate objects
04747A 01 00 46 28 0181*      ld bc,0x284600 ; bcu = jr z,nnn opcode, c = bit operand, b = displacement operand
04747E AF          0182*      xor a ; poly_id
04747F 32 42 73 04 0183*      ld (to_poly_id),a
047483             0184*  @loop:
047483 ED 43 8F 74 0185*      ld (@bit_iy+2),bc
       04          
047488 FD 2A 46 73 0186*      ld iy,(cur_cell_views)
       04          
04748D             0187*  @bit_iy:
04748D FD CB 00 46 0188*      bit 0,(iy+0) ; the bit tested and offset will be self-modified through the loop
047491 28 21       0189*      jr z,@next_poly ; the first byte of this instruction is 0x28, and will be re-written as such each loop
047493             0190*  ; get_polys_deltas inputs: a is the orientation, c is the poly_id
047493 3A 42 73 04 0191*      ld a,(to_poly_id)
047497 4F          0192*      ld c,a ; poly_id
047498 3A FD C1 04 0193*      ld a,(orientation)
04749C CD 9A 75 04 0194*      call get_polys_deltas ; d,e = y,x deltas
0474A0 3A FE C1 04 0195*      ld a,(cur_x)
0474A4 83          0196*      add a,e
0474A5 5F          0197*      ld e,a
0474A6 3A FF C1 04 0198*      ld a,(cur_y)
0474AA 82          0199*      add a,d
0474AB 57          0200*      ld d,a
0474AC 3A 42 73 04 0201*      ld a,(to_poly_id)
0474B0 CD 03 74 04 0202*      call render_cell ; d,e = to_render y,x coords, we don't need to worry about the modulo 16
0474B4             0203*  @next_poly:
0474B4 ED 4B 8F 74 0204*      ld bc,(@bit_iy+2)
       04          
0474B9 3A 42 73 04 0205*      ld a,(to_poly_id)
0474BD 3C          0206*      inc a ; a is next poly_id
0474BE 32 42 73 04 0207*      ld (to_poly_id),a
0474C2 FE 30       0208*      cp num_polys
0474C4 28 0D       0209*      jr z,@end
0474C6 3E 08       0210*      ld a,8
0474C8 80          0211*      add a,b
0474C9 47          0212*      ld b,a ; bit tested codes to 0x46 + b/8
0474CA FE 86       0213*      cp 0x86 ; = 0x7E + 8 where 0x7E is the highest bit possible (7)
0474CC 20 B5       0214*      jr nz,@loop
0474CE 06 46       0215*      ld b,0x46
0474D0 0C          0216*      inc c ; iy address offset
0474D1 18 B0       0217*      jr @loop
0474D3             0218*  @end:
0474D3             0219*  ; draw the graphic portions of the ui
0474D3 21 05 20 00 0220*  	ld hl,BUF_UI_LOWER_PANEL
0474D7 CD 48 B9 04 0221*      call vdu_buff_select
0474DB 01 00 00 00 0222*  	ld bc,0 ; x
0474DF 11 A0 00 00 0223*  	ld de,160 ; y
0474E3 CD 19 BB 04 0224*  	call vdu_plot_bmp
0474E7             0225*  
0474E7 2A 19 C2 04 0226*      ld hl,(plyr_wpn_ui_lg)
0474EB ED 5B 2B C2 0227*      ld de,(plyr_wpn_anim_fr)
       04          
0474F0 19          0228*      add hl,de
0474F1 CD 48 B9 04 0229*      call vdu_buff_select
0474F5 01 80 00 00 0230*      ld bc,128 ; x
0474F9 11 60 00 00 0231*      ld de,96 ; y
0474FD CD 19 BB 04 0232*      call vdu_plot_bmp
047501             0233*  
047501 2A 16 C2 04 0234*      ld hl,(plyr_wpn_ui_sm)
047505 CD 48 B9 04 0235*      call vdu_buff_select
047509 01 0A 01 00 0236*      ld bc,266 ; x
04750D 11 B2 00 00 0237*      ld de,178 ; y
047511 CD 19 BB 04 0238*      call vdu_plot_bmp
047515             0239*  
047515 2A 49 73 04 0240*      ld hl,(bj_health_image)
047519 CD 48 B9 04 0241*      call vdu_buff_select
04751D 01 84 00 00 0242*      ld bc,132 ; x
047521 11 AA 00 00 0243*      ld de,170 ; y
047525 CD 19 BB 04 0244*      call vdu_plot_bmp
047529             0245*  
047529             0246*  ; draw the text portions of the ui
047529 0E 16       0247*      ld c,22 ; x
04752B 06 03       0248*      ld b,3 ; y
04752D CD 1C B9 04 0249*      call vdu_move_cursor
047531 2A 2E C2 04 0250*      ld hl,(plyr_ammo)
047535 CD 3D BE 04 0251*      call printDec
047539             0252*  
047539 0E 11       0253*      ld c,17 ; x
04753B 06 03       0254*      ld b,3 ; y
04753D CD 1C B9 04 0255*      call vdu_move_cursor
047541 2A EF C1 04 0256*      ld hl,(plyr_health)
047545 CD 3D BE 04 0257*      call printDec
047549             0258*  
047549             0259*  ; DEBUG
047549 0E 11       0260*      ld c,17 ; x
04754B 06 04       0261*      ld b,4  ; y
04754D CD 1C B9 04 0262*      call vdu_move_cursor
047551 2A 8C C4 04 0263*      ld hl,(last_damage)
047555 CD 3D BE 04 0264*      call printDec
047559             0265*  ; END DEBUG
047559             0266*  
047559 0E 07       0267*      ld c,7; x
04755B 06 03       0268*      ld b,3 ; y
04755D CD 1C B9 04 0269*      call vdu_move_cursor
047561 2A F5 C1 04 0270*      ld hl,(plyr_lives)
047565 CD 3D BE 04 0271*      call printDec
047569             0272*  
047569 0E 03       0273*      ld c,3 ; x
04756B 06 03       0274*      ld b,3 ; y
04756D CD 1C B9 04 0275*      call vdu_move_cursor
047571 2A EC C1 04 0276*      ld hl,(plyr_score)
047575 CD 3D BE 04 0277*      call printDec
047579             0278*  
047579 0E 01       0279*      ld c,1 ; x
04757B 06 03       0280*      ld b,3 ; y
04757D CD 1C B9 04 0281*      call vdu_move_cursor
047581 3A F8 C1 04 0282*      ld a,(cur_floor)
047585 CD 1F BE 04 0283*      call printHex8
047589             0284*  
047589 0E 01       0285*      ld c,1 ; x
04758B 06 04       0286*      ld b,4 ; y
04758D CD 1C B9 04 0287*      call vdu_move_cursor
047591 3A F9 C1 04 0288*      ld a,(cur_room)
047595 CD 1F BE 04 0289*      call printHex8
047599             0290*  
047599             0291*  ; ; DEBUG
047599             0292*      ; ld c,1 ; x
047599             0293*      ; ld b,5 ; y
047599             0294*      ; call vdu_move_cursor
047599             0295*      ; ld hl,cur_x
047599             0296*      ; ld a,5
047599             0297*      ; call dumpMemoryHex
047599             0298*  
047599             0299*      ; ld c,1 ; x
047599             0300*      ; ld b,7 ; y
047599             0301*      ; call vdu_move_cursor
047599             0302*      ; ld hl,room_flags
047599             0303*      ; ld a,10
047599             0304*      ; call dumpMemoryHex
047599             0305*  
047599             0306*  ;     ld c,1 ; x
047599             0307*  ;     ld b,7 ; y
047599             0308*  ;     call vdu_move_cursor
047599             0309*  ;     ld hl,sprite_new_x
047599             0310*  ;     ld a,3
047599             0311*  ;     call dumpMemoryHex
047599             0312*  
047599             0313*  ;     ld c,1 ; x
047599             0314*  ;     ld b,8 ; y
047599             0315*  ;     call vdu_move_cursor
047599             0316*  ;     ld hl,cur_x
047599             0317*  ;     ld a,3
047599             0318*  ;     call dumpMemoryHex
047599             0319*  ; ; END DEBUG
047599             0320*  
047599             0321*  ; all done
047599 C9          0322*      ret
04759A             0323*  
04759A             0324*  ; get the map coordinates deltas for a given orientation and poly_id
04759A             0325*  ; inputs: a is the orientation, c is the poly_id
04759A             0326*  ; returns: d,e are the y,x deltas, deu will be the next byte in the lookup table and should be ignored
04759A             0327*  get_polys_deltas:
04759A             0328*  ; get the base address of the orientation-specific deltas lookup table
04759A FE 00       0329*      cp 0
04759C 28 11       0330*      jr z,@orientation_0
04759E FE 01       0331*      cp 1
0475A0 28 13       0332*      jr z,@orientation_1
0475A2 FE 02       0333*      cp 2
0475A4 28 15       0334*      jr z,@orientation_2
0475A6 FE 03       0335*      cp 3
0475A8 28 17       0336*      jr z,@orientation_3
0475AA             0337*  ; return zeros if not found
0475AA 11 00 00 00 0338*      ld de,0
0475AE C9          0339*      ret
0475AF             0340*  @orientation_0: ; north
0475AF 21 3E 77 04 0341*      ld hl,polys_map_deltas_0
0475B3 18 10       0342*      jr @get_deltas
0475B5             0343*  @orientation_1: ; east
0475B5 21 9E 77 04 0344*      ld hl,polys_map_deltas_1
0475B9 18 0A       0345*      jr @get_deltas
0475BB             0346*  @orientation_2: ; south
0475BB 21 FE 77 04 0347*      ld hl,polys_map_deltas_2
0475BF 18 04       0348*      jr @get_deltas
0475C1             0349*  @orientation_3: ; west
0475C1 21 5E 78 04 0350*      ld hl,polys_map_deltas_3
0475C5             0351*  @get_deltas:
0475C5 06 02       0352*      ld b,2 ; 2 bytes per record
0475C7 ED 4C       0353*      mlt bc ; poly_id * 2
0475C9 09          0354*      add hl,bc ; hl points to the deltas
0475CA ED 17       0355*      ld de,(hl) ;d,e = dy,dx
0475CC C9          0356*      ret
0475CD             0017   	include "src/asm/polys.asm"
0475CD             0001*  num_polys: equ 48
0475CD             0002*  
0475CD             0003*  polys_lookup_plot:
0475CD             0004*  ;	   plot_x,  plot_y:
0475CD 47 00 00 3E 0005*  	dl 0x000047,0x00003E ; poly_id:0 00
       00 00       
0475D3 6A 00 00 3E 0006*  	dl 0x00006A,0x00003E ; poly_id:1 01
       00 00       
0475D9 CB 00 00 3E 0007*  	dl 0x0000CB,0x00003E ; poly_id:2 02
       00 00       
0475DF 00 00 00 3E 0008*  	dl 0x000000,0x00003E ; poly_id:3 03
       00 00       
0475E5 23 00 00 3E 0009*  	dl 0x000023,0x00003E ; poly_id:4 04
       00 00       
0475EB 47 00 00 3E 0010*  	dl 0x000047,0x00003E ; poly_id:5 05
       00 00       
0475F1 6A 00 00 3E 0011*  	dl 0x00006A,0x00003E ; poly_id:6 06
       00 00       
0475F7 8E 00 00 3E 0012*  	dl 0x00008E,0x00003E ; poly_id:7 07
       00 00       
0475FD B1 00 00 3E 0013*  	dl 0x0000B1,0x00003E ; poly_id:8 08
       00 00       
047603 D5 00 00 3E 0014*  	dl 0x0000D5,0x00003E ; poly_id:9 09
       00 00       
047609 F8 00 00 3E 0015*  	dl 0x0000F8,0x00003E ; poly_id:10 0A
       00 00       
04760F 1C 01 00 3E 0016*  	dl 0x00011C,0x00003E ; poly_id:11 0B
       00 00       
047615 00 00 00 39 0017*  	dl 0x000000,0x000039 ; poly_id:12 0C
       00 00       
04761B 2D 00 00 39 0018*  	dl 0x00002D,0x000039 ; poly_id:13 0D
       00 00       
047621 5B 00 00 39 0019*  	dl 0x00005B,0x000039 ; poly_id:14 0E
       00 00       
047627 89 00 00 39 0020*  	dl 0x000089,0x000039 ; poly_id:15 0F
       00 00       
04762D B1 00 00 39 0021*  	dl 0x0000B1,0x000039 ; poly_id:16 10
       00 00       
047633 D5 00 00 39 0022*  	dl 0x0000D5,0x000039 ; poly_id:17 11
       00 00       
047639 F8 00 00 39 0023*  	dl 0x0000F8,0x000039 ; poly_id:18 12
       00 00       
04763F 1C 01 00 39 0024*  	dl 0x00011C,0x000039 ; poly_id:19 13
       00 00       
047645 00 00 00 39 0025*  	dl 0x000000,0x000039 ; poly_id:20 14
       00 00       
04764B 2D 00 00 39 0026*  	dl 0x00002D,0x000039 ; poly_id:21 15
       00 00       
047651 5B 00 00 39 0027*  	dl 0x00005B,0x000039 ; poly_id:22 16
       00 00       
047657 89 00 00 39 0028*  	dl 0x000089,0x000039 ; poly_id:23 17
       00 00       
04765D B6 00 00 39 0029*  	dl 0x0000B6,0x000039 ; poly_id:24 18
       00 00       
047663 E4 00 00 39 0030*  	dl 0x0000E4,0x000039 ; poly_id:25 19
       00 00       
047669 12 01 00 39 0031*  	dl 0x000112,0x000039 ; poly_id:26 1A
       00 00       
04766F 00 00 00 30 0032*  	dl 0x000000,0x000030 ; poly_id:27 1B
       00 00       
047675 40 00 00 30 0033*  	dl 0x000040,0x000030 ; poly_id:28 1C
       00 00       
04767B 80 00 00 30 0034*  	dl 0x000080,0x000030 ; poly_id:29 1D
       00 00       
047681 B6 00 00 30 0035*  	dl 0x0000B6,0x000030 ; poly_id:30 1E
       00 00       
047687 E4 00 00 30 0036*  	dl 0x0000E4,0x000030 ; poly_id:31 1F
       00 00       
04768D 12 01 00 30 0037*  	dl 0x000112,0x000030 ; poly_id:32 20
       00 00       
047693 00 00 00 30 0038*  	dl 0x000000,0x000030 ; poly_id:33 21
       00 00       
047699 40 00 00 30 0039*  	dl 0x000040,0x000030 ; poly_id:34 22
       00 00       
04769F 80 00 00 30 0040*  	dl 0x000080,0x000030 ; poly_id:35 23
       00 00       
0476A5 BF 00 00 30 0041*  	dl 0x0000BF,0x000030 ; poly_id:36 24
       00 00       
0476AB FF 00 00 30 0042*  	dl 0x0000FF,0x000030 ; poly_id:37 25
       00 00       
0476B1 00 00 00 1A 0043*  	dl 0x000000,0x00001A ; poly_id:38 26
       00 00       
0476B7 6A 00 00 1A 0044*  	dl 0x00006A,0x00001A ; poly_id:39 27
       00 00       
0476BD BF 00 00 1A 0045*  	dl 0x0000BF,0x00001A ; poly_id:40 28
       00 00       
0476C3 FF 00 00 1A 0046*  	dl 0x0000FF,0x00001A ; poly_id:41 29
       00 00       
0476C9 00 00 00 1A 0047*  	dl 0x000000,0x00001A ; poly_id:42 2A
       00 00       
0476CF 6A 00 00 1A 0048*  	dl 0x00006A,0x00001A ; poly_id:43 2B
       00 00       
0476D5 D5 00 00 1A 0049*  	dl 0x0000D5,0x00001A ; poly_id:44 2C
       00 00       
0476DB 00 00 00 00 0050*  	dl 0x000000,0x000000 ; poly_id:45 2D
       00 00       
0476E1 D5 00 00 00 0051*  	dl 0x0000D5,0x000000 ; poly_id:46 2E
       00 00       
0476E7 00 00 00 00 0052*  	dl 0x000000,0x000000 ; poly_id:47 2F
       00 00       
0476ED             0053*  
0476ED             0054*  cube_poly_idx_lookup:
0476ED             0055*  ;	 img_idx,  poly_id
0476ED 00          0056*  	db 0 ; poly_id:0 0
0476EE 01          0057*  	db 1 ; poly_id:1 1
0476EF 02          0058*  	db 2 ; poly_id:2 2
0476F0 03          0059*  	db 3 ; poly_id:3 3
0476F1 03          0060*  	db 3 ; poly_id:4 4
0476F2 03          0061*  	db 3 ; poly_id:5 5
0476F3 03          0062*  	db 3 ; poly_id:6 6
0476F4 03          0063*  	db 3 ; poly_id:7 7
0476F5 03          0064*  	db 3 ; poly_id:8 8
0476F6 03          0065*  	db 3 ; poly_id:9 9
0476F7 03          0066*  	db 3 ; poly_id:10 10
0476F8 03          0067*  	db 3 ; poly_id:11 11
0476F9 04          0068*  	db 4 ; poly_id:12 12
0476FA 05          0069*  	db 5 ; poly_id:13 13
0476FB 06          0070*  	db 6 ; poly_id:14 14
0476FC 07          0071*  	db 7 ; poly_id:15 15
0476FD 08          0072*  	db 8 ; poly_id:16 16
0476FE 09          0073*  	db 9 ; poly_id:17 17
0476FF 0A          0074*  	db 10 ; poly_id:18 18
047700 0B          0075*  	db 11 ; poly_id:19 19
047701 0C          0076*  	db 12 ; poly_id:20 20
047702 0C          0077*  	db 12 ; poly_id:21 21
047703 0C          0078*  	db 12 ; poly_id:22 22
047704 0C          0079*  	db 12 ; poly_id:23 23
047705 0C          0080*  	db 12 ; poly_id:24 24
047706 0C          0081*  	db 12 ; poly_id:25 25
047707 0C          0082*  	db 12 ; poly_id:26 26
047708 0D          0083*  	db 13 ; poly_id:27 27
047709 0E          0084*  	db 14 ; poly_id:28 28
04770A 0F          0085*  	db 15 ; poly_id:29 29
04770B 10          0086*  	db 16 ; poly_id:30 30
04770C 11          0087*  	db 17 ; poly_id:31 31
04770D 12          0088*  	db 18 ; poly_id:32 32
04770E 13          0089*  	db 19 ; poly_id:33 33
04770F 13          0090*  	db 19 ; poly_id:34 34
047710 13          0091*  	db 19 ; poly_id:35 35
047711 13          0092*  	db 19 ; poly_id:36 36
047712 13          0093*  	db 19 ; poly_id:37 37
047713 14          0094*  	db 20 ; poly_id:38 38
047714 15          0095*  	db 21 ; poly_id:39 39
047715 16          0096*  	db 22 ; poly_id:40 40
047716 17          0097*  	db 23 ; poly_id:41 41
047717 18          0098*  	db 24 ; poly_id:42 42
047718 18          0099*  	db 24 ; poly_id:43 43
047719 18          0100*  	db 24 ; poly_id:44 44
04771A 19          0101*  	db 25 ; poly_id:45 45
04771B 1A          0102*  	db 26 ; poly_id:46 46
04771C 1B          0103*  	db 27 ; poly_id:47 47
04771D             0104*  
04771D             0105*  cube_img_idx_lookup:
04771D             0106*  ;	 img_idx,  bank_id,  obj_id,  tile_name
04771D 00 01 00    0107*  	dl BUF_10_000 ; idx:0 render_obj_id:10 LIGHT GREY WALL
047720 1C 01 00    0108*  	dl BUF_11_000 ; idx:1 render_obj_id:11 JAIL CELL
047723 38 01 00    0109*  	dl BUF_12_000 ; idx:2 render_obj_id:12 STONE ARCH BIRD
047726 54 01 00    0110*  	dl BUF_13_000 ; idx:3 render_obj_id:13 DARK GREY WALL
047729 70 01 00    0111*  	dl BUF_14_000 ; idx:4 render_obj_id:14 WOOD WALL
04772C 8C 01 00    0112*  	dl BUF_15_000 ; idx:5 render_obj_id:15 HANGING FLAG
04772F A8 01 00    0113*  	dl BUF_16_000 ; idx:6 render_obj_id:16 WOOD EAGLE
047732 C4 01 00    0114*  	dl BUF_17_000 ; idx:7 render_obj_id:17 BLUE WALL
047735 E0 01 00    0115*  	dl BUF_57_000 ; idx:8 render_obj_id:57 REGULAR DOOR
047738 FC 01 00    0116*  	dl BUF_58_000 ; idx:9 render_obj_id:58 ELEVATOR SWITCH
04773B 18 02 00    0117*  	dl BUF_59_000 ; idx:10 render_obj_id:59 ELEVATOR DOOR
04773E             0118*  
04773E             0119*  ; map_delta_x,  map_delta_y
04773E             0120*  polys_map_deltas_0: ; north orientation
04773E FD FB       0121*  	db 0xFD,0xFB ; poly_id:0 00
047740 FE FB       0122*  	db 0xFE,0xFB ; poly_id:1 01
047742 02 FB       0123*  	db 0x02,0xFB ; poly_id:2 02
047744 FC FB       0124*  	db 0xFC,0xFB ; poly_id:3 03
047746 FD FB       0125*  	db 0xFD,0xFB ; poly_id:4 04
047748 FE FB       0126*  	db 0xFE,0xFB ; poly_id:5 05
04774A FF FB       0127*  	db 0xFF,0xFB ; poly_id:6 06
04774C 00 FB       0128*  	db 0x00,0xFB ; poly_id:7 07
04774E 01 FB       0129*  	db 0x01,0xFB ; poly_id:8 08
047750 02 FB       0130*  	db 0x02,0xFB ; poly_id:9 09
047752 03 FB       0131*  	db 0x03,0xFB ; poly_id:10 0A
047754 04 FB       0132*  	db 0x04,0xFB ; poly_id:11 0B
047756 FC FC       0133*  	db 0xFC,0xFC ; poly_id:12 0C
047758 FD FC       0134*  	db 0xFD,0xFC ; poly_id:13 0D
04775A FE FC       0135*  	db 0xFE,0xFC ; poly_id:14 0E
04775C FF FC       0136*  	db 0xFF,0xFC ; poly_id:15 0F
04775E 01 FC       0137*  	db 0x01,0xFC ; poly_id:16 10
047760 02 FC       0138*  	db 0x02,0xFC ; poly_id:17 11
047762 03 FC       0139*  	db 0x03,0xFC ; poly_id:18 12
047764 04 FC       0140*  	db 0x04,0xFC ; poly_id:19 13
047766 FD FC       0141*  	db 0xFD,0xFC ; poly_id:20 14
047768 FE FC       0142*  	db 0xFE,0xFC ; poly_id:21 15
04776A FF FC       0143*  	db 0xFF,0xFC ; poly_id:22 16
04776C 00 FC       0144*  	db 0x00,0xFC ; poly_id:23 17
04776E 01 FC       0145*  	db 0x01,0xFC ; poly_id:24 18
047770 02 FC       0146*  	db 0x02,0xFC ; poly_id:25 19
047772 03 FC       0147*  	db 0x03,0xFC ; poly_id:26 1A
047774 FD FD       0148*  	db 0xFD,0xFD ; poly_id:27 1B
047776 FE FD       0149*  	db 0xFE,0xFD ; poly_id:28 1C
047778 FF FD       0150*  	db 0xFF,0xFD ; poly_id:29 1D
04777A 01 FD       0151*  	db 0x01,0xFD ; poly_id:30 1E
04777C 02 FD       0152*  	db 0x02,0xFD ; poly_id:31 1F
04777E 03 FD       0153*  	db 0x03,0xFD ; poly_id:32 20
047780 FE FD       0154*  	db 0xFE,0xFD ; poly_id:33 21
047782 FF FD       0155*  	db 0xFF,0xFD ; poly_id:34 22
047784 00 FD       0156*  	db 0x00,0xFD ; poly_id:35 23
047786 01 FD       0157*  	db 0x01,0xFD ; poly_id:36 24
047788 02 FD       0158*  	db 0x02,0xFD ; poly_id:37 25
04778A FE FE       0159*  	db 0xFE,0xFE ; poly_id:38 26
04778C FF FE       0160*  	db 0xFF,0xFE ; poly_id:39 27
04778E 01 FE       0161*  	db 0x01,0xFE ; poly_id:40 28
047790 02 FE       0162*  	db 0x02,0xFE ; poly_id:41 29
047792 FF FE       0163*  	db 0xFF,0xFE ; poly_id:42 2A
047794 00 FE       0164*  	db 0x00,0xFE ; poly_id:43 2B
047796 01 FE       0165*  	db 0x01,0xFE ; poly_id:44 2C
047798 FF FF       0166*  	db 0xFF,0xFF ; poly_id:45 2D
04779A 01 FF       0167*  	db 0x01,0xFF ; poly_id:46 2E
04779C 00 FF       0168*  	db 0x00,0xFF ; poly_id:47 2F
04779E             0169*  
04779E             0170*  polys_map_deltas_1: ; east orientation
04779E 05 FD       0171*  	db 0x05,0xFD ; poly_id:0 00
0477A0 05 FE       0172*  	db 0x05,0xFE ; poly_id:1 01
0477A2 05 02       0173*  	db 0x05,0x02 ; poly_id:2 02
0477A4 05 FC       0174*  	db 0x05,0xFC ; poly_id:3 03
0477A6 05 FD       0175*  	db 0x05,0xFD ; poly_id:4 04
0477A8 05 FE       0176*  	db 0x05,0xFE ; poly_id:5 05
0477AA 05 FF       0177*  	db 0x05,0xFF ; poly_id:6 06
0477AC 05 00       0178*  	db 0x05,0x00 ; poly_id:7 07
0477AE 05 01       0179*  	db 0x05,0x01 ; poly_id:8 08
0477B0 05 02       0180*  	db 0x05,0x02 ; poly_id:9 09
0477B2 05 03       0181*  	db 0x05,0x03 ; poly_id:10 0A
0477B4 05 04       0182*  	db 0x05,0x04 ; poly_id:11 0B
0477B6 04 FC       0183*  	db 0x04,0xFC ; poly_id:12 0C
0477B8 04 FD       0184*  	db 0x04,0xFD ; poly_id:13 0D
0477BA 04 FE       0185*  	db 0x04,0xFE ; poly_id:14 0E
0477BC 04 FF       0186*  	db 0x04,0xFF ; poly_id:15 0F
0477BE 04 01       0187*  	db 0x04,0x01 ; poly_id:16 10
0477C0 04 02       0188*  	db 0x04,0x02 ; poly_id:17 11
0477C2 04 03       0189*  	db 0x04,0x03 ; poly_id:18 12
0477C4 04 04       0190*  	db 0x04,0x04 ; poly_id:19 13
0477C6 04 FD       0191*  	db 0x04,0xFD ; poly_id:20 14
0477C8 04 FE       0192*  	db 0x04,0xFE ; poly_id:21 15
0477CA 04 FF       0193*  	db 0x04,0xFF ; poly_id:22 16
0477CC 04 00       0194*  	db 0x04,0x00 ; poly_id:23 17
0477CE 04 01       0195*  	db 0x04,0x01 ; poly_id:24 18
0477D0 04 02       0196*  	db 0x04,0x02 ; poly_id:25 19
0477D2 04 03       0197*  	db 0x04,0x03 ; poly_id:26 1A
0477D4 03 FD       0198*  	db 0x03,0xFD ; poly_id:27 1B
0477D6 03 FE       0199*  	db 0x03,0xFE ; poly_id:28 1C
0477D8 03 FF       0200*  	db 0x03,0xFF ; poly_id:29 1D
0477DA 03 01       0201*  	db 0x03,0x01 ; poly_id:30 1E
0477DC 03 02       0202*  	db 0x03,0x02 ; poly_id:31 1F
0477DE 03 03       0203*  	db 0x03,0x03 ; poly_id:32 20
0477E0 03 FE       0204*  	db 0x03,0xFE ; poly_id:33 21
0477E2 03 FF       0205*  	db 0x03,0xFF ; poly_id:34 22
0477E4 03 00       0206*  	db 0x03,0x00 ; poly_id:35 23
0477E6 03 01       0207*  	db 0x03,0x01 ; poly_id:36 24
0477E8 03 02       0208*  	db 0x03,0x02 ; poly_id:37 25
0477EA 02 FE       0209*  	db 0x02,0xFE ; poly_id:38 26
0477EC 02 FF       0210*  	db 0x02,0xFF ; poly_id:39 27
0477EE 02 01       0211*  	db 0x02,0x01 ; poly_id:40 28
0477F0 02 02       0212*  	db 0x02,0x02 ; poly_id:41 29
0477F2 02 FF       0213*  	db 0x02,0xFF ; poly_id:42 2A
0477F4 02 00       0214*  	db 0x02,0x00 ; poly_id:43 2B
0477F6 02 01       0215*  	db 0x02,0x01 ; poly_id:44 2C
0477F8 01 FF       0216*  	db 0x01,0xFF ; poly_id:45 2D
0477FA 01 01       0217*  	db 0x01,0x01 ; poly_id:46 2E
0477FC 01 00       0218*  	db 0x01,0x00 ; poly_id:47 2F
0477FE             0219*  
0477FE             0220*  polys_map_deltas_2: ; south orientation
0477FE 03 05       0221*  	db 0x03,0x05 ; poly_id:0 00
047800 02 05       0222*  	db 0x02,0x05 ; poly_id:1 01
047802 FE 05       0223*  	db 0xFE,0x05 ; poly_id:2 02
047804 04 05       0224*  	db 0x04,0x05 ; poly_id:3 03
047806 03 05       0225*  	db 0x03,0x05 ; poly_id:4 04
047808 02 05       0226*  	db 0x02,0x05 ; poly_id:5 05
04780A 01 05       0227*  	db 0x01,0x05 ; poly_id:6 06
04780C 00 05       0228*  	db 0x00,0x05 ; poly_id:7 07
04780E FF 05       0229*  	db 0xFF,0x05 ; poly_id:8 08
047810 FE 05       0230*  	db 0xFE,0x05 ; poly_id:9 09
047812 FD 05       0231*  	db 0xFD,0x05 ; poly_id:10 0A
047814 FC 05       0232*  	db 0xFC,0x05 ; poly_id:11 0B
047816 04 04       0233*  	db 0x04,0x04 ; poly_id:12 0C
047818 03 04       0234*  	db 0x03,0x04 ; poly_id:13 0D
04781A 02 04       0235*  	db 0x02,0x04 ; poly_id:14 0E
04781C 01 04       0236*  	db 0x01,0x04 ; poly_id:15 0F
04781E FF 04       0237*  	db 0xFF,0x04 ; poly_id:16 10
047820 FE 04       0238*  	db 0xFE,0x04 ; poly_id:17 11
047822 FD 04       0239*  	db 0xFD,0x04 ; poly_id:18 12
047824 FC 04       0240*  	db 0xFC,0x04 ; poly_id:19 13
047826 03 04       0241*  	db 0x03,0x04 ; poly_id:20 14
047828 02 04       0242*  	db 0x02,0x04 ; poly_id:21 15
04782A 01 04       0243*  	db 0x01,0x04 ; poly_id:22 16
04782C 00 04       0244*  	db 0x00,0x04 ; poly_id:23 17
04782E FF 04       0245*  	db 0xFF,0x04 ; poly_id:24 18
047830 FE 04       0246*  	db 0xFE,0x04 ; poly_id:25 19
047832 FD 04       0247*  	db 0xFD,0x04 ; poly_id:26 1A
047834 03 03       0248*  	db 0x03,0x03 ; poly_id:27 1B
047836 02 03       0249*  	db 0x02,0x03 ; poly_id:28 1C
047838 01 03       0250*  	db 0x01,0x03 ; poly_id:29 1D
04783A FF 03       0251*  	db 0xFF,0x03 ; poly_id:30 1E
04783C FE 03       0252*  	db 0xFE,0x03 ; poly_id:31 1F
04783E FD 03       0253*  	db 0xFD,0x03 ; poly_id:32 20
047840 02 03       0254*  	db 0x02,0x03 ; poly_id:33 21
047842 01 03       0255*  	db 0x01,0x03 ; poly_id:34 22
047844 00 03       0256*  	db 0x00,0x03 ; poly_id:35 23
047846 FF 03       0257*  	db 0xFF,0x03 ; poly_id:36 24
047848 FE 03       0258*  	db 0xFE,0x03 ; poly_id:37 25
04784A 02 02       0259*  	db 0x02,0x02 ; poly_id:38 26
04784C 01 02       0260*  	db 0x01,0x02 ; poly_id:39 27
04784E FF 02       0261*  	db 0xFF,0x02 ; poly_id:40 28
047850 FE 02       0262*  	db 0xFE,0x02 ; poly_id:41 29
047852 01 02       0263*  	db 0x01,0x02 ; poly_id:42 2A
047854 00 02       0264*  	db 0x00,0x02 ; poly_id:43 2B
047856 FF 02       0265*  	db 0xFF,0x02 ; poly_id:44 2C
047858 01 01       0266*  	db 0x01,0x01 ; poly_id:45 2D
04785A FF 01       0267*  	db 0xFF,0x01 ; poly_id:46 2E
04785C 00 01       0268*  	db 0x00,0x01 ; poly_id:47 2F
04785E             0269*  
04785E             0270*  polys_map_deltas_3: ; west orientation
04785E FB 03       0271*  	db 0xFB,0x03 ; poly_id:0 00
047860 FB 02       0272*  	db 0xFB,0x02 ; poly_id:1 01
047862 FB FE       0273*  	db 0xFB,0xFE ; poly_id:2 02
047864 FB 04       0274*  	db 0xFB,0x04 ; poly_id:3 03
047866 FB 03       0275*  	db 0xFB,0x03 ; poly_id:4 04
047868 FB 02       0276*  	db 0xFB,0x02 ; poly_id:5 05
04786A FB 01       0277*  	db 0xFB,0x01 ; poly_id:6 06
04786C FB 00       0278*  	db 0xFB,0x00 ; poly_id:7 07
04786E FB FF       0279*  	db 0xFB,0xFF ; poly_id:8 08
047870 FB FE       0280*  	db 0xFB,0xFE ; poly_id:9 09
047872 FB FD       0281*  	db 0xFB,0xFD ; poly_id:10 0A
047874 FB FC       0282*  	db 0xFB,0xFC ; poly_id:11 0B
047876 FC 04       0283*  	db 0xFC,0x04 ; poly_id:12 0C
047878 FC 03       0284*  	db 0xFC,0x03 ; poly_id:13 0D
04787A FC 02       0285*  	db 0xFC,0x02 ; poly_id:14 0E
04787C FC 01       0286*  	db 0xFC,0x01 ; poly_id:15 0F
04787E FC FF       0287*  	db 0xFC,0xFF ; poly_id:16 10
047880 FC FE       0288*  	db 0xFC,0xFE ; poly_id:17 11
047882 FC FD       0289*  	db 0xFC,0xFD ; poly_id:18 12
047884 FC FC       0290*  	db 0xFC,0xFC ; poly_id:19 13
047886 FC 03       0291*  	db 0xFC,0x03 ; poly_id:20 14
047888 FC 02       0292*  	db 0xFC,0x02 ; poly_id:21 15
04788A FC 01       0293*  	db 0xFC,0x01 ; poly_id:22 16
04788C FC 00       0294*  	db 0xFC,0x00 ; poly_id:23 17
04788E FC FF       0295*  	db 0xFC,0xFF ; poly_id:24 18
047890 FC FE       0296*  	db 0xFC,0xFE ; poly_id:25 19
047892 FC FD       0297*  	db 0xFC,0xFD ; poly_id:26 1A
047894 FD 03       0298*  	db 0xFD,0x03 ; poly_id:27 1B
047896 FD 02       0299*  	db 0xFD,0x02 ; poly_id:28 1C
047898 FD 01       0300*  	db 0xFD,0x01 ; poly_id:29 1D
04789A FD FF       0301*  	db 0xFD,0xFF ; poly_id:30 1E
04789C FD FE       0302*  	db 0xFD,0xFE ; poly_id:31 1F
04789E FD FD       0303*  	db 0xFD,0xFD ; poly_id:32 20
0478A0 FD 02       0304*  	db 0xFD,0x02 ; poly_id:33 21
0478A2 FD 01       0305*  	db 0xFD,0x01 ; poly_id:34 22
0478A4 FD 00       0306*  	db 0xFD,0x00 ; poly_id:35 23
0478A6 FD FF       0307*  	db 0xFD,0xFF ; poly_id:36 24
0478A8 FD FE       0308*  	db 0xFD,0xFE ; poly_id:37 25
0478AA FE 02       0309*  	db 0xFE,0x02 ; poly_id:38 26
0478AC FE 01       0310*  	db 0xFE,0x01 ; poly_id:39 27
0478AE FE FF       0311*  	db 0xFE,0xFF ; poly_id:40 28
0478B0 FE FE       0312*  	db 0xFE,0xFE ; poly_id:41 29
0478B2 FE 01       0313*  	db 0xFE,0x01 ; poly_id:42 2A
0478B4 FE 00       0314*  	db 0xFE,0x00 ; poly_id:43 2B
0478B6 FE FF       0315*  	db 0xFE,0xFF ; poly_id:44 2C
0478B8 FF 01       0316*  	db 0xFF,0x01 ; poly_id:45 2D
0478BA FF FF       0317*  	db 0xFF,0xFF ; poly_id:46 2E
0478BC FF 00       0318*  	db 0xFF,0x00 ; poly_id:47 2F
0478BE             0319*  
0478BE             0320*  num_sprite_polys: equ 25
0478BE             0321*  
0478BE             0322*  sprite_polys_lookup:
0478BE             0323*  ;south_id 	; poly_id
0478BE FF          0324*  	db 255	; 0
0478BF FF          0325*  	db 255	; 1
0478C0 FF          0326*  	db 255	; 2
0478C1 00          0327*  	db 0	; 3
0478C2 01          0328*  	db 1	; 4
0478C3 02          0329*  	db 2	; 5
0478C4 03          0330*  	db 3	; 6
0478C5 04          0331*  	db 4	; 7
0478C6 05          0332*  	db 5	; 8
0478C7 06          0333*  	db 6	; 9
0478C8 07          0334*  	db 7	; 10
0478C9 08          0335*  	db 8	; 11
0478CA FF          0336*  	db 255	; 12
0478CB FF          0337*  	db 255	; 13
0478CC FF          0338*  	db 255	; 14
0478CD FF          0339*  	db 255	; 15
0478CE FF          0340*  	db 255	; 16
0478CF FF          0341*  	db 255	; 17
0478D0 FF          0342*  	db 255	; 18
0478D1 FF          0343*  	db 255	; 19
0478D2 09          0344*  	db 9	; 20
0478D3 0A          0345*  	db 10	; 21
0478D4 0B          0346*  	db 11	; 22
0478D5 0C          0347*  	db 12	; 23
0478D6 0D          0348*  	db 13	; 24
0478D7 0E          0349*  	db 14	; 25
0478D8 0F          0350*  	db 15	; 26
0478D9 FF          0351*  	db 255	; 27
0478DA FF          0352*  	db 255	; 28
0478DB FF          0353*  	db 255	; 29
0478DC FF          0354*  	db 255	; 30
0478DD FF          0355*  	db 255	; 31
0478DE FF          0356*  	db 255	; 32
0478DF 10          0357*  	db 16	; 33
0478E0 11          0358*  	db 17	; 34
0478E1 12          0359*  	db 18	; 35
0478E2 13          0360*  	db 19	; 36
0478E3 14          0361*  	db 20	; 37
0478E4 FF          0362*  	db 255	; 38
0478E5 FF          0363*  	db 255	; 39
0478E6 FF          0364*  	db 255	; 40
0478E7 FF          0365*  	db 255	; 41
0478E8 15          0366*  	db 21	; 42
0478E9 16          0367*  	db 22	; 43
0478EA 17          0368*  	db 23	; 44
0478EB FF          0369*  	db 255	; 45
0478EC FF          0370*  	db 255	; 46
0478ED 18          0371*  	db 24	; 47
0478EE             0372*  
0478EE             0373*  sprite_imgs_lookup:
0478EE             0374*  ;	 sprite_obj; render_obj_id
0478EE 2A 79 04    0375*  	dl sprite_obj_000 ; render_obj_id:20
0478F1 0B 7A 04    0376*  	dl sprite_obj_001 ; render_obj_id:21
0478F4 EC 7A 04    0377*  	dl sprite_obj_002 ; render_obj_id:22
0478F7 CD 7B 04    0378*  	dl sprite_obj_003 ; render_obj_id:23
0478FA AE 7C 04    0379*  	dl sprite_obj_004 ; render_obj_id:24
0478FD 8F 7D 04    0380*  	dl sprite_obj_005 ; render_obj_id:40
047900 70 7E 04    0381*  	dl sprite_obj_006 ; render_obj_id:41
047903 51 7F 04    0382*  	dl sprite_obj_007 ; render_obj_id:42
047906 32 80 04    0383*  	dl sprite_obj_008 ; render_obj_id:43
047909 13 81 04    0384*  	dl sprite_obj_009 ; render_obj_id:44
04790C F4 81 04    0385*  	dl sprite_obj_010 ; render_obj_id:45
04790F D5 82 04    0386*  	dl sprite_obj_011 ; render_obj_id:46
047912 B6 83 04    0387*  	dl sprite_obj_012 ; render_obj_id:47
047915 97 84 04    0388*  	dl sprite_obj_013 ; render_obj_id:48
047918 78 85 04    0389*  	dl sprite_obj_014 ; render_obj_id:49
04791B 59 86 04    0390*  	dl sprite_obj_015 ; render_obj_id:50
04791E 3A 87 04    0391*  	dl sprite_obj_016 ; render_obj_id:51
047921 1B 88 04    0392*  	dl sprite_obj_017 ; render_obj_id:52
047924 FC 88 04    0393*  	dl sprite_obj_018 ; render_obj_id:56
047927 DD 89 04    0394*  	dl sprite_obj_019 ; render_obj_id:60
04792A             0395*  ;	 plot_x,  plot_y, buffer_label
04792A             0396*  
04792A             0397*  ; render_obj_id:20
04792A             0398*  sprite_obj_000:
04792A 09 00 00 4E 0399*  	dl 0x000009,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047933 2C 00 00 4E 0400*  	dl 0x00002C,0x00004E,BUF_20_007
       00 00 34 02 
       00          
04793C 50 00 00 4E 0401*  	dl 0x000050,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047945 73 00 00 4E 0402*  	dl 0x000073,0x00004E,BUF_20_007
       00 00 34 02 
       00          
04794E 97 00 00 4E 0403*  	dl 0x000097,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047957 BA 00 00 4E 0404*  	dl 0x0000BA,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047960 DE 00 00 4E 0405*  	dl 0x0000DE,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047969 01 01 00 4E 0406*  	dl 0x000101,0x00004E,BUF_20_007
       00 00 34 02 
       00          
047972 25 01 00 4E 0407*  	dl 0x000125,0x00004E,BUF_20_007
       00 00 34 02 
       00          
04797B 0B 00 00 4E 0408*  	dl 0x00000B,0x00004E,BUF_20_023
       00 00 35 02 
       00          
047984 38 00 00 4E 0409*  	dl 0x000038,0x00004E,BUF_20_023
       00 00 35 02 
       00          
04798D 66 00 00 4E 0410*  	dl 0x000066,0x00004E,BUF_20_023
       00 00 35 02 
       00          
047996 94 00 00 4E 0411*  	dl 0x000094,0x00004E,BUF_20_023
       00 00 35 02 
       00          
04799F C1 00 00 4E 0412*  	dl 0x0000C1,0x00004E,BUF_20_023
       00 00 35 02 
       00          
0479A8 EF 00 00 4E 0413*  	dl 0x0000EF,0x00004E,BUF_20_023
       00 00 35 02 
       00          
0479B1 1D 01 00 4E 0414*  	dl 0x00011D,0x00004E,BUF_20_023
       00 00 35 02 
       00          
0479BA 10 00 00 4D 0415*  	dl 0x000010,0x00004D,BUF_20_035
       00 00 36 02 
       00          
0479C3 50 00 00 4D 0416*  	dl 0x000050,0x00004D,BUF_20_035
       00 00 36 02 
       00          
0479CC 90 00 00 4D 0417*  	dl 0x000090,0x00004D,BUF_20_035
       00 00 36 02 
       00          
0479D5 CF 00 00 4D 0418*  	dl 0x0000CF,0x00004D,BUF_20_035
       00 00 36 02 
       00          
0479DE 0F 01 00 4D 0419*  	dl 0x00010F,0x00004D,BUF_20_035
       00 00 36 02 
       00          
0479E7 1B 00 00 4C 0420*  	dl 0x00001B,0x00004C,BUF_20_043
       00 00 37 02 
       00          
0479F0 85 00 00 4C 0421*  	dl 0x000085,0x00004C,BUF_20_043
       00 00 37 02 
       00          
0479F9 F0 00 00 4C 0422*  	dl 0x0000F0,0x00004C,BUF_20_043
       00 00 37 02 
       00          
047A02 6B 00 00 45 0423*  	dl 0x00006B,0x000045,BUF_20_047
       00 00 38 02 
       00          
047A0B             0424*  
047A0B             0425*  ; render_obj_id:21
047A0B             0426*  sprite_obj_001:
047A0B 0D 00 00 55 0427*  	dl 0x00000D,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A14 30 00 00 55 0428*  	dl 0x000030,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A1D 54 00 00 55 0429*  	dl 0x000054,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A26 77 00 00 55 0430*  	dl 0x000077,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A2F 9B 00 00 55 0431*  	dl 0x00009B,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A38 BE 00 00 55 0432*  	dl 0x0000BE,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A41 E2 00 00 55 0433*  	dl 0x0000E2,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A4A 05 01 00 55 0434*  	dl 0x000105,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A53 29 01 00 55 0435*  	dl 0x000129,0x000055,BUF_21_007
       00 00 39 02 
       00          
047A5C 10 00 00 57 0436*  	dl 0x000010,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A65 3D 00 00 57 0437*  	dl 0x00003D,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A6E 6B 00 00 57 0438*  	dl 0x00006B,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A77 99 00 00 57 0439*  	dl 0x000099,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A80 C6 00 00 57 0440*  	dl 0x0000C6,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A89 F4 00 00 57 0441*  	dl 0x0000F4,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A92 22 01 00 57 0442*  	dl 0x000122,0x000057,BUF_21_023
       00 00 3A 02 
       00          
047A9B 16 00 00 59 0443*  	dl 0x000016,0x000059,BUF_21_035
       00 00 3B 02 
       00          
047AA4 56 00 00 59 0444*  	dl 0x000056,0x000059,BUF_21_035
       00 00 3B 02 
       00          
047AAD 96 00 00 59 0445*  	dl 0x000096,0x000059,BUF_21_035
       00 00 3B 02 
       00          
047AB6 D5 00 00 59 0446*  	dl 0x0000D5,0x000059,BUF_21_035
       00 00 3B 02 
       00          
047ABF 15 01 00 59 0447*  	dl 0x000115,0x000059,BUF_21_035
       00 00 3B 02 
       00          
047AC8 26 00 00 60 0448*  	dl 0x000026,0x000060,BUF_21_043
       00 00 3C 02 
       00          
047AD1 90 00 00 60 0449*  	dl 0x000090,0x000060,BUF_21_043
       00 00 3C 02 
       00          
047ADA FB 00 00 60 0450*  	dl 0x0000FB,0x000060,BUF_21_043
       00 00 3C 02 
       00          
047AE3 6E 00 00 82 0451*  	dl 0x00006E,0x000082,BUF_21_047
       00 00 3D 02 
       00          
047AEC             0452*  
047AEC             0453*  ; render_obj_id:22
047AEC             0454*  sprite_obj_002:
047AEC 09 00 00 55 0455*  	dl 0x000009,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047AF5 2C 00 00 55 0456*  	dl 0x00002C,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047AFE 50 00 00 55 0457*  	dl 0x000050,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B07 73 00 00 55 0458*  	dl 0x000073,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B10 97 00 00 55 0459*  	dl 0x000097,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B19 BA 00 00 55 0460*  	dl 0x0000BA,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B22 DE 00 00 55 0461*  	dl 0x0000DE,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B2B 01 01 00 55 0462*  	dl 0x000101,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B34 25 01 00 55 0463*  	dl 0x000125,0x000055,BUF_22_007
       00 00 3E 02 
       00          
047B3D 0B 00 00 57 0464*  	dl 0x00000B,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B46 38 00 00 57 0465*  	dl 0x000038,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B4F 66 00 00 57 0466*  	dl 0x000066,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B58 94 00 00 57 0467*  	dl 0x000094,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B61 C1 00 00 57 0468*  	dl 0x0000C1,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B6A EF 00 00 57 0469*  	dl 0x0000EF,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B73 1D 01 00 57 0470*  	dl 0x00011D,0x000057,BUF_22_023
       00 00 3F 02 
       00          
047B7C 10 00 00 59 0471*  	dl 0x000010,0x000059,BUF_22_035
       00 00 40 02 
       00          
047B85 50 00 00 59 0472*  	dl 0x000050,0x000059,BUF_22_035
       00 00 40 02 
       00          
047B8E 90 00 00 59 0473*  	dl 0x000090,0x000059,BUF_22_035
       00 00 40 02 
       00          
047B97 CF 00 00 59 0474*  	dl 0x0000CF,0x000059,BUF_22_035
       00 00 40 02 
       00          
047BA0 0F 01 00 59 0475*  	dl 0x00010F,0x000059,BUF_22_035
       00 00 40 02 
       00          
047BA9 1B 00 00 60 0476*  	dl 0x00001B,0x000060,BUF_22_043
       00 00 41 02 
       00          
047BB2 85 00 00 60 0477*  	dl 0x000085,0x000060,BUF_22_043
       00 00 41 02 
       00          
047BBB F0 00 00 60 0478*  	dl 0x0000F0,0x000060,BUF_22_043
       00 00 41 02 
       00          
047BC4 50 00 00 82 0479*  	dl 0x000050,0x000082,BUF_22_047
       00 00 42 02 
       00          
047BCD             0480*  
047BCD             0481*  ; render_obj_id:23
047BCD             0482*  sprite_obj_003:
047BCD 0C 00 00 3E 0483*  	dl 0x00000C,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047BD6 2F 00 00 3E 0484*  	dl 0x00002F,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047BDF 53 00 00 3E 0485*  	dl 0x000053,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047BE8 76 00 00 3E 0486*  	dl 0x000076,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047BF1 9A 00 00 3E 0487*  	dl 0x00009A,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047BFA BD 00 00 3E 0488*  	dl 0x0000BD,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047C03 E1 00 00 3E 0489*  	dl 0x0000E1,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047C0C 04 01 00 3E 0490*  	dl 0x000104,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047C15 28 01 00 3E 0491*  	dl 0x000128,0x00003E,BUF_23_007
       00 00 43 02 
       00          
047C1E 0F 00 00 39 0492*  	dl 0x00000F,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C27 3C 00 00 39 0493*  	dl 0x00003C,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C30 6A 00 00 39 0494*  	dl 0x00006A,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C39 98 00 00 39 0495*  	dl 0x000098,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C42 C5 00 00 39 0496*  	dl 0x0000C5,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C4B F3 00 00 39 0497*  	dl 0x0000F3,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C54 21 01 00 39 0498*  	dl 0x000121,0x000039,BUF_23_023
       00 00 44 02 
       00          
047C5D 15 00 00 30 0499*  	dl 0x000015,0x000030,BUF_23_035
       00 00 45 02 
       00          
047C66 55 00 00 30 0500*  	dl 0x000055,0x000030,BUF_23_035
       00 00 45 02 
       00          
047C6F 95 00 00 30 0501*  	dl 0x000095,0x000030,BUF_23_035
       00 00 45 02 
       00          
047C78 D4 00 00 30 0502*  	dl 0x0000D4,0x000030,BUF_23_035
       00 00 45 02 
       00          
047C81 14 01 00 30 0503*  	dl 0x000114,0x000030,BUF_23_035
       00 00 45 02 
       00          
047C8A 24 00 00 1A 0504*  	dl 0x000024,0x00001A,BUF_23_043
       00 00 46 02 
       00          
047C93 8E 00 00 1A 0505*  	dl 0x00008E,0x00001A,BUF_23_043
       00 00 46 02 
       00          
047C9C F9 00 00 1A 0506*  	dl 0x0000F9,0x00001A,BUF_23_043
       00 00 46 02 
       00          
047CA5 09 01 00 82 0507*  	dl 0x000109,0x000082,BUF_23_047
       00 00 47 02 
       00          
047CAE             0508*  
047CAE             0509*  ; render_obj_id:24
047CAE             0510*  sprite_obj_004:
047CAE 0D 00 00 55 0511*  	dl 0x00000D,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CB7 30 00 00 55 0512*  	dl 0x000030,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CC0 54 00 00 55 0513*  	dl 0x000054,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CC9 77 00 00 55 0514*  	dl 0x000077,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CD2 9B 00 00 55 0515*  	dl 0x00009B,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CDB BE 00 00 55 0516*  	dl 0x0000BE,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CE4 E2 00 00 55 0517*  	dl 0x0000E2,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CED 05 01 00 55 0518*  	dl 0x000105,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CF6 29 01 00 55 0519*  	dl 0x000129,0x000055,BUF_24_007
       00 00 48 02 
       00          
047CFF 10 00 00 57 0520*  	dl 0x000010,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D08 3D 00 00 57 0521*  	dl 0x00003D,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D11 6B 00 00 57 0522*  	dl 0x00006B,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D1A 99 00 00 57 0523*  	dl 0x000099,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D23 C6 00 00 57 0524*  	dl 0x0000C6,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D2C F4 00 00 57 0525*  	dl 0x0000F4,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D35 22 01 00 57 0526*  	dl 0x000122,0x000057,BUF_24_023
       00 00 49 02 
       00          
047D3E 16 00 00 59 0527*  	dl 0x000016,0x000059,BUF_24_035
       00 00 4A 02 
       00          
047D47 56 00 00 59 0528*  	dl 0x000056,0x000059,BUF_24_035
       00 00 4A 02 
       00          
047D50 96 00 00 59 0529*  	dl 0x000096,0x000059,BUF_24_035
       00 00 4A 02 
       00          
047D59 D5 00 00 59 0530*  	dl 0x0000D5,0x000059,BUF_24_035
       00 00 4A 02 
       00          
047D62 15 01 00 59 0531*  	dl 0x000115,0x000059,BUF_24_035
       00 00 4A 02 
       00          
047D6B 26 00 00 60 0532*  	dl 0x000026,0x000060,BUF_24_043
       00 00 4B 02 
       00          
047D74 90 00 00 60 0533*  	dl 0x000090,0x000060,BUF_24_043
       00 00 4B 02 
       00          
047D7D FB 00 00 60 0534*  	dl 0x0000FB,0x000060,BUF_24_043
       00 00 4B 02 
       00          
047D86 6E 00 00 82 0535*  	dl 0x00006E,0x000082,BUF_24_047
       00 00 4C 02 
       00          
047D8F             0536*  
047D8F             0537*  ; render_obj_id:40
047D8F             0538*  sprite_obj_005:
047D8F 0A 00 00 5A 0539*  	dl 0x00000A,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047D98 2D 00 00 5A 0540*  	dl 0x00002D,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DA1 51 00 00 5A 0541*  	dl 0x000051,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DAA 74 00 00 5A 0542*  	dl 0x000074,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DB3 98 00 00 5A 0543*  	dl 0x000098,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DBC BB 00 00 5A 0544*  	dl 0x0000BB,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DC5 DF 00 00 5A 0545*  	dl 0x0000DF,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DCE 02 01 00 5A 0546*  	dl 0x000102,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DD7 26 01 00 5A 0547*  	dl 0x000126,0x00005A,BUF_40_007
       00 00 4D 02 
       00          
047DE0 0D 00 00 5C 0548*  	dl 0x00000D,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047DE9 3A 00 00 5C 0549*  	dl 0x00003A,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047DF2 68 00 00 5C 0550*  	dl 0x000068,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047DFB 96 00 00 5C 0551*  	dl 0x000096,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047E04 C3 00 00 5C 0552*  	dl 0x0000C3,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047E0D F1 00 00 5C 0553*  	dl 0x0000F1,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047E16 1F 01 00 5C 0554*  	dl 0x00011F,0x00005C,BUF_40_023
       00 00 4E 02 
       00          
047E1F 13 00 00 60 0555*  	dl 0x000013,0x000060,BUF_40_035
       00 00 4F 02 
       00          
047E28 53 00 00 60 0556*  	dl 0x000053,0x000060,BUF_40_035
       00 00 4F 02 
       00          
047E31 93 00 00 60 0557*  	dl 0x000093,0x000060,BUF_40_035
       00 00 4F 02 
       00          
047E3A D2 00 00 60 0558*  	dl 0x0000D2,0x000060,BUF_40_035
       00 00 4F 02 
       00          
047E43 12 01 00 60 0559*  	dl 0x000112,0x000060,BUF_40_035
       00 00 4F 02 
       00          
047E4C 20 00 00 6D 0560*  	dl 0x000020,0x00006D,BUF_40_043
       00 00 50 02 
       00          
047E55 8A 00 00 6D 0561*  	dl 0x00008A,0x00006D,BUF_40_043
       00 00 50 02 
       00          
047E5E F5 00 00 6D 0562*  	dl 0x0000F5,0x00006D,BUF_40_043
       00 00 50 02 
       00          
047E67 E0 00 00 9F 0563*  	dl 0x0000E0,0x00009F,BUF_40_047
       00 00 51 02 
       00          
047E70             0564*  
047E70             0565*  ; render_obj_id:41
047E70             0566*  sprite_obj_006:
047E70 0C 00 00 55 0567*  	dl 0x00000C,0x000055,BUF_41_007
       00 00 52 02 
       00          
047E79 2F 00 00 55 0568*  	dl 0x00002F,0x000055,BUF_41_007
       00 00 52 02 
       00          
047E82 53 00 00 55 0569*  	dl 0x000053,0x000055,BUF_41_007
       00 00 52 02 
       00          
047E8B 76 00 00 55 0570*  	dl 0x000076,0x000055,BUF_41_007
       00 00 52 02 
       00          
047E94 9A 00 00 55 0571*  	dl 0x00009A,0x000055,BUF_41_007
       00 00 52 02 
       00          
047E9D BD 00 00 55 0572*  	dl 0x0000BD,0x000055,BUF_41_007
       00 00 52 02 
       00          
047EA6 E1 00 00 55 0573*  	dl 0x0000E1,0x000055,BUF_41_007
       00 00 52 02 
       00          
047EAF 04 01 00 55 0574*  	dl 0x000104,0x000055,BUF_41_007
       00 00 52 02 
       00          
047EB8 28 01 00 55 0575*  	dl 0x000128,0x000055,BUF_41_007
       00 00 52 02 
       00          
047EC1 0E 00 00 57 0576*  	dl 0x00000E,0x000057,BUF_41_023
       00 00 53 02 
       00          
047ECA 3B 00 00 57 0577*  	dl 0x00003B,0x000057,BUF_41_023
       00 00 53 02 
       00          
047ED3 69 00 00 57 0578*  	dl 0x000069,0x000057,BUF_41_023
       00 00 53 02 
       00          
047EDC 97 00 00 57 0579*  	dl 0x000097,0x000057,BUF_41_023
       00 00 53 02 
       00          
047EE5 C4 00 00 57 0580*  	dl 0x0000C4,0x000057,BUF_41_023
       00 00 53 02 
       00          
047EEE F2 00 00 57 0581*  	dl 0x0000F2,0x000057,BUF_41_023
       00 00 53 02 
       00          
047EF7 20 01 00 57 0582*  	dl 0x000120,0x000057,BUF_41_023
       00 00 53 02 
       00          
047F00 14 00 00 5A 0583*  	dl 0x000014,0x00005A,BUF_41_035
       00 00 54 02 
       00          
047F09 54 00 00 5A 0584*  	dl 0x000054,0x00005A,BUF_41_035
       00 00 54 02 
       00          
047F12 94 00 00 5A 0585*  	dl 0x000094,0x00005A,BUF_41_035
       00 00 54 02 
       00          
047F1B D3 00 00 5A 0586*  	dl 0x0000D3,0x00005A,BUF_41_035
       00 00 54 02 
       00          
047F24 13 01 00 5A 0587*  	dl 0x000113,0x00005A,BUF_41_035
       00 00 54 02 
       00          
047F2D 23 00 00 62 0588*  	dl 0x000023,0x000062,BUF_41_043
       00 00 55 02 
       00          
047F36 8D 00 00 62 0589*  	dl 0x00008D,0x000062,BUF_41_043
       00 00 55 02 
       00          
047F3F F8 00 00 62 0590*  	dl 0x0000F8,0x000062,BUF_41_043
       00 00 55 02 
       00          
047F48 84 00 00 86 0591*  	dl 0x000084,0x000086,BUF_41_047
       00 00 56 02 
       00          
047F51             0592*  
047F51             0593*  ; render_obj_id:42
047F51             0594*  sprite_obj_007:
047F51 0D 00 00 57 0595*  	dl 0x00000D,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F5A 30 00 00 57 0596*  	dl 0x000030,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F63 54 00 00 57 0597*  	dl 0x000054,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F6C 77 00 00 57 0598*  	dl 0x000077,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F75 9B 00 00 57 0599*  	dl 0x00009B,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F7E BE 00 00 57 0600*  	dl 0x0000BE,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F87 E2 00 00 57 0601*  	dl 0x0000E2,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F90 05 01 00 57 0602*  	dl 0x000105,0x000057,BUF_42_007
       00 00 57 02 
       00          
047F99 29 01 00 57 0603*  	dl 0x000129,0x000057,BUF_42_007
       00 00 57 02 
       00          
047FA2 10 00 00 5A 0604*  	dl 0x000010,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FAB 3D 00 00 5A 0605*  	dl 0x00003D,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FB4 6B 00 00 5A 0606*  	dl 0x00006B,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FBD 99 00 00 5A 0607*  	dl 0x000099,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FC6 C6 00 00 5A 0608*  	dl 0x0000C6,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FCF F4 00 00 5A 0609*  	dl 0x0000F4,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FD8 22 01 00 5A 0610*  	dl 0x000122,0x00005A,BUF_42_023
       00 00 58 02 
       00          
047FE1 17 00 00 5E 0611*  	dl 0x000017,0x00005E,BUF_42_035
       00 00 59 02 
       00          
047FEA 57 00 00 5E 0612*  	dl 0x000057,0x00005E,BUF_42_035
       00 00 59 02 
       00          
047FF3 97 00 00 5E 0613*  	dl 0x000097,0x00005E,BUF_42_035
       00 00 59 02 
       00          
047FFC D6 00 00 5E 0614*  	dl 0x0000D6,0x00005E,BUF_42_035
       00 00 59 02 
       00          
048005 16 01 00 5E 0615*  	dl 0x000116,0x00005E,BUF_42_035
       00 00 59 02 
       00          
04800E 28 00 00 69 0616*  	dl 0x000028,0x000069,BUF_42_043
       00 00 5A 02 
       00          
048017 92 00 00 69 0617*  	dl 0x000092,0x000069,BUF_42_043
       00 00 5A 02 
       00          
048020 FD 00 00 69 0618*  	dl 0x0000FD,0x000069,BUF_42_043
       00 00 5A 02 
       00          
048029 7D 00 00 9B 0619*  	dl 0x00007D,0x00009B,BUF_42_047
       00 00 5B 02 
       00          
048032             0620*  
048032             0621*  ; render_obj_id:43
048032             0622*  sprite_obj_008:
048032 0C 00 00 5C 0623*  	dl 0x00000C,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
04803B 2F 00 00 5C 0624*  	dl 0x00002F,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
048044 53 00 00 5C 0625*  	dl 0x000053,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
04804D 76 00 00 5C 0626*  	dl 0x000076,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
048056 9A 00 00 5C 0627*  	dl 0x00009A,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
04805F BD 00 00 5C 0628*  	dl 0x0000BD,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
048068 E1 00 00 5C 0629*  	dl 0x0000E1,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
048071 04 01 00 5C 0630*  	dl 0x000104,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
04807A 28 01 00 5C 0631*  	dl 0x000128,0x00005C,BUF_43_007
       00 00 5C 02 
       00          
048083 0F 00 00 61 0632*  	dl 0x00000F,0x000061,BUF_43_023
       00 00 5D 02 
       00          
04808C 3C 00 00 61 0633*  	dl 0x00003C,0x000061,BUF_43_023
       00 00 5D 02 
       00          
048095 6A 00 00 61 0634*  	dl 0x00006A,0x000061,BUF_43_023
       00 00 5D 02 
       00          
04809E 98 00 00 61 0635*  	dl 0x000098,0x000061,BUF_43_023
       00 00 5D 02 
       00          
0480A7 C5 00 00 61 0636*  	dl 0x0000C5,0x000061,BUF_43_023
       00 00 5D 02 
       00          
0480B0 F3 00 00 61 0637*  	dl 0x0000F3,0x000061,BUF_43_023
       00 00 5D 02 
       00          
0480B9 21 01 00 61 0638*  	dl 0x000121,0x000061,BUF_43_023
       00 00 5D 02 
       00          
0480C2 15 00 00 68 0639*  	dl 0x000015,0x000068,BUF_43_035
       00 00 5E 02 
       00          
0480CB 55 00 00 68 0640*  	dl 0x000055,0x000068,BUF_43_035
       00 00 5E 02 
       00          
0480D4 95 00 00 68 0641*  	dl 0x000095,0x000068,BUF_43_035
       00 00 5E 02 
       00          
0480DD D4 00 00 68 0642*  	dl 0x0000D4,0x000068,BUF_43_035
       00 00 5E 02 
       00          
0480E6 14 01 00 68 0643*  	dl 0x000114,0x000068,BUF_43_035
       00 00 5E 02 
       00          
0480EF 24 00 00 77 0644*  	dl 0x000024,0x000077,BUF_43_043
       00 00 5F 02 
       00          
0480F8 8E 00 00 77 0645*  	dl 0x00008E,0x000077,BUF_43_043
       00 00 5F 02 
       00          
048101 F9 00 00 77 0646*  	dl 0x0000F9,0x000077,BUF_43_043
       00 00 5F 02 
       00          
04810A D4 00 00 9F 0647*  	dl 0x0000D4,0x00009F,BUF_43_047
       00 00 60 02 
       00          
048113             0648*  
048113             0649*  ; render_obj_id:44
048113             0650*  sprite_obj_009:
048113 0F 00 00 5C 0651*  	dl 0x00000F,0x00005C,BUF_44_007
       00 00 61 02 
       00          
04811C 32 00 00 5C 0652*  	dl 0x000032,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048125 56 00 00 5C 0653*  	dl 0x000056,0x00005C,BUF_44_007
       00 00 61 02 
       00          
04812E 79 00 00 5C 0654*  	dl 0x000079,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048137 9D 00 00 5C 0655*  	dl 0x00009D,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048140 C0 00 00 5C 0656*  	dl 0x0000C0,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048149 E4 00 00 5C 0657*  	dl 0x0000E4,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048152 07 01 00 5C 0658*  	dl 0x000107,0x00005C,BUF_44_007
       00 00 61 02 
       00          
04815B 2B 01 00 5C 0659*  	dl 0x00012B,0x00005C,BUF_44_007
       00 00 61 02 
       00          
048164 14 00 00 5F 0660*  	dl 0x000014,0x00005F,BUF_44_023
       00 00 62 02 
       00          
04816D 41 00 00 5F 0661*  	dl 0x000041,0x00005F,BUF_44_023
       00 00 62 02 
       00          
048176 6F 00 00 5F 0662*  	dl 0x00006F,0x00005F,BUF_44_023
       00 00 62 02 
       00          
04817F 9D 00 00 5F 0663*  	dl 0x00009D,0x00005F,BUF_44_023
       00 00 62 02 
       00          
048188 CA 00 00 5F 0664*  	dl 0x0000CA,0x00005F,BUF_44_023
       00 00 62 02 
       00          
048191 F8 00 00 5F 0665*  	dl 0x0000F8,0x00005F,BUF_44_023
       00 00 62 02 
       00          
04819A 26 01 00 5F 0666*  	dl 0x000126,0x00005F,BUF_44_023
       00 00 62 02 
       00          
0481A3 1B 00 00 65 0667*  	dl 0x00001B,0x000065,BUF_44_035
       00 00 63 02 
       00          
0481AC 5B 00 00 65 0668*  	dl 0x00005B,0x000065,BUF_44_035
       00 00 63 02 
       00          
0481B5 9B 00 00 65 0669*  	dl 0x00009B,0x000065,BUF_44_035
       00 00 63 02 
       00          
0481BE DA 00 00 65 0670*  	dl 0x0000DA,0x000065,BUF_44_035
       00 00 63 02 
       00          
0481C7 1A 01 00 65 0671*  	dl 0x00011A,0x000065,BUF_44_035
       00 00 63 02 
       00          
0481D0 2E 00 00 75 0672*  	dl 0x00002E,0x000075,BUF_44_043
       00 00 64 02 
       00          
0481D9 98 00 00 75 0673*  	dl 0x000098,0x000075,BUF_44_043
       00 00 64 02 
       00          
0481E2 03 01 00 75 0674*  	dl 0x000103,0x000075,BUF_44_043
       00 00 64 02 
       00          
0481EB C8 00 00 A0 0675*  	dl 0x0000C8,0x0000A0,BUF_44_047
       00 00 65 02 
       00          
0481F4             0676*  
0481F4             0677*  ; render_obj_id:45
0481F4             0678*  sprite_obj_010:
0481F4 09 00 00 56 0679*  	dl 0x000009,0x000056,BUF_45_007
       00 00 66 02 
       00          
0481FD 2C 00 00 56 0680*  	dl 0x00002C,0x000056,BUF_45_007
       00 00 66 02 
       00          
048206 50 00 00 56 0681*  	dl 0x000050,0x000056,BUF_45_007
       00 00 66 02 
       00          
04820F 73 00 00 56 0682*  	dl 0x000073,0x000056,BUF_45_007
       00 00 66 02 
       00          
048218 97 00 00 56 0683*  	dl 0x000097,0x000056,BUF_45_007
       00 00 66 02 
       00          
048221 BA 00 00 56 0684*  	dl 0x0000BA,0x000056,BUF_45_007
       00 00 66 02 
       00          
04822A DE 00 00 56 0685*  	dl 0x0000DE,0x000056,BUF_45_007
       00 00 66 02 
       00          
048233 01 01 00 56 0686*  	dl 0x000101,0x000056,BUF_45_007
       00 00 66 02 
       00          
04823C 25 01 00 56 0687*  	dl 0x000125,0x000056,BUF_45_007
       00 00 66 02 
       00          
048245 0C 00 00 58 0688*  	dl 0x00000C,0x000058,BUF_45_023
       00 00 67 02 
       00          
04824E 39 00 00 58 0689*  	dl 0x000039,0x000058,BUF_45_023
       00 00 67 02 
       00          
048257 67 00 00 58 0690*  	dl 0x000067,0x000058,BUF_45_023
       00 00 67 02 
       00          
048260 95 00 00 58 0691*  	dl 0x000095,0x000058,BUF_45_023
       00 00 67 02 
       00          
048269 C2 00 00 58 0692*  	dl 0x0000C2,0x000058,BUF_45_023
       00 00 67 02 
       00          
048272 F0 00 00 58 0693*  	dl 0x0000F0,0x000058,BUF_45_023
       00 00 67 02 
       00          
04827B 1E 01 00 58 0694*  	dl 0x00011E,0x000058,BUF_45_023
       00 00 67 02 
       00          
048284 11 00 00 5B 0695*  	dl 0x000011,0x00005B,BUF_45_035
       00 00 68 02 
       00          
04828D 51 00 00 5B 0696*  	dl 0x000051,0x00005B,BUF_45_035
       00 00 68 02 
       00          
048296 91 00 00 5B 0697*  	dl 0x000091,0x00005B,BUF_45_035
       00 00 68 02 
       00          
04829F D0 00 00 5B 0698*  	dl 0x0000D0,0x00005B,BUF_45_035
       00 00 68 02 
       00          
0482A8 10 01 00 5B 0699*  	dl 0x000110,0x00005B,BUF_45_035
       00 00 68 02 
       00          
0482B1 1D 00 00 63 0700*  	dl 0x00001D,0x000063,BUF_45_043
       00 00 69 02 
       00          
0482BA 87 00 00 63 0701*  	dl 0x000087,0x000063,BUF_45_043
       00 00 69 02 
       00          
0482C3 F2 00 00 63 0702*  	dl 0x0000F2,0x000063,BUF_45_043
       00 00 69 02 
       00          
0482CC 58 00 00 8C 0703*  	dl 0x000058,0x00008C,BUF_45_047
       00 00 6A 02 
       00          
0482D5             0704*  
0482D5             0705*  ; render_obj_id:46
0482D5             0706*  sprite_obj_011:
0482D5 09 00 00 58 0707*  	dl 0x000009,0x000058,BUF_46_007
       00 00 6B 02 
       00          
0482DE 2C 00 00 58 0708*  	dl 0x00002C,0x000058,BUF_46_007
       00 00 6B 02 
       00          
0482E7 50 00 00 58 0709*  	dl 0x000050,0x000058,BUF_46_007
       00 00 6B 02 
       00          
0482F0 73 00 00 58 0710*  	dl 0x000073,0x000058,BUF_46_007
       00 00 6B 02 
       00          
0482F9 97 00 00 58 0711*  	dl 0x000097,0x000058,BUF_46_007
       00 00 6B 02 
       00          
048302 BA 00 00 58 0712*  	dl 0x0000BA,0x000058,BUF_46_007
       00 00 6B 02 
       00          
04830B DE 00 00 58 0713*  	dl 0x0000DE,0x000058,BUF_46_007
       00 00 6B 02 
       00          
048314 01 01 00 58 0714*  	dl 0x000101,0x000058,BUF_46_007
       00 00 6B 02 
       00          
04831D 25 01 00 58 0715*  	dl 0x000125,0x000058,BUF_46_007
       00 00 6B 02 
       00          
048326 0C 00 00 5A 0716*  	dl 0x00000C,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
04832F 39 00 00 5A 0717*  	dl 0x000039,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
048338 67 00 00 5A 0718*  	dl 0x000067,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
048341 95 00 00 5A 0719*  	dl 0x000095,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
04834A C2 00 00 5A 0720*  	dl 0x0000C2,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
048353 F0 00 00 5A 0721*  	dl 0x0000F0,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
04835C 1E 01 00 5A 0722*  	dl 0x00011E,0x00005A,BUF_46_023
       00 00 6C 02 
       00          
048365 11 00 00 5F 0723*  	dl 0x000011,0x00005F,BUF_46_035
       00 00 6D 02 
       00          
04836E 51 00 00 5F 0724*  	dl 0x000051,0x00005F,BUF_46_035
       00 00 6D 02 
       00          
048377 91 00 00 5F 0725*  	dl 0x000091,0x00005F,BUF_46_035
       00 00 6D 02 
       00          
048380 D0 00 00 5F 0726*  	dl 0x0000D0,0x00005F,BUF_46_035
       00 00 6D 02 
       00          
048389 10 01 00 5F 0727*  	dl 0x000110,0x00005F,BUF_46_035
       00 00 6D 02 
       00          
048392 1D 00 00 69 0728*  	dl 0x00001D,0x000069,BUF_46_043
       00 00 6E 02 
       00          
04839B 87 00 00 69 0729*  	dl 0x000087,0x000069,BUF_46_043
       00 00 6E 02 
       00          
0483A4 F2 00 00 69 0730*  	dl 0x0000F2,0x000069,BUF_46_043
       00 00 6E 02 
       00          
0483AD 8E 00 00 9E 0731*  	dl 0x00008E,0x00009E,BUF_46_047
       00 00 6F 02 
       00          
0483B6             0732*  
0483B6             0733*  ; render_obj_id:47
0483B6             0734*  sprite_obj_012:
0483B6 09 00 00 57 0735*  	dl 0x000009,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483BF 2C 00 00 57 0736*  	dl 0x00002C,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483C8 50 00 00 57 0737*  	dl 0x000050,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483D1 73 00 00 57 0738*  	dl 0x000073,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483DA 97 00 00 57 0739*  	dl 0x000097,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483E3 BA 00 00 57 0740*  	dl 0x0000BA,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483EC DE 00 00 57 0741*  	dl 0x0000DE,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483F5 01 01 00 57 0742*  	dl 0x000101,0x000057,BUF_47_007
       00 00 70 02 
       00          
0483FE 25 01 00 57 0743*  	dl 0x000125,0x000057,BUF_47_007
       00 00 70 02 
       00          
048407 0C 00 00 59 0744*  	dl 0x00000C,0x000059,BUF_47_023
       00 00 71 02 
       00          
048410 39 00 00 59 0745*  	dl 0x000039,0x000059,BUF_47_023
       00 00 71 02 
       00          
048419 67 00 00 59 0746*  	dl 0x000067,0x000059,BUF_47_023
       00 00 71 02 
       00          
048422 95 00 00 59 0747*  	dl 0x000095,0x000059,BUF_47_023
       00 00 71 02 
       00          
04842B C2 00 00 59 0748*  	dl 0x0000C2,0x000059,BUF_47_023
       00 00 71 02 
       00          
048434 F0 00 00 59 0749*  	dl 0x0000F0,0x000059,BUF_47_023
       00 00 71 02 
       00          
04843D 1E 01 00 59 0750*  	dl 0x00011E,0x000059,BUF_47_023
       00 00 71 02 
       00          
048446 11 00 00 5D 0751*  	dl 0x000011,0x00005D,BUF_47_035
       00 00 72 02 
       00          
04844F 51 00 00 5D 0752*  	dl 0x000051,0x00005D,BUF_47_035
       00 00 72 02 
       00          
048458 91 00 00 5D 0753*  	dl 0x000091,0x00005D,BUF_47_035
       00 00 72 02 
       00          
048461 D0 00 00 5D 0754*  	dl 0x0000D0,0x00005D,BUF_47_035
       00 00 72 02 
       00          
04846A 10 01 00 5D 0755*  	dl 0x000110,0x00005D,BUF_47_035
       00 00 72 02 
       00          
048473 1D 00 00 66 0756*  	dl 0x00001D,0x000066,BUF_47_043
       00 00 73 02 
       00          
04847C 87 00 00 66 0757*  	dl 0x000087,0x000066,BUF_47_043
       00 00 73 02 
       00          
048485 F2 00 00 66 0758*  	dl 0x0000F2,0x000066,BUF_47_043
       00 00 73 02 
       00          
04848E B2 00 00 95 0759*  	dl 0x0000B2,0x000095,BUF_47_047
       00 00 74 02 
       00          
048497             0760*  
048497             0761*  ; render_obj_id:48
048497             0762*  sprite_obj_013:
048497 0A 00 00 5A 0763*  	dl 0x00000A,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484A0 2D 00 00 5A 0764*  	dl 0x00002D,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484A9 51 00 00 5A 0765*  	dl 0x000051,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484B2 74 00 00 5A 0766*  	dl 0x000074,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484BB 98 00 00 5A 0767*  	dl 0x000098,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484C4 BB 00 00 5A 0768*  	dl 0x0000BB,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484CD DF 00 00 5A 0769*  	dl 0x0000DF,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484D6 02 01 00 5A 0770*  	dl 0x000102,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484DF 26 01 00 5A 0771*  	dl 0x000126,0x00005A,BUF_48_007
       00 00 75 02 
       00          
0484E8 0D 00 00 5C 0772*  	dl 0x00000D,0x00005C,BUF_48_023
       00 00 76 02 
       00          
0484F1 3A 00 00 5C 0773*  	dl 0x00003A,0x00005C,BUF_48_023
       00 00 76 02 
       00          
0484FA 68 00 00 5C 0774*  	dl 0x000068,0x00005C,BUF_48_023
       00 00 76 02 
       00          
048503 96 00 00 5C 0775*  	dl 0x000096,0x00005C,BUF_48_023
       00 00 76 02 
       00          
04850C C3 00 00 5C 0776*  	dl 0x0000C3,0x00005C,BUF_48_023
       00 00 76 02 
       00          
048515 F1 00 00 5C 0777*  	dl 0x0000F1,0x00005C,BUF_48_023
       00 00 76 02 
       00          
04851E 1F 01 00 5C 0778*  	dl 0x00011F,0x00005C,BUF_48_023
       00 00 76 02 
       00          
048527 11 00 00 61 0779*  	dl 0x000011,0x000061,BUF_48_035
       00 00 77 02 
       00          
048530 51 00 00 61 0780*  	dl 0x000051,0x000061,BUF_48_035
       00 00 77 02 
       00          
048539 91 00 00 61 0781*  	dl 0x000091,0x000061,BUF_48_035
       00 00 77 02 
       00          
048542 D0 00 00 61 0782*  	dl 0x0000D0,0x000061,BUF_48_035
       00 00 77 02 
       00          
04854B 10 01 00 61 0783*  	dl 0x000110,0x000061,BUF_48_035
       00 00 77 02 
       00          
048554 1D 00 00 6C 0784*  	dl 0x00001D,0x00006C,BUF_48_043
       00 00 78 02 
       00          
04855D 87 00 00 6C 0785*  	dl 0x000087,0x00006C,BUF_48_043
       00 00 78 02 
       00          
048566 F2 00 00 6C 0786*  	dl 0x0000F2,0x00006C,BUF_48_043
       00 00 78 02 
       00          
04856F 00 01 00 9F 0787*  	dl 0x000100,0x00009F,BUF_48_047
       00 00 79 02 
       00          
048578             0788*  
048578             0789*  ; render_obj_id:49
048578             0790*  sprite_obj_014:
048578 0A 00 00 59 0791*  	dl 0x00000A,0x000059,BUF_49_007
       00 00 7A 02 
       00          
048581 2D 00 00 59 0792*  	dl 0x00002D,0x000059,BUF_49_007
       00 00 7A 02 
       00          
04858A 51 00 00 59 0793*  	dl 0x000051,0x000059,BUF_49_007
       00 00 7A 02 
       00          
048593 74 00 00 59 0794*  	dl 0x000074,0x000059,BUF_49_007
       00 00 7A 02 
       00          
04859C 98 00 00 59 0795*  	dl 0x000098,0x000059,BUF_49_007
       00 00 7A 02 
       00          
0485A5 BB 00 00 59 0796*  	dl 0x0000BB,0x000059,BUF_49_007
       00 00 7A 02 
       00          
0485AE DF 00 00 59 0797*  	dl 0x0000DF,0x000059,BUF_49_007
       00 00 7A 02 
       00          
0485B7 02 01 00 59 0798*  	dl 0x000102,0x000059,BUF_49_007
       00 00 7A 02 
       00          
0485C0 26 01 00 59 0799*  	dl 0x000126,0x000059,BUF_49_007
       00 00 7A 02 
       00          
0485C9 0E 00 00 5B 0800*  	dl 0x00000E,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485D2 3B 00 00 5B 0801*  	dl 0x00003B,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485DB 69 00 00 5B 0802*  	dl 0x000069,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485E4 97 00 00 5B 0803*  	dl 0x000097,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485ED C4 00 00 5B 0804*  	dl 0x0000C4,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485F6 F2 00 00 5B 0805*  	dl 0x0000F2,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
0485FF 20 01 00 5B 0806*  	dl 0x000120,0x00005B,BUF_49_023
       00 00 7B 02 
       00          
048608 13 00 00 60 0807*  	dl 0x000013,0x000060,BUF_49_035
       00 00 7C 02 
       00          
048611 53 00 00 60 0808*  	dl 0x000053,0x000060,BUF_49_035
       00 00 7C 02 
       00          
04861A 93 00 00 60 0809*  	dl 0x000093,0x000060,BUF_49_035
       00 00 7C 02 
       00          
048623 D2 00 00 60 0810*  	dl 0x0000D2,0x000060,BUF_49_035
       00 00 7C 02 
       00          
04862C 12 01 00 60 0811*  	dl 0x000112,0x000060,BUF_49_035
       00 00 7C 02 
       00          
048635 20 00 00 6C 0812*  	dl 0x000020,0x00006C,BUF_49_043
       00 00 7D 02 
       00          
04863E 8A 00 00 6C 0813*  	dl 0x00008A,0x00006C,BUF_49_043
       00 00 7D 02 
       00          
048647 F5 00 00 6C 0814*  	dl 0x0000F5,0x00006C,BUF_49_043
       00 00 7D 02 
       00          
048650 E8 00 00 9F 0815*  	dl 0x0000E8,0x00009F,BUF_49_047
       00 00 7E 02 
       00          
048659             0816*  
048659             0817*  ; render_obj_id:50
048659             0818*  sprite_obj_015:
048659 0D 00 00 53 0819*  	dl 0x00000D,0x000053,BUF_50_007
       00 00 7F 02 
       00          
048662 30 00 00 53 0820*  	dl 0x000030,0x000053,BUF_50_007
       00 00 7F 02 
       00          
04866B 54 00 00 53 0821*  	dl 0x000054,0x000053,BUF_50_007
       00 00 7F 02 
       00          
048674 77 00 00 53 0822*  	dl 0x000077,0x000053,BUF_50_007
       00 00 7F 02 
       00          
04867D 9B 00 00 53 0823*  	dl 0x00009B,0x000053,BUF_50_007
       00 00 7F 02 
       00          
048686 BE 00 00 53 0824*  	dl 0x0000BE,0x000053,BUF_50_007
       00 00 7F 02 
       00          
04868F E2 00 00 53 0825*  	dl 0x0000E2,0x000053,BUF_50_007
       00 00 7F 02 
       00          
048698 05 01 00 53 0826*  	dl 0x000105,0x000053,BUF_50_007
       00 00 7F 02 
       00          
0486A1 29 01 00 53 0827*  	dl 0x000129,0x000053,BUF_50_007
       00 00 7F 02 
       00          
0486AA 10 00 00 54 0828*  	dl 0x000010,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486B3 3D 00 00 54 0829*  	dl 0x00003D,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486BC 6B 00 00 54 0830*  	dl 0x00006B,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486C5 99 00 00 54 0831*  	dl 0x000099,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486CE C6 00 00 54 0832*  	dl 0x0000C6,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486D7 F4 00 00 54 0833*  	dl 0x0000F4,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486E0 22 01 00 54 0834*  	dl 0x000122,0x000054,BUF_50_023
       00 00 80 02 
       00          
0486E9 16 00 00 55 0835*  	dl 0x000016,0x000055,BUF_50_035
       00 00 81 02 
       00          
0486F2 56 00 00 55 0836*  	dl 0x000056,0x000055,BUF_50_035
       00 00 81 02 
       00          
0486FB 96 00 00 55 0837*  	dl 0x000096,0x000055,BUF_50_035
       00 00 81 02 
       00          
048704 D5 00 00 55 0838*  	dl 0x0000D5,0x000055,BUF_50_035
       00 00 81 02 
       00          
04870D 15 01 00 55 0839*  	dl 0x000115,0x000055,BUF_50_035
       00 00 81 02 
       00          
048716 26 00 00 5A 0840*  	dl 0x000026,0x00005A,BUF_50_043
       00 00 82 02 
       00          
04871F 90 00 00 5A 0841*  	dl 0x000090,0x00005A,BUF_50_043
       00 00 82 02 
       00          
048728 FB 00 00 5A 0842*  	dl 0x0000FB,0x00005A,BUF_50_043
       00 00 82 02 
       00          
048731 78 00 00 6E 0843*  	dl 0x000078,0x00006E,BUF_50_047
       00 00 83 02 
       00          
04873A             0844*  
04873A             0845*  ; render_obj_id:51
04873A             0846*  sprite_obj_016:
04873A 0B 00 00 49 0847*  	dl 0x00000B,0x000049,BUF_51_007
       00 00 84 02 
       00          
048743 2E 00 00 49 0848*  	dl 0x00002E,0x000049,BUF_51_007
       00 00 84 02 
       00          
04874C 52 00 00 49 0849*  	dl 0x000052,0x000049,BUF_51_007
       00 00 84 02 
       00          
048755 75 00 00 49 0850*  	dl 0x000075,0x000049,BUF_51_007
       00 00 84 02 
       00          
04875E 99 00 00 49 0851*  	dl 0x000099,0x000049,BUF_51_007
       00 00 84 02 
       00          
048767 BC 00 00 49 0852*  	dl 0x0000BC,0x000049,BUF_51_007
       00 00 84 02 
       00          
048770 E0 00 00 49 0853*  	dl 0x0000E0,0x000049,BUF_51_007
       00 00 84 02 
       00          
048779 03 01 00 49 0854*  	dl 0x000103,0x000049,BUF_51_007
       00 00 84 02 
       00          
048782 27 01 00 49 0855*  	dl 0x000127,0x000049,BUF_51_007
       00 00 84 02 
       00          
04878B 0D 00 00 48 0856*  	dl 0x00000D,0x000048,BUF_51_023
       00 00 85 02 
       00          
048794 3A 00 00 48 0857*  	dl 0x00003A,0x000048,BUF_51_023
       00 00 85 02 
       00          
04879D 68 00 00 48 0858*  	dl 0x000068,0x000048,BUF_51_023
       00 00 85 02 
       00          
0487A6 96 00 00 48 0859*  	dl 0x000096,0x000048,BUF_51_023
       00 00 85 02 
       00          
0487AF C3 00 00 48 0860*  	dl 0x0000C3,0x000048,BUF_51_023
       00 00 85 02 
       00          
0487B8 F1 00 00 48 0861*  	dl 0x0000F1,0x000048,BUF_51_023
       00 00 85 02 
       00          
0487C1 1F 01 00 48 0862*  	dl 0x00011F,0x000048,BUF_51_023
       00 00 85 02 
       00          
0487CA 12 00 00 45 0863*  	dl 0x000012,0x000045,BUF_51_035
       00 00 86 02 
       00          
0487D3 52 00 00 45 0864*  	dl 0x000052,0x000045,BUF_51_035
       00 00 86 02 
       00          
0487DC 92 00 00 45 0865*  	dl 0x000092,0x000045,BUF_51_035
       00 00 86 02 
       00          
0487E5 D1 00 00 45 0866*  	dl 0x0000D1,0x000045,BUF_51_035
       00 00 86 02 
       00          
0487EE 11 01 00 45 0867*  	dl 0x000111,0x000045,BUF_51_035
       00 00 86 02 
       00          
0487F7 20 00 00 3E 0868*  	dl 0x000020,0x00003E,BUF_51_043
       00 00 87 02 
       00          
048800 8A 00 00 3E 0869*  	dl 0x00008A,0x00003E,BUF_51_043
       00 00 87 02 
       00          
048809 F5 00 00 3E 0870*  	dl 0x0000F5,0x00003E,BUF_51_043
       00 00 87 02 
       00          
048812 5E 00 00 1D 0871*  	dl 0x00005E,0x00001D,BUF_51_047
       00 00 88 02 
       00          
04881B             0872*  
04881B             0873*  ; render_obj_id:52
04881B             0874*  sprite_obj_017:
04881B 0C 00 00 49 0875*  	dl 0x00000C,0x000049,BUF_52_007
       00 00 89 02 
       00          
048824 2F 00 00 49 0876*  	dl 0x00002F,0x000049,BUF_52_007
       00 00 89 02 
       00          
04882D 53 00 00 49 0877*  	dl 0x000053,0x000049,BUF_52_007
       00 00 89 02 
       00          
048836 76 00 00 49 0878*  	dl 0x000076,0x000049,BUF_52_007
       00 00 89 02 
       00          
04883F 9A 00 00 49 0879*  	dl 0x00009A,0x000049,BUF_52_007
       00 00 89 02 
       00          
048848 BD 00 00 49 0880*  	dl 0x0000BD,0x000049,BUF_52_007
       00 00 89 02 
       00          
048851 E1 00 00 49 0881*  	dl 0x0000E1,0x000049,BUF_52_007
       00 00 89 02 
       00          
04885A 04 01 00 49 0882*  	dl 0x000104,0x000049,BUF_52_007
       00 00 89 02 
       00          
048863 28 01 00 49 0883*  	dl 0x000128,0x000049,BUF_52_007
       00 00 89 02 
       00          
04886C 0F 00 00 48 0884*  	dl 0x00000F,0x000048,BUF_52_023
       00 00 8A 02 
       00          
048875 3C 00 00 48 0885*  	dl 0x00003C,0x000048,BUF_52_023
       00 00 8A 02 
       00          
04887E 6A 00 00 48 0886*  	dl 0x00006A,0x000048,BUF_52_023
       00 00 8A 02 
       00          
048887 98 00 00 48 0887*  	dl 0x000098,0x000048,BUF_52_023
       00 00 8A 02 
       00          
048890 C5 00 00 48 0888*  	dl 0x0000C5,0x000048,BUF_52_023
       00 00 8A 02 
       00          
048899 F3 00 00 48 0889*  	dl 0x0000F3,0x000048,BUF_52_023
       00 00 8A 02 
       00          
0488A2 21 01 00 48 0890*  	dl 0x000121,0x000048,BUF_52_023
       00 00 8A 02 
       00          
0488AB 15 00 00 45 0891*  	dl 0x000015,0x000045,BUF_52_035
       00 00 8B 02 
       00          
0488B4 55 00 00 45 0892*  	dl 0x000055,0x000045,BUF_52_035
       00 00 8B 02 
       00          
0488BD 95 00 00 45 0893*  	dl 0x000095,0x000045,BUF_52_035
       00 00 8B 02 
       00          
0488C6 D4 00 00 45 0894*  	dl 0x0000D4,0x000045,BUF_52_035
       00 00 8B 02 
       00          
0488CF 14 01 00 45 0895*  	dl 0x000114,0x000045,BUF_52_035
       00 00 8B 02 
       00          
0488D8 24 00 00 3E 0896*  	dl 0x000024,0x00003E,BUF_52_043
       00 00 8C 02 
       00          
0488E1 8E 00 00 3E 0897*  	dl 0x00008E,0x00003E,BUF_52_043
       00 00 8C 02 
       00          
0488EA F9 00 00 3E 0898*  	dl 0x0000F9,0x00003E,BUF_52_043
       00 00 8C 02 
       00          
0488F3 6B 00 00 1D 0899*  	dl 0x00006B,0x00001D,BUF_52_047
       00 00 8D 02 
       00          
0488FC             0900*  
0488FC             0901*  ; render_obj_id:56
0488FC             0902*  sprite_obj_018:
0488FC 08 00 00 56 0903*  	dl 0x000008,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048905 2B 00 00 56 0904*  	dl 0x00002B,0x000056,BUF_56_007
       00 00 8E 02 
       00          
04890E 4F 00 00 56 0905*  	dl 0x00004F,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048917 72 00 00 56 0906*  	dl 0x000072,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048920 96 00 00 56 0907*  	dl 0x000096,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048929 B9 00 00 56 0908*  	dl 0x0000B9,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048932 DD 00 00 56 0909*  	dl 0x0000DD,0x000056,BUF_56_007
       00 00 8E 02 
       00          
04893B 00 01 00 56 0910*  	dl 0x000100,0x000056,BUF_56_007
       00 00 8E 02 
       00          
048944 24 01 00 56 0911*  	dl 0x000124,0x000056,BUF_56_007
       00 00 8E 02 
       00          
04894D 0B 00 00 59 0912*  	dl 0x00000B,0x000059,BUF_56_023
       00 00 8F 02 
       00          
048956 38 00 00 59 0913*  	dl 0x000038,0x000059,BUF_56_023
       00 00 8F 02 
       00          
04895F 66 00 00 59 0914*  	dl 0x000066,0x000059,BUF_56_023
       00 00 8F 02 
       00          
048968 94 00 00 59 0915*  	dl 0x000094,0x000059,BUF_56_023
       00 00 8F 02 
       00          
048971 C1 00 00 59 0916*  	dl 0x0000C1,0x000059,BUF_56_023
       00 00 8F 02 
       00          
04897A EF 00 00 59 0917*  	dl 0x0000EF,0x000059,BUF_56_023
       00 00 8F 02 
       00          
048983 1D 01 00 59 0918*  	dl 0x00011D,0x000059,BUF_56_023
       00 00 8F 02 
       00          
04898C 0D 00 00 5D 0919*  	dl 0x00000D,0x00005D,BUF_56_035
       00 00 90 02 
       00          
048995 4D 00 00 5D 0920*  	dl 0x00004D,0x00005D,BUF_56_035
       00 00 90 02 
       00          
04899E 8D 00 00 5D 0921*  	dl 0x00008D,0x00005D,BUF_56_035
       00 00 90 02 
       00          
0489A7 CC 00 00 5D 0922*  	dl 0x0000CC,0x00005D,BUF_56_035
       00 00 90 02 
       00          
0489B0 0C 01 00 5D 0923*  	dl 0x00010C,0x00005D,BUF_56_035
       00 00 90 02 
       00          
0489B9 17 00 00 66 0924*  	dl 0x000017,0x000066,BUF_56_043
       00 00 91 02 
       00          
0489C2 81 00 00 66 0925*  	dl 0x000081,0x000066,BUF_56_043
       00 00 91 02 
       00          
0489CB EC 00 00 66 0926*  	dl 0x0000EC,0x000066,BUF_56_043
       00 00 91 02 
       00          
0489D4 A0 00 00 93 0927*  	dl 0x0000A0,0x000093,BUF_56_047
       00 00 92 02 
       00          
0489DD             0928*  
0489DD             0929*  ; render_obj_id:60
0489DD             0930*  sprite_obj_019:
0489DD 03 00 00 41 0931*  	dl 0x000003,0x000041,BUF_60_007
       00 00 93 02 
       00          
0489E6 26 00 00 41 0932*  	dl 0x000026,0x000041,BUF_60_007
       00 00 93 02 
       00          
0489EF 4A 00 00 41 0933*  	dl 0x00004A,0x000041,BUF_60_007
       00 00 93 02 
       00          
0489F8 6D 00 00 41 0934*  	dl 0x00006D,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A01 91 00 00 41 0935*  	dl 0x000091,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A0A B4 00 00 41 0936*  	dl 0x0000B4,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A13 D8 00 00 41 0937*  	dl 0x0000D8,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A1C FB 00 00 41 0938*  	dl 0x0000FB,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A25 1F 01 00 41 0939*  	dl 0x00011F,0x000041,BUF_60_007
       00 00 93 02 
       00          
048A2E 03 00 00 3C 0940*  	dl 0x000003,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A37 30 00 00 3C 0941*  	dl 0x000030,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A40 5E 00 00 3C 0942*  	dl 0x00005E,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A49 8C 00 00 3C 0943*  	dl 0x00008C,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A52 B9 00 00 3C 0944*  	dl 0x0000B9,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A5B E7 00 00 3C 0945*  	dl 0x0000E7,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A64 15 01 00 3C 0946*  	dl 0x000115,0x00003C,BUF_60_023
       00 00 94 02 
       00          
048A6D 04 00 00 34 0947*  	dl 0x000004,0x000034,BUF_60_035
       00 00 95 02 
       00          
048A76 44 00 00 34 0948*  	dl 0x000044,0x000034,BUF_60_035
       00 00 95 02 
       00          
048A7F 84 00 00 34 0949*  	dl 0x000084,0x000034,BUF_60_035
       00 00 95 02 
       00          
048A88 C3 00 00 34 0950*  	dl 0x0000C3,0x000034,BUF_60_035
       00 00 95 02 
       00          
048A91 03 01 00 34 0951*  	dl 0x000103,0x000034,BUF_60_035
       00 00 95 02 
       00          
048A9A 07 00 00 21 0952*  	dl 0x000007,0x000021,BUF_60_043
       00 00 96 02 
       00          
048AA3 71 00 00 21 0953*  	dl 0x000071,0x000021,BUF_60_043
       00 00 96 02 
       00          
048AAC DC 00 00 21 0954*  	dl 0x0000DC,0x000021,BUF_60_043
       00 00 96 02 
       00          
048AB5 14 00 00 00 0955*  	dl 0x000014,0x000000,BUF_60_047
       00 00 97 02 
       00          
048ABE             0956*  
048ABE             0957*  sprite_obj_255: ; placeholder to keep the assembler happy, CANNOT BE A VALID sprite_obj
048ABE             0958*  
048ABE             0959*  map_type_status_lut:
048ABE             0960*  ; {map_type_status}, {sprite_obj} ; {obj_id} ({render_obj_id}) {tile_name} {render_type_idx} {render_type}
048ABE 50 FF       0961*  	db %01010000, 255 ; 10 (10) LIGHT GREY WALL 0 cube
048AC0 50 FF       0962*  	db %01010000, 255 ; 11 (11) JAIL CELL 0 cube
048AC2 50 FF       0963*  	db %01010000, 255 ; 12 (12) STONE ARCH BIRD 0 cube
048AC4 50 FF       0964*  	db %01010000, 255 ; 13 (13) DARK GREY WALL 0 cube
048AC6 50 FF       0965*  	db %01010000, 255 ; 14 (14) WOOD WALL 0 cube
048AC8 50 FF       0966*  	db %01010000, 255 ; 15 (15) HANGING FLAG 0 cube
048ACA 50 FF       0967*  	db %01010000, 255 ; 16 (16) WOOD EAGLE 0 cube
048ACC 50 FF       0968*  	db %01010000, 255 ; 17 (17) BLUE WALL 0 cube
048ACE 02 FF       0969*  	db %00000010, 255 ; 18 (None) PLACEHOLDER 2 null cell
048AD0 42 FF       0970*  	db %01000010, 255 ; 19 (19) NULL CELL 2 null cell
048AD2 43 00       0971*  	db %01000011, 0 ; 20 (20) LAMP 3 sprite
048AD4 43 01       0972*  	db %01000011, 1 ; 21 (21) BARREL 3 sprite
048AD6 43 02       0973*  	db %01000011, 2 ; 22 (22) TABLE 3 sprite
048AD8 03 03       0974*  	db %00000011, 3 ; 23 (23) OVERHEAD LIGHT 3 sprite
048ADA 43 04       0975*  	db %01000011, 4 ; 24 (24) RADIOACTIVE BARREL 3 sprite
048ADC 00 FF       0976*  	db %00000000, 255 ; 25 (25) BJ 25% 4 ui
048ADE 00 FF       0977*  	db %00000000, 255 ; 26 (26) BJ 50% 4 ui
048AE0 00 FF       0978*  	db %00000000, 255 ; 27 (27) BJ 75% 4 ui
048AE2 08 FF       0979*  	db %00001000, 255 ; 28 (28) BJ 100%/ START POSITION 4 ui
048AE4 01 FF       0980*  	db %00000001, 255 ; 29 (29) GREY FLOOR 1 floor
048AE6 34 FF       0981*  	db %00110100, 255 ; 30 (57) DOOR TO ROOM 0 0 cube
048AE8 34 FF       0982*  	db %00110100, 255 ; 31 (57) DOOR TO ROOM 1 0 cube
048AEA 34 FF       0983*  	db %00110100, 255 ; 32 (57) DOOR TO ROOM 2 0 cube
048AEC 34 FF       0984*  	db %00110100, 255 ; 33 (57) DOOR TO ROOM 3 0 cube
048AEE 34 FF       0985*  	db %00110100, 255 ; 34 (57) DOOR TO ROOM 4 0 cube
048AF0 34 FF       0986*  	db %00110100, 255 ; 35 (57) DOOR TO ROOM 5 0 cube
048AF2 34 FF       0987*  	db %00110100, 255 ; 36 (57) DOOR TO ROOM 6 0 cube
048AF4 34 FF       0988*  	db %00110100, 255 ; 37 (57) DOOR TO ROOM 7 0 cube
048AF6 34 FF       0989*  	db %00110100, 255 ; 38 (57) DOOR TO ROOM 8 0 cube
048AF8 34 FF       0990*  	db %00110100, 255 ; 39 (57) DOOR TO ROOM 9 0 cube
048AFA 03 05       0991*  	db %00000011, 5 ; 40 (40) HEALTH PACK 3 sprite
048AFC 03 06       0992*  	db %00000011, 6 ; 41 (41) GOLD CHALISE 3 sprite
048AFE 03 07       0993*  	db %00000011, 7 ; 42 (42) GOLD CROSS 3 sprite
048B00 03 08       0994*  	db %00000011, 8 ; 43 (43) PLATE OF FOOD 3 sprite
048B02 03 09       0995*  	db %00000011, 9 ; 44 (44) KEYCARD 3 sprite
048B04 03 0A       0996*  	db %00000011, 10 ; 45 (45) GOLD CHEST 3 sprite
048B06 03 0B       0997*  	db %00000011, 11 ; 46 (46) MACHINE GUN 3 sprite
048B08 03 0C       0998*  	db %00000011, 12 ; 47 (47) GATLING GUN 3 sprite
048B0A 03 0D       0999*  	db %00000011, 13 ; 48 (48) DOG FOOD 3 sprite
048B0C 03 0E       1000*  	db %00000011, 14 ; 49 (49) GOLD KEY 3 sprite
048B0E 43 0F       1001*  	db %01000011, 15 ; 50 (50) DOG 3 sprite
048B10 43 10       1002*  	db %01000011, 16 ; 51 (51) GERMAN TROOPER 3 sprite
048B12 43 11       1003*  	db %01000011, 17 ; 52 (52) SS GUARD 3 sprite
048B14 02 FF       1004*  	db %00000010, 255 ; 53 (None) PLACEHOLDER 2 null cell
048B16 02 FF       1005*  	db %00000010, 255 ; 54 (None) PLACEHOLDER 2 null cell
048B18 02 FF       1006*  	db %00000010, 255 ; 55 (None) PLACEHOLDER 2 null cell
048B1A 03 12       1007*  	db %00000011, 18 ; 56 (56) DEAD GUARD 3 sprite
048B1C 90 FF       1008*  	db %10010000, 255 ; 57 (57) REGULAR DOOR 0 cube
048B1E 70 FF       1009*  	db %01110000, 255 ; 58 (58) ELEVATOR SWITCH 0 cube
048B20 90 FF       1010*  	db %10010000, 255 ; 59 (59) ELEVATOR DOOR 0 cube
048B22 43 13       1011*  	db %01000011, 19 ; 60 (60) EXPLOSION 3 sprite
048B24 02 FF       1012*  	db %00000010, 255 ; 61 (None) PLACEHOLDER 2 null cell
048B26 02 FF       1013*  	db %00000010, 255 ; 62 (None) PLACEHOLDER 2 null cell
048B28 02 FF       1014*  	db %00000010, 255 ; 63 (None) PLACEHOLDER 2 null cell
048B2A 02 FF       1015*  	db %00000010, 255 ; 64 (None) PLACEHOLDER 2 null cell
048B2C 02 FF       1016*  	db %00000010, 255 ; 65 (None) PLACEHOLDER 2 null cell
048B2E 02 FF       1017*  	db %00000010, 255 ; 66 (None) PLACEHOLDER 2 null cell
048B30 02 FF       1018*  	db %00000010, 255 ; 67 (None) PLACEHOLDER 2 null cell
048B32 02 FF       1019*  	db %00000010, 255 ; 68 (None) PLACEHOLDER 2 null cell
048B34 02 FF       1020*  	db %00000010, 255 ; 69 (None) PLACEHOLDER 2 null cell
048B36 02 FF       1021*  	db %00000010, 255 ; 70 (None) PLACEHOLDER 2 null cell
048B38 02 FF       1022*  	db %00000010, 255 ; 71 (None) PLACEHOLDER 2 null cell
048B3A 02 FF       1023*  	db %00000010, 255 ; 72 (None) PLACEHOLDER 2 null cell
048B3C 02 FF       1024*  	db %00000010, 255 ; 73 (None) PLACEHOLDER 2 null cell
048B3E 02 FF       1025*  	db %00000010, 255 ; 74 (None) PLACEHOLDER 2 null cell
048B40 02 FF       1026*  	db %00000010, 255 ; 75 (None) PLACEHOLDER 2 null cell
048B42 02 FF       1027*  	db %00000010, 255 ; 76 (None) PLACEHOLDER 2 null cell
048B44 02 FF       1028*  	db %00000010, 255 ; 77 (None) PLACEHOLDER 2 null cell
048B46 02 FF       1029*  	db %00000010, 255 ; 78 (None) PLACEHOLDER 2 null cell
048B48 02 FF       1030*  	db %00000010, 255 ; 79 (None) PLACEHOLDER 2 null cell
048B4A 02 FF       1031*  	db %00000010, 255 ; 80 (None) PLACEHOLDER 2 null cell
048B4C 02 FF       1032*  	db %00000010, 255 ; 81 (None) PLACEHOLDER 2 null cell
048B4E 02 FF       1033*  	db %00000010, 255 ; 82 (None) PLACEHOLDER 2 null cell
048B50 02 FF       1034*  	db %00000010, 255 ; 83 (None) PLACEHOLDER 2 null cell
048B52 02 FF       1035*  	db %00000010, 255 ; 84 (None) PLACEHOLDER 2 null cell
048B54 02 FF       1036*  	db %00000010, 255 ; 85 (None) PLACEHOLDER 2 null cell
048B56 02 FF       1037*  	db %00000010, 255 ; 86 (None) PLACEHOLDER 2 null cell
048B58 02 FF       1038*  	db %00000010, 255 ; 87 (None) PLACEHOLDER 2 null cell
048B5A 02 FF       1039*  	db %00000010, 255 ; 88 (None) PLACEHOLDER 2 null cell
048B5C 02 FF       1040*  	db %00000010, 255 ; 89 (None) PLACEHOLDER 2 null cell
048B5E 02 FF       1041*  	db %00000010, 255 ; 90 (None) PLACEHOLDER 2 null cell
048B60 02 FF       1042*  	db %00000010, 255 ; 91 (None) PLACEHOLDER 2 null cell
048B62 02 FF       1043*  	db %00000010, 255 ; 92 (None) PLACEHOLDER 2 null cell
048B64 02 FF       1044*  	db %00000010, 255 ; 93 (None) PLACEHOLDER 2 null cell
048B66 02 FF       1045*  	db %00000010, 255 ; 94 (None) PLACEHOLDER 2 null cell
048B68 02 FF       1046*  	db %00000010, 255 ; 95 (None) PLACEHOLDER 2 null cell
048B6A 02 FF       1047*  	db %00000010, 255 ; 96 (None) PLACEHOLDER 2 null cell
048B6C 02 FF       1048*  	db %00000010, 255 ; 97 (None) PLACEHOLDER 2 null cell
048B6E 02 FF       1049*  	db %00000010, 255 ; 98 (None) PLACEHOLDER 2 null cell
048B70 02 FF       1050*  	db %00000010, 255 ; 99 (None) PLACEHOLDER 2 null cell
048B72             0018   	include "src/asm/font_itc_honda.asm"
048B72             0001*  ; Bitmap indices:
048B72             0002*  BUF_4384: equ 0x1120 ; 32
048B72             0003*  ; Missing character 33 !
048B72             0004*  ; Missing character 34 "
048B72             0005*  ; Missing character 35 #
048B72             0006*  ; Missing character 36 $
048B72             0007*  ; Missing character 37 %
048B72             0008*  ; Missing character 38 &
048B72             0009*  ; Missing character 39 '
048B72             0010*  ; Missing character 40 (
048B72             0011*  ; Missing character 41 )
048B72             0012*  ; Missing character 42 *
048B72             0013*  ; Missing character 43 +
048B72             0014*  ; Missing character 44 ,
048B72             0015*  ; Missing character 45 -
048B72             0016*  BUF_4398: equ 0x112E ; 46 .
048B72             0017*  ; Missing character 47 /
048B72             0018*  BUF_4400: equ 0x1130 ; 48 0
048B72             0019*  BUF_4401: equ 0x1131 ; 49 1
048B72             0020*  BUF_4402: equ 0x1132 ; 50 2
048B72             0021*  BUF_4403: equ 0x1133 ; 51 3
048B72             0022*  BUF_4404: equ 0x1134 ; 52 4
048B72             0023*  BUF_4405: equ 0x1135 ; 53 5
048B72             0024*  BUF_4406: equ 0x1136 ; 54 6
048B72             0025*  BUF_4407: equ 0x1137 ; 55 7
048B72             0026*  BUF_4408: equ 0x1138 ; 56 8
048B72             0027*  BUF_4409: equ 0x1139 ; 57 9
048B72             0028*  ; Missing character 58 :
048B72             0029*  ; Missing character 59 ;
048B72             0030*  ; Missing character 60 <
048B72             0031*  ; Missing character 61 =
048B72             0032*  ; Missing character 62 >
048B72             0033*  ; Missing character 63 ?
048B72             0034*  ; Missing character 64 @
048B72             0035*  BUF_4417: equ 0x1141 ; 65 A
048B72             0036*  BUF_4418: equ 0x1142 ; 66 B
048B72             0037*  BUF_4419: equ 0x1143 ; 67 C
048B72             0038*  BUF_4420: equ 0x1144 ; 68 D
048B72             0039*  BUF_4421: equ 0x1145 ; 69 E
048B72             0040*  BUF_4422: equ 0x1146 ; 70 F
048B72             0041*  BUF_4423: equ 0x1147 ; 71 G
048B72             0042*  BUF_4424: equ 0x1148 ; 72 H
048B72             0043*  BUF_4425: equ 0x1149 ; 73 I
048B72             0044*  BUF_4426: equ 0x114A ; 74 J
048B72             0045*  BUF_4427: equ 0x114B ; 75 K
048B72             0046*  BUF_4428: equ 0x114C ; 76 L
048B72             0047*  BUF_4429: equ 0x114D ; 77 M
048B72             0048*  BUF_4430: equ 0x114E ; 78 N
048B72             0049*  BUF_4431: equ 0x114F ; 79 O
048B72             0050*  BUF_4432: equ 0x1150 ; 80 P
048B72             0051*  BUF_4433: equ 0x1151 ; 81 Q
048B72             0052*  BUF_4434: equ 0x1152 ; 82 R
048B72             0053*  BUF_4435: equ 0x1153 ; 83 S
048B72             0054*  BUF_4436: equ 0x1154 ; 84 T
048B72             0055*  BUF_4437: equ 0x1155 ; 85 U
048B72             0056*  BUF_4438: equ 0x1156 ; 86 V
048B72             0057*  BUF_4439: equ 0x1157 ; 87 W
048B72             0058*  BUF_4440: equ 0x1158 ; 88 X
048B72             0059*  BUF_4441: equ 0x1159 ; 89 Y
048B72             0060*  BUF_4442: equ 0x115A ; 90 Z
048B72             0061*  ; Missing character 91 [
048B72             0062*  ; Missing character 92 \
048B72             0063*  ; Missing character 93 ]
048B72             0064*  ; Missing character 94 ^
048B72             0065*  ; Missing character 95 _
048B72             0066*  ; Missing character 96 `
048B72             0067*  BUF_4449: equ 0x1161 ; 97 a
048B72             0068*  BUF_4450: equ 0x1162 ; 98 b
048B72             0069*  BUF_4451: equ 0x1163 ; 99 c
048B72             0070*  BUF_4452: equ 0x1164 ; 100 d
048B72             0071*  BUF_4453: equ 0x1165 ; 101 e
048B72             0072*  BUF_4454: equ 0x1166 ; 102 f
048B72             0073*  BUF_4455: equ 0x1167 ; 103 g
048B72             0074*  BUF_4456: equ 0x1168 ; 104 h
048B72             0075*  BUF_4457: equ 0x1169 ; 105 i
048B72             0076*  BUF_4458: equ 0x116A ; 106 j
048B72             0077*  BUF_4459: equ 0x116B ; 107 k
048B72             0078*  BUF_4460: equ 0x116C ; 108 l
048B72             0079*  BUF_4461: equ 0x116D ; 109 m
048B72             0080*  BUF_4462: equ 0x116E ; 110 n
048B72             0081*  BUF_4463: equ 0x116F ; 111 o
048B72             0082*  BUF_4464: equ 0x1170 ; 112 p
048B72             0083*  BUF_4465: equ 0x1171 ; 113 q
048B72             0084*  BUF_4466: equ 0x1172 ; 114 r
048B72             0085*  BUF_4467: equ 0x1173 ; 115 s
048B72             0086*  BUF_4468: equ 0x1174 ; 116 t
048B72             0087*  BUF_4469: equ 0x1175 ; 117 u
048B72             0088*  BUF_4470: equ 0x1176 ; 118 v
048B72             0089*  BUF_4471: equ 0x1177 ; 119 w
048B72             0090*  BUF_4472: equ 0x1178 ; 120 x
048B72             0091*  BUF_4473: equ 0x1179 ; 121 y
048B72             0092*  BUF_4474: equ 0x117A ; 122 z
048B72             0093*  ; [y_offset, dim_y, dim_x], buffer_id label: ; mind the little-endian order when fetching these!!!
048B72             0094*  font_itc_honda:
048B72 06 01 00 20 0095*  	dl 0x000106,BUF_4384
       11 00       
048B78 06 01 00 20 0096*  	dl 0x000106,BUF_4384 ; Missing character 33
       11 00       
048B7E 06 01 00 20 0097*  	dl 0x000106,BUF_4384 ; Missing character 34
       11 00       
048B84 06 01 00 20 0098*  	dl 0x000106,BUF_4384 ; Missing character 35
       11 00       
048B8A 06 01 00 20 0099*  	dl 0x000106,BUF_4384 ; Missing character 36
       11 00       
048B90 06 01 00 20 0100*  	dl 0x000106,BUF_4384 ; Missing character 37
       11 00       
048B96 06 01 00 20 0101*  	dl 0x000106,BUF_4384 ; Missing character 38
       11 00       
048B9C 06 01 00 20 0102*  	dl 0x000106,BUF_4384 ; Missing character 39
       11 00       
048BA2 06 01 00 20 0103*  	dl 0x000106,BUF_4384 ; Missing character 40
       11 00       
048BA8 06 01 00 20 0104*  	dl 0x000106,BUF_4384 ; Missing character 41
       11 00       
048BAE 06 01 00 20 0105*  	dl 0x000106,BUF_4384 ; Missing character 42
       11 00       
048BB4 06 01 00 20 0106*  	dl 0x000106,BUF_4384 ; Missing character 43
       11 00       
048BBA 06 01 00 20 0107*  	dl 0x000106,BUF_4384 ; Missing character 44
       11 00       
048BC0 06 01 00 20 0108*  	dl 0x000106,BUF_4384 ; Missing character 45
       11 00       
048BC6 05 05 0E 2E 0109*  	dl 0x0E0505,BUF_4398
       11 00       
048BCC 06 01 00 20 0110*  	dl 0x000106,BUF_4384 ; Missing character 47
       11 00       
048BD2 0A 12 00 30 0111*  	dl 0x00120A,BUF_4400
       11 00       
048BD8 04 12 00 31 0112*  	dl 0x001204,BUF_4401
       11 00       
048BDE 09 12 00 32 0113*  	dl 0x001209,BUF_4402
       11 00       
048BE4 0A 12 00 33 0114*  	dl 0x00120A,BUF_4403
       11 00       
048BEA 0C 12 00 34 0115*  	dl 0x00120C,BUF_4404
       11 00       
048BF0 0A 12 00 35 0116*  	dl 0x00120A,BUF_4405
       11 00       
048BF6 0A 12 00 36 0117*  	dl 0x00120A,BUF_4406
       11 00       
048BFC 08 12 00 37 0118*  	dl 0x001208,BUF_4407
       11 00       
048C02 0A 12 00 38 0119*  	dl 0x00120A,BUF_4408
       11 00       
048C08 0A 12 00 39 0120*  	dl 0x00120A,BUF_4409
       11 00       
048C0E 06 01 00 20 0121*  	dl 0x000106,BUF_4384 ; Missing character 58
       11 00       
048C14 06 01 00 20 0122*  	dl 0x000106,BUF_4384 ; Missing character 59
       11 00       
048C1A 06 01 00 20 0123*  	dl 0x000106,BUF_4384 ; Missing character 60
       11 00       
048C20 06 01 00 20 0124*  	dl 0x000106,BUF_4384 ; Missing character 61
       11 00       
048C26 06 01 00 20 0125*  	dl 0x000106,BUF_4384 ; Missing character 62
       11 00       
048C2C 06 01 00 20 0126*  	dl 0x000106,BUF_4384 ; Missing character 63
       11 00       
048C32 06 01 00 20 0127*  	dl 0x000106,BUF_4384 ; Missing character 64
       11 00       
048C38 0A 12 01 41 0128*  	dl 0x01120A,BUF_4417
       11 00       
048C3E 0A 12 00 42 0129*  	dl 0x00120A,BUF_4418
       11 00       
048C44 08 13 00 43 0130*  	dl 0x001308,BUF_4419
       11 00       
048C4A 0A 12 00 44 0131*  	dl 0x00120A,BUF_4420
       11 00       
048C50 08 12 00 45 0132*  	dl 0x001208,BUF_4421
       11 00       
048C56 08 12 00 46 0133*  	dl 0x001208,BUF_4422
       11 00       
048C5C 0A 12 00 47 0134*  	dl 0x00120A,BUF_4423
       11 00       
048C62 0A 12 00 48 0135*  	dl 0x00120A,BUF_4424
       11 00       
048C68 03 12 00 49 0136*  	dl 0x001203,BUF_4425
       11 00       
048C6E 06 12 00 4A 0137*  	dl 0x001206,BUF_4426
       11 00       
048C74 0A 12 00 4B 0138*  	dl 0x00120A,BUF_4427
       11 00       
048C7A 08 12 01 4C 0139*  	dl 0x011208,BUF_4428
       11 00       
048C80 0E 12 00 4D 0140*  	dl 0x00120E,BUF_4429
       11 00       
048C86 0A 12 00 4E 0141*  	dl 0x00120A,BUF_4430
       11 00       
048C8C 0A 12 00 4F 0142*  	dl 0x00120A,BUF_4431
       11 00       
048C92 0A 12 00 50 0143*  	dl 0x00120A,BUF_4432
       11 00       
048C98 0A 15 00 51 0144*  	dl 0x00150A,BUF_4433
       11 00       
048C9E 0A 12 00 52 0145*  	dl 0x00120A,BUF_4434
       11 00       
048CA4 09 13 00 53 0146*  	dl 0x001309,BUF_4435
       11 00       
048CAA 0A 12 00 54 0147*  	dl 0x00120A,BUF_4436
       11 00       
048CB0 0A 12 00 55 0148*  	dl 0x00120A,BUF_4437
       11 00       
048CB6 0A 12 00 56 0149*  	dl 0x00120A,BUF_4438
       11 00       
048CBC 10 12 00 57 0150*  	dl 0x001210,BUF_4439
       11 00       
048CC2 0A 12 00 58 0151*  	dl 0x00120A,BUF_4440
       11 00       
048CC8 0A 12 01 59 0152*  	dl 0x01120A,BUF_4441
       11 00       
048CCE 09 12 01 5A 0153*  	dl 0x011209,BUF_4442
       11 00       
048CD4 06 01 00 20 0154*  	dl 0x000106,BUF_4384 ; Missing character 91
       11 00       
048CDA 06 01 00 20 0155*  	dl 0x000106,BUF_4384 ; Missing character 92
       11 00       
048CE0 06 01 00 20 0156*  	dl 0x000106,BUF_4384 ; Missing character 93
       11 00       
048CE6 06 01 00 20 0157*  	dl 0x000106,BUF_4384 ; Missing character 94
       11 00       
048CEC 06 01 00 20 0158*  	dl 0x000106,BUF_4384 ; Missing character 95
       11 00       
048CF2 06 01 00 20 0159*  	dl 0x000106,BUF_4384 ; Missing character 96
       11 00       
048CF8 08 0C 06 61 0160*  	dl 0x060C08,BUF_4449
       11 00       
048CFE 09 12 01 62 0161*  	dl 0x011209,BUF_4450
       11 00       
048D04 07 0C 06 63 0162*  	dl 0x060C07,BUF_4451
       11 00       
048D0A 09 12 00 64 0163*  	dl 0x001209,BUF_4452
       11 00       
048D10 08 0C 06 65 0164*  	dl 0x060C08,BUF_4453
       11 00       
048D16 09 12 00 66 0165*  	dl 0x001209,BUF_4454
       11 00       
048D1C 09 12 06 67 0166*  	dl 0x061209,BUF_4455
       11 00       
048D22 09 12 01 68 0167*  	dl 0x011209,BUF_4456
       11 00       
048D28 04 12 00 69 0168*  	dl 0x001204,BUF_4457
       11 00       
048D2E 08 18 00 6A 0169*  	dl 0x001808,BUF_4458
       11 00       
048D34 09 12 01 6B 0170*  	dl 0x011209,BUF_4459
       11 00       
048D3A 03 12 00 6C 0171*  	dl 0x001203,BUF_4460
       11 00       
048D40 0E 0D 06 6D 0172*  	dl 0x060D0E,BUF_4461
       11 00       
048D46 09 0C 06 6E 0173*  	dl 0x060C09,BUF_4462
       11 00       
048D4C 09 0C 06 6F 0174*  	dl 0x060C09,BUF_4463
       11 00       
048D52 09 12 06 70 0175*  	dl 0x061209,BUF_4464
       11 00       
048D58 09 12 06 71 0176*  	dl 0x061209,BUF_4465
       11 00       
048D5E 06 0D 06 72 0177*  	dl 0x060D06,BUF_4466
       11 00       
048D64 08 0D 06 73 0178*  	dl 0x060D08,BUF_4467
       11 00       
048D6A 07 0F 03 74 0179*  	dl 0x030F07,BUF_4468
       11 00       
048D70 09 0C 06 75 0180*  	dl 0x060C09,BUF_4469
       11 00       
048D76 09 0C 06 76 0181*  	dl 0x060C09,BUF_4470
       11 00       
048D7C 0E 0C 06 77 0182*  	dl 0x060C0E,BUF_4471
       11 00       
048D82 09 0C 06 78 0183*  	dl 0x060C09,BUF_4472
       11 00       
048D88 09 11 06 79 0184*  	dl 0x061109,BUF_4473
       11 00       
048D8E 09 0C 06 7A 0185*  	dl 0x060C09,BUF_4474
       11 00       
048D94             0186*  
048D94             0187*  ; Import .rgba2 bitmap files and load them into VDP buffers
048D94             0188*  load_font_itc_honda:
048D94             0189*  
048D94 21 D5 96 04 0190*  	ld hl,Fhonda032
048D98 11 C6 D3 04 0191*  	ld de,filedata
048D9C 01 00 00 01 0192*  	ld bc,65536
048DA0 3E 01       0193*  	ld a,mos_load
048DA2 5B CF       0194*  	RST.LIL 08h
048DA4 21 20 11 00 0195*  	ld hl,BUF_4384
048DA8 01 06 00 00 0196*  	ld bc,6
048DAC 11 01 00 00 0197*  	ld de,1
048DB0 DD 21 06 00 0198*  	ld ix,6
       00          
048DB5 CD 05 C9 04 0199*  	call vdu_load_img
048DB9             0200*  ; Missing character 33
048DB9             0201*  ; Missing character 34
048DB9             0202*  ; Missing character 35
048DB9             0203*  ; Missing character 36
048DB9             0204*  ; Missing character 37
048DB9             0205*  ; Missing character 38
048DB9             0206*  ; Missing character 39
048DB9             0207*  ; Missing character 40
048DB9             0208*  ; Missing character 41
048DB9             0209*  ; Missing character 42
048DB9             0210*  ; Missing character 43
048DB9             0211*  ; Missing character 44
048DB9             0212*  ; Missing character 45
048DB9             0213*  
048DB9 21 EB 96 04 0214*  	ld hl,Fhonda046
048DBD 11 C6 D3 04 0215*  	ld de,filedata
048DC1 01 00 00 01 0216*  	ld bc,65536
048DC5 3E 01       0217*  	ld a,mos_load
048DC7 5B CF       0218*  	RST.LIL 08h
048DC9 21 2E 11 00 0219*  	ld hl,BUF_4398
048DCD 01 05 00 00 0220*  	ld bc,5
048DD1 11 05 00 00 0221*  	ld de,5
048DD5 DD 21 19 00 0222*  	ld ix,25
       00          
048DDA CD 05 C9 04 0223*  	call vdu_load_img
048DDE             0224*  ; Missing character 47
048DDE             0225*  
048DDE 21 01 97 04 0226*  	ld hl,Fhonda048
048DE2 11 C6 D3 04 0227*  	ld de,filedata
048DE6 01 00 00 01 0228*  	ld bc,65536
048DEA 3E 01       0229*  	ld a,mos_load
048DEC 5B CF       0230*  	RST.LIL 08h
048DEE 21 30 11 00 0231*  	ld hl,BUF_4400
048DF2 01 0A 00 00 0232*  	ld bc,10
048DF6 11 12 00 00 0233*  	ld de,18
048DFA DD 21 B4 00 0234*  	ld ix,180
       00          
048DFF CD 05 C9 04 0235*  	call vdu_load_img
048E03             0236*  
048E03 21 17 97 04 0237*  	ld hl,Fhonda049
048E07 11 C6 D3 04 0238*  	ld de,filedata
048E0B 01 00 00 01 0239*  	ld bc,65536
048E0F 3E 01       0240*  	ld a,mos_load
048E11 5B CF       0241*  	RST.LIL 08h
048E13 21 31 11 00 0242*  	ld hl,BUF_4401
048E17 01 04 00 00 0243*  	ld bc,4
048E1B 11 12 00 00 0244*  	ld de,18
048E1F DD 21 48 00 0245*  	ld ix,72
       00          
048E24 CD 05 C9 04 0246*  	call vdu_load_img
048E28             0247*  
048E28 21 2D 97 04 0248*  	ld hl,Fhonda050
048E2C 11 C6 D3 04 0249*  	ld de,filedata
048E30 01 00 00 01 0250*  	ld bc,65536
048E34 3E 01       0251*  	ld a,mos_load
048E36 5B CF       0252*  	RST.LIL 08h
048E38 21 32 11 00 0253*  	ld hl,BUF_4402
048E3C 01 09 00 00 0254*  	ld bc,9
048E40 11 12 00 00 0255*  	ld de,18
048E44 DD 21 A2 00 0256*  	ld ix,162
       00          
048E49 CD 05 C9 04 0257*  	call vdu_load_img
048E4D             0258*  
048E4D 21 43 97 04 0259*  	ld hl,Fhonda051
048E51 11 C6 D3 04 0260*  	ld de,filedata
048E55 01 00 00 01 0261*  	ld bc,65536
048E59 3E 01       0262*  	ld a,mos_load
048E5B 5B CF       0263*  	RST.LIL 08h
048E5D 21 33 11 00 0264*  	ld hl,BUF_4403
048E61 01 0A 00 00 0265*  	ld bc,10
048E65 11 12 00 00 0266*  	ld de,18
048E69 DD 21 B4 00 0267*  	ld ix,180
       00          
048E6E CD 05 C9 04 0268*  	call vdu_load_img
048E72             0269*  
048E72 21 59 97 04 0270*  	ld hl,Fhonda052
048E76 11 C6 D3 04 0271*  	ld de,filedata
048E7A 01 00 00 01 0272*  	ld bc,65536
048E7E 3E 01       0273*  	ld a,mos_load
048E80 5B CF       0274*  	RST.LIL 08h
048E82 21 34 11 00 0275*  	ld hl,BUF_4404
048E86 01 0C 00 00 0276*  	ld bc,12
048E8A 11 12 00 00 0277*  	ld de,18
048E8E DD 21 D8 00 0278*  	ld ix,216
       00          
048E93 CD 05 C9 04 0279*  	call vdu_load_img
048E97             0280*  
048E97 21 6F 97 04 0281*  	ld hl,Fhonda053
048E9B 11 C6 D3 04 0282*  	ld de,filedata
048E9F 01 00 00 01 0283*  	ld bc,65536
048EA3 3E 01       0284*  	ld a,mos_load
048EA5 5B CF       0285*  	RST.LIL 08h
048EA7 21 35 11 00 0286*  	ld hl,BUF_4405
048EAB 01 0A 00 00 0287*  	ld bc,10
048EAF 11 12 00 00 0288*  	ld de,18
048EB3 DD 21 B4 00 0289*  	ld ix,180
       00          
048EB8 CD 05 C9 04 0290*  	call vdu_load_img
048EBC             0291*  
048EBC 21 85 97 04 0292*  	ld hl,Fhonda054
048EC0 11 C6 D3 04 0293*  	ld de,filedata
048EC4 01 00 00 01 0294*  	ld bc,65536
048EC8 3E 01       0295*  	ld a,mos_load
048ECA 5B CF       0296*  	RST.LIL 08h
048ECC 21 36 11 00 0297*  	ld hl,BUF_4406
048ED0 01 0A 00 00 0298*  	ld bc,10
048ED4 11 12 00 00 0299*  	ld de,18
048ED8 DD 21 B4 00 0300*  	ld ix,180
       00          
048EDD CD 05 C9 04 0301*  	call vdu_load_img
048EE1             0302*  
048EE1 21 9B 97 04 0303*  	ld hl,Fhonda055
048EE5 11 C6 D3 04 0304*  	ld de,filedata
048EE9 01 00 00 01 0305*  	ld bc,65536
048EED 3E 01       0306*  	ld a,mos_load
048EEF 5B CF       0307*  	RST.LIL 08h
048EF1 21 37 11 00 0308*  	ld hl,BUF_4407
048EF5 01 08 00 00 0309*  	ld bc,8
048EF9 11 12 00 00 0310*  	ld de,18
048EFD DD 21 90 00 0311*  	ld ix,144
       00          
048F02 CD 05 C9 04 0312*  	call vdu_load_img
048F06             0313*  
048F06 21 B1 97 04 0314*  	ld hl,Fhonda056
048F0A 11 C6 D3 04 0315*  	ld de,filedata
048F0E 01 00 00 01 0316*  	ld bc,65536
048F12 3E 01       0317*  	ld a,mos_load
048F14 5B CF       0318*  	RST.LIL 08h
048F16 21 38 11 00 0319*  	ld hl,BUF_4408
048F1A 01 0A 00 00 0320*  	ld bc,10
048F1E 11 12 00 00 0321*  	ld de,18
048F22 DD 21 B4 00 0322*  	ld ix,180
       00          
048F27 CD 05 C9 04 0323*  	call vdu_load_img
048F2B             0324*  
048F2B 21 C7 97 04 0325*  	ld hl,Fhonda057
048F2F 11 C6 D3 04 0326*  	ld de,filedata
048F33 01 00 00 01 0327*  	ld bc,65536
048F37 3E 01       0328*  	ld a,mos_load
048F39 5B CF       0329*  	RST.LIL 08h
048F3B 21 39 11 00 0330*  	ld hl,BUF_4409
048F3F 01 0A 00 00 0331*  	ld bc,10
048F43 11 12 00 00 0332*  	ld de,18
048F47 DD 21 B4 00 0333*  	ld ix,180
       00          
048F4C CD 05 C9 04 0334*  	call vdu_load_img
048F50             0335*  ; Missing character 58
048F50             0336*  ; Missing character 59
048F50             0337*  ; Missing character 60
048F50             0338*  ; Missing character 61
048F50             0339*  ; Missing character 62
048F50             0340*  ; Missing character 63
048F50             0341*  ; Missing character 64
048F50             0342*  
048F50 21 DD 97 04 0343*  	ld hl,Fhonda065
048F54 11 C6 D3 04 0344*  	ld de,filedata
048F58 01 00 00 01 0345*  	ld bc,65536
048F5C 3E 01       0346*  	ld a,mos_load
048F5E 5B CF       0347*  	RST.LIL 08h
048F60 21 41 11 00 0348*  	ld hl,BUF_4417
048F64 01 0A 00 00 0349*  	ld bc,10
048F68 11 12 00 00 0350*  	ld de,18
048F6C DD 21 B4 00 0351*  	ld ix,180
       00          
048F71 CD 05 C9 04 0352*  	call vdu_load_img
048F75             0353*  
048F75 21 F3 97 04 0354*  	ld hl,Fhonda066
048F79 11 C6 D3 04 0355*  	ld de,filedata
048F7D 01 00 00 01 0356*  	ld bc,65536
048F81 3E 01       0357*  	ld a,mos_load
048F83 5B CF       0358*  	RST.LIL 08h
048F85 21 42 11 00 0359*  	ld hl,BUF_4418
048F89 01 0A 00 00 0360*  	ld bc,10
048F8D 11 12 00 00 0361*  	ld de,18
048F91 DD 21 B4 00 0362*  	ld ix,180
       00          
048F96 CD 05 C9 04 0363*  	call vdu_load_img
048F9A             0364*  
048F9A 21 09 98 04 0365*  	ld hl,Fhonda067
048F9E 11 C6 D3 04 0366*  	ld de,filedata
048FA2 01 00 00 01 0367*  	ld bc,65536
048FA6 3E 01       0368*  	ld a,mos_load
048FA8 5B CF       0369*  	RST.LIL 08h
048FAA 21 43 11 00 0370*  	ld hl,BUF_4419
048FAE 01 08 00 00 0371*  	ld bc,8
048FB2 11 13 00 00 0372*  	ld de,19
048FB6 DD 21 98 00 0373*  	ld ix,152
       00          
048FBB CD 05 C9 04 0374*  	call vdu_load_img
048FBF             0375*  
048FBF 21 1F 98 04 0376*  	ld hl,Fhonda068
048FC3 11 C6 D3 04 0377*  	ld de,filedata
048FC7 01 00 00 01 0378*  	ld bc,65536
048FCB 3E 01       0379*  	ld a,mos_load
048FCD 5B CF       0380*  	RST.LIL 08h
048FCF 21 44 11 00 0381*  	ld hl,BUF_4420
048FD3 01 0A 00 00 0382*  	ld bc,10
048FD7 11 12 00 00 0383*  	ld de,18
048FDB DD 21 B4 00 0384*  	ld ix,180
       00          
048FE0 CD 05 C9 04 0385*  	call vdu_load_img
048FE4             0386*  
048FE4 21 35 98 04 0387*  	ld hl,Fhonda069
048FE8 11 C6 D3 04 0388*  	ld de,filedata
048FEC 01 00 00 01 0389*  	ld bc,65536
048FF0 3E 01       0390*  	ld a,mos_load
048FF2 5B CF       0391*  	RST.LIL 08h
048FF4 21 45 11 00 0392*  	ld hl,BUF_4421
048FF8 01 08 00 00 0393*  	ld bc,8
048FFC 11 12 00 00 0394*  	ld de,18
049000 DD 21 90 00 0395*  	ld ix,144
       00          
049005 CD 05 C9 04 0396*  	call vdu_load_img
049009             0397*  
049009 21 4B 98 04 0398*  	ld hl,Fhonda070
04900D 11 C6 D3 04 0399*  	ld de,filedata
049011 01 00 00 01 0400*  	ld bc,65536
049015 3E 01       0401*  	ld a,mos_load
049017 5B CF       0402*  	RST.LIL 08h
049019 21 46 11 00 0403*  	ld hl,BUF_4422
04901D 01 08 00 00 0404*  	ld bc,8
049021 11 12 00 00 0405*  	ld de,18
049025 DD 21 90 00 0406*  	ld ix,144
       00          
04902A CD 05 C9 04 0407*  	call vdu_load_img
04902E             0408*  
04902E 21 61 98 04 0409*  	ld hl,Fhonda071
049032 11 C6 D3 04 0410*  	ld de,filedata
049036 01 00 00 01 0411*  	ld bc,65536
04903A 3E 01       0412*  	ld a,mos_load
04903C 5B CF       0413*  	RST.LIL 08h
04903E 21 47 11 00 0414*  	ld hl,BUF_4423
049042 01 0A 00 00 0415*  	ld bc,10
049046 11 12 00 00 0416*  	ld de,18
04904A DD 21 B4 00 0417*  	ld ix,180
       00          
04904F CD 05 C9 04 0418*  	call vdu_load_img
049053             0419*  
049053 21 77 98 04 0420*  	ld hl,Fhonda072
049057 11 C6 D3 04 0421*  	ld de,filedata
04905B 01 00 00 01 0422*  	ld bc,65536
04905F 3E 01       0423*  	ld a,mos_load
049061 5B CF       0424*  	RST.LIL 08h
049063 21 48 11 00 0425*  	ld hl,BUF_4424
049067 01 0A 00 00 0426*  	ld bc,10
04906B 11 12 00 00 0427*  	ld de,18
04906F DD 21 B4 00 0428*  	ld ix,180
       00          
049074 CD 05 C9 04 0429*  	call vdu_load_img
049078             0430*  
049078 21 8D 98 04 0431*  	ld hl,Fhonda073
04907C 11 C6 D3 04 0432*  	ld de,filedata
049080 01 00 00 01 0433*  	ld bc,65536
049084 3E 01       0434*  	ld a,mos_load
049086 5B CF       0435*  	RST.LIL 08h
049088 21 49 11 00 0436*  	ld hl,BUF_4425
04908C 01 03 00 00 0437*  	ld bc,3
049090 11 12 00 00 0438*  	ld de,18
049094 DD 21 36 00 0439*  	ld ix,54
       00          
049099 CD 05 C9 04 0440*  	call vdu_load_img
04909D             0441*  
04909D 21 A3 98 04 0442*  	ld hl,Fhonda074
0490A1 11 C6 D3 04 0443*  	ld de,filedata
0490A5 01 00 00 01 0444*  	ld bc,65536
0490A9 3E 01       0445*  	ld a,mos_load
0490AB 5B CF       0446*  	RST.LIL 08h
0490AD 21 4A 11 00 0447*  	ld hl,BUF_4426
0490B1 01 06 00 00 0448*  	ld bc,6
0490B5 11 12 00 00 0449*  	ld de,18
0490B9 DD 21 6C 00 0450*  	ld ix,108
       00          
0490BE CD 05 C9 04 0451*  	call vdu_load_img
0490C2             0452*  
0490C2 21 B9 98 04 0453*  	ld hl,Fhonda075
0490C6 11 C6 D3 04 0454*  	ld de,filedata
0490CA 01 00 00 01 0455*  	ld bc,65536
0490CE 3E 01       0456*  	ld a,mos_load
0490D0 5B CF       0457*  	RST.LIL 08h
0490D2 21 4B 11 00 0458*  	ld hl,BUF_4427
0490D6 01 0A 00 00 0459*  	ld bc,10
0490DA 11 12 00 00 0460*  	ld de,18
0490DE DD 21 B4 00 0461*  	ld ix,180
       00          
0490E3 CD 05 C9 04 0462*  	call vdu_load_img
0490E7             0463*  
0490E7 21 CF 98 04 0464*  	ld hl,Fhonda076
0490EB 11 C6 D3 04 0465*  	ld de,filedata
0490EF 01 00 00 01 0466*  	ld bc,65536
0490F3 3E 01       0467*  	ld a,mos_load
0490F5 5B CF       0468*  	RST.LIL 08h
0490F7 21 4C 11 00 0469*  	ld hl,BUF_4428
0490FB 01 08 00 00 0470*  	ld bc,8
0490FF 11 12 00 00 0471*  	ld de,18
049103 DD 21 90 00 0472*  	ld ix,144
       00          
049108 CD 05 C9 04 0473*  	call vdu_load_img
04910C             0474*  
04910C 21 E5 98 04 0475*  	ld hl,Fhonda077
049110 11 C6 D3 04 0476*  	ld de,filedata
049114 01 00 00 01 0477*  	ld bc,65536
049118 3E 01       0478*  	ld a,mos_load
04911A 5B CF       0479*  	RST.LIL 08h
04911C 21 4D 11 00 0480*  	ld hl,BUF_4429
049120 01 0E 00 00 0481*  	ld bc,14
049124 11 12 00 00 0482*  	ld de,18
049128 DD 21 FC 00 0483*  	ld ix,252
       00          
04912D CD 05 C9 04 0484*  	call vdu_load_img
049131             0485*  
049131 21 FB 98 04 0486*  	ld hl,Fhonda078
049135 11 C6 D3 04 0487*  	ld de,filedata
049139 01 00 00 01 0488*  	ld bc,65536
04913D 3E 01       0489*  	ld a,mos_load
04913F 5B CF       0490*  	RST.LIL 08h
049141 21 4E 11 00 0491*  	ld hl,BUF_4430
049145 01 0A 00 00 0492*  	ld bc,10
049149 11 12 00 00 0493*  	ld de,18
04914D DD 21 B4 00 0494*  	ld ix,180
       00          
049152 CD 05 C9 04 0495*  	call vdu_load_img
049156             0496*  
049156 21 11 99 04 0497*  	ld hl,Fhonda079
04915A 11 C6 D3 04 0498*  	ld de,filedata
04915E 01 00 00 01 0499*  	ld bc,65536
049162 3E 01       0500*  	ld a,mos_load
049164 5B CF       0501*  	RST.LIL 08h
049166 21 4F 11 00 0502*  	ld hl,BUF_4431
04916A 01 0A 00 00 0503*  	ld bc,10
04916E 11 12 00 00 0504*  	ld de,18
049172 DD 21 B4 00 0505*  	ld ix,180
       00          
049177 CD 05 C9 04 0506*  	call vdu_load_img
04917B             0507*  
04917B 21 27 99 04 0508*  	ld hl,Fhonda080
04917F 11 C6 D3 04 0509*  	ld de,filedata
049183 01 00 00 01 0510*  	ld bc,65536
049187 3E 01       0511*  	ld a,mos_load
049189 5B CF       0512*  	RST.LIL 08h
04918B 21 50 11 00 0513*  	ld hl,BUF_4432
04918F 01 0A 00 00 0514*  	ld bc,10
049193 11 12 00 00 0515*  	ld de,18
049197 DD 21 B4 00 0516*  	ld ix,180
       00          
04919C CD 05 C9 04 0517*  	call vdu_load_img
0491A0             0518*  
0491A0 21 3D 99 04 0519*  	ld hl,Fhonda081
0491A4 11 C6 D3 04 0520*  	ld de,filedata
0491A8 01 00 00 01 0521*  	ld bc,65536
0491AC 3E 01       0522*  	ld a,mos_load
0491AE 5B CF       0523*  	RST.LIL 08h
0491B0 21 51 11 00 0524*  	ld hl,BUF_4433
0491B4 01 0A 00 00 0525*  	ld bc,10
0491B8 11 15 00 00 0526*  	ld de,21
0491BC DD 21 D2 00 0527*  	ld ix,210
       00          
0491C1 CD 05 C9 04 0528*  	call vdu_load_img
0491C5             0529*  
0491C5 21 53 99 04 0530*  	ld hl,Fhonda082
0491C9 11 C6 D3 04 0531*  	ld de,filedata
0491CD 01 00 00 01 0532*  	ld bc,65536
0491D1 3E 01       0533*  	ld a,mos_load
0491D3 5B CF       0534*  	RST.LIL 08h
0491D5 21 52 11 00 0535*  	ld hl,BUF_4434
0491D9 01 0A 00 00 0536*  	ld bc,10
0491DD 11 12 00 00 0537*  	ld de,18
0491E1 DD 21 B4 00 0538*  	ld ix,180
       00          
0491E6 CD 05 C9 04 0539*  	call vdu_load_img
0491EA             0540*  
0491EA 21 69 99 04 0541*  	ld hl,Fhonda083
0491EE 11 C6 D3 04 0542*  	ld de,filedata
0491F2 01 00 00 01 0543*  	ld bc,65536
0491F6 3E 01       0544*  	ld a,mos_load
0491F8 5B CF       0545*  	RST.LIL 08h
0491FA 21 53 11 00 0546*  	ld hl,BUF_4435
0491FE 01 09 00 00 0547*  	ld bc,9
049202 11 13 00 00 0548*  	ld de,19
049206 DD 21 AB 00 0549*  	ld ix,171
       00          
04920B CD 05 C9 04 0550*  	call vdu_load_img
04920F             0551*  
04920F 21 7F 99 04 0552*  	ld hl,Fhonda084
049213 11 C6 D3 04 0553*  	ld de,filedata
049217 01 00 00 01 0554*  	ld bc,65536
04921B 3E 01       0555*  	ld a,mos_load
04921D 5B CF       0556*  	RST.LIL 08h
04921F 21 54 11 00 0557*  	ld hl,BUF_4436
049223 01 0A 00 00 0558*  	ld bc,10
049227 11 12 00 00 0559*  	ld de,18
04922B DD 21 B4 00 0560*  	ld ix,180
       00          
049230 CD 05 C9 04 0561*  	call vdu_load_img
049234             0562*  
049234 21 95 99 04 0563*  	ld hl,Fhonda085
049238 11 C6 D3 04 0564*  	ld de,filedata
04923C 01 00 00 01 0565*  	ld bc,65536
049240 3E 01       0566*  	ld a,mos_load
049242 5B CF       0567*  	RST.LIL 08h
049244 21 55 11 00 0568*  	ld hl,BUF_4437
049248 01 0A 00 00 0569*  	ld bc,10
04924C 11 12 00 00 0570*  	ld de,18
049250 DD 21 B4 00 0571*  	ld ix,180
       00          
049255 CD 05 C9 04 0572*  	call vdu_load_img
049259             0573*  
049259 21 AB 99 04 0574*  	ld hl,Fhonda086
04925D 11 C6 D3 04 0575*  	ld de,filedata
049261 01 00 00 01 0576*  	ld bc,65536
049265 3E 01       0577*  	ld a,mos_load
049267 5B CF       0578*  	RST.LIL 08h
049269 21 56 11 00 0579*  	ld hl,BUF_4438
04926D 01 0A 00 00 0580*  	ld bc,10
049271 11 12 00 00 0581*  	ld de,18
049275 DD 21 B4 00 0582*  	ld ix,180
       00          
04927A CD 05 C9 04 0583*  	call vdu_load_img
04927E             0584*  
04927E 21 C1 99 04 0585*  	ld hl,Fhonda087
049282 11 C6 D3 04 0586*  	ld de,filedata
049286 01 00 00 01 0587*  	ld bc,65536
04928A 3E 01       0588*  	ld a,mos_load
04928C 5B CF       0589*  	RST.LIL 08h
04928E 21 57 11 00 0590*  	ld hl,BUF_4439
049292 01 10 00 00 0591*  	ld bc,16
049296 11 12 00 00 0592*  	ld de,18
04929A DD 21 20 01 0593*  	ld ix,288
       00          
04929F CD 05 C9 04 0594*  	call vdu_load_img
0492A3             0595*  
0492A3 21 D7 99 04 0596*  	ld hl,Fhonda088
0492A7 11 C6 D3 04 0597*  	ld de,filedata
0492AB 01 00 00 01 0598*  	ld bc,65536
0492AF 3E 01       0599*  	ld a,mos_load
0492B1 5B CF       0600*  	RST.LIL 08h
0492B3 21 58 11 00 0601*  	ld hl,BUF_4440
0492B7 01 0A 00 00 0602*  	ld bc,10
0492BB 11 12 00 00 0603*  	ld de,18
0492BF DD 21 B4 00 0604*  	ld ix,180
       00          
0492C4 CD 05 C9 04 0605*  	call vdu_load_img
0492C8             0606*  
0492C8 21 ED 99 04 0607*  	ld hl,Fhonda089
0492CC 11 C6 D3 04 0608*  	ld de,filedata
0492D0 01 00 00 01 0609*  	ld bc,65536
0492D4 3E 01       0610*  	ld a,mos_load
0492D6 5B CF       0611*  	RST.LIL 08h
0492D8 21 59 11 00 0612*  	ld hl,BUF_4441
0492DC 01 0A 00 00 0613*  	ld bc,10
0492E0 11 12 00 00 0614*  	ld de,18
0492E4 DD 21 B4 00 0615*  	ld ix,180
       00          
0492E9 CD 05 C9 04 0616*  	call vdu_load_img
0492ED             0617*  
0492ED 21 03 9A 04 0618*  	ld hl,Fhonda090
0492F1 11 C6 D3 04 0619*  	ld de,filedata
0492F5 01 00 00 01 0620*  	ld bc,65536
0492F9 3E 01       0621*  	ld a,mos_load
0492FB 5B CF       0622*  	RST.LIL 08h
0492FD 21 5A 11 00 0623*  	ld hl,BUF_4442
049301 01 09 00 00 0624*  	ld bc,9
049305 11 12 00 00 0625*  	ld de,18
049309 DD 21 A2 00 0626*  	ld ix,162
       00          
04930E CD 05 C9 04 0627*  	call vdu_load_img
049312             0628*  ; Missing character 91
049312             0629*  ; Missing character 92
049312             0630*  ; Missing character 93
049312             0631*  ; Missing character 94
049312             0632*  ; Missing character 95
049312             0633*  ; Missing character 96
049312             0634*  
049312 21 19 9A 04 0635*  	ld hl,Fhonda097
049316 11 C6 D3 04 0636*  	ld de,filedata
04931A 01 00 00 01 0637*  	ld bc,65536
04931E 3E 01       0638*  	ld a,mos_load
049320 5B CF       0639*  	RST.LIL 08h
049322 21 61 11 00 0640*  	ld hl,BUF_4449
049326 01 08 00 00 0641*  	ld bc,8
04932A 11 0C 00 00 0642*  	ld de,12
04932E DD 21 60 00 0643*  	ld ix,96
       00          
049333 CD 05 C9 04 0644*  	call vdu_load_img
049337             0645*  
049337 21 2F 9A 04 0646*  	ld hl,Fhonda098
04933B 11 C6 D3 04 0647*  	ld de,filedata
04933F 01 00 00 01 0648*  	ld bc,65536
049343 3E 01       0649*  	ld a,mos_load
049345 5B CF       0650*  	RST.LIL 08h
049347 21 62 11 00 0651*  	ld hl,BUF_4450
04934B 01 09 00 00 0652*  	ld bc,9
04934F 11 12 00 00 0653*  	ld de,18
049353 DD 21 A2 00 0654*  	ld ix,162
       00          
049358 CD 05 C9 04 0655*  	call vdu_load_img
04935C             0656*  
04935C 21 45 9A 04 0657*  	ld hl,Fhonda099
049360 11 C6 D3 04 0658*  	ld de,filedata
049364 01 00 00 01 0659*  	ld bc,65536
049368 3E 01       0660*  	ld a,mos_load
04936A 5B CF       0661*  	RST.LIL 08h
04936C 21 63 11 00 0662*  	ld hl,BUF_4451
049370 01 07 00 00 0663*  	ld bc,7
049374 11 0C 00 00 0664*  	ld de,12
049378 DD 21 54 00 0665*  	ld ix,84
       00          
04937D CD 05 C9 04 0666*  	call vdu_load_img
049381             0667*  
049381 21 5B 9A 04 0668*  	ld hl,Fhonda100
049385 11 C6 D3 04 0669*  	ld de,filedata
049389 01 00 00 01 0670*  	ld bc,65536
04938D 3E 01       0671*  	ld a,mos_load
04938F 5B CF       0672*  	RST.LIL 08h
049391 21 64 11 00 0673*  	ld hl,BUF_4452
049395 01 09 00 00 0674*  	ld bc,9
049399 11 12 00 00 0675*  	ld de,18
04939D DD 21 A2 00 0676*  	ld ix,162
       00          
0493A2 CD 05 C9 04 0677*  	call vdu_load_img
0493A6             0678*  
0493A6 21 71 9A 04 0679*  	ld hl,Fhonda101
0493AA 11 C6 D3 04 0680*  	ld de,filedata
0493AE 01 00 00 01 0681*  	ld bc,65536
0493B2 3E 01       0682*  	ld a,mos_load
0493B4 5B CF       0683*  	RST.LIL 08h
0493B6 21 65 11 00 0684*  	ld hl,BUF_4453
0493BA 01 08 00 00 0685*  	ld bc,8
0493BE 11 0C 00 00 0686*  	ld de,12
0493C2 DD 21 60 00 0687*  	ld ix,96
       00          
0493C7 CD 05 C9 04 0688*  	call vdu_load_img
0493CB             0689*  
0493CB 21 87 9A 04 0690*  	ld hl,Fhonda102
0493CF 11 C6 D3 04 0691*  	ld de,filedata
0493D3 01 00 00 01 0692*  	ld bc,65536
0493D7 3E 01       0693*  	ld a,mos_load
0493D9 5B CF       0694*  	RST.LIL 08h
0493DB 21 66 11 00 0695*  	ld hl,BUF_4454
0493DF 01 09 00 00 0696*  	ld bc,9
0493E3 11 12 00 00 0697*  	ld de,18
0493E7 DD 21 A2 00 0698*  	ld ix,162
       00          
0493EC CD 05 C9 04 0699*  	call vdu_load_img
0493F0             0700*  
0493F0 21 9D 9A 04 0701*  	ld hl,Fhonda103
0493F4 11 C6 D3 04 0702*  	ld de,filedata
0493F8 01 00 00 01 0703*  	ld bc,65536
0493FC 3E 01       0704*  	ld a,mos_load
0493FE 5B CF       0705*  	RST.LIL 08h
049400 21 67 11 00 0706*  	ld hl,BUF_4455
049404 01 09 00 00 0707*  	ld bc,9
049408 11 12 00 00 0708*  	ld de,18
04940C DD 21 A2 00 0709*  	ld ix,162
       00          
049411 CD 05 C9 04 0710*  	call vdu_load_img
049415             0711*  
049415 21 B3 9A 04 0712*  	ld hl,Fhonda104
049419 11 C6 D3 04 0713*  	ld de,filedata
04941D 01 00 00 01 0714*  	ld bc,65536
049421 3E 01       0715*  	ld a,mos_load
049423 5B CF       0716*  	RST.LIL 08h
049425 21 68 11 00 0717*  	ld hl,BUF_4456
049429 01 09 00 00 0718*  	ld bc,9
04942D 11 12 00 00 0719*  	ld de,18
049431 DD 21 A2 00 0720*  	ld ix,162
       00          
049436 CD 05 C9 04 0721*  	call vdu_load_img
04943A             0722*  
04943A 21 C9 9A 04 0723*  	ld hl,Fhonda105
04943E 11 C6 D3 04 0724*  	ld de,filedata
049442 01 00 00 01 0725*  	ld bc,65536
049446 3E 01       0726*  	ld a,mos_load
049448 5B CF       0727*  	RST.LIL 08h
04944A 21 69 11 00 0728*  	ld hl,BUF_4457
04944E 01 04 00 00 0729*  	ld bc,4
049452 11 12 00 00 0730*  	ld de,18
049456 DD 21 48 00 0731*  	ld ix,72
       00          
04945B CD 05 C9 04 0732*  	call vdu_load_img
04945F             0733*  
04945F 21 DF 9A 04 0734*  	ld hl,Fhonda106
049463 11 C6 D3 04 0735*  	ld de,filedata
049467 01 00 00 01 0736*  	ld bc,65536
04946B 3E 01       0737*  	ld a,mos_load
04946D 5B CF       0738*  	RST.LIL 08h
04946F 21 6A 11 00 0739*  	ld hl,BUF_4458
049473 01 08 00 00 0740*  	ld bc,8
049477 11 18 00 00 0741*  	ld de,24
04947B DD 21 C0 00 0742*  	ld ix,192
       00          
049480 CD 05 C9 04 0743*  	call vdu_load_img
049484             0744*  
049484 21 F5 9A 04 0745*  	ld hl,Fhonda107
049488 11 C6 D3 04 0746*  	ld de,filedata
04948C 01 00 00 01 0747*  	ld bc,65536
049490 3E 01       0748*  	ld a,mos_load
049492 5B CF       0749*  	RST.LIL 08h
049494 21 6B 11 00 0750*  	ld hl,BUF_4459
049498 01 09 00 00 0751*  	ld bc,9
04949C 11 12 00 00 0752*  	ld de,18
0494A0 DD 21 A2 00 0753*  	ld ix,162
       00          
0494A5 CD 05 C9 04 0754*  	call vdu_load_img
0494A9             0755*  
0494A9 21 0B 9B 04 0756*  	ld hl,Fhonda108
0494AD 11 C6 D3 04 0757*  	ld de,filedata
0494B1 01 00 00 01 0758*  	ld bc,65536
0494B5 3E 01       0759*  	ld a,mos_load
0494B7 5B CF       0760*  	RST.LIL 08h
0494B9 21 6C 11 00 0761*  	ld hl,BUF_4460
0494BD 01 03 00 00 0762*  	ld bc,3
0494C1 11 12 00 00 0763*  	ld de,18
0494C5 DD 21 36 00 0764*  	ld ix,54
       00          
0494CA CD 05 C9 04 0765*  	call vdu_load_img
0494CE             0766*  
0494CE 21 21 9B 04 0767*  	ld hl,Fhonda109
0494D2 11 C6 D3 04 0768*  	ld de,filedata
0494D6 01 00 00 01 0769*  	ld bc,65536
0494DA 3E 01       0770*  	ld a,mos_load
0494DC 5B CF       0771*  	RST.LIL 08h
0494DE 21 6D 11 00 0772*  	ld hl,BUF_4461
0494E2 01 0E 00 00 0773*  	ld bc,14
0494E6 11 0D 00 00 0774*  	ld de,13
0494EA DD 21 B6 00 0775*  	ld ix,182
       00          
0494EF CD 05 C9 04 0776*  	call vdu_load_img
0494F3             0777*  
0494F3 21 37 9B 04 0778*  	ld hl,Fhonda110
0494F7 11 C6 D3 04 0779*  	ld de,filedata
0494FB 01 00 00 01 0780*  	ld bc,65536
0494FF 3E 01       0781*  	ld a,mos_load
049501 5B CF       0782*  	RST.LIL 08h
049503 21 6E 11 00 0783*  	ld hl,BUF_4462
049507 01 09 00 00 0784*  	ld bc,9
04950B 11 0C 00 00 0785*  	ld de,12
04950F DD 21 6C 00 0786*  	ld ix,108
       00          
049514 CD 05 C9 04 0787*  	call vdu_load_img
049518             0788*  
049518 21 4D 9B 04 0789*  	ld hl,Fhonda111
04951C 11 C6 D3 04 0790*  	ld de,filedata
049520 01 00 00 01 0791*  	ld bc,65536
049524 3E 01       0792*  	ld a,mos_load
049526 5B CF       0793*  	RST.LIL 08h
049528 21 6F 11 00 0794*  	ld hl,BUF_4463
04952C 01 09 00 00 0795*  	ld bc,9
049530 11 0C 00 00 0796*  	ld de,12
049534 DD 21 6C 00 0797*  	ld ix,108
       00          
049539 CD 05 C9 04 0798*  	call vdu_load_img
04953D             0799*  
04953D 21 63 9B 04 0800*  	ld hl,Fhonda112
049541 11 C6 D3 04 0801*  	ld de,filedata
049545 01 00 00 01 0802*  	ld bc,65536
049549 3E 01       0803*  	ld a,mos_load
04954B 5B CF       0804*  	RST.LIL 08h
04954D 21 70 11 00 0805*  	ld hl,BUF_4464
049551 01 09 00 00 0806*  	ld bc,9
049555 11 12 00 00 0807*  	ld de,18
049559 DD 21 A2 00 0808*  	ld ix,162
       00          
04955E CD 05 C9 04 0809*  	call vdu_load_img
049562             0810*  
049562 21 79 9B 04 0811*  	ld hl,Fhonda113
049566 11 C6 D3 04 0812*  	ld de,filedata
04956A 01 00 00 01 0813*  	ld bc,65536
04956E 3E 01       0814*  	ld a,mos_load
049570 5B CF       0815*  	RST.LIL 08h
049572 21 71 11 00 0816*  	ld hl,BUF_4465
049576 01 09 00 00 0817*  	ld bc,9
04957A 11 12 00 00 0818*  	ld de,18
04957E DD 21 A2 00 0819*  	ld ix,162
       00          
049583 CD 05 C9 04 0820*  	call vdu_load_img
049587             0821*  
049587 21 8F 9B 04 0822*  	ld hl,Fhonda114
04958B 11 C6 D3 04 0823*  	ld de,filedata
04958F 01 00 00 01 0824*  	ld bc,65536
049593 3E 01       0825*  	ld a,mos_load
049595 5B CF       0826*  	RST.LIL 08h
049597 21 72 11 00 0827*  	ld hl,BUF_4466
04959B 01 06 00 00 0828*  	ld bc,6
04959F 11 0D 00 00 0829*  	ld de,13
0495A3 DD 21 4E 00 0830*  	ld ix,78
       00          
0495A8 CD 05 C9 04 0831*  	call vdu_load_img
0495AC             0832*  
0495AC 21 A5 9B 04 0833*  	ld hl,Fhonda115
0495B0 11 C6 D3 04 0834*  	ld de,filedata
0495B4 01 00 00 01 0835*  	ld bc,65536
0495B8 3E 01       0836*  	ld a,mos_load
0495BA 5B CF       0837*  	RST.LIL 08h
0495BC 21 73 11 00 0838*  	ld hl,BUF_4467
0495C0 01 08 00 00 0839*  	ld bc,8
0495C4 11 0D 00 00 0840*  	ld de,13
0495C8 DD 21 68 00 0841*  	ld ix,104
       00          
0495CD CD 05 C9 04 0842*  	call vdu_load_img
0495D1             0843*  
0495D1 21 BB 9B 04 0844*  	ld hl,Fhonda116
0495D5 11 C6 D3 04 0845*  	ld de,filedata
0495D9 01 00 00 01 0846*  	ld bc,65536
0495DD 3E 01       0847*  	ld a,mos_load
0495DF 5B CF       0848*  	RST.LIL 08h
0495E1 21 74 11 00 0849*  	ld hl,BUF_4468
0495E5 01 07 00 00 0850*  	ld bc,7
0495E9 11 0F 00 00 0851*  	ld de,15
0495ED DD 21 69 00 0852*  	ld ix,105
       00          
0495F2 CD 05 C9 04 0853*  	call vdu_load_img
0495F6             0854*  
0495F6 21 D1 9B 04 0855*  	ld hl,Fhonda117
0495FA 11 C6 D3 04 0856*  	ld de,filedata
0495FE 01 00 00 01 0857*  	ld bc,65536
049602 3E 01       0858*  	ld a,mos_load
049604 5B CF       0859*  	RST.LIL 08h
049606 21 75 11 00 0860*  	ld hl,BUF_4469
04960A 01 09 00 00 0861*  	ld bc,9
04960E 11 0C 00 00 0862*  	ld de,12
049612 DD 21 6C 00 0863*  	ld ix,108
       00          
049617 CD 05 C9 04 0864*  	call vdu_load_img
04961B             0865*  
04961B 21 E7 9B 04 0866*  	ld hl,Fhonda118
04961F 11 C6 D3 04 0867*  	ld de,filedata
049623 01 00 00 01 0868*  	ld bc,65536
049627 3E 01       0869*  	ld a,mos_load
049629 5B CF       0870*  	RST.LIL 08h
04962B 21 76 11 00 0871*  	ld hl,BUF_4470
04962F 01 09 00 00 0872*  	ld bc,9
049633 11 0C 00 00 0873*  	ld de,12
049637 DD 21 6C 00 0874*  	ld ix,108
       00          
04963C CD 05 C9 04 0875*  	call vdu_load_img
049640             0876*  
049640 21 FD 9B 04 0877*  	ld hl,Fhonda119
049644 11 C6 D3 04 0878*  	ld de,filedata
049648 01 00 00 01 0879*  	ld bc,65536
04964C 3E 01       0880*  	ld a,mos_load
04964E 5B CF       0881*  	RST.LIL 08h
049650 21 77 11 00 0882*  	ld hl,BUF_4471
049654 01 0E 00 00 0883*  	ld bc,14
049658 11 0C 00 00 0884*  	ld de,12
04965C DD 21 A8 00 0885*  	ld ix,168
       00          
049661 CD 05 C9 04 0886*  	call vdu_load_img
049665             0887*  
049665 21 13 9C 04 0888*  	ld hl,Fhonda120
049669 11 C6 D3 04 0889*  	ld de,filedata
04966D 01 00 00 01 0890*  	ld bc,65536
049671 3E 01       0891*  	ld a,mos_load
049673 5B CF       0892*  	RST.LIL 08h
049675 21 78 11 00 0893*  	ld hl,BUF_4472
049679 01 09 00 00 0894*  	ld bc,9
04967D 11 0C 00 00 0895*  	ld de,12
049681 DD 21 6C 00 0896*  	ld ix,108
       00          
049686 CD 05 C9 04 0897*  	call vdu_load_img
04968A             0898*  
04968A 21 29 9C 04 0899*  	ld hl,Fhonda121
04968E 11 C6 D3 04 0900*  	ld de,filedata
049692 01 00 00 01 0901*  	ld bc,65536
049696 3E 01       0902*  	ld a,mos_load
049698 5B CF       0903*  	RST.LIL 08h
04969A 21 79 11 00 0904*  	ld hl,BUF_4473
04969E 01 09 00 00 0905*  	ld bc,9
0496A2 11 11 00 00 0906*  	ld de,17
0496A6 DD 21 99 00 0907*  	ld ix,153
       00          
0496AB CD 05 C9 04 0908*  	call vdu_load_img
0496AF             0909*  
0496AF 21 3F 9C 04 0910*  	ld hl,Fhonda122
0496B3 11 C6 D3 04 0911*  	ld de,filedata
0496B7 01 00 00 01 0912*  	ld bc,65536
0496BB 3E 01       0913*  	ld a,mos_load
0496BD 5B CF       0914*  	RST.LIL 08h
0496BF 21 7A 11 00 0915*  	ld hl,BUF_4474
0496C3 01 09 00 00 0916*  	ld bc,9
0496C7 11 0C 00 00 0917*  	ld de,12
0496CB DD 21 6C 00 0918*  	ld ix,108
       00          
0496D0 CD 05 C9 04 0919*  	call vdu_load_img
0496D4             0920*  
0496D4 C9          0921*  	ret
0496D5             0922*  
0496D5 66 6F 6E 74 0923*  Fhonda032: db "fonts/honda/032.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 33 32 2E 
       72 67 62 61 
       32 00       
0496EB 66 6F 6E 74 0924*  Fhonda046: db "fonts/honda/046.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 36 2E 
       72 67 62 61 
       32 00       
049701 66 6F 6E 74 0925*  Fhonda048: db "fonts/honda/048.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 38 2E 
       72 67 62 61 
       32 00       
049717 66 6F 6E 74 0926*  Fhonda049: db "fonts/honda/049.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 39 2E 
       72 67 62 61 
       32 00       
04972D 66 6F 6E 74 0927*  Fhonda050: db "fonts/honda/050.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 30 2E 
       72 67 62 61 
       32 00       
049743 66 6F 6E 74 0928*  Fhonda051: db "fonts/honda/051.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 31 2E 
       72 67 62 61 
       32 00       
049759 66 6F 6E 74 0929*  Fhonda052: db "fonts/honda/052.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 32 2E 
       72 67 62 61 
       32 00       
04976F 66 6F 6E 74 0930*  Fhonda053: db "fonts/honda/053.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 33 2E 
       72 67 62 61 
       32 00       
049785 66 6F 6E 74 0931*  Fhonda054: db "fonts/honda/054.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 34 2E 
       72 67 62 61 
       32 00       
04979B 66 6F 6E 74 0932*  Fhonda055: db "fonts/honda/055.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 35 2E 
       72 67 62 61 
       32 00       
0497B1 66 6F 6E 74 0933*  Fhonda056: db "fonts/honda/056.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 36 2E 
       72 67 62 61 
       32 00       
0497C7 66 6F 6E 74 0934*  Fhonda057: db "fonts/honda/057.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 37 2E 
       72 67 62 61 
       32 00       
0497DD 66 6F 6E 74 0935*  Fhonda065: db "fonts/honda/065.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 35 2E 
       72 67 62 61 
       32 00       
0497F3 66 6F 6E 74 0936*  Fhonda066: db "fonts/honda/066.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 36 2E 
       72 67 62 61 
       32 00       
049809 66 6F 6E 74 0937*  Fhonda067: db "fonts/honda/067.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 37 2E 
       72 67 62 61 
       32 00       
04981F 66 6F 6E 74 0938*  Fhonda068: db "fonts/honda/068.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 38 2E 
       72 67 62 61 
       32 00       
049835 66 6F 6E 74 0939*  Fhonda069: db "fonts/honda/069.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 39 2E 
       72 67 62 61 
       32 00       
04984B 66 6F 6E 74 0940*  Fhonda070: db "fonts/honda/070.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 30 2E 
       72 67 62 61 
       32 00       
049861 66 6F 6E 74 0941*  Fhonda071: db "fonts/honda/071.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 31 2E 
       72 67 62 61 
       32 00       
049877 66 6F 6E 74 0942*  Fhonda072: db "fonts/honda/072.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 32 2E 
       72 67 62 61 
       32 00       
04988D 66 6F 6E 74 0943*  Fhonda073: db "fonts/honda/073.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 33 2E 
       72 67 62 61 
       32 00       
0498A3 66 6F 6E 74 0944*  Fhonda074: db "fonts/honda/074.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 34 2E 
       72 67 62 61 
       32 00       
0498B9 66 6F 6E 74 0945*  Fhonda075: db "fonts/honda/075.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 35 2E 
       72 67 62 61 
       32 00       
0498CF 66 6F 6E 74 0946*  Fhonda076: db "fonts/honda/076.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 36 2E 
       72 67 62 61 
       32 00       
0498E5 66 6F 6E 74 0947*  Fhonda077: db "fonts/honda/077.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 37 2E 
       72 67 62 61 
       32 00       
0498FB 66 6F 6E 74 0948*  Fhonda078: db "fonts/honda/078.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 38 2E 
       72 67 62 61 
       32 00       
049911 66 6F 6E 74 0949*  Fhonda079: db "fonts/honda/079.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 39 2E 
       72 67 62 61 
       32 00       
049927 66 6F 6E 74 0950*  Fhonda080: db "fonts/honda/080.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 30 2E 
       72 67 62 61 
       32 00       
04993D 66 6F 6E 74 0951*  Fhonda081: db "fonts/honda/081.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 31 2E 
       72 67 62 61 
       32 00       
049953 66 6F 6E 74 0952*  Fhonda082: db "fonts/honda/082.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 32 2E 
       72 67 62 61 
       32 00       
049969 66 6F 6E 74 0953*  Fhonda083: db "fonts/honda/083.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 33 2E 
       72 67 62 61 
       32 00       
04997F 66 6F 6E 74 0954*  Fhonda084: db "fonts/honda/084.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 34 2E 
       72 67 62 61 
       32 00       
049995 66 6F 6E 74 0955*  Fhonda085: db "fonts/honda/085.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 35 2E 
       72 67 62 61 
       32 00       
0499AB 66 6F 6E 74 0956*  Fhonda086: db "fonts/honda/086.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 36 2E 
       72 67 62 61 
       32 00       
0499C1 66 6F 6E 74 0957*  Fhonda087: db "fonts/honda/087.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 37 2E 
       72 67 62 61 
       32 00       
0499D7 66 6F 6E 74 0958*  Fhonda088: db "fonts/honda/088.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 38 2E 
       72 67 62 61 
       32 00       
0499ED 66 6F 6E 74 0959*  Fhonda089: db "fonts/honda/089.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 39 2E 
       72 67 62 61 
       32 00       
049A03 66 6F 6E 74 0960*  Fhonda090: db "fonts/honda/090.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 30 2E 
       72 67 62 61 
       32 00       
049A19 66 6F 6E 74 0961*  Fhonda097: db "fonts/honda/097.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 37 2E 
       72 67 62 61 
       32 00       
049A2F 66 6F 6E 74 0962*  Fhonda098: db "fonts/honda/098.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 38 2E 
       72 67 62 61 
       32 00       
049A45 66 6F 6E 74 0963*  Fhonda099: db "fonts/honda/099.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 39 2E 
       72 67 62 61 
       32 00       
049A5B 66 6F 6E 74 0964*  Fhonda100: db "fonts/honda/100.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 30 2E 
       72 67 62 61 
       32 00       
049A71 66 6F 6E 74 0965*  Fhonda101: db "fonts/honda/101.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 31 2E 
       72 67 62 61 
       32 00       
049A87 66 6F 6E 74 0966*  Fhonda102: db "fonts/honda/102.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 32 2E 
       72 67 62 61 
       32 00       
049A9D 66 6F 6E 74 0967*  Fhonda103: db "fonts/honda/103.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 33 2E 
       72 67 62 61 
       32 00       
049AB3 66 6F 6E 74 0968*  Fhonda104: db "fonts/honda/104.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 34 2E 
       72 67 62 61 
       32 00       
049AC9 66 6F 6E 74 0969*  Fhonda105: db "fonts/honda/105.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 35 2E 
       72 67 62 61 
       32 00       
049ADF 66 6F 6E 74 0970*  Fhonda106: db "fonts/honda/106.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 36 2E 
       72 67 62 61 
       32 00       
049AF5 66 6F 6E 74 0971*  Fhonda107: db "fonts/honda/107.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 37 2E 
       72 67 62 61 
       32 00       
049B0B 66 6F 6E 74 0972*  Fhonda108: db "fonts/honda/108.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 38 2E 
       72 67 62 61 
       32 00       
049B21 66 6F 6E 74 0973*  Fhonda109: db "fonts/honda/109.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 39 2E 
       72 67 62 61 
       32 00       
049B37 66 6F 6E 74 0974*  Fhonda110: db "fonts/honda/110.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 30 2E 
       72 67 62 61 
       32 00       
049B4D 66 6F 6E 74 0975*  Fhonda111: db "fonts/honda/111.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 31 2E 
       72 67 62 61 
       32 00       
049B63 66 6F 6E 74 0976*  Fhonda112: db "fonts/honda/112.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 32 2E 
       72 67 62 61 
       32 00       
049B79 66 6F 6E 74 0977*  Fhonda113: db "fonts/honda/113.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 33 2E 
       72 67 62 61 
       32 00       
049B8F 66 6F 6E 74 0978*  Fhonda114: db "fonts/honda/114.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 34 2E 
       72 67 62 61 
       32 00       
049BA5 66 6F 6E 74 0979*  Fhonda115: db "fonts/honda/115.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 35 2E 
       72 67 62 61 
       32 00       
049BBB 66 6F 6E 74 0980*  Fhonda116: db "fonts/honda/116.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 36 2E 
       72 67 62 61 
       32 00       
049BD1 66 6F 6E 74 0981*  Fhonda117: db "fonts/honda/117.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 37 2E 
       72 67 62 61 
       32 00       
049BE7 66 6F 6E 74 0982*  Fhonda118: db "fonts/honda/118.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 38 2E 
       72 67 62 61 
       32 00       
049BFD 66 6F 6E 74 0983*  Fhonda119: db "fonts/honda/119.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 39 2E 
       72 67 62 61 
       32 00       
049C13 66 6F 6E 74 0984*  Fhonda120: db "fonts/honda/120.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 30 2E 
       72 67 62 61 
       32 00       
049C29 66 6F 6E 74 0985*  Fhonda121: db "fonts/honda/121.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 31 2E 
       72 67 62 61 
       32 00       
049C3F 66 6F 6E 74 0986*  Fhonda122: db "fonts/honda/122.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 32 2E 
       72 67 62 61 
       32 00       
049C55             0019   	include "src/asm/font_retro_computer.asm"
049C55             0001*  ; Bitmap indices:
049C55             0002*  BUF_4128: equ 0x1020 ; 32
049C55             0003*  BUF_4129: equ 0x1021 ; 33 !
049C55             0004*  ; Missing character 34 "
049C55             0005*  ; Missing character 35 #
049C55             0006*  ; Missing character 36 $
049C55             0007*  ; Missing character 37 %
049C55             0008*  ; Missing character 38 &
049C55             0009*  ; Missing character 39 '
049C55             0010*  ; Missing character 40 (
049C55             0011*  ; Missing character 41 )
049C55             0012*  ; Missing character 42 *
049C55             0013*  ; Missing character 43 +
049C55             0014*  ; Missing character 44 ,
049C55             0015*  ; Missing character 45 -
049C55             0016*  ; Missing character 46 .
049C55             0017*  ; Missing character 47 /
049C55             0018*  BUF_4144: equ 0x1030 ; 48 0
049C55             0019*  BUF_4145: equ 0x1031 ; 49 1
049C55             0020*  BUF_4146: equ 0x1032 ; 50 2
049C55             0021*  BUF_4147: equ 0x1033 ; 51 3
049C55             0022*  BUF_4148: equ 0x1034 ; 52 4
049C55             0023*  BUF_4149: equ 0x1035 ; 53 5
049C55             0024*  BUF_4150: equ 0x1036 ; 54 6
049C55             0025*  BUF_4151: equ 0x1037 ; 55 7
049C55             0026*  BUF_4152: equ 0x1038 ; 56 8
049C55             0027*  BUF_4153: equ 0x1039 ; 57 9
049C55             0028*  ; Missing character 58 :
049C55             0029*  ; Missing character 59 ;
049C55             0030*  ; Missing character 60 <
049C55             0031*  ; Missing character 61 =
049C55             0032*  ; Missing character 62 >
049C55             0033*  BUF_4159: equ 0x103F ; 63 ?
049C55             0034*  ; Missing character 64 @
049C55             0035*  BUF_4161: equ 0x1041 ; 65 A
049C55             0036*  BUF_4162: equ 0x1042 ; 66 B
049C55             0037*  BUF_4163: equ 0x1043 ; 67 C
049C55             0038*  BUF_4164: equ 0x1044 ; 68 D
049C55             0039*  BUF_4165: equ 0x1045 ; 69 E
049C55             0040*  BUF_4166: equ 0x1046 ; 70 F
049C55             0041*  BUF_4167: equ 0x1047 ; 71 G
049C55             0042*  BUF_4168: equ 0x1048 ; 72 H
049C55             0043*  BUF_4169: equ 0x1049 ; 73 I
049C55             0044*  BUF_4170: equ 0x104A ; 74 J
049C55             0045*  BUF_4171: equ 0x104B ; 75 K
049C55             0046*  BUF_4172: equ 0x104C ; 76 L
049C55             0047*  BUF_4173: equ 0x104D ; 77 M
049C55             0048*  BUF_4174: equ 0x104E ; 78 N
049C55             0049*  BUF_4175: equ 0x104F ; 79 O
049C55             0050*  BUF_4176: equ 0x1050 ; 80 P
049C55             0051*  BUF_4177: equ 0x1051 ; 81 Q
049C55             0052*  BUF_4178: equ 0x1052 ; 82 R
049C55             0053*  BUF_4179: equ 0x1053 ; 83 S
049C55             0054*  BUF_4180: equ 0x1054 ; 84 T
049C55             0055*  BUF_4181: equ 0x1055 ; 85 U
049C55             0056*  BUF_4182: equ 0x1056 ; 86 V
049C55             0057*  BUF_4183: equ 0x1057 ; 87 W
049C55             0058*  BUF_4184: equ 0x1058 ; 88 X
049C55             0059*  BUF_4185: equ 0x1059 ; 89 Y
049C55             0060*  BUF_4186: equ 0x105A ; 90 Z
049C55             0061*  ; Missing character 91 [
049C55             0062*  ; Missing character 92 \
049C55             0063*  ; Missing character 93 ]
049C55             0064*  ; Missing character 94 ^
049C55             0065*  ; Missing character 95 _
049C55             0066*  ; Missing character 96 `
049C55             0067*  ; Missing character 97 a
049C55             0068*  ; Missing character 98 b
049C55             0069*  ; Missing character 99 c
049C55             0070*  ; Missing character 100 d
049C55             0071*  ; Missing character 101 e
049C55             0072*  ; Missing character 102 f
049C55             0073*  ; Missing character 103 g
049C55             0074*  ; Missing character 104 h
049C55             0075*  ; Missing character 105 i
049C55             0076*  ; Missing character 106 j
049C55             0077*  ; Missing character 107 k
049C55             0078*  ; Missing character 108 l
049C55             0079*  ; Missing character 109 m
049C55             0080*  ; Missing character 110 n
049C55             0081*  ; Missing character 111 o
049C55             0082*  ; Missing character 112 p
049C55             0083*  ; Missing character 113 q
049C55             0084*  ; Missing character 114 r
049C55             0085*  ; Missing character 115 s
049C55             0086*  ; Missing character 116 t
049C55             0087*  ; Missing character 117 u
049C55             0088*  ; Missing character 118 v
049C55             0089*  ; Missing character 119 w
049C55             0090*  ; Missing character 120 x
049C55             0091*  ; Missing character 121 y
049C55             0092*  ; Missing character 122 z
049C55             0093*  ; [y_offset, dim_y, dim_x], buffer_id label: ; mind the little-endian order when fetching these!!!
049C55             0094*  font_retro_computer:
049C55 06 01 00 20 0095*  	dl 0x000106,BUF_4128
       10 00       
049C5B 03 0E 00 21 0096*  	dl 0x000E03,BUF_4129
       10 00       
049C61 06 01 00 20 0097*  	dl 0x000106,BUF_4128 ; Missing character 34
       10 00       
049C67 06 01 00 20 0098*  	dl 0x000106,BUF_4128 ; Missing character 35
       10 00       
049C6D 06 01 00 20 0099*  	dl 0x000106,BUF_4128 ; Missing character 36
       10 00       
049C73 06 01 00 20 0100*  	dl 0x000106,BUF_4128 ; Missing character 37
       10 00       
049C79 06 01 00 20 0101*  	dl 0x000106,BUF_4128 ; Missing character 38
       10 00       
049C7F 06 01 00 20 0102*  	dl 0x000106,BUF_4128 ; Missing character 39
       10 00       
049C85 06 01 00 20 0103*  	dl 0x000106,BUF_4128 ; Missing character 40
       10 00       
049C8B 06 01 00 20 0104*  	dl 0x000106,BUF_4128 ; Missing character 41
       10 00       
049C91 06 01 00 20 0105*  	dl 0x000106,BUF_4128 ; Missing character 42
       10 00       
049C97 06 01 00 20 0106*  	dl 0x000106,BUF_4128 ; Missing character 43
       10 00       
049C9D 06 01 00 20 0107*  	dl 0x000106,BUF_4128 ; Missing character 44
       10 00       
049CA3 06 01 00 20 0108*  	dl 0x000106,BUF_4128 ; Missing character 45
       10 00       
049CA9 06 01 00 20 0109*  	dl 0x000106,BUF_4128 ; Missing character 46
       10 00       
049CAF 06 01 00 20 0110*  	dl 0x000106,BUF_4128 ; Missing character 47
       10 00       
049CB5 08 0E 00 30 0111*  	dl 0x000E08,BUF_4144
       10 00       
049CBB 08 0E 00 31 0112*  	dl 0x000E08,BUF_4145
       10 00       
049CC1 08 0E 00 32 0113*  	dl 0x000E08,BUF_4146
       10 00       
049CC7 08 0E 00 33 0114*  	dl 0x000E08,BUF_4147
       10 00       
049CCD 08 0E 00 34 0115*  	dl 0x000E08,BUF_4148
       10 00       
049CD3 08 0E 00 35 0116*  	dl 0x000E08,BUF_4149
       10 00       
049CD9 08 0E 00 36 0117*  	dl 0x000E08,BUF_4150
       10 00       
049CDF 08 0E 00 37 0118*  	dl 0x000E08,BUF_4151
       10 00       
049CE5 08 0E 00 38 0119*  	dl 0x000E08,BUF_4152
       10 00       
049CEB 08 0E 00 39 0120*  	dl 0x000E08,BUF_4153
       10 00       
049CF1 06 01 00 20 0121*  	dl 0x000106,BUF_4128 ; Missing character 58
       10 00       
049CF7 06 01 00 20 0122*  	dl 0x000106,BUF_4128 ; Missing character 59
       10 00       
049CFD 06 01 00 20 0123*  	dl 0x000106,BUF_4128 ; Missing character 60
       10 00       
049D03 06 01 00 20 0124*  	dl 0x000106,BUF_4128 ; Missing character 61
       10 00       
049D09 06 01 00 20 0125*  	dl 0x000106,BUF_4128 ; Missing character 62
       10 00       
049D0F 08 0E 00 3F 0126*  	dl 0x000E08,BUF_4159
       10 00       
049D15 06 01 00 20 0127*  	dl 0x000106,BUF_4128 ; Missing character 64
       10 00       
049D1B 07 0E 00 41 0128*  	dl 0x000E07,BUF_4161
       10 00       
049D21 08 0E 00 42 0129*  	dl 0x000E08,BUF_4162
       10 00       
049D27 07 0E 00 43 0130*  	dl 0x000E07,BUF_4163
       10 00       
049D2D 08 0E 00 44 0131*  	dl 0x000E08,BUF_4164
       10 00       
049D33 08 0E 00 45 0132*  	dl 0x000E08,BUF_4165
       10 00       
049D39 07 0E 00 46 0133*  	dl 0x000E07,BUF_4166
       10 00       
049D3F 08 0E 00 47 0134*  	dl 0x000E08,BUF_4167
       10 00       
049D45 07 0E 00 48 0135*  	dl 0x000E07,BUF_4168
       10 00       
049D4B 07 0E 00 49 0136*  	dl 0x000E07,BUF_4169
       10 00       
049D51 08 0E 00 4A 0137*  	dl 0x000E08,BUF_4170
       10 00       
049D57 07 0E 00 4B 0138*  	dl 0x000E07,BUF_4171
       10 00       
049D5D 08 0E 00 4C 0139*  	dl 0x000E08,BUF_4172
       10 00       
049D63 09 0E 00 4D 0140*  	dl 0x000E09,BUF_4173
       10 00       
049D69 07 0E 00 4E 0141*  	dl 0x000E07,BUF_4174
       10 00       
049D6F 08 0E 00 4F 0142*  	dl 0x000E08,BUF_4175
       10 00       
049D75 07 0E 00 50 0143*  	dl 0x000E07,BUF_4176
       10 00       
049D7B 08 0F 00 51 0144*  	dl 0x000F08,BUF_4177
       10 00       
049D81 08 0E 00 52 0145*  	dl 0x000E08,BUF_4178
       10 00       
049D87 08 0E 00 53 0146*  	dl 0x000E08,BUF_4179
       10 00       
049D8D 07 0E 00 54 0147*  	dl 0x000E07,BUF_4180
       10 00       
049D93 08 0E 00 55 0148*  	dl 0x000E08,BUF_4181
       10 00       
049D99 07 0E 00 56 0149*  	dl 0x000E07,BUF_4182
       10 00       
049D9F 0B 0E 00 57 0150*  	dl 0x000E0B,BUF_4183
       10 00       
049DA5 07 0E 00 58 0151*  	dl 0x000E07,BUF_4184
       10 00       
049DAB 08 0E 00 59 0152*  	dl 0x000E08,BUF_4185
       10 00       
049DB1 07 0E 00 5A 0153*  	dl 0x000E07,BUF_4186
       10 00       
049DB7 06 01 00 20 0154*  	dl 0x000106,BUF_4128 ; Missing character 91
       10 00       
049DBD 06 01 00 20 0155*  	dl 0x000106,BUF_4128 ; Missing character 92
       10 00       
049DC3 06 01 00 20 0156*  	dl 0x000106,BUF_4128 ; Missing character 93
       10 00       
049DC9 06 01 00 20 0157*  	dl 0x000106,BUF_4128 ; Missing character 94
       10 00       
049DCF 06 01 00 20 0158*  	dl 0x000106,BUF_4128 ; Missing character 95
       10 00       
049DD5 06 01 00 20 0159*  	dl 0x000106,BUF_4128 ; Missing character 96
       10 00       
049DDB 06 01 00 20 0160*  	dl 0x000106,BUF_4128 ; Missing character 97
       10 00       
049DE1 06 01 00 20 0161*  	dl 0x000106,BUF_4128 ; Missing character 98
       10 00       
049DE7 06 01 00 20 0162*  	dl 0x000106,BUF_4128 ; Missing character 99
       10 00       
049DED 06 01 00 20 0163*  	dl 0x000106,BUF_4128 ; Missing character 100
       10 00       
049DF3 06 01 00 20 0164*  	dl 0x000106,BUF_4128 ; Missing character 101
       10 00       
049DF9 06 01 00 20 0165*  	dl 0x000106,BUF_4128 ; Missing character 102
       10 00       
049DFF 06 01 00 20 0166*  	dl 0x000106,BUF_4128 ; Missing character 103
       10 00       
049E05 06 01 00 20 0167*  	dl 0x000106,BUF_4128 ; Missing character 104
       10 00       
049E0B 06 01 00 20 0168*  	dl 0x000106,BUF_4128 ; Missing character 105
       10 00       
049E11 06 01 00 20 0169*  	dl 0x000106,BUF_4128 ; Missing character 106
       10 00       
049E17 06 01 00 20 0170*  	dl 0x000106,BUF_4128 ; Missing character 107
       10 00       
049E1D 06 01 00 20 0171*  	dl 0x000106,BUF_4128 ; Missing character 108
       10 00       
049E23 06 01 00 20 0172*  	dl 0x000106,BUF_4128 ; Missing character 109
       10 00       
049E29 06 01 00 20 0173*  	dl 0x000106,BUF_4128 ; Missing character 110
       10 00       
049E2F 06 01 00 20 0174*  	dl 0x000106,BUF_4128 ; Missing character 111
       10 00       
049E35 06 01 00 20 0175*  	dl 0x000106,BUF_4128 ; Missing character 112
       10 00       
049E3B 06 01 00 20 0176*  	dl 0x000106,BUF_4128 ; Missing character 113
       10 00       
049E41 06 01 00 20 0177*  	dl 0x000106,BUF_4128 ; Missing character 114
       10 00       
049E47 06 01 00 20 0178*  	dl 0x000106,BUF_4128 ; Missing character 115
       10 00       
049E4D 06 01 00 20 0179*  	dl 0x000106,BUF_4128 ; Missing character 116
       10 00       
049E53 06 01 00 20 0180*  	dl 0x000106,BUF_4128 ; Missing character 117
       10 00       
049E59 06 01 00 20 0181*  	dl 0x000106,BUF_4128 ; Missing character 118
       10 00       
049E5F 06 01 00 20 0182*  	dl 0x000106,BUF_4128 ; Missing character 119
       10 00       
049E65 06 01 00 20 0183*  	dl 0x000106,BUF_4128 ; Missing character 120
       10 00       
049E6B 06 01 00 20 0184*  	dl 0x000106,BUF_4128 ; Missing character 121
       10 00       
049E71 06 01 00 20 0185*  	dl 0x000106,BUF_4128 ; Missing character 122
       10 00       
049E77             0186*  
049E77             0187*  ; Import .rgba2 bitmap files and load them into VDP buffers
049E77             0188*  load_font_retro_computer:
049E77             0189*  
049E77 21 1B A4 04 0190*  	ld hl,Frc032
049E7B 11 C6 D3 04 0191*  	ld de,filedata
049E7F 01 00 00 01 0192*  	ld bc,65536
049E83 3E 01       0193*  	ld a,mos_load
049E85 5B CF       0194*  	RST.LIL 08h
049E87 21 20 10 00 0195*  	ld hl,BUF_4128
049E8B 01 06 00 00 0196*  	ld bc,6
049E8F 11 01 00 00 0197*  	ld de,1
049E93 DD 21 06 00 0198*  	ld ix,6
       00          
049E98 CD 05 C9 04 0199*  	call vdu_load_img
049E9C             0200*  
049E9C 21 2E A4 04 0201*  	ld hl,Frc033
049EA0 11 C6 D3 04 0202*  	ld de,filedata
049EA4 01 00 00 01 0203*  	ld bc,65536
049EA8 3E 01       0204*  	ld a,mos_load
049EAA 5B CF       0205*  	RST.LIL 08h
049EAC 21 21 10 00 0206*  	ld hl,BUF_4129
049EB0 01 03 00 00 0207*  	ld bc,3
049EB4 11 0E 00 00 0208*  	ld de,14
049EB8 DD 21 2A 00 0209*  	ld ix,42
       00          
049EBD CD 05 C9 04 0210*  	call vdu_load_img
049EC1             0211*  ; Missing character 34
049EC1             0212*  ; Missing character 35
049EC1             0213*  ; Missing character 36
049EC1             0214*  ; Missing character 37
049EC1             0215*  ; Missing character 38
049EC1             0216*  ; Missing character 39
049EC1             0217*  ; Missing character 40
049EC1             0218*  ; Missing character 41
049EC1             0219*  ; Missing character 42
049EC1             0220*  ; Missing character 43
049EC1             0221*  ; Missing character 44
049EC1             0222*  ; Missing character 45
049EC1             0223*  ; Missing character 46
049EC1             0224*  ; Missing character 47
049EC1             0225*  
049EC1 21 41 A4 04 0226*  	ld hl,Frc048
049EC5 11 C6 D3 04 0227*  	ld de,filedata
049EC9 01 00 00 01 0228*  	ld bc,65536
049ECD 3E 01       0229*  	ld a,mos_load
049ECF 5B CF       0230*  	RST.LIL 08h
049ED1 21 30 10 00 0231*  	ld hl,BUF_4144
049ED5 01 08 00 00 0232*  	ld bc,8
049ED9 11 0E 00 00 0233*  	ld de,14
049EDD DD 21 70 00 0234*  	ld ix,112
       00          
049EE2 CD 05 C9 04 0235*  	call vdu_load_img
049EE6             0236*  
049EE6 21 54 A4 04 0237*  	ld hl,Frc049
049EEA 11 C6 D3 04 0238*  	ld de,filedata
049EEE 01 00 00 01 0239*  	ld bc,65536
049EF2 3E 01       0240*  	ld a,mos_load
049EF4 5B CF       0241*  	RST.LIL 08h
049EF6 21 31 10 00 0242*  	ld hl,BUF_4145
049EFA 01 08 00 00 0243*  	ld bc,8
049EFE 11 0E 00 00 0244*  	ld de,14
049F02 DD 21 70 00 0245*  	ld ix,112
       00          
049F07 CD 05 C9 04 0246*  	call vdu_load_img
049F0B             0247*  
049F0B 21 67 A4 04 0248*  	ld hl,Frc050
049F0F 11 C6 D3 04 0249*  	ld de,filedata
049F13 01 00 00 01 0250*  	ld bc,65536
049F17 3E 01       0251*  	ld a,mos_load
049F19 5B CF       0252*  	RST.LIL 08h
049F1B 21 32 10 00 0253*  	ld hl,BUF_4146
049F1F 01 08 00 00 0254*  	ld bc,8
049F23 11 0E 00 00 0255*  	ld de,14
049F27 DD 21 70 00 0256*  	ld ix,112
       00          
049F2C CD 05 C9 04 0257*  	call vdu_load_img
049F30             0258*  
049F30 21 7A A4 04 0259*  	ld hl,Frc051
049F34 11 C6 D3 04 0260*  	ld de,filedata
049F38 01 00 00 01 0261*  	ld bc,65536
049F3C 3E 01       0262*  	ld a,mos_load
049F3E 5B CF       0263*  	RST.LIL 08h
049F40 21 33 10 00 0264*  	ld hl,BUF_4147
049F44 01 08 00 00 0265*  	ld bc,8
049F48 11 0E 00 00 0266*  	ld de,14
049F4C DD 21 70 00 0267*  	ld ix,112
       00          
049F51 CD 05 C9 04 0268*  	call vdu_load_img
049F55             0269*  
049F55 21 8D A4 04 0270*  	ld hl,Frc052
049F59 11 C6 D3 04 0271*  	ld de,filedata
049F5D 01 00 00 01 0272*  	ld bc,65536
049F61 3E 01       0273*  	ld a,mos_load
049F63 5B CF       0274*  	RST.LIL 08h
049F65 21 34 10 00 0275*  	ld hl,BUF_4148
049F69 01 08 00 00 0276*  	ld bc,8
049F6D 11 0E 00 00 0277*  	ld de,14
049F71 DD 21 70 00 0278*  	ld ix,112
       00          
049F76 CD 05 C9 04 0279*  	call vdu_load_img
049F7A             0280*  
049F7A 21 A0 A4 04 0281*  	ld hl,Frc053
049F7E 11 C6 D3 04 0282*  	ld de,filedata
049F82 01 00 00 01 0283*  	ld bc,65536
049F86 3E 01       0284*  	ld a,mos_load
049F88 5B CF       0285*  	RST.LIL 08h
049F8A 21 35 10 00 0286*  	ld hl,BUF_4149
049F8E 01 08 00 00 0287*  	ld bc,8
049F92 11 0E 00 00 0288*  	ld de,14
049F96 DD 21 70 00 0289*  	ld ix,112
       00          
049F9B CD 05 C9 04 0290*  	call vdu_load_img
049F9F             0291*  
049F9F 21 B3 A4 04 0292*  	ld hl,Frc054
049FA3 11 C6 D3 04 0293*  	ld de,filedata
049FA7 01 00 00 01 0294*  	ld bc,65536
049FAB 3E 01       0295*  	ld a,mos_load
049FAD 5B CF       0296*  	RST.LIL 08h
049FAF 21 36 10 00 0297*  	ld hl,BUF_4150
049FB3 01 08 00 00 0298*  	ld bc,8
049FB7 11 0E 00 00 0299*  	ld de,14
049FBB DD 21 70 00 0300*  	ld ix,112
       00          
049FC0 CD 05 C9 04 0301*  	call vdu_load_img
049FC4             0302*  
049FC4 21 C6 A4 04 0303*  	ld hl,Frc055
049FC8 11 C6 D3 04 0304*  	ld de,filedata
049FCC 01 00 00 01 0305*  	ld bc,65536
049FD0 3E 01       0306*  	ld a,mos_load
049FD2 5B CF       0307*  	RST.LIL 08h
049FD4 21 37 10 00 0308*  	ld hl,BUF_4151
049FD8 01 08 00 00 0309*  	ld bc,8
049FDC 11 0E 00 00 0310*  	ld de,14
049FE0 DD 21 70 00 0311*  	ld ix,112
       00          
049FE5 CD 05 C9 04 0312*  	call vdu_load_img
049FE9             0313*  
049FE9 21 D9 A4 04 0314*  	ld hl,Frc056
049FED 11 C6 D3 04 0315*  	ld de,filedata
049FF1 01 00 00 01 0316*  	ld bc,65536
049FF5 3E 01       0317*  	ld a,mos_load
049FF7 5B CF       0318*  	RST.LIL 08h
049FF9 21 38 10 00 0319*  	ld hl,BUF_4152
049FFD 01 08 00 00 0320*  	ld bc,8
04A001 11 0E 00 00 0321*  	ld de,14
04A005 DD 21 70 00 0322*  	ld ix,112
       00          
04A00A CD 05 C9 04 0323*  	call vdu_load_img
04A00E             0324*  
04A00E 21 EC A4 04 0325*  	ld hl,Frc057
04A012 11 C6 D3 04 0326*  	ld de,filedata
04A016 01 00 00 01 0327*  	ld bc,65536
04A01A 3E 01       0328*  	ld a,mos_load
04A01C 5B CF       0329*  	RST.LIL 08h
04A01E 21 39 10 00 0330*  	ld hl,BUF_4153
04A022 01 08 00 00 0331*  	ld bc,8
04A026 11 0E 00 00 0332*  	ld de,14
04A02A DD 21 70 00 0333*  	ld ix,112
       00          
04A02F CD 05 C9 04 0334*  	call vdu_load_img
04A033             0335*  ; Missing character 58
04A033             0336*  ; Missing character 59
04A033             0337*  ; Missing character 60
04A033             0338*  ; Missing character 61
04A033             0339*  ; Missing character 62
04A033             0340*  
04A033 21 FF A4 04 0341*  	ld hl,Frc063
04A037 11 C6 D3 04 0342*  	ld de,filedata
04A03B 01 00 00 01 0343*  	ld bc,65536
04A03F 3E 01       0344*  	ld a,mos_load
04A041 5B CF       0345*  	RST.LIL 08h
04A043 21 3F 10 00 0346*  	ld hl,BUF_4159
04A047 01 08 00 00 0347*  	ld bc,8
04A04B 11 0E 00 00 0348*  	ld de,14
04A04F DD 21 70 00 0349*  	ld ix,112
       00          
04A054 CD 05 C9 04 0350*  	call vdu_load_img
04A058             0351*  ; Missing character 64
04A058             0352*  
04A058 21 12 A5 04 0353*  	ld hl,Frc065
04A05C 11 C6 D3 04 0354*  	ld de,filedata
04A060 01 00 00 01 0355*  	ld bc,65536
04A064 3E 01       0356*  	ld a,mos_load
04A066 5B CF       0357*  	RST.LIL 08h
04A068 21 41 10 00 0358*  	ld hl,BUF_4161
04A06C 01 07 00 00 0359*  	ld bc,7
04A070 11 0E 00 00 0360*  	ld de,14
04A074 DD 21 62 00 0361*  	ld ix,98
       00          
04A079 CD 05 C9 04 0362*  	call vdu_load_img
04A07D             0363*  
04A07D 21 25 A5 04 0364*  	ld hl,Frc066
04A081 11 C6 D3 04 0365*  	ld de,filedata
04A085 01 00 00 01 0366*  	ld bc,65536
04A089 3E 01       0367*  	ld a,mos_load
04A08B 5B CF       0368*  	RST.LIL 08h
04A08D 21 42 10 00 0369*  	ld hl,BUF_4162
04A091 01 08 00 00 0370*  	ld bc,8
04A095 11 0E 00 00 0371*  	ld de,14
04A099 DD 21 70 00 0372*  	ld ix,112
       00          
04A09E CD 05 C9 04 0373*  	call vdu_load_img
04A0A2             0374*  
04A0A2 21 38 A5 04 0375*  	ld hl,Frc067
04A0A6 11 C6 D3 04 0376*  	ld de,filedata
04A0AA 01 00 00 01 0377*  	ld bc,65536
04A0AE 3E 01       0378*  	ld a,mos_load
04A0B0 5B CF       0379*  	RST.LIL 08h
04A0B2 21 43 10 00 0380*  	ld hl,BUF_4163
04A0B6 01 07 00 00 0381*  	ld bc,7
04A0BA 11 0E 00 00 0382*  	ld de,14
04A0BE DD 21 62 00 0383*  	ld ix,98
       00          
04A0C3 CD 05 C9 04 0384*  	call vdu_load_img
04A0C7             0385*  
04A0C7 21 4B A5 04 0386*  	ld hl,Frc068
04A0CB 11 C6 D3 04 0387*  	ld de,filedata
04A0CF 01 00 00 01 0388*  	ld bc,65536
04A0D3 3E 01       0389*  	ld a,mos_load
04A0D5 5B CF       0390*  	RST.LIL 08h
04A0D7 21 44 10 00 0391*  	ld hl,BUF_4164
04A0DB 01 08 00 00 0392*  	ld bc,8
04A0DF 11 0E 00 00 0393*  	ld de,14
04A0E3 DD 21 70 00 0394*  	ld ix,112
       00          
04A0E8 CD 05 C9 04 0395*  	call vdu_load_img
04A0EC             0396*  
04A0EC 21 5E A5 04 0397*  	ld hl,Frc069
04A0F0 11 C6 D3 04 0398*  	ld de,filedata
04A0F4 01 00 00 01 0399*  	ld bc,65536
04A0F8 3E 01       0400*  	ld a,mos_load
04A0FA 5B CF       0401*  	RST.LIL 08h
04A0FC 21 45 10 00 0402*  	ld hl,BUF_4165
04A100 01 08 00 00 0403*  	ld bc,8
04A104 11 0E 00 00 0404*  	ld de,14
04A108 DD 21 70 00 0405*  	ld ix,112
       00          
04A10D CD 05 C9 04 0406*  	call vdu_load_img
04A111             0407*  
04A111 21 71 A5 04 0408*  	ld hl,Frc070
04A115 11 C6 D3 04 0409*  	ld de,filedata
04A119 01 00 00 01 0410*  	ld bc,65536
04A11D 3E 01       0411*  	ld a,mos_load
04A11F 5B CF       0412*  	RST.LIL 08h
04A121 21 46 10 00 0413*  	ld hl,BUF_4166
04A125 01 07 00 00 0414*  	ld bc,7
04A129 11 0E 00 00 0415*  	ld de,14
04A12D DD 21 62 00 0416*  	ld ix,98
       00          
04A132 CD 05 C9 04 0417*  	call vdu_load_img
04A136             0418*  
04A136 21 84 A5 04 0419*  	ld hl,Frc071
04A13A 11 C6 D3 04 0420*  	ld de,filedata
04A13E 01 00 00 01 0421*  	ld bc,65536
04A142 3E 01       0422*  	ld a,mos_load
04A144 5B CF       0423*  	RST.LIL 08h
04A146 21 47 10 00 0424*  	ld hl,BUF_4167
04A14A 01 08 00 00 0425*  	ld bc,8
04A14E 11 0E 00 00 0426*  	ld de,14
04A152 DD 21 70 00 0427*  	ld ix,112
       00          
04A157 CD 05 C9 04 0428*  	call vdu_load_img
04A15B             0429*  
04A15B 21 97 A5 04 0430*  	ld hl,Frc072
04A15F 11 C6 D3 04 0431*  	ld de,filedata
04A163 01 00 00 01 0432*  	ld bc,65536
04A167 3E 01       0433*  	ld a,mos_load
04A169 5B CF       0434*  	RST.LIL 08h
04A16B 21 48 10 00 0435*  	ld hl,BUF_4168
04A16F 01 07 00 00 0436*  	ld bc,7
04A173 11 0E 00 00 0437*  	ld de,14
04A177 DD 21 62 00 0438*  	ld ix,98
       00          
04A17C CD 05 C9 04 0439*  	call vdu_load_img
04A180             0440*  
04A180 21 AA A5 04 0441*  	ld hl,Frc073
04A184 11 C6 D3 04 0442*  	ld de,filedata
04A188 01 00 00 01 0443*  	ld bc,65536
04A18C 3E 01       0444*  	ld a,mos_load
04A18E 5B CF       0445*  	RST.LIL 08h
04A190 21 49 10 00 0446*  	ld hl,BUF_4169
04A194 01 07 00 00 0447*  	ld bc,7
04A198 11 0E 00 00 0448*  	ld de,14
04A19C DD 21 62 00 0449*  	ld ix,98
       00          
04A1A1 CD 05 C9 04 0450*  	call vdu_load_img
04A1A5             0451*  
04A1A5 21 BD A5 04 0452*  	ld hl,Frc074
04A1A9 11 C6 D3 04 0453*  	ld de,filedata
04A1AD 01 00 00 01 0454*  	ld bc,65536
04A1B1 3E 01       0455*  	ld a,mos_load
04A1B3 5B CF       0456*  	RST.LIL 08h
04A1B5 21 4A 10 00 0457*  	ld hl,BUF_4170
04A1B9 01 08 00 00 0458*  	ld bc,8
04A1BD 11 0E 00 00 0459*  	ld de,14
04A1C1 DD 21 70 00 0460*  	ld ix,112
       00          
04A1C6 CD 05 C9 04 0461*  	call vdu_load_img
04A1CA             0462*  
04A1CA 21 D0 A5 04 0463*  	ld hl,Frc075
04A1CE 11 C6 D3 04 0464*  	ld de,filedata
04A1D2 01 00 00 01 0465*  	ld bc,65536
04A1D6 3E 01       0466*  	ld a,mos_load
04A1D8 5B CF       0467*  	RST.LIL 08h
04A1DA 21 4B 10 00 0468*  	ld hl,BUF_4171
04A1DE 01 07 00 00 0469*  	ld bc,7
04A1E2 11 0E 00 00 0470*  	ld de,14
04A1E6 DD 21 62 00 0471*  	ld ix,98
       00          
04A1EB CD 05 C9 04 0472*  	call vdu_load_img
04A1EF             0473*  
04A1EF 21 E3 A5 04 0474*  	ld hl,Frc076
04A1F3 11 C6 D3 04 0475*  	ld de,filedata
04A1F7 01 00 00 01 0476*  	ld bc,65536
04A1FB 3E 01       0477*  	ld a,mos_load
04A1FD 5B CF       0478*  	RST.LIL 08h
04A1FF 21 4C 10 00 0479*  	ld hl,BUF_4172
04A203 01 08 00 00 0480*  	ld bc,8
04A207 11 0E 00 00 0481*  	ld de,14
04A20B DD 21 70 00 0482*  	ld ix,112
       00          
04A210 CD 05 C9 04 0483*  	call vdu_load_img
04A214             0484*  
04A214 21 F6 A5 04 0485*  	ld hl,Frc077
04A218 11 C6 D3 04 0486*  	ld de,filedata
04A21C 01 00 00 01 0487*  	ld bc,65536
04A220 3E 01       0488*  	ld a,mos_load
04A222 5B CF       0489*  	RST.LIL 08h
04A224 21 4D 10 00 0490*  	ld hl,BUF_4173
04A228 01 09 00 00 0491*  	ld bc,9
04A22C 11 0E 00 00 0492*  	ld de,14
04A230 DD 21 7E 00 0493*  	ld ix,126
       00          
04A235 CD 05 C9 04 0494*  	call vdu_load_img
04A239             0495*  
04A239 21 09 A6 04 0496*  	ld hl,Frc078
04A23D 11 C6 D3 04 0497*  	ld de,filedata
04A241 01 00 00 01 0498*  	ld bc,65536
04A245 3E 01       0499*  	ld a,mos_load
04A247 5B CF       0500*  	RST.LIL 08h
04A249 21 4E 10 00 0501*  	ld hl,BUF_4174
04A24D 01 07 00 00 0502*  	ld bc,7
04A251 11 0E 00 00 0503*  	ld de,14
04A255 DD 21 62 00 0504*  	ld ix,98
       00          
04A25A CD 05 C9 04 0505*  	call vdu_load_img
04A25E             0506*  
04A25E 21 1C A6 04 0507*  	ld hl,Frc079
04A262 11 C6 D3 04 0508*  	ld de,filedata
04A266 01 00 00 01 0509*  	ld bc,65536
04A26A 3E 01       0510*  	ld a,mos_load
04A26C 5B CF       0511*  	RST.LIL 08h
04A26E 21 4F 10 00 0512*  	ld hl,BUF_4175
04A272 01 08 00 00 0513*  	ld bc,8
04A276 11 0E 00 00 0514*  	ld de,14
04A27A DD 21 70 00 0515*  	ld ix,112
       00          
04A27F CD 05 C9 04 0516*  	call vdu_load_img
04A283             0517*  
04A283 21 2F A6 04 0518*  	ld hl,Frc080
04A287 11 C6 D3 04 0519*  	ld de,filedata
04A28B 01 00 00 01 0520*  	ld bc,65536
04A28F 3E 01       0521*  	ld a,mos_load
04A291 5B CF       0522*  	RST.LIL 08h
04A293 21 50 10 00 0523*  	ld hl,BUF_4176
04A297 01 07 00 00 0524*  	ld bc,7
04A29B 11 0E 00 00 0525*  	ld de,14
04A29F DD 21 62 00 0526*  	ld ix,98
       00          
04A2A4 CD 05 C9 04 0527*  	call vdu_load_img
04A2A8             0528*  
04A2A8 21 42 A6 04 0529*  	ld hl,Frc081
04A2AC 11 C6 D3 04 0530*  	ld de,filedata
04A2B0 01 00 00 01 0531*  	ld bc,65536
04A2B4 3E 01       0532*  	ld a,mos_load
04A2B6 5B CF       0533*  	RST.LIL 08h
04A2B8 21 51 10 00 0534*  	ld hl,BUF_4177
04A2BC 01 08 00 00 0535*  	ld bc,8
04A2C0 11 0F 00 00 0536*  	ld de,15
04A2C4 DD 21 78 00 0537*  	ld ix,120
       00          
04A2C9 CD 05 C9 04 0538*  	call vdu_load_img
04A2CD             0539*  
04A2CD 21 55 A6 04 0540*  	ld hl,Frc082
04A2D1 11 C6 D3 04 0541*  	ld de,filedata
04A2D5 01 00 00 01 0542*  	ld bc,65536
04A2D9 3E 01       0543*  	ld a,mos_load
04A2DB 5B CF       0544*  	RST.LIL 08h
04A2DD 21 52 10 00 0545*  	ld hl,BUF_4178
04A2E1 01 08 00 00 0546*  	ld bc,8
04A2E5 11 0E 00 00 0547*  	ld de,14
04A2E9 DD 21 70 00 0548*  	ld ix,112
       00          
04A2EE CD 05 C9 04 0549*  	call vdu_load_img
04A2F2             0550*  
04A2F2 21 68 A6 04 0551*  	ld hl,Frc083
04A2F6 11 C6 D3 04 0552*  	ld de,filedata
04A2FA 01 00 00 01 0553*  	ld bc,65536
04A2FE 3E 01       0554*  	ld a,mos_load
04A300 5B CF       0555*  	RST.LIL 08h
04A302 21 53 10 00 0556*  	ld hl,BUF_4179
04A306 01 08 00 00 0557*  	ld bc,8
04A30A 11 0E 00 00 0558*  	ld de,14
04A30E DD 21 70 00 0559*  	ld ix,112
       00          
04A313 CD 05 C9 04 0560*  	call vdu_load_img
04A317             0561*  
04A317 21 7B A6 04 0562*  	ld hl,Frc084
04A31B 11 C6 D3 04 0563*  	ld de,filedata
04A31F 01 00 00 01 0564*  	ld bc,65536
04A323 3E 01       0565*  	ld a,mos_load
04A325 5B CF       0566*  	RST.LIL 08h
04A327 21 54 10 00 0567*  	ld hl,BUF_4180
04A32B 01 07 00 00 0568*  	ld bc,7
04A32F 11 0E 00 00 0569*  	ld de,14
04A333 DD 21 62 00 0570*  	ld ix,98
       00          
04A338 CD 05 C9 04 0571*  	call vdu_load_img
04A33C             0572*  
04A33C 21 8E A6 04 0573*  	ld hl,Frc085
04A340 11 C6 D3 04 0574*  	ld de,filedata
04A344 01 00 00 01 0575*  	ld bc,65536
04A348 3E 01       0576*  	ld a,mos_load
04A34A 5B CF       0577*  	RST.LIL 08h
04A34C 21 55 10 00 0578*  	ld hl,BUF_4181
04A350 01 08 00 00 0579*  	ld bc,8
04A354 11 0E 00 00 0580*  	ld de,14
04A358 DD 21 70 00 0581*  	ld ix,112
       00          
04A35D CD 05 C9 04 0582*  	call vdu_load_img
04A361             0583*  
04A361 21 A1 A6 04 0584*  	ld hl,Frc086
04A365 11 C6 D3 04 0585*  	ld de,filedata
04A369 01 00 00 01 0586*  	ld bc,65536
04A36D 3E 01       0587*  	ld a,mos_load
04A36F 5B CF       0588*  	RST.LIL 08h
04A371 21 56 10 00 0589*  	ld hl,BUF_4182
04A375 01 07 00 00 0590*  	ld bc,7
04A379 11 0E 00 00 0591*  	ld de,14
04A37D DD 21 62 00 0592*  	ld ix,98
       00          
04A382 CD 05 C9 04 0593*  	call vdu_load_img
04A386             0594*  
04A386 21 B4 A6 04 0595*  	ld hl,Frc087
04A38A 11 C6 D3 04 0596*  	ld de,filedata
04A38E 01 00 00 01 0597*  	ld bc,65536
04A392 3E 01       0598*  	ld a,mos_load
04A394 5B CF       0599*  	RST.LIL 08h
04A396 21 57 10 00 0600*  	ld hl,BUF_4183
04A39A 01 0B 00 00 0601*  	ld bc,11
04A39E 11 0E 00 00 0602*  	ld de,14
04A3A2 DD 21 9A 00 0603*  	ld ix,154
       00          
04A3A7 CD 05 C9 04 0604*  	call vdu_load_img
04A3AB             0605*  
04A3AB 21 C7 A6 04 0606*  	ld hl,Frc088
04A3AF 11 C6 D3 04 0607*  	ld de,filedata
04A3B3 01 00 00 01 0608*  	ld bc,65536
04A3B7 3E 01       0609*  	ld a,mos_load
04A3B9 5B CF       0610*  	RST.LIL 08h
04A3BB 21 58 10 00 0611*  	ld hl,BUF_4184
04A3BF 01 07 00 00 0612*  	ld bc,7
04A3C3 11 0E 00 00 0613*  	ld de,14
04A3C7 DD 21 62 00 0614*  	ld ix,98
       00          
04A3CC CD 05 C9 04 0615*  	call vdu_load_img
04A3D0             0616*  
04A3D0 21 DA A6 04 0617*  	ld hl,Frc089
04A3D4 11 C6 D3 04 0618*  	ld de,filedata
04A3D8 01 00 00 01 0619*  	ld bc,65536
04A3DC 3E 01       0620*  	ld a,mos_load
04A3DE 5B CF       0621*  	RST.LIL 08h
04A3E0 21 59 10 00 0622*  	ld hl,BUF_4185
04A3E4 01 08 00 00 0623*  	ld bc,8
04A3E8 11 0E 00 00 0624*  	ld de,14
04A3EC DD 21 70 00 0625*  	ld ix,112
       00          
04A3F1 CD 05 C9 04 0626*  	call vdu_load_img
04A3F5             0627*  
04A3F5 21 ED A6 04 0628*  	ld hl,Frc090
04A3F9 11 C6 D3 04 0629*  	ld de,filedata
04A3FD 01 00 00 01 0630*  	ld bc,65536
04A401 3E 01       0631*  	ld a,mos_load
04A403 5B CF       0632*  	RST.LIL 08h
04A405 21 5A 10 00 0633*  	ld hl,BUF_4186
04A409 01 07 00 00 0634*  	ld bc,7
04A40D 11 0E 00 00 0635*  	ld de,14
04A411 DD 21 62 00 0636*  	ld ix,98
       00          
04A416 CD 05 C9 04 0637*  	call vdu_load_img
04A41A             0638*  ; Missing character 91
04A41A             0639*  ; Missing character 92
04A41A             0640*  ; Missing character 93
04A41A             0641*  ; Missing character 94
04A41A             0642*  ; Missing character 95
04A41A             0643*  ; Missing character 96
04A41A             0644*  ; Missing character 97
04A41A             0645*  ; Missing character 98
04A41A             0646*  ; Missing character 99
04A41A             0647*  ; Missing character 100
04A41A             0648*  ; Missing character 101
04A41A             0649*  ; Missing character 102
04A41A             0650*  ; Missing character 103
04A41A             0651*  ; Missing character 104
04A41A             0652*  ; Missing character 105
04A41A             0653*  ; Missing character 106
04A41A             0654*  ; Missing character 107
04A41A             0655*  ; Missing character 108
04A41A             0656*  ; Missing character 109
04A41A             0657*  ; Missing character 110
04A41A             0658*  ; Missing character 111
04A41A             0659*  ; Missing character 112
04A41A             0660*  ; Missing character 113
04A41A             0661*  ; Missing character 114
04A41A             0662*  ; Missing character 115
04A41A             0663*  ; Missing character 116
04A41A             0664*  ; Missing character 117
04A41A             0665*  ; Missing character 118
04A41A             0666*  ; Missing character 119
04A41A             0667*  ; Missing character 120
04A41A             0668*  ; Missing character 121
04A41A             0669*  ; Missing character 122
04A41A             0670*  
04A41A C9          0671*  	ret
04A41B             0672*  
04A41B 66 6F 6E 74 0673*  Frc032: db "fonts/rc/032.rgba2",0
       73 2F 72 63 
       2F 30 33 32 
       2E 72 67 62 
       61 32 00    
04A42E 66 6F 6E 74 0674*  Frc033: db "fonts/rc/033.rgba2",0
       73 2F 72 63 
       2F 30 33 33 
       2E 72 67 62 
       61 32 00    
04A441 66 6F 6E 74 0675*  Frc048: db "fonts/rc/048.rgba2",0
       73 2F 72 63 
       2F 30 34 38 
       2E 72 67 62 
       61 32 00    
04A454 66 6F 6E 74 0676*  Frc049: db "fonts/rc/049.rgba2",0
       73 2F 72 63 
       2F 30 34 39 
       2E 72 67 62 
       61 32 00    
04A467 66 6F 6E 74 0677*  Frc050: db "fonts/rc/050.rgba2",0
       73 2F 72 63 
       2F 30 35 30 
       2E 72 67 62 
       61 32 00    
04A47A 66 6F 6E 74 0678*  Frc051: db "fonts/rc/051.rgba2",0
       73 2F 72 63 
       2F 30 35 31 
       2E 72 67 62 
       61 32 00    
04A48D 66 6F 6E 74 0679*  Frc052: db "fonts/rc/052.rgba2",0
       73 2F 72 63 
       2F 30 35 32 
       2E 72 67 62 
       61 32 00    
04A4A0 66 6F 6E 74 0680*  Frc053: db "fonts/rc/053.rgba2",0
       73 2F 72 63 
       2F 30 35 33 
       2E 72 67 62 
       61 32 00    
04A4B3 66 6F 6E 74 0681*  Frc054: db "fonts/rc/054.rgba2",0
       73 2F 72 63 
       2F 30 35 34 
       2E 72 67 62 
       61 32 00    
04A4C6 66 6F 6E 74 0682*  Frc055: db "fonts/rc/055.rgba2",0
       73 2F 72 63 
       2F 30 35 35 
       2E 72 67 62 
       61 32 00    
04A4D9 66 6F 6E 74 0683*  Frc056: db "fonts/rc/056.rgba2",0
       73 2F 72 63 
       2F 30 35 36 
       2E 72 67 62 
       61 32 00    
04A4EC 66 6F 6E 74 0684*  Frc057: db "fonts/rc/057.rgba2",0
       73 2F 72 63 
       2F 30 35 37 
       2E 72 67 62 
       61 32 00    
04A4FF 66 6F 6E 74 0685*  Frc063: db "fonts/rc/063.rgba2",0
       73 2F 72 63 
       2F 30 36 33 
       2E 72 67 62 
       61 32 00    
04A512 66 6F 6E 74 0686*  Frc065: db "fonts/rc/065.rgba2",0
       73 2F 72 63 
       2F 30 36 35 
       2E 72 67 62 
       61 32 00    
04A525 66 6F 6E 74 0687*  Frc066: db "fonts/rc/066.rgba2",0
       73 2F 72 63 
       2F 30 36 36 
       2E 72 67 62 
       61 32 00    
04A538 66 6F 6E 74 0688*  Frc067: db "fonts/rc/067.rgba2",0
       73 2F 72 63 
       2F 30 36 37 
       2E 72 67 62 
       61 32 00    
04A54B 66 6F 6E 74 0689*  Frc068: db "fonts/rc/068.rgba2",0
       73 2F 72 63 
       2F 30 36 38 
       2E 72 67 62 
       61 32 00    
04A55E 66 6F 6E 74 0690*  Frc069: db "fonts/rc/069.rgba2",0
       73 2F 72 63 
       2F 30 36 39 
       2E 72 67 62 
       61 32 00    
04A571 66 6F 6E 74 0691*  Frc070: db "fonts/rc/070.rgba2",0
       73 2F 72 63 
       2F 30 37 30 
       2E 72 67 62 
       61 32 00    
04A584 66 6F 6E 74 0692*  Frc071: db "fonts/rc/071.rgba2",0
       73 2F 72 63 
       2F 30 37 31 
       2E 72 67 62 
       61 32 00    
04A597 66 6F 6E 74 0693*  Frc072: db "fonts/rc/072.rgba2",0
       73 2F 72 63 
       2F 30 37 32 
       2E 72 67 62 
       61 32 00    
04A5AA 66 6F 6E 74 0694*  Frc073: db "fonts/rc/073.rgba2",0
       73 2F 72 63 
       2F 30 37 33 
       2E 72 67 62 
       61 32 00    
04A5BD 66 6F 6E 74 0695*  Frc074: db "fonts/rc/074.rgba2",0
       73 2F 72 63 
       2F 30 37 34 
       2E 72 67 62 
       61 32 00    
04A5D0 66 6F 6E 74 0696*  Frc075: db "fonts/rc/075.rgba2",0
       73 2F 72 63 
       2F 30 37 35 
       2E 72 67 62 
       61 32 00    
04A5E3 66 6F 6E 74 0697*  Frc076: db "fonts/rc/076.rgba2",0
       73 2F 72 63 
       2F 30 37 36 
       2E 72 67 62 
       61 32 00    
04A5F6 66 6F 6E 74 0698*  Frc077: db "fonts/rc/077.rgba2",0
       73 2F 72 63 
       2F 30 37 37 
       2E 72 67 62 
       61 32 00    
04A609 66 6F 6E 74 0699*  Frc078: db "fonts/rc/078.rgba2",0
       73 2F 72 63 
       2F 30 37 38 
       2E 72 67 62 
       61 32 00    
04A61C 66 6F 6E 74 0700*  Frc079: db "fonts/rc/079.rgba2",0
       73 2F 72 63 
       2F 30 37 39 
       2E 72 67 62 
       61 32 00    
04A62F 66 6F 6E 74 0701*  Frc080: db "fonts/rc/080.rgba2",0
       73 2F 72 63 
       2F 30 38 30 
       2E 72 67 62 
       61 32 00    
04A642 66 6F 6E 74 0702*  Frc081: db "fonts/rc/081.rgba2",0
       73 2F 72 63 
       2F 30 38 31 
       2E 72 67 62 
       61 32 00    
04A655 66 6F 6E 74 0703*  Frc082: db "fonts/rc/082.rgba2",0
       73 2F 72 63 
       2F 30 38 32 
       2E 72 67 62 
       61 32 00    
04A668 66 6F 6E 74 0704*  Frc083: db "fonts/rc/083.rgba2",0
       73 2F 72 63 
       2F 30 38 33 
       2E 72 67 62 
       61 32 00    
04A67B 66 6F 6E 74 0705*  Frc084: db "fonts/rc/084.rgba2",0
       73 2F 72 63 
       2F 30 38 34 
       2E 72 67 62 
       61 32 00    
04A68E 66 6F 6E 74 0706*  Frc085: db "fonts/rc/085.rgba2",0
       73 2F 72 63 
       2F 30 38 35 
       2E 72 67 62 
       61 32 00    
04A6A1 66 6F 6E 74 0707*  Frc086: db "fonts/rc/086.rgba2",0
       73 2F 72 63 
       2F 30 38 36 
       2E 72 67 62 
       61 32 00    
04A6B4 66 6F 6E 74 0708*  Frc087: db "fonts/rc/087.rgba2",0
       73 2F 72 63 
       2F 30 38 37 
       2E 72 67 62 
       61 32 00    
04A6C7 66 6F 6E 74 0709*  Frc088: db "fonts/rc/088.rgba2",0
       73 2F 72 63 
       2F 30 38 38 
       2E 72 67 62 
       61 32 00    
04A6DA 66 6F 6E 74 0710*  Frc089: db "fonts/rc/089.rgba2",0
       73 2F 72 63 
       2F 30 38 39 
       2E 72 67 62 
       61 32 00    
04A6ED 66 6F 6E 74 0711*  Frc090: db "fonts/rc/090.rgba2",0
       73 2F 72 63 
       2F 30 39 30 
       2E 72 67 62 
       61 32 00    
04A700             0020   	include "src/asm/ui.asm"
04A700             0001*  ; ui routines will go here
04A700             0021   	include "src/asm/ui_img.asm"
04A700             0001*  ; Bitmap indices:
04A700             0002*  BUF_UI_BJ_025: equ 0x2000
04A700             0003*  BUF_UI_BJ_050: equ 0x2001
04A700             0004*  BUF_UI_BJ_075: equ 0x2002
04A700             0005*  BUF_UI_BJ_100: equ 0x2003
04A700             0006*  BUF_UI_BJ_120_120: equ 0x2004
04A700             0007*  BUF_UI_LOWER_PANEL: equ 0x2005
04A700             0008*  BUF_UI_LOWER_PANEL_GATLING: equ 0x2006
04A700             0009*  BUF_UI_LOWER_PANEL_KNIFE: equ 0x2007
04A700             0010*  BUF_UI_LOWER_PANEL_MACHINE_GUN: equ 0x2008
04A700             0011*  BUF_UI_LOWER_PANEL_PISTOL: equ 0x2009
04A700             0012*  BUF_UI_SPLASH: equ 0x200A
04A700             0013*  
04A700             0014*  ; Import .rgba2 bitmap files and load them into VDP buffers
04A700             0015*  load_ui_images:
04A700             0016*  
04A700 21 C4 A8 04 0017*  	ld hl,F_UI_bj_025
04A704 11 C6 D3 04 0018*  	ld de,filedata
04A708 01 00 00 01 0019*  	ld bc,65536
04A70C 3E 01       0020*  	ld a,mos_load
04A70E 5B CF       0021*  	RST.LIL 08h
04A710 21 00 20 00 0022*  	ld hl,BUF_UI_BJ_025
04A714 01 20 00 00 0023*  	ld bc,32
04A718 11 20 00 00 0024*  	ld de,32
04A71C DD 21 00 04 0025*  	ld ix,1024
       00          
04A721 CD 05 C9 04 0026*  	call vdu_load_img
04A725 3E 2E       0027*  	LD A, '.'
04A727 5B D7       0028*  	RST.LIL 10h
04A729             0029*  
04A729 21 D4 A8 04 0030*  	ld hl,F_UI_bj_050
04A72D 11 C6 D3 04 0031*  	ld de,filedata
04A731 01 00 00 01 0032*  	ld bc,65536
04A735 3E 01       0033*  	ld a,mos_load
04A737 5B CF       0034*  	RST.LIL 08h
04A739 21 01 20 00 0035*  	ld hl,BUF_UI_BJ_050
04A73D 01 20 00 00 0036*  	ld bc,32
04A741 11 20 00 00 0037*  	ld de,32
04A745 DD 21 00 04 0038*  	ld ix,1024
       00          
04A74A CD 05 C9 04 0039*  	call vdu_load_img
04A74E 3E 2E       0040*  	LD A, '.'
04A750 5B D7       0041*  	RST.LIL 10h
04A752             0042*  
04A752 21 E4 A8 04 0043*  	ld hl,F_UI_bj_075
04A756 11 C6 D3 04 0044*  	ld de,filedata
04A75A 01 00 00 01 0045*  	ld bc,65536
04A75E 3E 01       0046*  	ld a,mos_load
04A760 5B CF       0047*  	RST.LIL 08h
04A762 21 02 20 00 0048*  	ld hl,BUF_UI_BJ_075
04A766 01 20 00 00 0049*  	ld bc,32
04A76A 11 20 00 00 0050*  	ld de,32
04A76E DD 21 00 04 0051*  	ld ix,1024
       00          
04A773 CD 05 C9 04 0052*  	call vdu_load_img
04A777 3E 2E       0053*  	LD A, '.'
04A779 5B D7       0054*  	RST.LIL 10h
04A77B             0055*  
04A77B 21 F4 A8 04 0056*  	ld hl,F_UI_bj_100
04A77F 11 C6 D3 04 0057*  	ld de,filedata
04A783 01 00 00 01 0058*  	ld bc,65536
04A787 3E 01       0059*  	ld a,mos_load
04A789 5B CF       0060*  	RST.LIL 08h
04A78B 21 03 20 00 0061*  	ld hl,BUF_UI_BJ_100
04A78F 01 20 00 00 0062*  	ld bc,32
04A793 11 20 00 00 0063*  	ld de,32
04A797 DD 21 00 04 0064*  	ld ix,1024
       00          
04A79C CD 05 C9 04 0065*  	call vdu_load_img
04A7A0 3E 2E       0066*  	LD A, '.'
04A7A2 5B D7       0067*  	RST.LIL 10h
04A7A4             0068*  
04A7A4 21 04 A9 04 0069*  	ld hl,F_UI_bj_120_120
04A7A8 11 C6 D3 04 0070*  	ld de,filedata
04A7AC 01 00 00 01 0071*  	ld bc,65536
04A7B0 3E 01       0072*  	ld a,mos_load
04A7B2 5B CF       0073*  	RST.LIL 08h
04A7B4 21 04 20 00 0074*  	ld hl,BUF_UI_BJ_120_120
04A7B8 01 78 00 00 0075*  	ld bc,120
04A7BC 11 78 00 00 0076*  	ld de,120
04A7C0 DD 21 40 38 0077*  	ld ix,14400
       00          
04A7C5 CD 05 C9 04 0078*  	call vdu_load_img
04A7C9 3E 2E       0079*  	LD A, '.'
04A7CB 5B D7       0080*  	RST.LIL 10h
04A7CD             0081*  
04A7CD 21 18 A9 04 0082*  	ld hl,F_UI_lower_panel
04A7D1 11 C6 D3 04 0083*  	ld de,filedata
04A7D5 01 00 00 01 0084*  	ld bc,65536
04A7D9 3E 01       0085*  	ld a,mos_load
04A7DB 5B CF       0086*  	RST.LIL 08h
04A7DD 21 05 20 00 0087*  	ld hl,BUF_UI_LOWER_PANEL
04A7E1 01 40 01 00 0088*  	ld bc,320
04A7E5 11 50 00 00 0089*  	ld de,80
04A7E9 DD 21 00 64 0090*  	ld ix,25600
       00          
04A7EE CD 05 C9 04 0091*  	call vdu_load_img
04A7F2 3E 2E       0092*  	LD A, '.'
04A7F4 5B D7       0093*  	RST.LIL 10h
04A7F6             0094*  
04A7F6 21 2D A9 04 0095*  	ld hl,F_UI_lower_panel_gatling
04A7FA 11 C6 D3 04 0096*  	ld de,filedata
04A7FE 01 00 00 01 0097*  	ld bc,65536
04A802 3E 01       0098*  	ld a,mos_load
04A804 5B CF       0099*  	RST.LIL 08h
04A806 21 06 20 00 0100*  	ld hl,BUF_UI_LOWER_PANEL_GATLING
04A80A 01 28 00 00 0101*  	ld bc,40
04A80E 11 14 00 00 0102*  	ld de,20
04A812 DD 21 20 03 0103*  	ld ix,800
       00          
04A817 CD 05 C9 04 0104*  	call vdu_load_img
04A81B 3E 2E       0105*  	LD A, '.'
04A81D 5B D7       0106*  	RST.LIL 10h
04A81F             0107*  
04A81F 21 4A A9 04 0108*  	ld hl,F_UI_lower_panel_knife
04A823 11 C6 D3 04 0109*  	ld de,filedata
04A827 01 00 00 01 0110*  	ld bc,65536
04A82B 3E 01       0111*  	ld a,mos_load
04A82D 5B CF       0112*  	RST.LIL 08h
04A82F 21 07 20 00 0113*  	ld hl,BUF_UI_LOWER_PANEL_KNIFE
04A833 01 28 00 00 0114*  	ld bc,40
04A837 11 14 00 00 0115*  	ld de,20
04A83B DD 21 20 03 0116*  	ld ix,800
       00          
04A840 CD 05 C9 04 0117*  	call vdu_load_img
04A844 3E 2E       0118*  	LD A, '.'
04A846 5B D7       0119*  	RST.LIL 10h
04A848             0120*  
04A848 21 65 A9 04 0121*  	ld hl,F_UI_lower_panel_machine_gun
04A84C 11 C6 D3 04 0122*  	ld de,filedata
04A850 01 00 00 01 0123*  	ld bc,65536
04A854 3E 01       0124*  	ld a,mos_load
04A856 5B CF       0125*  	RST.LIL 08h
04A858 21 08 20 00 0126*  	ld hl,BUF_UI_LOWER_PANEL_MACHINE_GUN
04A85C 01 28 00 00 0127*  	ld bc,40
04A860 11 14 00 00 0128*  	ld de,20
04A864 DD 21 20 03 0129*  	ld ix,800
       00          
04A869 CD 05 C9 04 0130*  	call vdu_load_img
04A86D 3E 2E       0131*  	LD A, '.'
04A86F 5B D7       0132*  	RST.LIL 10h
04A871             0133*  
04A871 21 86 A9 04 0134*  	ld hl,F_UI_lower_panel_pistol
04A875 11 C6 D3 04 0135*  	ld de,filedata
04A879 01 00 00 01 0136*  	ld bc,65536
04A87D 3E 01       0137*  	ld a,mos_load
04A87F 5B CF       0138*  	RST.LIL 08h
04A881 21 09 20 00 0139*  	ld hl,BUF_UI_LOWER_PANEL_PISTOL
04A885 01 28 00 00 0140*  	ld bc,40
04A889 11 14 00 00 0141*  	ld de,20
04A88D DD 21 20 03 0142*  	ld ix,800
       00          
04A892 CD 05 C9 04 0143*  	call vdu_load_img
04A896 3E 2E       0144*  	LD A, '.'
04A898 5B D7       0145*  	RST.LIL 10h
04A89A             0146*  
04A89A 21 A2 A9 04 0147*  	ld hl,F_UI_splash
04A89E 11 C6 D3 04 0148*  	ld de,filedata
04A8A2 01 00 00 01 0149*  	ld bc,65536
04A8A6 3E 01       0150*  	ld a,mos_load
04A8A8 5B CF       0151*  	RST.LIL 08h
04A8AA 21 0A 20 00 0152*  	ld hl,BUF_UI_SPLASH
04A8AE 01 40 01 00 0153*  	ld bc,320
04A8B2 11 A0 00 00 0154*  	ld de,160
04A8B6 DD 21 00 C8 0155*  	ld ix,51200
       00          
04A8BB CD 05 C9 04 0156*  	call vdu_load_img
04A8BF 3E 2E       0157*  	LD A, '.'
04A8C1 5B D7       0158*  	RST.LIL 10h
04A8C3             0159*  
04A8C3 C9          0160*  	ret
04A8C4             0161*  
04A8C4 75 69 2F 62 0162*  F_UI_bj_025: db "ui/bj_025.rgba2",0
       6A 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
04A8D4 75 69 2F 62 0163*  F_UI_bj_050: db "ui/bj_050.rgba2",0
       6A 5F 30 35 
       30 2E 72 67 
       62 61 32 00 
04A8E4 75 69 2F 62 0164*  F_UI_bj_075: db "ui/bj_075.rgba2",0
       6A 5F 30 37 
       35 2E 72 67 
       62 61 32 00 
04A8F4 75 69 2F 62 0165*  F_UI_bj_100: db "ui/bj_100.rgba2",0
       6A 5F 31 30 
       30 2E 72 67 
       62 61 32 00 
04A904 75 69 2F 62 0166*  F_UI_bj_120_120: db "ui/bj_120_120.rgba2",0
       6A 5F 31 32 
       30 5F 31 32 
       30 2E 72 67 
       62 61 32 00 
04A918 75 69 2F 6C 0167*  F_UI_lower_panel: db "ui/lower_panel.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 2E 72 
       67 62 61 32 
       00          
04A92D 75 69 2F 6C 0168*  F_UI_lower_panel_gatling: db "ui/lower_panel_gatling.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 67 
       61 74 6C 69 
       6E 67 2E 72 
       67 62 61 32 
       00          
04A94A 75 69 2F 6C 0169*  F_UI_lower_panel_knife: db "ui/lower_panel_knife.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 6B 
       6E 69 66 65 
       2E 72 67 62 
       61 32 00    
04A965 75 69 2F 6C 0170*  F_UI_lower_panel_machine_gun: db "ui/lower_panel_machine_gun.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 6D 
       61 63 68 69 
       6E 65 5F 67 
       75 6E 2E 72 
       67 62 61 32 
       00          
04A986 75 69 2F 6C 0171*  F_UI_lower_panel_pistol: db "ui/lower_panel_pistol.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 70 
       69 73 74 6F 
       6C 2E 72 67 
       62 61 32 00 
04A9A2 75 69 2F 73 0172*  F_UI_splash: db "ui/splash.rgba2",0
       70 6C 61 73 
       68 2E 72 67 
       62 61 32 00 
04A9B2             0022   	include "src/asm/ui_img_bj.asm"
04A9B2             0001*  ; Bitmap indices:
04A9B2             0002*  BUF_UI_BJ_GATLING_00: equ 0x2100
04A9B2             0003*  BUF_UI_BJ_GATLING_01: equ 0x2101
04A9B2             0004*  BUF_UI_BJ_GATLING_02: equ 0x2102
04A9B2             0005*  BUF_UI_BJ_GATLING_03: equ 0x2103
04A9B2             0006*  BUF_UI_BJ_GATLING_04: equ 0x2104
04A9B2             0007*  BUF_UI_BJ_KNIFE_00: equ 0x2105
04A9B2             0008*  BUF_UI_BJ_KNIFE_01: equ 0x2106
04A9B2             0009*  BUF_UI_BJ_KNIFE_02: equ 0x2107
04A9B2             0010*  BUF_UI_BJ_KNIFE_03: equ 0x2108
04A9B2             0011*  BUF_UI_BJ_KNIFE_04: equ 0x2109
04A9B2             0012*  BUF_UI_BJ_MACHINE_GUN_00: equ 0x210A
04A9B2             0013*  BUF_UI_BJ_MACHINE_GUN_01: equ 0x210B
04A9B2             0014*  BUF_UI_BJ_MACHINE_GUN_02: equ 0x210C
04A9B2             0015*  BUF_UI_BJ_MACHINE_GUN_03: equ 0x210D
04A9B2             0016*  BUF_UI_BJ_MACHINE_GUN_04: equ 0x210E
04A9B2             0017*  BUF_UI_BJ_PISTOL_00: equ 0x210F
04A9B2             0018*  BUF_UI_BJ_PISTOL_01: equ 0x2110
04A9B2             0019*  BUF_UI_BJ_PISTOL_02: equ 0x2111
04A9B2             0020*  BUF_UI_BJ_PISTOL_03: equ 0x2112
04A9B2             0021*  BUF_UI_BJ_PISTOL_04: equ 0x2113
04A9B2             0022*  
04A9B2             0023*  ; Import .rgba2 bitmap files and load them into VDP buffers
04A9B2             0024*  load_ui_images_bj:
04A9B2             0025*  
04A9B2 21 E7 AC 04 0026*  	ld hl,F_UI_bj_gatling_00
04A9B6 11 C6 D3 04 0027*  	ld de,filedata
04A9BA 01 00 00 01 0028*  	ld bc,65536
04A9BE 3E 01       0029*  	ld a,mos_load
04A9C0 5B CF       0030*  	RST.LIL 08h
04A9C2 21 00 21 00 0031*  	ld hl,BUF_UI_BJ_GATLING_00
04A9C6 01 40 00 00 0032*  	ld bc,64
04A9CA 11 40 00 00 0033*  	ld de,64
04A9CE DD 21 00 10 0034*  	ld ix,4096
       00          
04A9D3 CD 05 C9 04 0035*  	call vdu_load_img
04A9D7 3E 2E       0036*  	LD A, '.'
04A9D9 5B D7       0037*  	RST.LIL 10h
04A9DB             0038*  
04A9DB 21 01 AD 04 0039*  	ld hl,F_UI_bj_gatling_01
04A9DF 11 C6 D3 04 0040*  	ld de,filedata
04A9E3 01 00 00 01 0041*  	ld bc,65536
04A9E7 3E 01       0042*  	ld a,mos_load
04A9E9 5B CF       0043*  	RST.LIL 08h
04A9EB 21 01 21 00 0044*  	ld hl,BUF_UI_BJ_GATLING_01
04A9EF 01 40 00 00 0045*  	ld bc,64
04A9F3 11 40 00 00 0046*  	ld de,64
04A9F7 DD 21 00 10 0047*  	ld ix,4096
       00          
04A9FC CD 05 C9 04 0048*  	call vdu_load_img
04AA00 3E 2E       0049*  	LD A, '.'
04AA02 5B D7       0050*  	RST.LIL 10h
04AA04             0051*  
04AA04 21 1B AD 04 0052*  	ld hl,F_UI_bj_gatling_02
04AA08 11 C6 D3 04 0053*  	ld de,filedata
04AA0C 01 00 00 01 0054*  	ld bc,65536
04AA10 3E 01       0055*  	ld a,mos_load
04AA12 5B CF       0056*  	RST.LIL 08h
04AA14 21 02 21 00 0057*  	ld hl,BUF_UI_BJ_GATLING_02
04AA18 01 40 00 00 0058*  	ld bc,64
04AA1C 11 40 00 00 0059*  	ld de,64
04AA20 DD 21 00 10 0060*  	ld ix,4096
       00          
04AA25 CD 05 C9 04 0061*  	call vdu_load_img
04AA29 3E 2E       0062*  	LD A, '.'
04AA2B 5B D7       0063*  	RST.LIL 10h
04AA2D             0064*  
04AA2D 21 35 AD 04 0065*  	ld hl,F_UI_bj_gatling_03
04AA31 11 C6 D3 04 0066*  	ld de,filedata
04AA35 01 00 00 01 0067*  	ld bc,65536
04AA39 3E 01       0068*  	ld a,mos_load
04AA3B 5B CF       0069*  	RST.LIL 08h
04AA3D 21 03 21 00 0070*  	ld hl,BUF_UI_BJ_GATLING_03
04AA41 01 40 00 00 0071*  	ld bc,64
04AA45 11 40 00 00 0072*  	ld de,64
04AA49 DD 21 00 10 0073*  	ld ix,4096
       00          
04AA4E CD 05 C9 04 0074*  	call vdu_load_img
04AA52 3E 2E       0075*  	LD A, '.'
04AA54 5B D7       0076*  	RST.LIL 10h
04AA56             0077*  
04AA56 21 4F AD 04 0078*  	ld hl,F_UI_bj_gatling_04
04AA5A 11 C6 D3 04 0079*  	ld de,filedata
04AA5E 01 00 00 01 0080*  	ld bc,65536
04AA62 3E 01       0081*  	ld a,mos_load
04AA64 5B CF       0082*  	RST.LIL 08h
04AA66 21 04 21 00 0083*  	ld hl,BUF_UI_BJ_GATLING_04
04AA6A 01 40 00 00 0084*  	ld bc,64
04AA6E 11 40 00 00 0085*  	ld de,64
04AA72 DD 21 00 10 0086*  	ld ix,4096
       00          
04AA77 CD 05 C9 04 0087*  	call vdu_load_img
04AA7B 3E 2E       0088*  	LD A, '.'
04AA7D 5B D7       0089*  	RST.LIL 10h
04AA7F             0090*  
04AA7F 21 69 AD 04 0091*  	ld hl,F_UI_bj_knife_00
04AA83 11 C6 D3 04 0092*  	ld de,filedata
04AA87 01 00 00 01 0093*  	ld bc,65536
04AA8B 3E 01       0094*  	ld a,mos_load
04AA8D 5B CF       0095*  	RST.LIL 08h
04AA8F 21 05 21 00 0096*  	ld hl,BUF_UI_BJ_KNIFE_00
04AA93 01 40 00 00 0097*  	ld bc,64
04AA97 11 40 00 00 0098*  	ld de,64
04AA9B DD 21 00 10 0099*  	ld ix,4096
       00          
04AAA0 CD 05 C9 04 0100*  	call vdu_load_img
04AAA4 3E 2E       0101*  	LD A, '.'
04AAA6 5B D7       0102*  	RST.LIL 10h
04AAA8             0103*  
04AAA8 21 81 AD 04 0104*  	ld hl,F_UI_bj_knife_01
04AAAC 11 C6 D3 04 0105*  	ld de,filedata
04AAB0 01 00 00 01 0106*  	ld bc,65536
04AAB4 3E 01       0107*  	ld a,mos_load
04AAB6 5B CF       0108*  	RST.LIL 08h
04AAB8 21 06 21 00 0109*  	ld hl,BUF_UI_BJ_KNIFE_01
04AABC 01 40 00 00 0110*  	ld bc,64
04AAC0 11 40 00 00 0111*  	ld de,64
04AAC4 DD 21 00 10 0112*  	ld ix,4096
       00          
04AAC9 CD 05 C9 04 0113*  	call vdu_load_img
04AACD 3E 2E       0114*  	LD A, '.'
04AACF 5B D7       0115*  	RST.LIL 10h
04AAD1             0116*  
04AAD1 21 99 AD 04 0117*  	ld hl,F_UI_bj_knife_02
04AAD5 11 C6 D3 04 0118*  	ld de,filedata
04AAD9 01 00 00 01 0119*  	ld bc,65536
04AADD 3E 01       0120*  	ld a,mos_load
04AADF 5B CF       0121*  	RST.LIL 08h
04AAE1 21 07 21 00 0122*  	ld hl,BUF_UI_BJ_KNIFE_02
04AAE5 01 40 00 00 0123*  	ld bc,64
04AAE9 11 40 00 00 0124*  	ld de,64
04AAED DD 21 00 10 0125*  	ld ix,4096
       00          
04AAF2 CD 05 C9 04 0126*  	call vdu_load_img
04AAF6 3E 2E       0127*  	LD A, '.'
04AAF8 5B D7       0128*  	RST.LIL 10h
04AAFA             0129*  
04AAFA 21 B1 AD 04 0130*  	ld hl,F_UI_bj_knife_03
04AAFE 11 C6 D3 04 0131*  	ld de,filedata
04AB02 01 00 00 01 0132*  	ld bc,65536
04AB06 3E 01       0133*  	ld a,mos_load
04AB08 5B CF       0134*  	RST.LIL 08h
04AB0A 21 08 21 00 0135*  	ld hl,BUF_UI_BJ_KNIFE_03
04AB0E 01 40 00 00 0136*  	ld bc,64
04AB12 11 40 00 00 0137*  	ld de,64
04AB16 DD 21 00 10 0138*  	ld ix,4096
       00          
04AB1B CD 05 C9 04 0139*  	call vdu_load_img
04AB1F 3E 2E       0140*  	LD A, '.'
04AB21 5B D7       0141*  	RST.LIL 10h
04AB23             0142*  
04AB23 21 C9 AD 04 0143*  	ld hl,F_UI_bj_knife_04
04AB27 11 C6 D3 04 0144*  	ld de,filedata
04AB2B 01 00 00 01 0145*  	ld bc,65536
04AB2F 3E 01       0146*  	ld a,mos_load
04AB31 5B CF       0147*  	RST.LIL 08h
04AB33 21 09 21 00 0148*  	ld hl,BUF_UI_BJ_KNIFE_04
04AB37 01 40 00 00 0149*  	ld bc,64
04AB3B 11 40 00 00 0150*  	ld de,64
04AB3F DD 21 00 10 0151*  	ld ix,4096
       00          
04AB44 CD 05 C9 04 0152*  	call vdu_load_img
04AB48 3E 2E       0153*  	LD A, '.'
04AB4A 5B D7       0154*  	RST.LIL 10h
04AB4C             0155*  
04AB4C 21 E1 AD 04 0156*  	ld hl,F_UI_bj_machine_gun_00
04AB50 11 C6 D3 04 0157*  	ld de,filedata
04AB54 01 00 00 01 0158*  	ld bc,65536
04AB58 3E 01       0159*  	ld a,mos_load
04AB5A 5B CF       0160*  	RST.LIL 08h
04AB5C 21 0A 21 00 0161*  	ld hl,BUF_UI_BJ_MACHINE_GUN_00
04AB60 01 40 00 00 0162*  	ld bc,64
04AB64 11 40 00 00 0163*  	ld de,64
04AB68 DD 21 00 10 0164*  	ld ix,4096
       00          
04AB6D CD 05 C9 04 0165*  	call vdu_load_img
04AB71 3E 2E       0166*  	LD A, '.'
04AB73 5B D7       0167*  	RST.LIL 10h
04AB75             0168*  
04AB75 21 FF AD 04 0169*  	ld hl,F_UI_bj_machine_gun_01
04AB79 11 C6 D3 04 0170*  	ld de,filedata
04AB7D 01 00 00 01 0171*  	ld bc,65536
04AB81 3E 01       0172*  	ld a,mos_load
04AB83 5B CF       0173*  	RST.LIL 08h
04AB85 21 0B 21 00 0174*  	ld hl,BUF_UI_BJ_MACHINE_GUN_01
04AB89 01 40 00 00 0175*  	ld bc,64
04AB8D 11 40 00 00 0176*  	ld de,64
04AB91 DD 21 00 10 0177*  	ld ix,4096
       00          
04AB96 CD 05 C9 04 0178*  	call vdu_load_img
04AB9A 3E 2E       0179*  	LD A, '.'
04AB9C 5B D7       0180*  	RST.LIL 10h
04AB9E             0181*  
04AB9E 21 1D AE 04 0182*  	ld hl,F_UI_bj_machine_gun_02
04ABA2 11 C6 D3 04 0183*  	ld de,filedata
04ABA6 01 00 00 01 0184*  	ld bc,65536
04ABAA 3E 01       0185*  	ld a,mos_load
04ABAC 5B CF       0186*  	RST.LIL 08h
04ABAE 21 0C 21 00 0187*  	ld hl,BUF_UI_BJ_MACHINE_GUN_02
04ABB2 01 40 00 00 0188*  	ld bc,64
04ABB6 11 40 00 00 0189*  	ld de,64
04ABBA DD 21 00 10 0190*  	ld ix,4096
       00          
04ABBF CD 05 C9 04 0191*  	call vdu_load_img
04ABC3 3E 2E       0192*  	LD A, '.'
04ABC5 5B D7       0193*  	RST.LIL 10h
04ABC7             0194*  
04ABC7 21 3B AE 04 0195*  	ld hl,F_UI_bj_machine_gun_03
04ABCB 11 C6 D3 04 0196*  	ld de,filedata
04ABCF 01 00 00 01 0197*  	ld bc,65536
04ABD3 3E 01       0198*  	ld a,mos_load
04ABD5 5B CF       0199*  	RST.LIL 08h
04ABD7 21 0D 21 00 0200*  	ld hl,BUF_UI_BJ_MACHINE_GUN_03
04ABDB 01 40 00 00 0201*  	ld bc,64
04ABDF 11 40 00 00 0202*  	ld de,64
04ABE3 DD 21 00 10 0203*  	ld ix,4096
       00          
04ABE8 CD 05 C9 04 0204*  	call vdu_load_img
04ABEC 3E 2E       0205*  	LD A, '.'
04ABEE 5B D7       0206*  	RST.LIL 10h
04ABF0             0207*  
04ABF0 21 59 AE 04 0208*  	ld hl,F_UI_bj_machine_gun_04
04ABF4 11 C6 D3 04 0209*  	ld de,filedata
04ABF8 01 00 00 01 0210*  	ld bc,65536
04ABFC 3E 01       0211*  	ld a,mos_load
04ABFE 5B CF       0212*  	RST.LIL 08h
04AC00 21 0E 21 00 0213*  	ld hl,BUF_UI_BJ_MACHINE_GUN_04
04AC04 01 40 00 00 0214*  	ld bc,64
04AC08 11 40 00 00 0215*  	ld de,64
04AC0C DD 21 00 10 0216*  	ld ix,4096
       00          
04AC11 CD 05 C9 04 0217*  	call vdu_load_img
04AC15 3E 2E       0218*  	LD A, '.'
04AC17 5B D7       0219*  	RST.LIL 10h
04AC19             0220*  
04AC19 21 77 AE 04 0221*  	ld hl,F_UI_bj_pistol_00
04AC1D 11 C6 D3 04 0222*  	ld de,filedata
04AC21 01 00 00 01 0223*  	ld bc,65536
04AC25 3E 01       0224*  	ld a,mos_load
04AC27 5B CF       0225*  	RST.LIL 08h
04AC29 21 0F 21 00 0226*  	ld hl,BUF_UI_BJ_PISTOL_00
04AC2D 01 40 00 00 0227*  	ld bc,64
04AC31 11 40 00 00 0228*  	ld de,64
04AC35 DD 21 00 10 0229*  	ld ix,4096
       00          
04AC3A CD 05 C9 04 0230*  	call vdu_load_img
04AC3E 3E 2E       0231*  	LD A, '.'
04AC40 5B D7       0232*  	RST.LIL 10h
04AC42             0233*  
04AC42 21 90 AE 04 0234*  	ld hl,F_UI_bj_pistol_01
04AC46 11 C6 D3 04 0235*  	ld de,filedata
04AC4A 01 00 00 01 0236*  	ld bc,65536
04AC4E 3E 01       0237*  	ld a,mos_load
04AC50 5B CF       0238*  	RST.LIL 08h
04AC52 21 10 21 00 0239*  	ld hl,BUF_UI_BJ_PISTOL_01
04AC56 01 40 00 00 0240*  	ld bc,64
04AC5A 11 40 00 00 0241*  	ld de,64
04AC5E DD 21 00 10 0242*  	ld ix,4096
       00          
04AC63 CD 05 C9 04 0243*  	call vdu_load_img
04AC67 3E 2E       0244*  	LD A, '.'
04AC69 5B D7       0245*  	RST.LIL 10h
04AC6B             0246*  
04AC6B 21 A9 AE 04 0247*  	ld hl,F_UI_bj_pistol_02
04AC6F 11 C6 D3 04 0248*  	ld de,filedata
04AC73 01 00 00 01 0249*  	ld bc,65536
04AC77 3E 01       0250*  	ld a,mos_load
04AC79 5B CF       0251*  	RST.LIL 08h
04AC7B 21 11 21 00 0252*  	ld hl,BUF_UI_BJ_PISTOL_02
04AC7F 01 40 00 00 0253*  	ld bc,64
04AC83 11 40 00 00 0254*  	ld de,64
04AC87 DD 21 00 10 0255*  	ld ix,4096
       00          
04AC8C CD 05 C9 04 0256*  	call vdu_load_img
04AC90 3E 2E       0257*  	LD A, '.'
04AC92 5B D7       0258*  	RST.LIL 10h
04AC94             0259*  
04AC94 21 C2 AE 04 0260*  	ld hl,F_UI_bj_pistol_03
04AC98 11 C6 D3 04 0261*  	ld de,filedata
04AC9C 01 00 00 01 0262*  	ld bc,65536
04ACA0 3E 01       0263*  	ld a,mos_load
04ACA2 5B CF       0264*  	RST.LIL 08h
04ACA4 21 12 21 00 0265*  	ld hl,BUF_UI_BJ_PISTOL_03
04ACA8 01 40 00 00 0266*  	ld bc,64
04ACAC 11 40 00 00 0267*  	ld de,64
04ACB0 DD 21 00 10 0268*  	ld ix,4096
       00          
04ACB5 CD 05 C9 04 0269*  	call vdu_load_img
04ACB9 3E 2E       0270*  	LD A, '.'
04ACBB 5B D7       0271*  	RST.LIL 10h
04ACBD             0272*  
04ACBD 21 DB AE 04 0273*  	ld hl,F_UI_bj_pistol_04
04ACC1 11 C6 D3 04 0274*  	ld de,filedata
04ACC5 01 00 00 01 0275*  	ld bc,65536
04ACC9 3E 01       0276*  	ld a,mos_load
04ACCB 5B CF       0277*  	RST.LIL 08h
04ACCD 21 13 21 00 0278*  	ld hl,BUF_UI_BJ_PISTOL_04
04ACD1 01 40 00 00 0279*  	ld bc,64
04ACD5 11 40 00 00 0280*  	ld de,64
04ACD9 DD 21 00 10 0281*  	ld ix,4096
       00          
04ACDE CD 05 C9 04 0282*  	call vdu_load_img
04ACE2 3E 2E       0283*  	LD A, '.'
04ACE4 5B D7       0284*  	RST.LIL 10h
04ACE6             0285*  
04ACE6 C9          0286*  	ret
04ACE7             0287*  
04ACE7 75 69 2F 62 0288*  F_UI_bj_gatling_00: db "ui/bj/bj_gatling_00.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 30 2E 
       72 67 62 61 
       32 00       
04AD01 75 69 2F 62 0289*  F_UI_bj_gatling_01: db "ui/bj/bj_gatling_01.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 31 2E 
       72 67 62 61 
       32 00       
04AD1B 75 69 2F 62 0290*  F_UI_bj_gatling_02: db "ui/bj/bj_gatling_02.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 32 2E 
       72 67 62 61 
       32 00       
04AD35 75 69 2F 62 0291*  F_UI_bj_gatling_03: db "ui/bj/bj_gatling_03.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 33 2E 
       72 67 62 61 
       32 00       
04AD4F 75 69 2F 62 0292*  F_UI_bj_gatling_04: db "ui/bj/bj_gatling_04.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 34 2E 
       72 67 62 61 
       32 00       
04AD69 75 69 2F 62 0293*  F_UI_bj_knife_00: db "ui/bj/bj_knife_00.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       30 2E 72 67 
       62 61 32 00 
04AD81 75 69 2F 62 0294*  F_UI_bj_knife_01: db "ui/bj/bj_knife_01.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       31 2E 72 67 
       62 61 32 00 
04AD99 75 69 2F 62 0295*  F_UI_bj_knife_02: db "ui/bj/bj_knife_02.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       32 2E 72 67 
       62 61 32 00 
04ADB1 75 69 2F 62 0296*  F_UI_bj_knife_03: db "ui/bj/bj_knife_03.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       33 2E 72 67 
       62 61 32 00 
04ADC9 75 69 2F 62 0297*  F_UI_bj_knife_04: db "ui/bj/bj_knife_04.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       34 2E 72 67 
       62 61 32 00 
04ADE1 75 69 2F 62 0298*  F_UI_bj_machine_gun_00: db "ui/bj/bj_machine_gun_00.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 30 2E 
       72 67 62 61 
       32 00       
04ADFF 75 69 2F 62 0299*  F_UI_bj_machine_gun_01: db "ui/bj/bj_machine_gun_01.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 31 2E 
       72 67 62 61 
       32 00       
04AE1D 75 69 2F 62 0300*  F_UI_bj_machine_gun_02: db "ui/bj/bj_machine_gun_02.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 32 2E 
       72 67 62 61 
       32 00       
04AE3B 75 69 2F 62 0301*  F_UI_bj_machine_gun_03: db "ui/bj/bj_machine_gun_03.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 33 2E 
       72 67 62 61 
       32 00       
04AE59 75 69 2F 62 0302*  F_UI_bj_machine_gun_04: db "ui/bj/bj_machine_gun_04.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 34 2E 
       72 67 62 61 
       32 00       
04AE77 75 69 2F 62 0303*  F_UI_bj_pistol_00: db "ui/bj/bj_pistol_00.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
04AE90 75 69 2F 62 0304*  F_UI_bj_pistol_01: db "ui/bj/bj_pistol_01.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
04AEA9 75 69 2F 62 0305*  F_UI_bj_pistol_02: db "ui/bj/bj_pistol_02.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
04AEC2 75 69 2F 62 0306*  F_UI_bj_pistol_03: db "ui/bj/bj_pistol_03.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
04AEDB 75 69 2F 62 0307*  F_UI_bj_pistol_04: db "ui/bj/bj_pistol_04.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
04AEF4             0023   	include "src/asm/sprites.asm"
04AEF4             0001*  ; ###### SPRITE TABLE FIELD INDICES ######
04AEF4             0002*  sprite_id:              equ 00 ; 1 byte  - unique spriteId, zero-based
04AEF4             0003*  sprite_obj:             equ 01 ; 1 byte  - type of sprite as defined in polys.asm, 255 is dead
04AEF4             0004*  sprite_health:          equ 02 ; 1 byte  - health points, signed binary, zero or negative is dead
04AEF4             0005*  sprite_triggers_mask:   equ 03 ; 1 byte  - bitmask for tracking which sprite behaviors have been triggered
04AEF4             0006*  sprite_x:               equ 04 ; 1 byte  - map x position
04AEF4             0007*  sprite_y:               equ 05 ; 1 byte  - map y position
04AEF4             0008*  sprite_orientation:     equ 06 ; 1 byte  - orientation
04AEF4             0009*  sprite_animation:       equ 07 ; 1 byte  - current animation index, zero-based
04AEF4             0010*  sprite_anim_timer:      equ 08 ; 1 byte  - when hits zero, draw next animation frame
04AEF4             0011*  sprite_move_timer:      equ 09 ; 1 byte  - when zero, go to next move program, or step
04AEF4             0012*  sprite_move_step:       equ 10 ; 1 byte  - stage in a move program sequence, varies
04AEF4             0013*  sprite_points:          equ 11 ; 1 byte  - points awarded for killing this sprite type, binary
04AEF4             0014*  sprite_health_modifier: equ 12 ; 1 byte  - health points deducted per successful attack on player, signed binary (positive gains health)
04AEF4             0015*  sprite_unassigned:      equ 13 ; 3 bytes - unassigned can be used for custom properties
04AEF4             0016*  sprite_record_size:     equ 16 ; 16 bytes per sprite record
04AEF4             0017*  
04AEF4             0018*  ; sprite_triggers_mask defs
04AEF4             0019*  sprite_trigger_see:     equ %00000001 ; player has been seen
04AEF4             0020*  sprite_trigger_use:     equ %00000010 ; player has used the sprite
04AEF4             0021*  sprite_trigger_hurt:    equ %00000100 ; player has hurt the sprite
04AEF4             0022*  sprite_trigger_kill:    equ %00001000 ; player has killed the sprite
04AEF4             0023*  sprite_trigger_move:    equ %00010000 ; sprite has moved
04AEF4             0024*  sprite_trigger_shoot:   equ %00100000 ; sprite has shot
04AEF4             0025*  
04AEF4             0026*  ; obj_ids for selected sprites
04AEF4             0027*  ; these are the sprite_obj values for the selected sprites
04AEF4             0028*  OBJ_ID_DEAD_GUARD:      equ 56
04AEF4             0029*  OBJ_ID_EXPLOSION:       equ 60
04AEF4             0030*  
04AEF4             0031*  ; ###### SPRITE TABLE VARIABLES ######
04AEF4             0032*  ; maximum number of sprites
04AEF4             0033*  table_max_records:      equ 64 ; at 16 bytes per record = 1024 bytes + 7 KiB for the map is an even 8 KiB
04AEF4             0034*  table_total_bytes:      equ table_max_records*sprite_record_size
04AEF4             0035*  
04AEF4             0036*  ; #### THIS DEFINES THE SPACE ALLOCATED TO THE SPRITE TABLE IN EACH MAP FILE ####
04AEF4             0037*  sprite_table_base:       equ 0xB7FC00
04AEF4             0038*  sprite_table_limit:      equ sprite_table_base + table_total_bytes + 1 ; in case we ever need to know where it ends
04AEF4             0039*  
04AEF4             0040*  ; pointer to top address of current record, initialized to sprite_table_base
04AEF4 00 FC B7    0041*  sprite_table_pointer: dl sprite_table_base
04AEF7             0042*  ; how many active sprites
04AEF7 00          0043*  table_active_sprites: db 0x00
04AEF8             0044*  ; flag indicating collision with screen edge
04AEF8             0045*  ; uses orientation codes to specify which edge(s)
04AEF8 00          0046*  sprite_screen_edge: db #00
04AEF9             0047*  ; next sprite id to use
04AEF9 00          0048*  sprite_next_id: db 0
04AEFA             0049*  
04AEFA             0050*  ; ######### COLLISION SPRITE PARAMETERS ##########
04AEFA             0051*  ; integer coordinates are all that are needed for collision calculations
04AEFA 00          0052*  collision_x: db 0x00
04AEFB 00          0053*  collision_y: db 0x00
04AEFC 00          0054*  collision_dim_x: db 0x00
04AEFD 00          0055*  collision_dim_y: db 0x00
04AEFE             0056*  
04AEFE             0057*  ; scratch variables
04AEFE 00          0058*  x: db 0x00 ; 8-bit signed integer
04AEFF 00          0059*  y: db 0x00 ; 8-bit signed integer
04AF00 00 00 00    0060*  x0: dl 0x000000 ; 16.8 signed fixed place
04AF03 00 00 00    0061*  y0: dl 0x000000 ; 16.8 signed fixed place
04AF06 00 00 00    0062*  incx1: dl 0x000000 ; 16.8 signed fixed place
04AF09 00 00 00    0063*  incy1: dl 0x000000 ; 16.8 signed fixed place
04AF0C 00 00 00    0064*  incx2: dl 0x000000 ; 16.8 signed fixed place
04AF0F 00 00 00    0065*  incy2: dl 0x000000 ; 16.8 signed fixed place
04AF12             0066*  
04AF12             0067*  ; sprite_heading: dl 0x000000 ; signed fixed 16.8
04AF12 00 00 00    0068*  radius: dl 0x000000 ; signed fixed 16.8 (but should always be positive)
04AF15 00 00 00    0069*  sin_sprite_heading: dl 0x000000 ; signed fixed 16.8
04AF18 00 00 00    0070*  cos_sprite_heading: dl 0x000000 ; signed fixed 16.8
04AF1B             0071*  
04AF1B             0072*  ; gets the next available sprite id
04AF1B             0073*  ; inputs; none
04AF1B             0074*  ; returns: if new sprite available, a = sprite id,
04AF1B             0075*  ;      ix pointing to new sprite vars, carry set
04AF1B             0076*  ;      otherwise, a = 0, carry flag reset, ix pointing to highest sprite vars
04AF1B             0077*  ; destroys: a,b,hl,ix
04AF1B             0078*  ; affects: bumps table_active_sprites by one
04AF1B             0079*  table_get_next_id:
04AF1B DD 21 00 FC 0080*      ld ix,sprite_table_base
       B7          
04AF20 11 10 00 00 0081*      ld de,sprite_record_size
04AF24 06 40       0082*      ld b,table_max_records
04AF26             0083*  @loop:
04AF26 DD 7E 01    0084*      ld a,(ix+sprite_obj)
04AF29 A7          0085*      and a
04AF2A 28 06       0086*      jr z,@found
04AF2C DD 19       0087*      add ix,de
04AF2E 10 F6       0088*      djnz @loop
04AF30             0089*  @notfound:
04AF30 AF          0090*      xor a ; a = 0 and reset carry flag indicating that we didn't find a free sprite
04AF31 C9          0091*      ret
04AF32             0092*  @found:
04AF32             0093*  ; bump number of active sprites
04AF32 21 F7 AE 04 0094*      ld hl,table_active_sprites
04AF36 34          0095*      inc (hl)
04AF37             0096*  ; return sprite id
04AF37 3E 40       0097*      ld a,table_max_records
04AF39 90          0098*      sub b
04AF3A 32 F9 AE 04 0099*      ld (sprite_next_id),a
04AF3E 37          0100*      scf ; sets carry flag indicating we found a free sprite
04AF3F C9          0101*      ret ; done
04AF40             0102*  
04AF40             0103*  ; deactivate the sprite with the given id
04AF40             0104*  ; inputs: a = sprite id
04AF40             0105*  ; outputs: nothing
04AF40             0106*  ; destroys: a,ix,de
04AF40             0107*  ; affects: decrements table_active_sprites by one
04AF40             0108*  table_deactivate_sprite:
04AF40 F5          0109*      push af ; save sprite id bc we need it later
04AF41 CD BA BB 04 0110*      call vdu_sprite_select
04AF45 CD 3E BC 04 0111*      call vdu_sprite_hide
04AF49 F1          0112*      pop af ; restore sprite id
04AF4A 11 00 00 00 0113*      ld de,0 ; clear deu
04AF4E 57          0114*      ld d,a
04AF4F 1E 10       0115*      ld e,sprite_record_size
04AF51 ED 5C       0116*      mlt de
04AF53 DD 21 00 FC 0117*      ld ix,sprite_table_base
       B7          
04AF58 DD 19       0118*      add ix,de
04AF5A AF          0119*      xor a
04AF5B DD 77 01    0120*      ld (ix+sprite_obj),a
04AF5E DD 21 F7 AE 0121*      ld ix,table_active_sprites
       04          
04AF63 DD 35 00    0122*      dec (ix)
04AF66 C9          0123*      ret
04AF67             0124*  
04AF67             0125*  ; sets iy and sprite_table_pointer to the sprite record with the given id
04AF67             0126*  ; inputs: a = sprite id
04AF67             0127*  ; outputs: iy = sprite_table_pointer to the sprite record with the given id
04AF67             0128*  ; destroys: bc
04AF67             0129*  sprite_set_pointer:
04AF67 47          0130*      ld b,a
04AF68 0E 10       0131*      ld c,sprite_record_size
04AF6A ED 4C       0132*      mlt bc
04AF6C FD 21 00 FC 0133*      ld iy,sprite_table_base
       B7          
04AF71 FD 09       0134*      add iy,bc
04AF73 FD 22 F4 AE 0135*      ld (sprite_table_pointer),iy
       04          
04AF78 C9          0136*      ret
04AF79             0137*  
04AF79             0138*  ; points ix at the map address of the sprite's current location
04AF79             0139*  ; inputs: iy pointed at sprite record
04AF79             0140*  ; outputs: ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
04AF79             0141*  ; destroys: af,de,hl
04AF79             0142*  sprite_get_cell:
04AF79             0143*  ; point ix at sprite's current map location
04AF79 11 00 00 00 0144*      ld de,0 ; make sure deu is zero
04AF7D FD 5E 04    0145*      ld e,(iy+sprite_x)
04AF80 FD 56 05    0146*      ld d,(iy+sprite_y)
04AF83 CD C2 70 04 0147*      call get_cell_from_coords
04AF87 C9          0148*      ret
04AF88             0149*  
04AF88             0150*  ; set the active sprite record to no sprite and remove it from the map cell it was in
04AF88             0151*  ; inputs: iy pointed at sprite record to clear
04AF88             0152*  sprite_kill:
04AF88             0153*  ; point ix at sprite's current map location
04AF88 CD 79 AF 04 0154*      call sprite_get_cell
04AF8C             0155*  ; set sprite table record to no sprite
04AF8C 21 FF FF FF 0156*      ld hl,0xFFFFFF ; a string of -1s
04AF90 FD 2F 00    0157*      ld (iy),hl ; populates sprite_id, sprite_obj and sprite_heatlth with -1, all indicating that it is quite dead
04AF93             0158*  
04AF93             0159*  ; set map cell to no sprite and normal floor
04AF93 21 01 FF 1D 0160*      ld hl,0x1DFF01 ; normal floor TODO: we should set these values dyanmically based on the defs in tiles.txt at some point
04AF97 DD 2F 00    0161*      ld (ix),hl
04AF9A 3E FF       0162*      ld a,0xFF ; no sprite
04AF9C DD 77 03    0163*      ld (ix+map_sprite_id),a ; now sprite is truly dead
04AF9F C9          0164*      ret
04AFA0             0165*  
04AFA0 00          0166*  sprite_new_x: db 0x00
04AFA1 00          0167*  sprite_new_y: db 0x00
04AFA2 00          0168*                db 0x00 ; padding
04AFA3             0169*  
04AFA3             0170*  ; checks if the sprite can move to the new position
04AFA3             0171*  ; inputs: iy pointed at sprite record, d,e = new y,x position
04AFA3             0172*  ; returns: a = 1 if move legal, 0 if not
04AFA3             0173*  ; modifies: sprite_new_x,y populated by de with new y,x position irrespecitve of legality
04AFA3             0174*  sprite_check_move:
04AFA3 ED 53 A0 AF 0175*      ld (sprite_new_x),de ; save new y,x position
       04          
04AFA8             0176*  ; check whether target cell is occupied by player
04AFA8 2A FE C1 04 0177*      ld hl,(cur_x) ; h,l = player y,x position
04AFAC AF          0178*      xor a ; clear carry
04AFAD ED 52       0179*      sbc hl,de ; zero if player is at target cell
04AFAF C2 BC AF 04 0180*      jp nz,@not_player
04AFB3 3E 01       0181*      ld a,sp_use ; TODO: add melee attack behavior to sprite routines
04AFB5 CD A4 B0 04 0182*      call do_sprite_behavior
04AFB9 3E 01       0183*      ld a,1 ; signals caller that move was legal
04AFBB C9          0184*      ret
04AFBC             0185*  @not_player:
04AFBC CD C2 70 04 0186*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
04AFC0             0187*  ; check whether target cell contains a sprite
04AFC0 DD 7E 03    0188*      ld a,(ix+map_sprite_id)
04AFC3 FE FF       0189*      cp 255 ; value if not sprite
04AFC5 CA CB AF 04 0190*      jp z,@not_sprite
04AFC9 AF          0191*      xor a ; signals caller that move was illegal
04AFCA C9          0192*      ret
04AFCB             0193*  @not_sprite:
04AFCB             0194*  ; read map type/status mask from target cell
04AFCB DD 7E 00    0195*      ld a,(ix+map_type_status)
04AFCE E6 01       0196*      and render_type_floor
04AFD0 C8          0197*      ret z ; target cell is not a floor so we can't move there
04AFD1             0198*  ; we are cleared for movement
04AFD1 CD FB AF 04 0199*      call sprite_move
04AFD5 3E 01       0200*      ld a,1 ; signals caller that move was legal
04AFD7 C9          0201*      ret
04AFD8             0202*  
04AFD8             0203*  ; creates a new sprite at the given map position
04AFD8             0204*  ; inputs: a = obj_id, ix pointing at map address, iy pointing at sprite address
04AFD8             0205*  sprite_spawn:
04AFD8             0206*  ; copy obj_id to map_obj_id
04AFD8 DD 77 02    0207*      ld (ix+map_obj_id),a
04AFDB             0208*  ; lookup map_type_status and sprite_obj from obj_id
04AFDB D6 0A       0209*      sub 10 ; first record in list is 10
04AFDD 21 BE 8A 04 0210*      ld hl,map_type_status_lut
04AFE1 47          0211*      ld b,a
04AFE2 0E 02       0212*      ld c,2 ; two bytes per record
04AFE4 ED 4C       0213*      mlt bc
04AFE6 09          0214*      add hl,bc ; hl points to lookup record
04AFE7 ED 27       0215*      ld hl,(hl) ; l = map_type_status, h = sprite_obj
04AFE9             0216*  ; copy sprite_obj to sprite record
04AFE9 FD 74 01    0217*      ld (iy+sprite_obj),h
04AFEC             0218*  ; copy map_type_status to map cell
04AFEC DD 75 00    0219*      ld (ix+map_type_status),l
04AFEF             0220*  ; write sprite_id to map cell
04AFEF FD 7E 00    0221*      ld a,(iy+sprite_id)
04AFF2 DD 77 03    0222*      ld (ix+map_sprite_id),a
04AFF5             0223*  ; write 255 to map_img_idx to indicate type sprite
04AFF5 3E FF       0224*      ld a,255
04AFF7 DD 77 01    0225*      ld (ix+map_img_idx),a
04AFFA             0226*  ; ; TODO: this will be clunky to do until the sprite table layout is adjusted to better separate definitional from state data
04AFFA             0227*  ; ; initialize sprite data
04AFFA             0228*  ;     ld a,sp_init
04AFFA             0229*  ;     call sprite_init_data
04AFFA C9          0230*      ret
04AFFB             0231*  
04AFFB             0232*  ; moves the sprite to the given map position
04AFFB             0233*  ; inputs: iy pointed at sprite record, sprite_new_x/y populated
04AFFB             0234*  sprite_move:
04AFFB             0235*  ; point ix to old map cell
04AFFB FD 17 04    0236*      ld de,(iy+sprite_x) ; d,e = sprite old y,x position
04AFFE CD C2 70 04 0237*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
04B002             0238*  ; update sprite record with new position
04B002 ED 5B A0 AF 0239*      ld de,(sprite_new_x) ; d,e = sprite new y,x position
       04          
04B007 FD 1F 04    0240*      ld (iy+sprite_x),de
04B00A             0241*  ; point iy to old map cell, ix to new map cell
04B00A DD E5       0242*      push ix ; old map cell
04B00C FD E1       0243*      pop iy ; new map cell
04B00E CD C2 70 04 0244*      call get_cell_from_coords ; d,e already had new y,x
04B012             0245*  ; copy old cell status to new
04B012 FD 27 00    0246*      ld hl,(iy+map_type_status)
04B015 DD 2F 00    0247*      ld (ix+map_type_status),hl
04B018 FD 7E 03    0248*      ld a,(iy+map_sprite_id)
04B01B DD 77 03    0249*      ld (ix+map_sprite_id),a
04B01E             0250*  ; set old map cell to no sprite and normal floor
04B01E 21 01 FF 1D 0251*      ld hl,0x1DFF01 ; normal floor TODO: we should set these values dynanmically based on the defs in tiles.txt at some point
04B022 FD 2F 00    0252*      ld (iy+map_type_status),hl
04B025 3E FF       0253*      ld a,0xFF ; no sprite
04B027 FD 77 03    0254*      ld (iy+map_sprite_id),a
04B02A C9          0255*      ret
04B02B             0256*  
04B02B             0257*  ; move a sprite in a random direction
04B02B             0258*  ; inputs: iy pointed at sprite record
04B02B             0259*  ; destroys: potentially everything
04B02B             0260*  sprite_move_random:
04B02B             0261*  ; point iy at sprite record
04B02B FD 2A F4 AE 0262*      ld iy,(sprite_table_pointer)
       04          
04B030             0263*  ; set number of times to try a random direction before giving up
04B030 06 08       0264*      ld b,8
04B032             0265*  @loop:
04B032 C5          0266*      push bc ; save loop counter
04B033             0267*  ; pick a random direction
04B033 CD 72 C7 04 0268*      call rand_8
04B037 E6 03       0269*      and 3 ; direction between 0 and 3
04B039             0270*  ; get dy,dx for moving once cell in the chosen direction
04B039 5F          0271*      ld e,a
04B03A 16 01       0272*      ld d,1 ; distance
04B03C CD E7 70 04 0273*      call get_dx_dy ; d,e = dy,dx
04B040             0274*  ; calculate new position
04B040 FD 7E 04    0275*      ld a,(iy+sprite_x)
04B043 83          0276*      add a,e
04B044 E6 0F       0277*      and 15 ; modulo 16
04B046 5F          0278*      ld e,a
04B047 FD 7E 05    0279*      ld a,(iy+sprite_y)
04B04A 82          0280*      add a,d
04B04B E6 0F       0281*      and 15 ; modulo 16
04B04D 57          0282*      ld d,a
04B04E CD A3 AF 04 0283*      call sprite_check_move
04B052 C1          0284*      pop bc ; get back loop counter
04B053 A7          0285*      and a
04B054 C0          0286*      ret nz ; move was legal so we're done
04B055 10 DB       0287*      djnz @loop ; try again
04B057 C9          0288*      ret ; no move found in 8 tries, so we're done
04B058             0289*  
04B058             0290*  ; #### SPRITE BEHAVIOR SUBROUTINES ####
04B058             0291*  sprite_behavior_lookup:
04B058 C1 B0 04    0292*      dl LAMP
04B05B EF B0 04    0293*      dl BARREL
04B05E 3F B1 04    0294*      dl TABLE
04B061 6D B1 04    0295*      dl OVERHEAD_LIGHT
04B064 9B B1 04    0296*      dl RADIOACTIVE_BARREL
04B067 EB B1 04    0297*      dl HEALTH_PACK
04B06A 23 B2 04    0298*      dl GOLD_CHALISE
04B06D 63 B2 04    0299*      dl GOLD_CROSS
04B070 A3 B2 04    0300*      dl PLATE_OF_FOOD
04B073 DB B2 04    0301*      dl KEYCARD
04B076 16 B3 04    0302*      dl GOLD_CHEST
04B079 56 B3 04    0303*      dl MACHINE_GUN
04B07C A3 B3 04    0304*      dl GATLING_GUN
04B07F F0 B3 04    0305*      dl DOG_FOOD
04B082 28 B4 04    0306*      dl GOLD_KEY
04B085 56 B4 04    0307*      dl DOG
04B088 E0 B4 04    0308*      dl GERMAN_TROOPER
04B08B 81 B5 04    0309*      dl SS_GUARD
04B08E 22 B6 04    0310*      dl DEAD_GUARD
04B091 61 B6 04    0311*      dl EXPLOSION
04B094             0312*  
04B094             0313*  ; initializes sprite data for a particular sprite type and id
04B094             0314*  ; inputs: iy pointed at sprite record, sprite_obj set for same
04B094             0315*  sprite_init_data:
04B094 3E 00       0316*      ld a,sp_init ; index for sprite init routine
04B096 CD A4 B0 04 0317*      call do_sprite_behavior ; hl points at address to copy from
04B09A ED 13 02    0318*      lea de,iy+sprite_health ; de points at the address for LDIR to copy to
04B09D 01 0E 00 00 0319*      ld bc,sprite_record_size-2 ; copy all but the first two bytes
04B0A1 ED B0       0320*      ldir ; hl came back with the copy from address, so we're ready to copy the data
04B0A3 C9          0321*      ret ; done
04B0A4             0322*  
04B0A4             0323*  ; #### SPRITE BEHAVIOR ROUTINES ####
04B0A4             0324*  ; sprite behavior indices
04B0A4             0325*  sp_init:   equ 0
04B0A4             0326*  sp_use:    equ 1
04B0A4             0327*  sp_hurt:  equ 2
04B0A4             0328*  sp_kill:   equ 3
04B0A4             0329*  sp_see:    equ 4
04B0A4             0330*  sp_move:  equ 5
04B0A4             0331*  sp_shoot:  equ 6
04B0A4             0332*  
04B0A4             0333*  ; calls the sprite behavior routine for the sprite pointed to by iy
04B0A4             0334*  ; inputs: iy pointed at sprite record, sprite_obj set for same
04B0A4             0335*  ;         a = type index of routine to call
04B0A4             0336*  do_sprite_behavior:
04B0A4 FD 22 F4 AE 0337*      ld (sprite_table_pointer),iy ; save pointer to sprite record
       04          
04B0A9 FD 46 01    0338*      ld b,(iy+sprite_obj)
04B0AC 0E 03       0339*      ld c,3 ; three bytes per lookup record
04B0AE ED 4C       0340*      mlt bc ; bc is offset from the base of the lookup table
04B0B0 21 58 B0 04 0341*      ld hl,sprite_behavior_lookup
04B0B4 09          0342*      add hl,bc
04B0B5 ED 27       0343*      ld hl,(hl) ; hl points to the base address of the sprite behavior routines
04B0B7 47          0344*      ld b,a ; b holds the routine index
04B0B8 0E 03       0345*      ld c,3 ; three bytes per lookup record
04B0BA ED 4C       0346*      mlt bc ; bc is offset from the base of the lookup table
04B0BC 09          0347*      add hl,bc ; hl points to the label of the routine to call
04B0BD ED 27       0348*      ld hl,(hl) ; hl points to the routine to call
04B0BF E9          0349*      jp (hl) ; call the behavior routine
04B0C0 C9          0350*      ret
04B0C1             0351*  
04B0C1             0352*  LAMP:
04B0C1             0353*  ; behavior routine address lookup
04B0C1 D6 B0 04    0354*      dl @init
04B0C4 E9 B0 04    0355*      dl @use
04B0C7 EA B0 04    0356*      dl @hurt
04B0CA EB B0 04    0357*      dl @kill
04B0CD EC B0 04    0358*      dl @see
04B0D0 ED B0 04    0359*      dl @move
04B0D3 EE B0 04    0360*      dl @shoot
04B0D6             0361*  @init:
04B0D6 21 DB B0 04 0362*      ld hl,@data ; address for LDIR to copy from
04B0DA C9          0363*      ret
04B0DB             0364*  @data:
04B0DB 64          0365*      db 100 ; sprite_health
04B0DC 00          0366*      db 000 ; sprite_triggers_mask
04B0DD 00          0367*      db 000 ; sprite_x
04B0DE 00          0368*      db 000 ; sprite_y
04B0DF 00          0369*      db 000 ; sprite_orientation
04B0E0 00          0370*      db 000 ; sprite_animation
04B0E1 00          0371*      db 000 ; sprite_anim_timer
04B0E2 01          0372*      db 001 ; sprite_move_timer
04B0E3 00          0373*      db 000 ; sprite_move_step
04B0E4 00          0374*      db 000 ; sprite_points
04B0E5 00          0375*      db 000 ; sprite_health_modifier
04B0E6 00          0376*      db 000 ; sprite_unassigned_0
04B0E7 00          0377*      db 000 ; sprite_unassigned_1
04B0E8 00          0378*      db 000 ; sprite_unassigned_2
04B0E9             0379*  @use:
04B0E9 C9          0380*      ret
04B0EA             0381*  @hurt:
04B0EA C9          0382*      ret
04B0EB             0383*  @kill:
04B0EB C9          0384*      ret
04B0EC             0385*  @see:
04B0EC C9          0386*      ret
04B0ED             0387*  @move:
04B0ED C9          0388*      ret
04B0EE             0389*  @shoot:
04B0EE C9          0390*      ret
04B0EF             0391*  
04B0EF             0392*  BARREL:
04B0EF             0393*  ; behavior routine address lookup
04B0EF 04 B1 04    0394*      dl @init
04B0F2 17 B1 04    0395*      dl @use
04B0F5 18 B1 04    0396*      dl @hurt
04B0F8 29 B1 04    0397*      dl @kill
04B0FB 3C B1 04    0398*      dl @see
04B0FE 3D B1 04    0399*      dl @move
04B101 3E B1 04    0400*      dl @shoot
04B104             0401*  @init:
04B104 21 09 B1 04 0402*      ld hl,@data ; address for LDIR to copy from
04B108 C9          0403*      ret
04B109             0404*  @data:
04B109 12          0405*      db 018 ; sprite_health
04B10A 00          0406*      db 000 ; sprite_triggers_mask
04B10B 00          0407*      db 000 ; sprite_x
04B10C 00          0408*      db 000 ; sprite_y
04B10D 00          0409*      db 000 ; sprite_orientation
04B10E 00          0410*      db 000 ; sprite_animation
04B10F 00          0411*      db 000 ; sprite_anim_timer
04B110 01          0412*      db 001 ; sprite_move_timer
04B111 00          0413*      db 000 ; sprite_move_step
04B112 00          0414*      db 000 ; sprite_points
04B113 CE          0415*      db -50 ; sprite_health_modifier
04B114 00          0416*      db 000 ; sprite_unassigned_0
04B115 00          0417*      db 000 ; sprite_unassigned_1
04B116 00          0418*      db 000 ; sprite_unassigned_2
04B117             0419*  @use:
04B117 C9          0420*      ret
04B118             0421*  @hurt:
04B118 3E FF       0422*      ld a,255 ; kill player's shot
04B11A 32 0E C2 04 0423*      ld (plyr_shot_status),a
04B11E 3A 12 C2 04 0424*      ld a,(plyr_shot_damage) ; damage done by player's shot set by plyr_shoot
04B122 FD 86 02    0425*      add a,(iy+sprite_health)
04B125 FD 77 02    0426*      ld (iy+sprite_health),a
04B128 F0          0427*      ret p ; if health is positive, return
04B129             0428*      ; otherwise fall through to kill sprite
04B129             0429*  @kill:
04B129 FD E5       0430*      push iy
04B12B CD B1 CE 04 0431*      call sfx_play_explode
04B12F FD E1       0432*      pop iy
04B131 3E 3C       0433*      ld a,OBJ_ID_EXPLOSION
04B133 CD D8 AF 04 0434*      call sprite_spawn
04B137 FD 36 08 05 0435*      ld (iy+sprite_anim_timer),5
04B13B C9          0436*      ret
04B13C             0437*  @see:
04B13C C9          0438*      ret
04B13D             0439*  @move:
04B13D C9          0440*      ret
04B13E             0441*  @shoot:
04B13E C9          0442*      ret
04B13F             0443*  
04B13F             0444*  TABLE:
04B13F             0445*  ; behavior routine address lookup
04B13F 54 B1 04    0446*      dl @init
04B142 67 B1 04    0447*      dl @use
04B145 68 B1 04    0448*      dl @hurt
04B148 69 B1 04    0449*      dl @kill
04B14B 6A B1 04    0450*      dl @see
04B14E 6B B1 04    0451*      dl @move
04B151 6C B1 04    0452*      dl @shoot
04B154             0453*  @init:
04B154 21 59 B1 04 0454*      ld hl,@data ; address for LDIR to copy from
04B158 C9          0455*      ret
04B159             0456*  @data:
04B159 64          0457*      db 100 ; sprite_health
04B15A 00          0458*      db 000 ; sprite_triggers_mask
04B15B 00          0459*      db 000 ; sprite_x
04B15C 00          0460*      db 000 ; sprite_y
04B15D 00          0461*      db 000 ; sprite_orientation
04B15E 00          0462*      db 000 ; sprite_animation
04B15F 00          0463*      db 000 ; sprite_anim_timer
04B160 01          0464*      db 001 ; sprite_move_timer
04B161 00          0465*      db 000 ; sprite_move_step
04B162 00          0466*      db 000 ; sprite_points
04B163 00          0467*      db 000 ; sprite_health_modifier
04B164 00          0468*      db 000 ; sprite_unassigned_0
04B165 00          0469*      db 000 ; sprite_unassigned_1
04B166 00          0470*      db 000 ; sprite_unassigned_2
04B167             0471*  @use:
04B167 C9          0472*      ret
04B168             0473*  @hurt:
04B168 C9          0474*      ret
04B169             0475*  @kill:
04B169 C9          0476*      ret
04B16A             0477*  @see:
04B16A C9          0478*      ret
04B16B             0479*  @move:
04B16B C9          0480*      ret
04B16C             0481*  @shoot:
04B16C C9          0482*      ret
04B16D             0483*  
04B16D             0484*  OVERHEAD_LIGHT:
04B16D             0485*  ; behavior routine address lookup
04B16D 82 B1 04    0486*      dl @init
04B170 95 B1 04    0487*      dl @use
04B173 96 B1 04    0488*      dl @hurt
04B176 97 B1 04    0489*      dl @kill
04B179 98 B1 04    0490*      dl @see
04B17C 99 B1 04    0491*      dl @move
04B17F 9A B1 04    0492*      dl @shoot
04B182             0493*  @init:
04B182 21 87 B1 04 0494*      ld hl,@data ; address for LDIR to copy from
04B186 C9          0495*      ret
04B187             0496*  @data:
04B187 64          0497*      db 100 ; sprite_health
04B188 00          0498*      db 000 ; sprite_triggers_mask
04B189 00          0499*      db 000 ; sprite_x
04B18A 00          0500*      db 000 ; sprite_y
04B18B 00          0501*      db 000 ; sprite_orientation
04B18C 00          0502*      db 000 ; sprite_animation
04B18D 00          0503*      db 000 ; sprite_anim_timer
04B18E 01          0504*      db 001 ; sprite_move_timer
04B18F 00          0505*      db 000 ; sprite_move_step
04B190 00          0506*      db 000 ; sprite_points
04B191 00          0507*      db 000 ; sprite_health_modifier
04B192 00          0508*      db 000 ; sprite_unassigned_0
04B193 00          0509*      db 000 ; sprite_unassigned_1
04B194 00          0510*      db 000 ; sprite_unassigned_2
04B195             0511*  @use:
04B195 C9          0512*      ret
04B196             0513*  @hurt:
04B196 C9          0514*      ret
04B197             0515*  @kill:
04B197 C9          0516*      ret
04B198             0517*  @see:
04B198 C9          0518*      ret
04B199             0519*  @move:
04B199 C9          0520*      ret
04B19A             0521*  @shoot:
04B19A C9          0522*      ret
04B19B             0523*  
04B19B             0524*  RADIOACTIVE_BARREL:
04B19B             0525*  ; behavior routine address lookup
04B19B B0 B1 04    0526*      dl @init
04B19E C3 B1 04    0527*      dl @use
04B1A1 C4 B1 04    0528*      dl @hurt
04B1A4 D5 B1 04    0529*      dl @kill
04B1A7 E8 B1 04    0530*      dl @see
04B1AA E9 B1 04    0531*      dl @move
04B1AD EA B1 04    0532*      dl @shoot
04B1B0             0533*  @init:
04B1B0 21 B5 B1 04 0534*      ld hl,@data ; address for LDIR to copy from
04B1B4 C9          0535*      ret
04B1B5             0536*  @data:
04B1B5 18          0537*      db 024 ; sprite_health
04B1B6 00          0538*      db 000 ; sprite_triggers_mask
04B1B7 00          0539*      db 000 ; sprite_x
04B1B8 00          0540*      db 000 ; sprite_y
04B1B9 00          0541*      db 000 ; sprite_orientation
04B1BA 00          0542*      db 000 ; sprite_animation
04B1BB 00          0543*      db 000 ; sprite_anim_timer
04B1BC 01          0544*      db 001 ; sprite_move_timer
04B1BD 00          0545*      db 000 ; sprite_move_step
04B1BE 00          0546*      db 000 ; sprite_points
04B1BF B5          0547*      db -75 ; sprite_health_modifier
04B1C0 00          0548*      db 000 ; sprite_unassigned_0
04B1C1 00          0549*      db 000 ; sprite_unassigned_1
04B1C2 00          0550*      db 000 ; sprite_unassigned_2
04B1C3             0551*  @use:
04B1C3 C9          0552*      ret
04B1C4             0553*  @hurt:
04B1C4 3E FF       0554*      ld a,255 ; kill player's shot
04B1C6 32 0E C2 04 0555*      ld (plyr_shot_status),a
04B1CA 3A 12 C2 04 0556*      ld a,(plyr_shot_damage) ; damage done by player's shot set by plyr_shoot
04B1CE FD 86 02    0557*      add a,(iy+sprite_health)
04B1D1 FD 77 02    0558*      ld (iy+sprite_health),a
04B1D4 F0          0559*      ret p ; if health is positive, return
04B1D5             0560*      ; otherwise fall through to kill sprite
04B1D5             0561*  @kill:
04B1D5 FD E5       0562*      push iy
04B1D7 CD B1 CE 04 0563*      call sfx_play_explode
04B1DB FD E1       0564*      pop iy
04B1DD 3E 3C       0565*      ld a,OBJ_ID_EXPLOSION
04B1DF CD D8 AF 04 0566*      call sprite_spawn
04B1E3 FD 36 08 05 0567*      ld (iy+sprite_anim_timer),5
04B1E7 C9          0568*      ret
04B1E8             0569*  @see:
04B1E8 C9          0570*      ret
04B1E9             0571*  @move:
04B1E9 C9          0572*      ret
04B1EA             0573*  @shoot:
04B1EA C9          0574*      ret
04B1EB             0575*  
04B1EB             0576*  HEALTH_PACK:
04B1EB             0577*  ; behavior routine address lookup
04B1EB 00 B2 04    0578*      dl @init
04B1EE 13 B2 04    0579*      dl @use
04B1F1 1E B2 04    0580*      dl @hurt
04B1F4 1F B2 04    0581*      dl @kill
04B1F7 20 B2 04    0582*      dl @see
04B1FA 21 B2 04    0583*      dl @move
04B1FD 22 B2 04    0584*      dl @shoot
04B200             0585*  @init:
04B200 21 05 B2 04 0586*      ld hl,@data ; address for LDIR to copy from
04B204 C9          0587*      ret
04B205             0588*  @data:
04B205 64          0589*      db 100 ; sprite_health
04B206 00          0590*      db 000 ; sprite_triggers_mask
04B207 00          0591*      db 000 ; sprite_x
04B208 00          0592*      db 000 ; sprite_y
04B209 00          0593*      db 000 ; sprite_orientation
04B20A 00          0594*      db 000 ; sprite_animation
04B20B 00          0595*      db 000 ; sprite_anim_timer
04B20C 01          0596*      db 001 ; sprite_move_timer
04B20D 00          0597*      db 000 ; sprite_move_step
04B20E 00          0598*      db 000 ; sprite_points
04B20F 14          0599*      db 020 ; sprite_health_modifier
04B210 00          0600*      db 000 ; sprite_unassigned_0
04B211 00          0601*      db 000 ; sprite_unassigned_1
04B212 00          0602*      db 000 ; sprite_unassigned_2
04B213             0603*  @use:
04B213 FD 7E 0C    0604*      ld a,(iy+sprite_health_modifier)
04B216 CD 31 C4 04 0605*      call plyr_add_health
04B21A C3 88 AF 04 0606*      jp sprite_kill
04B21E             0607*  @hurt:
04B21E C9          0608*      ret
04B21F             0609*  @kill:
04B21F C9          0610*      ret
04B220             0611*  @see:
04B220 C9          0612*      ret
04B221             0613*  @move:
04B221 C9          0614*      ret
04B222             0615*  @shoot:
04B222 C9          0616*      ret
04B223             0617*  
04B223             0618*  GOLD_CHALISE:
04B223             0619*  ; behavior routine address lookup
04B223 38 B2 04    0620*      dl @init
04B226 4B B2 04    0621*      dl @use
04B229 5E B2 04    0622*      dl @hurt
04B22C 5F B2 04    0623*      dl @kill
04B22F 60 B2 04    0624*      dl @see
04B232 61 B2 04    0625*      dl @move
04B235 62 B2 04    0626*      dl @shoot
04B238             0627*  @init:
04B238 21 3D B2 04 0628*      ld hl,@data ; address for LDIR to copy from
04B23C C9          0629*      ret
04B23D             0630*  @data:
04B23D 64          0631*      db 100 ; sprite_health
04B23E 00          0632*      db 000 ; sprite_triggers_mask
04B23F 00          0633*      db 000 ; sprite_x
04B240 00          0634*      db 000 ; sprite_y
04B241 00          0635*      db 000 ; sprite_orientation
04B242 00          0636*      db 000 ; sprite_animation
04B243 00          0637*      db 000 ; sprite_anim_timer
04B244 01          0638*      db 001 ; sprite_move_timer
04B245 00          0639*      db 000 ; sprite_move_step
04B246 64          0640*      db 100 ; sprite_points
04B247 00          0641*      db 000 ; sprite_health_modifier
04B248 00          0642*      db 000 ; sprite_unassigned_0
04B249 00          0643*      db 000 ; sprite_unassigned_1
04B24A 00          0644*      db 000 ; sprite_unassigned_2
04B24B             0645*  @use:
04B24B FD E5       0646*      push iy
04B24D CD BD CE 04 0647*      call sfx_play_got_treasure
04B251 FD E1       0648*      pop iy
04B253 FD 7E 0B    0649*      ld a,(iy+sprite_points)
04B256 CD 8F C4 04 0650*      call plyr_mod_score
04B25A C3 88 AF 04 0651*      jp sprite_kill
04B25E             0652*  @hurt:
04B25E C9          0653*      ret
04B25F             0654*  @kill:
04B25F C9          0655*      ret
04B260             0656*  @see:
04B260 C9          0657*      ret
04B261             0658*  @move:
04B261 C9          0659*      ret
04B262             0660*  @shoot:
04B262 C9          0661*      ret
04B263             0662*  
04B263             0663*  GOLD_CROSS:
04B263             0664*  ; behavior routine address lookup
04B263 78 B2 04    0665*      dl @init
04B266 8B B2 04    0666*      dl @use
04B269 9E B2 04    0667*      dl @hurt
04B26C 9F B2 04    0668*      dl @kill
04B26F A0 B2 04    0669*      dl @see
04B272 A1 B2 04    0670*      dl @move
04B275 A2 B2 04    0671*      dl @shoot
04B278             0672*  @init:
04B278 21 7D B2 04 0673*      ld hl,@data ; address for LDIR to copy from
04B27C C9          0674*      ret
04B27D             0675*  @data:
04B27D 64          0676*      db 100 ; sprite_health
04B27E 00          0677*      db 000 ; sprite_triggers_mask
04B27F 00          0678*      db 000 ; sprite_x
04B280 00          0679*      db 000 ; sprite_y
04B281 00          0680*      db 000 ; sprite_orientation
04B282 00          0681*      db 000 ; sprite_animation
04B283 00          0682*      db 000 ; sprite_anim_timer
04B284 01          0683*      db 001 ; sprite_move_timer
04B285 00          0684*      db 000 ; sprite_move_step
04B286 32          0685*      db 050 ; sprite_points
04B287 00          0686*      db 000 ; sprite_health_modifier
04B288 00          0687*      db 000 ; sprite_unassigned_0
04B289 00          0688*      db 000 ; sprite_unassigned_1
04B28A 00          0689*      db 000 ; sprite_unassigned_2
04B28B             0690*  @use:
04B28B FD E5       0691*      push iy
04B28D CD BD CE 04 0692*      call sfx_play_got_treasure
04B291 FD E1       0693*      pop iy
04B293 FD 7E 0B    0694*      ld a,(iy+sprite_points)
04B296 CD 8F C4 04 0695*      call plyr_mod_score
04B29A C3 88 AF 04 0696*      jp sprite_kill
04B29E             0697*  @hurt:
04B29E C9          0698*      ret
04B29F             0699*  @kill:
04B29F C9          0700*      ret
04B2A0             0701*  @see:
04B2A0 C9          0702*      ret
04B2A1             0703*  @move:
04B2A1 C9          0704*      ret
04B2A2             0705*  @shoot:
04B2A2 C9          0706*      ret
04B2A3             0707*  
04B2A3             0708*  PLATE_OF_FOOD:
04B2A3             0709*  ; behavior routine address lookup
04B2A3 B8 B2 04    0710*      dl @init
04B2A6 CB B2 04    0711*      dl @use
04B2A9 D6 B2 04    0712*      dl @hurt
04B2AC D7 B2 04    0713*      dl @kill
04B2AF D8 B2 04    0714*      dl @see
04B2B2 D9 B2 04    0715*      dl @move
04B2B5 DA B2 04    0716*      dl @shoot
04B2B8             0717*  @init:
04B2B8 21 BD B2 04 0718*      ld hl,@data ; address for LDIR to copy from
04B2BC C9          0719*      ret
04B2BD             0720*  @data:
04B2BD 64          0721*      db 100 ; sprite_health
04B2BE 00          0722*      db 000 ; sprite_triggers_mask
04B2BF 00          0723*      db 000 ; sprite_x
04B2C0 00          0724*      db 000 ; sprite_y
04B2C1 00          0725*      db 000 ; sprite_orientation
04B2C2 00          0726*      db 000 ; sprite_animation
04B2C3 00          0727*      db 000 ; sprite_anim_timer
04B2C4 01          0728*      db 001 ; sprite_move_timer
04B2C5 00          0729*      db 000 ; sprite_move_step
04B2C6 00          0730*      db 000 ; sprite_points
04B2C7 0A          0731*      db 010 ; sprite_health_modifier
04B2C8 00          0732*      db 000 ; sprite_unassigned_0
04B2C9 00          0733*      db 000 ; sprite_unassigned_1
04B2CA 00          0734*      db 000 ; sprite_unassigned_2
04B2CB             0735*  @use:
04B2CB FD 7E 0C    0736*      ld a,(iy+sprite_health_modifier)
04B2CE CD 31 C4 04 0737*      call plyr_add_health
04B2D2 C3 88 AF 04 0738*      jp sprite_kill
04B2D6             0739*  @hurt:
04B2D6 C9          0740*      ret
04B2D7             0741*  @kill:
04B2D7 C9          0742*      ret
04B2D8             0743*  @see:
04B2D8 C9          0744*      ret
04B2D9             0745*  @move:
04B2D9 C9          0746*      ret
04B2DA             0747*  @shoot:
04B2DA C9          0748*      ret
04B2DB             0749*  
04B2DB             0750*  KEYCARD:
04B2DB             0751*  ; behavior routine address lookup
04B2DB F0 B2 04    0752*      dl @init
04B2DE 03 B3 04    0753*      dl @use
04B2E1 11 B3 04    0754*      dl @hurt
04B2E4 12 B3 04    0755*      dl @kill
04B2E7 13 B3 04    0756*      dl @see
04B2EA 14 B3 04    0757*      dl @move
04B2ED 15 B3 04    0758*      dl @shoot
04B2F0             0759*  @init:
04B2F0 21 F5 B2 04 0760*      ld hl,@data ; address for LDIR to copy from
04B2F4 C9          0761*      ret
04B2F5             0762*  @data:
04B2F5 64          0763*      db 100 ; sprite_health
04B2F6 00          0764*      db 000 ; sprite_triggers_mask
04B2F7 00          0765*      db 000 ; sprite_x
04B2F8 00          0766*      db 000 ; sprite_y
04B2F9 00          0767*      db 000 ; sprite_orientation
04B2FA 00          0768*      db 000 ; sprite_animation
04B2FB 00          0769*      db 000 ; sprite_anim_timer
04B2FC 01          0770*      db 001 ; sprite_move_timer
04B2FD 00          0771*      db 000 ; sprite_move_step
04B2FE 00          0772*      db 000 ; sprite_points
04B2FF 00          0773*      db 000 ; sprite_health_modifier
04B300 00          0774*      db 000 ; sprite_unassigned_0
04B301 00          0775*      db 000 ; sprite_unassigned_1
04B302 00          0776*      db 000 ; sprite_unassigned_2
04B303             0777*  @use:
04B303 3E 08       0778*      ld a,8
04B305 CD 9E C4 04 0779*      call plyr_add_ammo
04B309 CD D5 CE 04 0780*      call sfx_play_gun_reload
04B30D C3 88 AF 04 0781*      jp sprite_kill
04B311             0782*  @hurt:
04B311 C9          0783*      ret
04B312             0784*  @kill:
04B312 C9          0785*      ret
04B313             0786*  @see:
04B313 C9          0787*      ret
04B314             0788*  @move:
04B314 C9          0789*      ret
04B315             0790*  @shoot:
04B315 C9          0791*      ret
04B316             0792*  
04B316             0793*  GOLD_CHEST:
04B316             0794*  ; behavior routine address lookup
04B316 2B B3 04    0795*      dl @init
04B319 3E B3 04    0796*      dl @use
04B31C 51 B3 04    0797*      dl @hurt
04B31F 52 B3 04    0798*      dl @kill
04B322 53 B3 04    0799*      dl @see
04B325 54 B3 04    0800*      dl @move
04B328 55 B3 04    0801*      dl @shoot
04B32B             0802*  @init:
04B32B 21 30 B3 04 0803*      ld hl,@data ; address for LDIR to copy from
04B32F C9          0804*      ret
04B330             0805*  @data:
04B330 64          0806*      db 100 ; sprite_health
04B331 00          0807*      db 000 ; sprite_triggers_mask
04B332 00          0808*      db 000 ; sprite_x
04B333 00          0809*      db 000 ; sprite_y
04B334 00          0810*      db 000 ; sprite_orientation
04B335 00          0811*      db 000 ; sprite_animation
04B336 00          0812*      db 000 ; sprite_anim_timer
04B337 01          0813*      db 001 ; sprite_move_timer
04B338 00          0814*      db 000 ; sprite_move_step
04B339 FA          0815*      db 250 ; sprite_points
04B33A 00          0816*      db 000 ; sprite_health_modifier
04B33B 00          0817*      db 000 ; sprite_unassigned_0
04B33C 00          0818*      db 000 ; sprite_unassigned_1
04B33D 00          0819*      db 000 ; sprite_unassigned_2
04B33E             0820*  @use:
04B33E FD E5       0821*      push iy
04B340 CD BD CE 04 0822*      call sfx_play_got_treasure
04B344 FD E1       0823*      pop iy
04B346 FD 7E 0B    0824*      ld a,(iy+sprite_points)
04B349 CD 8F C4 04 0825*      call plyr_mod_score
04B34D C3 88 AF 04 0826*      jp sprite_kill
04B351             0827*  @hurt:
04B351 C9          0828*      ret
04B352             0829*  @kill:
04B352 C9          0830*      ret
04B353             0831*  @see:
04B353 C9          0832*      ret
04B354             0833*  @move:
04B354 C9          0834*      ret
04B355             0835*  @shoot:
04B355 C9          0836*      ret
04B356             0837*  
04B356             0838*  MACHINE_GUN:
04B356             0839*  ; behavior routine address lookup
04B356 6B B3 04    0840*      dl @init
04B359 7E B3 04    0841*      dl @use
04B35C 9E B3 04    0842*      dl @hurt
04B35F 9F B3 04    0843*      dl @kill
04B362 A0 B3 04    0844*      dl @see
04B365 A1 B3 04    0845*      dl @move
04B368 A2 B3 04    0846*      dl @shoot
04B36B             0847*  @init:
04B36B 21 70 B3 04 0848*      ld hl,@data ; address for LDIR to copy from
04B36F C9          0849*      ret
04B370             0850*  @data:
04B370 64          0851*      db 100 ; sprite_health
04B371 00          0852*      db 000 ; sprite_triggers_mask
04B372 00          0853*      db 000 ; sprite_x
04B373 00          0854*      db 000 ; sprite_y
04B374 00          0855*      db 000 ; sprite_orientation
04B375 00          0856*      db 000 ; sprite_animation
04B376 00          0857*      db 000 ; sprite_anim_timer
04B377 01          0858*      db 001 ; sprite_move_timer
04B378 00          0859*      db 000 ; sprite_move_step
04B379 00          0860*      db 000 ; sprite_points
04B37A 00          0861*      db 000 ; sprite_health_modifier
04B37B 00          0862*      db 000 ; sprite_unassigned_0
04B37C 00          0863*      db 000 ; sprite_unassigned_1
04B37D 00          0864*      db 000 ; sprite_unassigned_2
04B37E             0865*  @use:
04B37E CD 88 AF 04 0866*      call sprite_kill
04B382 3E 10       0867*      ld a,16
04B384 CD 9E C4 04 0868*      call plyr_add_ammo
04B388 CD D5 CE 04 0869*      call sfx_play_gun_reload
04B38C 3E 04       0870*      ld a,plyr_wpn_mg
04B38E 21 13 C2 04 0871*      ld hl,plyr_wpns
04B392 B6          0872*      or (hl)
04B393 77          0873*      ld (hl),a
04B394 3E 04       0874*      ld a,plyr_wpn_mg
04B396 32 14 C2 04 0875*      ld (plyr_wpn_active),a
04B39A CD 78 C3 04 0876*      call plyr_set_weapon_parameters
04B39E             0877*  @hurt:
04B39E C9          0878*      ret
04B39F             0879*  @kill:
04B39F C9          0880*      ret
04B3A0             0881*  @see:
04B3A0 C9          0882*      ret
04B3A1             0883*  @move:
04B3A1 C9          0884*      ret
04B3A2             0885*  @shoot:
04B3A2 C9          0886*      ret
04B3A3             0887*  
04B3A3             0888*  GATLING_GUN:
04B3A3             0889*  ; behavior routine address lookup
04B3A3 B8 B3 04    0890*      dl @init
04B3A6 CB B3 04    0891*      dl @use
04B3A9 EB B3 04    0892*      dl @hurt
04B3AC EC B3 04    0893*      dl @kill
04B3AF ED B3 04    0894*      dl @see
04B3B2 EE B3 04    0895*      dl @move
04B3B5 EF B3 04    0896*      dl @shoot
04B3B8             0897*  @init:
04B3B8 21 BD B3 04 0898*      ld hl,@data ; address for LDIR to copy from
04B3BC C9          0899*      ret
04B3BD             0900*  @data:
04B3BD 64          0901*      db 100 ; sprite_health
04B3BE 00          0902*      db 000 ; sprite_triggers_mask
04B3BF 00          0903*      db 000 ; sprite_x
04B3C0 00          0904*      db 000 ; sprite_y
04B3C1 00          0905*      db 000 ; sprite_orientation
04B3C2 00          0906*      db 000 ; sprite_animation
04B3C3 00          0907*      db 000 ; sprite_anim_timer
04B3C4 01          0908*      db 001 ; sprite_move_timer
04B3C5 00          0909*      db 000 ; sprite_move_step
04B3C6 00          0910*      db 000 ; sprite_points
04B3C7 00          0911*      db 000 ; sprite_health_modifier
04B3C8 00          0912*      db 000 ; sprite_unassigned_0
04B3C9 00          0913*      db 000 ; sprite_unassigned_1
04B3CA 00          0914*      db 000 ; sprite_unassigned_2
04B3CB             0915*  @use:
04B3CB CD 88 AF 04 0916*      call sprite_kill
04B3CF 3E 20       0917*      ld a,32
04B3D1 CD 9E C4 04 0918*      call plyr_add_ammo
04B3D5 CD D5 CE 04 0919*      call sfx_play_gun_reload
04B3D9 3E 08       0920*      ld a,plyr_wpn_gg
04B3DB 21 13 C2 04 0921*      ld hl,plyr_wpns
04B3DF B6          0922*      or (hl)
04B3E0 77          0923*      ld (hl),a
04B3E1 3E 08       0924*      ld a,plyr_wpn_gg
04B3E3 32 14 C2 04 0925*      ld (plyr_wpn_active),a
04B3E7 CD 78 C3 04 0926*      call plyr_set_weapon_parameters
04B3EB             0927*  @hurt:
04B3EB C9          0928*      ret
04B3EC             0929*  @kill:
04B3EC C9          0930*      ret
04B3ED             0931*  @see:
04B3ED C9          0932*      ret
04B3EE             0933*  @move:
04B3EE C9          0934*      ret
04B3EF             0935*  @shoot:
04B3EF C9          0936*      ret
04B3F0             0937*  
04B3F0             0938*  DOG_FOOD:
04B3F0             0939*  ; behavior routine address lookup
04B3F0 05 B4 04    0940*      dl @init
04B3F3 18 B4 04    0941*      dl @use
04B3F6 23 B4 04    0942*      dl @hurt
04B3F9 24 B4 04    0943*      dl @kill
04B3FC 25 B4 04    0944*      dl @see
04B3FF 26 B4 04    0945*      dl @move
04B402 27 B4 04    0946*      dl @shoot
04B405             0947*  @init:
04B405 21 0A B4 04 0948*      ld hl,@data ; address for LDIR to copy from
04B409 C9          0949*      ret
04B40A             0950*  @data:
04B40A 64          0951*      db 100 ; sprite_health
04B40B 00          0952*      db 000 ; sprite_triggers_mask
04B40C 00          0953*      db 000 ; sprite_x
04B40D 00          0954*      db 000 ; sprite_y
04B40E 00          0955*      db 000 ; sprite_orientation
04B40F 00          0956*      db 000 ; sprite_animation
04B410 00          0957*      db 000 ; sprite_anim_timer
04B411 01          0958*      db 001 ; sprite_move_timer
04B412 00          0959*      db 000 ; sprite_move_step
04B413 00          0960*      db 000 ; sprite_points
04B414 05          0961*      db 005 ; sprite_health_modifier
04B415 00          0962*      db 000 ; sprite_unassigned_0
04B416 00          0963*      db 000 ; sprite_unassigned_1
04B417 00          0964*      db 000 ; sprite_unassigned_2
04B418             0965*  @use:
04B418 FD 7E 0C    0966*      ld a,(iy+sprite_health_modifier)
04B41B CD 31 C4 04 0967*      call plyr_add_health
04B41F C3 88 AF 04 0968*      jp sprite_kill
04B423             0969*  @hurt:
04B423 C9          0970*      ret
04B424             0971*  @kill:
04B424 C9          0972*      ret
04B425             0973*  @see:
04B425 C9          0974*      ret
04B426             0975*  @move:
04B426 C9          0976*      ret
04B427             0977*  @shoot:
04B427 C9          0978*      ret
04B428             0979*  
04B428             0980*  GOLD_KEY:
04B428             0981*  ; behavior routine address lookup
04B428 3D B4 04    0982*      dl @init
04B42B 50 B4 04    0983*      dl @use
04B42E 51 B4 04    0984*      dl @hurt
04B431 52 B4 04    0985*      dl @kill
04B434 53 B4 04    0986*      dl @see
04B437 54 B4 04    0987*      dl @move
04B43A 55 B4 04    0988*      dl @shoot
04B43D             0989*  @init:
04B43D 21 42 B4 04 0990*      ld hl,@data ; address for LDIR to copy from
04B441 C9          0991*      ret
04B442             0992*  @data:
04B442 64          0993*      db 100 ; sprite_health
04B443 00          0994*      db 000 ; sprite_triggers_mask
04B444 00          0995*      db 000 ; sprite_x
04B445 00          0996*      db 000 ; sprite_y
04B446 00          0997*      db 000 ; sprite_orientation
04B447 00          0998*      db 000 ; sprite_animation
04B448 00          0999*      db 000 ; sprite_anim_timer
04B449 01          1000*      db 001 ; sprite_move_timer
04B44A 00          1001*      db 000 ; sprite_move_step
04B44B 00          1002*      db 000 ; sprite_points
04B44C 00          1003*      db 000 ; sprite_health_modifier
04B44D 00          1004*      db 000 ; sprite_unassigned_0
04B44E 00          1005*      db 000 ; sprite_unassigned_1
04B44F 00          1006*      db 000 ; sprite_unassigned_2
04B450             1007*  @use:
04B450 C9          1008*      ret
04B451             1009*  @hurt:
04B451 C9          1010*      ret
04B452             1011*  @kill:
04B452 C9          1012*      ret
04B453             1013*  @see:
04B453 C9          1014*      ret
04B454             1015*  @move:
04B454 C9          1016*      ret
04B455             1017*  @shoot:
04B455 C9          1018*      ret
04B456             1019*  
04B456             1020*  DOG:
04B456             1021*  ; behavior routine address lookup
04B456 6B B4 04    1022*      dl @init
04B459 7E B4 04    1023*      dl @use
04B45C 8E B4 04    1024*      dl @hurt
04B45F AA B4 04    1025*      dl @kill
04B462 BE B4 04    1026*      dl @see
04B465 C3 B4 04    1027*      dl @move
04B468 DF B4 04    1028*      dl @shoot
04B46B             1029*  @init:
04B46B 21 70 B4 04 1030*      ld hl,@data ; address for LDIR to copy from
04B46F C9          1031*      ret
04B470             1032*  @data:
04B470 32          1033*      db 050 ; sprite_health
04B471 00          1034*      db 000 ; sprite_triggers_mask
04B472 00          1035*      db 000 ; sprite_x
04B473 00          1036*      db 000 ; sprite_y
04B474 00          1037*      db 000 ; sprite_orientation
04B475 00          1038*      db 000 ; sprite_animation
04B476 00          1039*      db 000 ; sprite_anim_timer
04B477 01          1040*      db 001 ; sprite_move_timer
04B478 00          1041*      db 000 ; sprite_move_step
04B479 0A          1042*      db 010 ; sprite_points
04B47A F6          1043*      db -10 ; sprite_health_modifier
04B47B 00          1044*      db 000 ; sprite_unassigned_0
04B47C 00          1045*      db 000 ; sprite_unassigned_1
04B47D 00          1046*      db 000 ; sprite_unassigned_2
04B47E             1047*  @use:
04B47E FD E5       1048*      push iy
04B480 CD 99 CE 04 1049*      call sfx_play_dog_woof_single
04B484 FD E1       1050*      pop iy
04B486 FD 7E 0C    1051*      ld a,(iy+sprite_health_modifier)
04B489 CD 41 C4 04 1052*      call plyr_sub_health
04B48D C9          1053*      ret
04B48E             1054*  @hurt:
04B48E FD E5       1055*      push iy
04B490 CD A5 CE 04 1056*      call sfx_play_dog_yelp
04B494 FD E1       1057*      pop iy
04B496             1058*  @nosound:
04B496 3E FF       1059*      ld a,255 ; kill player's shot
04B498 32 0E C2 04 1060*      ld (plyr_shot_status),a
04B49C 3A 12 C2 04 1061*      ld a,(plyr_shot_damage) ; damage done by player's shot set by plyr_shoot
04B4A0 FD 86 02    1062*      add a,(iy+sprite_health)
04B4A3 FD 77 02    1063*      ld (iy+sprite_health),a
04B4A6             1064*      ; ret p ; if health is positive, return
04B4A6 F2 CA B4 04 1065*      jp p,@do_move
04B4AA             1066*      ; otherwise fall through to kill sprite
04B4AA             1067*  @kill:
04B4AA FD E5       1068*      push iy
04B4AC CD A5 CE 04 1069*      call sfx_play_dog_yelp
04B4B0 FD E1       1070*      pop iy
04B4B2 FD 7E 0B    1071*      ld a,(iy+sprite_points)
04B4B5 CD 8F C4 04 1072*      call plyr_mod_score
04B4B9 C3 88 AF 04 1073*      jp sprite_kill
04B4BD C9          1074*      ret
04B4BE             1075*  @see:
04B4BE 18 03       1076*      jr @move
04B4C0             1077*  @seen:
04B4C0 AF          1078*      xor a
04B4C1 3C          1079*      inc a
04B4C2 C9          1080*      ret
04B4C3             1081*  @move:
04B4C3 FD 35 09    1082*      dec (iy+sprite_move_timer)
04B4C6 28 02       1083*      jr z,@do_move
04B4C8 18 F6       1084*      jr @seen
04B4CA             1085*  @do_move:
04B4CA CD 72 C7 04 1086*      call rand_8
04B4CE E6 3F       1087*      and %00111111 ; between 0 and 63
04B4D0             1088*      ; or %00100000  ; at least 32
04B4D0 F6 10       1089*      or %00010000  ; at least 16
04B4D2 FD 77 09    1090*      ld (iy+sprite_move_timer),a
04B4D5 CD 2B B0 04 1091*      call sprite_move_random
04B4D9 CD 8D CE 04 1092*      call sfx_play_dog_woof_double
04B4DD 18 E1       1093*      jr @seen
04B4DF             1094*  @shoot:
04B4DF C9          1095*      ret
04B4E0             1096*  
04B4E0             1097*  GERMAN_TROOPER:
04B4E0             1098*  ; behavior routine address lookup
04B4E0 F5 B4 04    1099*      dl @init
04B4E3 08 B5 04    1100*      dl @use
04B4E6 17 B5 04    1101*      dl @hurt
04B4E9 33 B5 04    1102*      dl @kill
04B4EC 49 B5 04    1103*      dl @see
04B4EF 65 B5 04    1104*      dl @move
04B4F2 78 B5 04    1105*      dl @shoot
04B4F5             1106*  @init:
04B4F5 21 FA B4 04 1107*      ld hl,@data ; address for LDIR to copy from
04B4F9 C9          1108*      ret
04B4FA             1109*  @data:
04B4FA 4B          1110*      db 075 ; sprite_health
04B4FB 00          1111*      db 000 ; sprite_triggers_mask
04B4FC 00          1112*      db 000 ; sprite_x
04B4FD 00          1113*      db 000 ; sprite_y
04B4FE 00          1114*      db 000 ; sprite_orientation
04B4FF 00          1115*      db 000 ; sprite_animation
04B500 00          1116*      db 000 ; sprite_anim_timer
04B501 01          1117*      db 001 ; sprite_move_timer
04B502 00          1118*      db 000 ; sprite_move_step
04B503 14          1119*      db 020 ; sprite_points
04B504 EC          1120*      db -20 ; sprite_health_modifier
04B505 00          1121*      db 000 ; sprite_unassigned_0
04B506 00          1122*      db 000 ; sprite_unassigned_1
04B507 00          1123*      db 000 ; sprite_unassigned_2
04B508             1124*  @use:
04B508 FD E5       1125*      push iy
04B50A CD 51 CE 04 1126*      call sfx_play_achtung
04B50E FD E1       1127*      pop iy
04B510 3E FB       1128*      ld a,-5
04B512 CD 41 C4 04 1129*      call plyr_sub_health
04B516 C9          1130*      ret
04B517             1131*  @hurt:
04B517 FD E5       1132*      push iy
04B519 CD 1D BD 04 1133*      call sfx_play_random_hurt
04B51D FD E1       1134*      pop iy
04B51F             1135*  @nosound:
04B51F 3E FF       1136*      ld a,255 ; kill player's shot
04B521 32 0E C2 04 1137*      ld (plyr_shot_status),a
04B525 3A 12 C2 04 1138*      ld a,(plyr_shot_damage) ; damage done by player's shot set by plyr_shoot
04B529 FD 86 02    1139*      add a,(iy+sprite_health)
04B52C FD 77 02    1140*      ld (iy+sprite_health),a
04B52F             1141*      ; ret p ; if health is positive, return
04B52F F2 72 B5 04 1142*      jp p,@do_move
04B533             1143*      ; otherwise fall through to kill sprite
04B533             1144*  @kill:
04B533 FD E5       1145*      push iy
04B535 CD 4D CF 04 1146*      call sfx_play_wilhelm
04B539 FD E1       1147*      pop iy
04B53B FD 7E 0B    1148*      ld a,(iy+sprite_points)
04B53E CD 8F C4 04 1149*      call plyr_mod_score
04B542 3E 38       1150*      ld a,OBJ_ID_DEAD_GUARD
04B544 CD D8 AF 04 1151*      call sprite_spawn
04B548 C9          1152*      ret
04B549             1153*  @see:
04B549 FD 7E 03    1154*      ld a,(iy+sprite_triggers_mask)
04B54C E6 01       1155*      and sprite_trigger_see
04B54E C2 65 B5 04 1156*      jp nz,@move
04B552 3E 01       1157*      ld a,sprite_trigger_see
04B554 FD B6 03    1158*      or a,(iy+sprite_triggers_mask)
04B557 FD 77 03    1159*      ld (iy+sprite_triggers_mask),a
04B55A FD E5       1160*      push iy
04B55C CD 51 CE 04 1161*      call sfx_play_achtung
04B560 FD E1       1162*      pop iy
04B562             1163*  @seen:
04B562 AF          1164*      xor a
04B563 3C          1165*      inc a
04B564 C9          1166*      ret
04B565             1167*  @move:
04B565 FD 35 09    1168*      dec (iy+sprite_move_timer)
04B568 CC 78 B5 04 1169*      call z,@shoot
04B56C CC 72 B5 04 1170*      call z,@do_move
04B570 18 F0       1171*      jr @seen
04B572             1172*  @do_move:
04B572 CD 2B B0 04 1173*      call sprite_move_random
04B576 18 EA       1174*      jr @seen
04B578             1175*  @shoot:
04B578 CD A4 B6 04 1176*      call sprite_reset_move_timer
04B57C CD B0 B6 04 1177*      call sprite_shoot
04B580 C9          1178*      ret
04B581             1179*  
04B581             1180*  SS_GUARD:
04B581             1181*  ; behavior routine address lookup
04B581 96 B5 04    1182*      dl @init
04B584 A9 B5 04    1183*      dl @use
04B587 B8 B5 04    1184*      dl @hurt
04B58A D4 B5 04    1185*      dl @kill
04B58D EA B5 04    1186*      dl @see
04B590 06 B6 04    1187*      dl @move
04B593 19 B6 04    1188*      dl @shoot
04B596             1189*  @init:
04B596 21 9B B5 04 1190*      ld hl,@data ; address for LDIR to copy from
04B59A C9          1191*      ret
04B59B             1192*  @data:
04B59B 64          1193*      db 100 ; sprite_health
04B59C 00          1194*      db 000 ; sprite_triggers_mask
04B59D 00          1195*      db 000 ; sprite_x
04B59E 00          1196*      db 000 ; sprite_y
04B59F 00          1197*      db 000 ; sprite_orientation
04B5A0 00          1198*      db 000 ; sprite_animation
04B5A1 00          1199*      db 000 ; sprite_anim_timer
04B5A2 01          1200*      db 001 ; sprite_move_timer
04B5A3 00          1201*      db 000 ; sprite_move_step
04B5A4 1E          1202*      db 030 ; sprite_points
04B5A5 E2          1203*      db -30 ; sprite_health_modifier
04B5A6 00          1204*      db 000 ; sprite_unassigned_0
04B5A7 00          1205*      db 000 ; sprite_unassigned_1
04B5A8 00          1206*      db 000 ; sprite_unassigned_2
04B5A9             1207*  @use:
04B5A9 FD E5       1208*      push iy
04B5AB CD 05 CF 04 1209*      call sfx_play_schusstaffel
04B5AF FD E1       1210*      pop iy
04B5B1 3E F6       1211*      ld a,-10
04B5B3 CD 41 C4 04 1212*      call plyr_sub_health
04B5B7 C9          1213*      ret
04B5B8             1214*  @hurt:
04B5B8 FD E5       1215*      push iy
04B5BA CD 1D BD 04 1216*      call sfx_play_random_hurt
04B5BE FD E1       1217*      pop iy
04B5C0             1218*  @nosound:
04B5C0 3E FF       1219*      ld a,255 ; kill player's shot
04B5C2 32 0E C2 04 1220*      ld (plyr_shot_status),a
04B5C6 3A 12 C2 04 1221*      ld a,(plyr_shot_damage) ; damage done by player's shot set by plyr_shoot
04B5CA FD 86 02    1222*      add a,(iy+sprite_health)
04B5CD FD 77 02    1223*      ld (iy+sprite_health),a
04B5D0             1224*      ; ret p ; if health is positive, return
04B5D0 F2 13 B6 04 1225*      jp p,@do_move
04B5D4             1226*      ; otherwise fall through to kill sprite
04B5D4             1227*  @kill:
04B5D4 FD E5       1228*      push iy
04B5D6 CD ED CE 04 1229*      call sfx_play_mein_leben
04B5DA FD E1       1230*      pop iy
04B5DC FD 7E 0B    1231*      ld a,(iy+sprite_points)
04B5DF CD 8F C4 04 1232*      call plyr_mod_score
04B5E3 3E 38       1233*      ld a,OBJ_ID_DEAD_GUARD
04B5E5 CD D8 AF 04 1234*      call sprite_spawn
04B5E9 C9          1235*      ret
04B5EA             1236*  @see:
04B5EA FD 7E 03    1237*      ld a,(iy+sprite_triggers_mask)
04B5ED E6 01       1238*      and sprite_trigger_see
04B5EF C2 06 B6 04 1239*      jp nz,@move
04B5F3 3E 01       1240*      ld a,sprite_trigger_see
04B5F5 FD B6 03    1241*      or a,(iy+sprite_triggers_mask)
04B5F8 FD 77 03    1242*      ld (iy+sprite_triggers_mask),a
04B5FB FD E5       1243*      push iy
04B5FD CD 05 CF 04 1244*      call sfx_play_schusstaffel
04B601 FD E1       1245*      pop iy
04B603             1246*  @seen:
04B603 AF          1247*      xor a
04B604 3C          1248*      inc a
04B605 C9          1249*      ret
04B606             1250*  @move:
04B606 FD 35 09    1251*      dec (iy+sprite_move_timer)
04B609 CC 19 B6 04 1252*      call z,@shoot
04B60D CC 13 B6 04 1253*      call z,@do_move
04B611 18 F0       1254*      jr @seen
04B613             1255*  @do_move:
04B613 CD 2B B0 04 1256*      call sprite_move_random
04B617 18 EA       1257*      jr @seen
04B619             1258*  @shoot:
04B619 CD A4 B6 04 1259*      call sprite_reset_move_timer
04B61D CD B0 B6 04 1260*      call sprite_shoot
04B621 C9          1261*      ret
04B622             1262*  
04B622             1263*  DEAD_GUARD:
04B622             1264*  ; behavior routine address lookup
04B622 37 B6 04    1265*      dl @init
04B625 4A B6 04    1266*      dl @use
04B628 5C B6 04    1267*      dl @hurt
04B62B 5D B6 04    1268*      dl @kill
04B62E 5E B6 04    1269*      dl @see
04B631 5F B6 04    1270*      dl @move
04B634 60 B6 04    1271*      dl @shoot
04B637             1272*  @init:
04B637 21 3C B6 04 1273*      ld hl,@data ; address for LDIR to copy from
04B63B C9          1274*      ret
04B63C             1275*  @data:
04B63C 64          1276*      db 100 ; sprite_health
04B63D 00          1277*      db 000 ; sprite_triggers_mask
04B63E 00          1278*      db 000 ; sprite_x
04B63F 00          1279*      db 000 ; sprite_y
04B640 00          1280*      db 000 ; sprite_orientation
04B641 00          1281*      db 000 ; sprite_animation
04B642 00          1282*      db 000 ; sprite_anim_timer
04B643 01          1283*      db 001 ; sprite_move_timer
04B644 00          1284*      db 000 ; sprite_move_step
04B645 00          1285*      db 000 ; sprite_points
04B646 00          1286*      db 000 ; sprite_health_modifier
04B647 00          1287*      db 000 ; sprite_unassigned_0
04B648 00          1288*      db 000 ; sprite_unassigned_1
04B649 00          1289*      db 000 ; sprite_unassigned_2
04B64A             1290*  @use:
04B64A CD 72 C7 04 1291*      call rand_8
04B64E E6 07       1292*      and %00000111
04B650 CD 9E C4 04 1293*      call plyr_add_ammo
04B654 CD D5 CE 04 1294*      call sfx_play_gun_reload
04B658 C3 88 AF 04 1295*      jp sprite_kill
04B65C             1296*  @hurt:
04B65C C9          1297*      ret
04B65D             1298*  @kill:
04B65D C9          1299*      ret
04B65E             1300*  @see:
04B65E C9          1301*      ret
04B65F             1302*  @move:
04B65F C9          1303*      ret
04B660             1304*  @shoot:
04B660 C9          1305*      ret
04B661             1306*  
04B661             1307*  EXPLOSION:
04B661             1308*  ; behavior routine address lookup
04B661 76 B6 04    1309*      dl @init
04B664 89 B6 04    1310*      dl @use
04B667 98 B6 04    1311*      dl @hurt
04B66A 99 B6 04    1312*      dl @kill
04B66D 9A B6 04    1313*      dl @see
04B670 A2 B6 04    1314*      dl @move
04B673 A3 B6 04    1315*      dl @shoot
04B676             1316*  @init:
04B676 21 7B B6 04 1317*      ld hl,@data ; address for LDIR to copy from
04B67A C9          1318*      ret
04B67B             1319*  @data:
04B67B 64          1320*      db 100 ; sprite_health
04B67C 00          1321*      db 000 ; sprite_triggers_mask
04B67D 00          1322*      db 000 ; sprite_x
04B67E 00          1323*      db 000 ; sprite_y
04B67F 00          1324*      db 000 ; sprite_orientation
04B680 00          1325*      db 000 ; sprite_animation
04B681 05          1326*      db 005 ; sprite_anim_timer
04B682 01          1327*      db 001 ; sprite_move_timer
04B683 00          1328*      db 000 ; sprite_move_step
04B684 00          1329*      db 000 ; sprite_points
04B685 9C          1330*      db -100; sprite_health_modifier
04B686 00          1331*      db 000 ; sprite_unassigned_0
04B687 00          1332*      db 000 ; sprite_unassigned_1
04B688 00          1333*      db 000 ; sprite_unassigned_2
04B689             1334*  @use:
04B689 FD E5       1335*      push iy
04B68B CD B1 CE 04 1336*      call sfx_play_explode
04B68F FD E1       1337*      pop iy
04B691 3E 9C       1338*      ld a,-100
04B693 CD 41 C4 04 1339*      call plyr_sub_health
04B697 C9          1340*      ret
04B698             1341*  @hurt:
04B698 C9          1342*      ret
04B699             1343*  @kill:
04B699 C9          1344*      ret
04B69A             1345*  @see:
04B69A FD 35 08    1346*      dec (iy+sprite_anim_timer)
04B69D CC 88 AF 04 1347*      call z,sprite_kill
04B6A1 C9          1348*      ret
04B6A2             1349*  @move:
04B6A2 C9          1350*      ret
04B6A3             1351*  @shoot:
04B6A3 C9          1352*      ret
04B6A4             1353*  
04B6A4             1354*  sprite_reset_move_timer:
04B6A4 CD 72 C7 04 1355*      call rand_8
04B6A8 E6 3F       1356*      and %00111111 ; between 0 and 63
04B6AA F6 10       1357*      or %00010000  ; at least 16
04B6AC FD 77 09    1358*      ld (iy+sprite_move_timer),a
04B6AF C9          1359*      ret
04B6B0             1360*  
04B6B0             1361*  ; determines whether an enemy sprite can shoot at the player
04B6B0             1362*  ; and handles the shooting mechanics if so
04B6B0             1363*  ; inputs: iy pointed at sprite record
04B6B0             1364*  ; returns: a = 0 if the sprite didn't shoot, 1 if it did
04B6B0             1365*  ; destroys: probably everything
04B6B0             1366*  sprite_shoot:
04B6B0             1367*  ; check whether sprite has the same x or y coordinate as player
04B6B0 FD 27 04    1368*      ld hl,(iy+sprite_x) ; h,l = sprite y,x position
04B6B3 ED 5B FE C1 1369*      ld de,(cur_x) ; d,e = player y,x position
       04          
04B6B8 7D          1370*      ld a,l ; compare x
04B6B9 BB          1371*      cp e
04B6BA 28 06       1372*      jr z,@shoot
04B6BC 7C          1373*      ld a,h ; compare y
04B6BD BA          1374*      cp d
04B6BE 28 02       1375*      jr z,@shoot
04B6C0 AF          1376*      xor a ; no shot so return zero
04B6C1 C9          1377*      ret
04B6C2             1378*  @shoot:
04B6C2 CD 35 CF 04 1379*      call sfx_play_shot_pistol
04B6C6             1380*  ; generate randomized fractional damage multiplier
04B6C6 CD 72 C7 04 1381*      call rand_8 ; a is a random fraction
04B6CA 5F          1382*      ld e,a
04B6CB FD 7E 0C    1383*      ld a,(iy+sprite_health_modifier)
04B6CE ED 44       1384*      neg ; setting up an unsigned mlt
04B6D0 57          1385*      ld d,a
04B6D1 ED 5C       1386*      mlt de ; d.e is an 8.8 fixed point number
04B6D3 7A          1387*      ld a,d ; ... we only want the integer portion
04B6D4 ED 44       1388*      neg ; back to signed
04B6D6 CD 41 C4 04 1389*      call plyr_sub_health
04B6DA 3E 01       1390*      ld a,1
04B6DC C9          1391*      ret
04B6DD             1392*  
04B6DD 00          1393*  see_orientation: db 0x00
04B6DE             1394*  ; cycle through all cells visible to the player from the current position
04B6DE             1395*  ; and all orientations, and trigger the @see behavior for any sprites in those cells
04B6DE             1396*  ; inputs: cur_x, cur_y,
04B6DE             1397*  ; outputs: player-aware enemies
04B6DE             1398*  ; destroys: everything
04B6DE             1399*  sprites_see_plyr:
04B6DE             1400*  ; ; DEBUG: set up loop timer
04B6DE             1401*  ;     call prt_loop_reset
04B6DE             1402*  ; ; END DEBUG
04B6DE             1403*  ; ; DEBUG: start loop timer
04B6DE             1404*  ;     call prt_loop_start
04B6DE             1405*  ; ; END DEBUG
04B6DE             1406*  
04B6DE             1407*  ; intialize orientation
04B6DE AF          1408*      xor a
04B6DF 32 DD B6 04 1409*      ld (see_orientation),a
04B6E3             1410*  @loop_orientation:
04B6E3             1411*  ; get current map position and camera orientation
04B6E3 ED 5B FE C1 1412*      ld de,(cur_x) ; d,e = cur_y,x
       04          
04B6E8             1413*      ; 0-1 prt ticks, 4 loops
04B6E8 CD C2 70 04 1414*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
04B6EC             1415*  ; get cell_views address for this cell and orientation
04B6EC 3A DD B6 04 1416*      ld a,(see_orientation)
04B6F0 5F          1417*      ld e,a
04B6F1 16 06       1418*      ld d,6 ; 6 bytes per orientation
04B6F3 ED 5C       1419*      mlt de ; de = orientation offset
04B6F5 EB          1420*      ex de,hl ; hl = orientation offset
04B6F6 06 18       1421*      ld b,24 ; 24 bytes per cell in cell_views lut
04B6F8 ED 4C       1422*      mlt bc ; bc = offset from base address of cell_views lut
04B6FA 09          1423*      add hl,bc ; hl = total offset from cell_views base address
04B6FB EB          1424*      ex de,hl ; because we can't add iy to hl
04B6FC FD 21 00 E4 1425*      ld iy,cell_views ; base address of cell_views lut
       B7          
04B701 FD 19       1426*      add iy,de ; iy = cell_views address
04B703 FD 22 46 73 1427*      ld (cur_cell_views),iy
       04          
04B708             1428*  ; cycle through the cell views masks and trigger the @see behavior for any sprites in those cells
04B708 01 00 46 28 1429*      ld bc,0x284600 ; bcu = jr z,nnn opcode, c = bit operand, b = displacement operand
04B70C AF          1430*      xor a ; poly_id
04B70D 32 42 73 04 1431*      ld (to_poly_id),a
04B711             1432*  @loop:
04B711 ED 43 1D B7 1433*      ld (@bit_iy+2),bc
       04          
04B716 FD 2A 46 73 1434*      ld iy,(cur_cell_views)
       04          
04B71B             1435*  @bit_iy:
04B71B FD CB 00 46 1436*      bit 0,(iy+0) ; the bit tested and offset will be self-modified through the loop
04B71F 28 2E       1437*      jr z,@next_poly ; the first byte of this instruction is 0x28, and will be re-written as such each loop
04B721             1438*  ; get_polys_deltas inputs: a is the orientation, c is the poly_id
04B721 3A 42 73 04 1439*      ld a,(to_poly_id)
04B725 4F          1440*      ld c,a ; poly_id
04B726 3A DD B6 04 1441*      ld a,(see_orientation)
04B72A CD 9A 75 04 1442*      call get_polys_deltas ; d,e = y,x deltas
04B72E 3A FE C1 04 1443*      ld a,(cur_x)
04B732 83          1444*      add a,e
04B733 5F          1445*      ld e,a
04B734 3A FF C1 04 1446*      ld a,(cur_y)
04B738 82          1447*      add a,d
04B739 57          1448*      ld d,a
04B73A CD C2 70 04 1449*      call get_cell_from_coords
04B73E DD 7E 03    1450*      ld a,(ix+map_sprite_id)
04B741 FE FF       1451*      cp 0xFF ; no sprite
04B743 28 0A       1452*      jr z,@next_poly
04B745 CD 67 AF 04 1453*      call sprite_set_pointer
04B749 3E 04       1454*      ld a,sp_see
04B74B CD A4 B0 04 1455*      call do_sprite_behavior
04B74F             1456*  @next_poly:
04B74F ED 4B 1D B7 1457*      ld bc,(@bit_iy+2)
       04          
04B754 3A 42 73 04 1458*      ld a,(to_poly_id)
04B758 3C          1459*      inc a ; a is next poly_id
04B759 32 42 73 04 1460*      ld (to_poly_id),a
04B75D FE 30       1461*      cp num_polys
04B75F 28 0F       1462*      jr z,@next_orientation
04B761 3E 08       1463*      ld a,8
04B763 80          1464*      add a,b
04B764 47          1465*      ld b,a ; bit tested codes to 0x46 + b/8
04B765 FE 86       1466*      cp 0x86 ; = 0x7E + 8 where 0x7E is the highest bit possible (7)
04B767 C2 11 B7 04 1467*      jp nz,@loop
04B76B 06 46       1468*      ld b,0x46
04B76D 0C          1469*      inc c ; iy address offset
04B76E 18 A1       1470*      jr @loop
04B770             1471*  @next_orientation:
04B770 3A DD B6 04 1472*      ld a,(see_orientation)
04B774 3C          1473*      inc a
04B775 E6 03       1474*      and 3 ; modulo 4
04B777 32 DD B6 04 1475*      ld (see_orientation),a
04B77B C2 E3 B6 04 1476*      jp nz,@loop_orientation
04B77F             1477*  
04B77F             1478*  ; full loop 1-2 prt ticks
04B77F             1479*  ; ; DEBUG: stop loop timer
04B77F             1480*  ;     call prt_loop_stop
04B77F             1481*  ; ; END DEBUG
04B77F C9          1482*      ret
04B780             0024   	include "src/asm/vdu.asm"
04B780             0001*  ; The following is a high-level list of the VDU sequences that are supported:
04B780             0002*  ; VDU 0: Null (no operation)
04B780             0003*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04B780             0004*  ; VDU 2: Enable “printer” §§
04B780             0005*  ; VDU 3: Disable “printer” §§
04B780             0006*  ; VDU 4: Write text at text cursor
04B780             0007*  ; VDU 5: Write text at graphics cursor
04B780             0008*  ; VDU 6: Enable screen (opposite of VDU 21) §§
04B780             0009*  ; VDU 7: Make a short beep (BEL)
04B780             0010*  ; VDU 8: Move cursor back one character
04B780             0011*  ; VDU 9: Move cursor forward one character
04B780             0012*  ; VDU 10: Move cursor down one line
04B780             0013*  ; VDU 11: Move cursor up one line
04B780             0014*  ; VDU 12: Clear text area (CLS)
04B780             0015*  ; VDU 13: Carriage return
04B780             0016*  ; VDU 14: Page mode On *
04B780             0017*  ; VDU 15: Page mode Off *
04B780             0018*  ; VDU 16: Clear graphics area (CLG)
04B780             0019*  ; VDU 17, colour: Define text colour (COLOUR)
04B780             0020*  ; VDU 18, mode, colour: Define graphics colour (GCOL mode, colour)
04B780             0021*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
04B780             0022*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04B780             0023*  ; VDU 21: Disable screen (turns of VDU command processing, except for VDU 1 and VDU 6) §§
04B780             0024*  ; VDU 22, n: Select screen mode (MODE n)
04B780             0025*  ; VDU 23, n: Re-program display character / System Commands
04B780             0026*  ; VDU 24, left; bottom; right; top;: Set graphics viewport **
04B780             0027*  ; VDU 25, mode, x; y;: PLOT command
04B780             0028*  ; VDU 26: Reset graphics and text viewports **
04B780             0029*  ; VDU 27, char: Output character to screen §
04B780             0030*  ; VDU 28, left, bottom, right, top: Set text viewport **
04B780             0031*  ; VDU 29, x; y;: Set graphics origin
04B780             0032*  ; VDU 30: Home cursor
04B780             0033*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04B780             0034*  ; VDU 127: Backspace
04B780             0035*  
04B780             0036*  ; VDU 0: Null (no operation)
04B780             0037*  ;     On encountering a VDU 0 command, the VDP will do nothing.
04B780             0038*  ;     This may be useful for padding out a VDU command sequence,
04B780             0039*  ;     or for inserting a placeholder for a command that will be added later.
04B780             0040*  ; inputs: none
04B780             0041*  ; outputs: an empty byte somewhere in VDU
04B780             0042*  ; destroys: a
04B780             0043*  vdu_null:
04B780 AF          0044*      xor a
04B781 5B D7       0045*  	rst.lil $10
04B783 C9          0046*  	ret
04B784             0047*  
04B784             0048*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04B784             0049*  ;     Ensures that the next character received by the VDP is sent through to
04B784             0050*  ;     the “printer”, and not to the screen. This is useful for sending control
04B784             0051*  ;     codes to the “printer”, or for sending data to the “printer” that is not
04B784             0052*  ;     intended to be displayed on the screen. It allows characters that would
04B784             0053*  ;     not otherwise normally be sent through to the “printer” to be sent.
04B784             0054*  ;     If the “printer” has not been enabled then this command will just discard
04B784             0055*  ;     the next byte sent to the VDP.
04B784             0056*  ; inputs: a is the ascii code of the character to send
04B784             0057*  ; prerequisites: "printer" must first be activated with VDU 2 (see below)
04B784             0058*  ; outputs: a character on the serial terminal connected to the USB port
04B784             0059*  ;           and the same character on the screen at the current text cursor location
04B784             0060*  ; QUESTION: does it also advance the text cursor?
04B784             0061*  ; destroys: hl, bc
04B784             0062*  vdu_char_to_printer:
04B784 32 94 B7 04 0063*  	ld (@arg),a
04B788 21 93 B7 04 0064*  	ld hl,@cmd
04B78C 01 02 00 00 0065*  	ld bc,@end-@cmd
04B790 5B DF       0066*  	rst.lil $18
04B792 C9          0067*  	ret
04B793 01          0068*  @cmd: db 1
04B794 00          0069*  @arg: db 0
04B795             0070*  @end:
04B795             0071*  
04B795             0072*  ; VDU 2: Enable “printer” §§
04B795             0073*  ;     Enables the “printer”.
04B795             0074*  ;     In the context of the Agon platform, the “printer” is a serial
04B795             0075*  ;     terminal that is connected to the VDP’s USB port. Typically
04B795             0076*  ;     this port is used for power, but it can also be used to send and
04B795             0077*  ;     receive data to and from the VDP.
04B795             0078*  ;     When the “printer” is enabled, the VDP will send characters it receives
04B795             0079*  ;     to the “printer” as well as to the screen. It will additionally send
04B795             0080*  ;     through control codes 8-13. To send other control codes to the “printer”,
04B795             0081*  ;     use the VDU 1 command.
04B795             0082*  ;     The VDP will not send through other control codes to the printer,
04B795             0083*  ;     and will will not send through data it receives as part of other commands.
04B795             0084*  vdu_enable_printer:
04B795 3E 02       0085*      ld a,2
04B797 5B D7       0086*  	rst.lil $10
04B799 C9          0087*  	ret
04B79A             0088*  
04B79A             0089*  ; VDU 3: Disable “printer” §§
04B79A             0090*  ; inputs: none
04B79A             0091*  ; outputs: a USB port bereft of communication with the VDP
04B79A             0092*  ; destroys: a
04B79A             0093*  vdu_disable_printer:
04B79A 3E 03       0094*      ld a,3
04B79C 5B D7       0095*  	rst.lil $10
04B79E C9          0096*  	ret
04B79F             0097*  
04B79F             0098*  ; VDU 4: Write text at text cursor
04B79F             0099*  ;     This causes text to be written at the current text cursor position.
04B79F             0100*  ;     This is the default mode for text display.
04B79F             0101*  ;     Text is written using the current text foreground and background colours.
04B79F             0102*  ; inputs: a is the character to write to the screen
04B79F             0103*  ; prerequisites: the text cursor at the intended position on screen
04B79F             0104*  ; outputs: prints the character and moves text cursor right one position
04B79F             0105*  ; destroys: a, hl, bc
04B79F             0106*  vdu_char_to_text_cursor:
04B79F 32 AF B7 04 0107*  	ld (@arg),a
04B7A3 21 AE B7 04 0108*  	ld hl,@cmd
04B7A7 01 02 00 00 0109*  	ld bc,@end-@cmd
04B7AB 5B DF       0110*  	rst.lil $18
04B7AD C9          0111*  	ret
04B7AE 04          0112*  @cmd: db 4
04B7AF 00          0113*  @arg: db 0
04B7B0             0114*  @end:
04B7B0             0115*  
04B7B0             0116*  ; VDU 5: Write text at graphics cursor
04B7B0             0117*  ;     This causes text to be written at the current graphics cursor position.
04B7B0             0118*  ;     Using this, characters may be positioned at any graphics coordinate within
04B7B0             0119*  ;     the graphics viewport. This is useful for positioning text over graphics,
04B7B0             0120*  ;     or for positioning text at a specific location on the screen.
04B7B0             0121*  ;     Characters are plotted using the current graphics foreground colour,
04B7B0             0122*  ;     using the current graphics foreground plotting mode (see VDU 18).
04B7B0             0123*  ;     The character background is transparent, and will not overwrite any
04B7B0             0124*  ;     graphics that are already present at the character’s location.
04B7B0             0125*  ;     The exception to this is VDU 27, the “delete” character, which backspaces
04B7B0             0126*  ;     and deletes as per its usual behaviour, but will erase using the current
04B7B0             0127*  ;     graphics background colour.
04B7B0             0128*  ; inputs: a is the character to write to the screen
04B7B0             0129*  ; prerequisites: the graphics cursor at the intended position on screen
04B7B0             0130*  ; outputs: see the name of the function
04B7B0             0131*  ; destroys: a, hl, bc
04B7B0             0132*  vdu_char_to_gfx_cursor:
04B7B0 32 C0 B7 04 0133*  	ld (@arg),a
04B7B4 21 BF B7 04 0134*  	ld hl,@cmd
04B7B8 01 02 00 00 0135*  	ld bc,@end-@cmd
04B7BC 5B DF       0136*  	rst.lil $18
04B7BE C9          0137*  	ret
04B7BF 05          0138*  @cmd: db 5
04B7C0 00          0139*  @arg: db 0
04B7C1             0140*  @end:
04B7C1             0141*  
04B7C1             0142*  ; VDU 6: Enable screen (opposite of VDU 21) §§
04B7C1             0143*  ;     This enables the screen, and re-enables VDU command processing,
04B7C1             0144*  ;     reversing the effect of VDU 21.
04B7C1             0145*  ; inputs: none
04B7C1             0146*  ; outputs: a functioning screen and VDU
04B7C1             0147*  ; destroys: a
04B7C1             0148*  vdu_enable_screen:
04B7C1 3E 06       0149*      ld a,6
04B7C3 5B D7       0150*  	rst.lil $10
04B7C5 C9          0151*  	ret
04B7C6             0152*  
04B7C6             0153*  ; PASSES
04B7C6             0154*  ; VDU 7: Make a short beep (BEL)
04B7C6             0155*  ;     Plays a short beep sound on audio channel 0. If the audio channel
04B7C6             0156*  ;     is already in use, or has been disabled, then this command will have no effect.
04B7C6             0157*  ; inputs: none
04B7C6             0158*  ; outputs: an unpleasant but thankfully short-lived audio tone
04B7C6             0159*  ; destroys: a
04B7C6             0160*  vdu_beep:
04B7C6 3E 07       0161*      ld a,7
04B7C8 5B D7       0162*  	rst.lil $10
04B7CA C9          0163*  	ret
04B7CB             0164*  
04B7CB             0165*  ; VDU 8: Move cursor back one character
04B7CB             0166*  ;     Moves the text cursor one character in the negative “X” direction.
04B7CB             0167*  ;     By default, when at the start of a line it will move to the end of
04B7CB             0168*  ;     the previous line (as defined by the current text viewport).
04B7CB             0169*  ;     If the cursor is also at the top of the screen then the viewport will scroll down.
04B7CB             0170*  ;     The cursor remains constrained to the current text viewport.
04B7CB             0171*  ;     When in VDU 5 mode and the graphics cursor is active, the viewport will not scroll.
04B7CB             0172*  ;     The cursor is just moved left by one character width.
04B7CB             0173*  ;     Further behaviour of the cursor can be controlled using the VDU 23,16 command.
04B7CB             0174*  ;     It should be noted that as of Console8 VDP 2.5.0, the cursor system does not
04B7CB             0175*  ;     support adjusting the direction of the cursor’s X axis, so this command
04B7CB             0176*  ;     will move the cursor to the left. This is likely to change in the future.
04B7CB             0177*  vdu_cursor_back:
04B7CB 3E 08       0178*      ld a,8
04B7CD 5B D7       0179*  	rst.lil $10
04B7CF C9          0180*  	ret
04B7D0             0181*  
04B7D0             0182*  ; VDU 9: Move cursor forward one character
04B7D0             0183*  vdu_cursor_forward:
04B7D0 3E 09       0184*      ld a,9
04B7D2 5B D7       0185*  	rst.lil $10
04B7D4 C9          0186*  	ret
04B7D5             0187*  
04B7D5             0188*  ; VDU 10: Move cursor down one line
04B7D5             0189*  vdu_cursor_down:
04B7D5 3E 0A       0190*      ld a,10
04B7D7 5B D7       0191*  	rst.lil $10
04B7D9 C9          0192*  	ret
04B7DA             0193*  
04B7DA             0194*  ; VDU 11: Move cursor up one line
04B7DA             0195*  vdu_cursor_up:
04B7DA 3E 0B       0196*      ld a,11
04B7DC 5B D7       0197*  	rst.lil $10
04B7DE C9          0198*  	ret
04B7DF             0199*  
04B7DF             0200*  ; VDU 12: Clear text area (CLS)
04B7DF             0201*  vdu_cls:
04B7DF 3E 0C       0202*      ld a,12
04B7E1 5B D7       0203*  	rst.lil $10
04B7E3 C9          0204*  	ret
04B7E4             0205*  
04B7E4             0206*  ; VDU 13: Carriage return
04B7E4             0207*  vdu_cr:
04B7E4 3E 0D       0208*      ld a,13
04B7E6 5B D7       0209*  	rst.lil $10
04B7E8 C9          0210*  	ret
04B7E9             0211*  
04B7E9             0212*  ; VDU 14: Page mode On *
04B7E9             0213*  vdu_page_on:
04B7E9 3E 0E       0214*      ld a,14
04B7EB 5B D7       0215*  	rst.lil $10
04B7ED C9          0216*  	ret
04B7EE             0217*  
04B7EE             0218*  ; VDU 15: Page mode Off *
04B7EE             0219*  vdu_page_off:
04B7EE 3E 0F       0220*      ld a,15
04B7F0 5B D7       0221*  	rst.lil $10
04B7F2 C9          0222*  	ret
04B7F3             0223*  
04B7F3             0224*  ; VDU 16: Clear graphics area (CLG)
04B7F3             0225*  vdu_clg:
04B7F3 3E 10       0226*      ld a,16
04B7F5 5B D7       0227*  	rst.lil $10
04B7F7 C9          0228*  	ret
04B7F8             0229*  
04B7F8             0230*  ; VDU 17, colour: Define text colour (COLOUR)
04B7F8             0231*  vdu_colour_text:
04B7F8 32 08 B8 04 0232*  	ld (@arg),a
04B7FC 21 07 B8 04 0233*  	ld hl,@cmd
04B800 01 02 00 00 0234*  	ld bc,@end-@cmd
04B804 5B DF       0235*  	rst.lil $18
04B806 C9          0236*  	ret
04B807 11          0237*  @cmd: db 17
04B808 00          0238*  @arg: db 0
04B809             0239*  @end:
04B809             0240*  
04B809             0241*  ; VDU 18, mode, colour: Set graphics colour (GCOL mode, colour)
04B809             0242*  ; inputs: a is the plotting mode, c is the colour
04B809             0243*  ; outputs: a VDU set to put pixels on the screen with the selected mode/colour
04B809             0244*  vdu_gcol_fg:
04B809             0245*  ; This command will set both the current graphics colour,
04B809             0246*  ; and the current graphics plotting mode.
04B809             0247*  ; As with VDU 17 the colour number will set the foreground colour
04B809             0248*  ; if it is in the range 0-127, or the background colour if it is
04B809             0249*  ; in the range 128-255, and will be interpreted in the same manner.
04B809             0250*  ; Support for different plotting modes on Agon is currently very limited.
04B809             0251*  ; The only fully supported mode is mode 0, which is the default mode.
04B809             0252*  ; This mode will plot the given colour at the given graphics coordinate,
04B809             0253*  ; and will overwrite any existing graphics at that coordinate. There is
04B809             0254*  ; very limited support for mode 4, which will invert the colour of any
04B809             0255*  ; existing graphics at the given coordinate, but this is not fully supported
04B809             0256*  ; and may not work as expected.
04B809             0257*  ; Support for other plotting modes, matching those provided by Acorn’s
04B809             0258*  ; original VDU system, may be added in the future.
04B809             0259*  ; This command is identical to the BASIC GCOL keyword.
04B809 32 1E B8 04 0260*  	ld (@mode),a
04B80D 79          0261*      ld a,c
04B80E 32 1F B8 04 0262*      ld (@col),a
04B812 21 1D B8 04 0263*  	ld hl,@cmd
04B816 01 03 00 00 0264*  	ld bc,@end-@cmd
04B81A 5B DF       0265*  	rst.lil $18
04B81C C9          0266*  	ret
04B81D 12          0267*  @cmd: db 18
04B81E 00          0268*  @mode: db 0
04B81F 00          0269*  @col: db 0
04B820             0270*  @end:
04B820             0271*  
04B820             0272*  vdu_gcol_bg:
04B820 32 37 B8 04 0273*  	ld (@mode),a
04B824 79          0274*      ld a,c
04B825 C6 80       0275*      add a,128
04B827 32 38 B8 04 0276*      ld (@col),a
04B82B 21 36 B8 04 0277*  	ld hl,@cmd
04B82F 01 03 00 00 0278*  	ld bc,@end-@cmd
04B833 5B DF       0279*  	rst.lil $18
04B835 C9          0280*  	ret
04B836 12          0281*  @cmd:  db 18
04B837 00          0282*  @mode: db 0
04B838 00          0283*  @col:  db 0
04B839             0284*  @end:
04B839             0285*  
04B839             0286*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
04B839             0287*  ;     This command sets the colour palette, by mapping a logical colour
04B839             0288*  ;     to a physical colour. This is useful for defining custom colours,
04B839             0289*  ;     or for redefining the default colours.
04B839             0290*  ;     If the physical colour number is given as 255 then the colour will
04B839             0291*  ;     be defined using the red, green, and blue values given. If the physical
04B839             0292*  ;     colour number is given as any other value then the colour will be defined
04B839             0293*  ;     using the colour palette entry given by that number, up to colour number 63.
04B839             0294*  ;     If the physical colour is not 255 then the red, green, and blue values
04B839             0295*  ;     must still be provided, but will be ignored.
04B839             0296*  ;     The values for red, green and blue must be given in the range 0-255.
04B839             0297*  ;     You should note that the physical Agon hardware only supports 64 colours,
04B839             0298*  ;     so the actual colour displayed may not be exactly the same as the colour
04B839             0299*  ;     requested. The nearest colour will be chosen.
04B839             0300*  ;     This command is equivalent to the BASIC COLOUR keyword.
04B839             0301*  ; inputs: a=physcial colour, b=logical colour, chl=r,g,b
04B839             0302*  vdu_def_log_colour:
04B839 32 5E B8 04 0303*  	ld (@physical),a
04B83D 47          0304*      ld b,a
04B83E 32 5D B8 04 0305*      ld (@logical),a
04B842 79          0306*      ld a,c
04B843 32 5F B8 04 0307*      ld (@red),a
04B847 7C          0308*      ld a,h
04B848 32 60 B8 04 0309*      ld (@green),a
04B84C 7D          0310*      ld a,l
04B84D 32 61 B8 04 0311*      ld (@blue),a
04B851 21 5C B8 04 0312*  	ld hl,@cmd
04B855 01 06 00 00 0313*  	ld bc,@end-@cmd
04B859 5B DF       0314*  	rst.lil $18
04B85B C9          0315*  	ret
04B85C 13          0316*  @cmd: db 19
04B85D 00          0317*  @logical: db 0
04B85E 00          0318*  @physical: db 0
04B85F 00          0319*  @red: db 0
04B860 00          0320*  @green: db 0
04B861 00          0321*  @blue: db 0
04B862             0322*  @end:
04B862             0323*  
04B862             0324*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04B862             0325*  vdu_reset_gfx:
04B862 3E 14       0326*      ld a,20
04B864 5B D7       0327*  	rst.lil $10
04B866 C9          0328*  	ret
04B867             0329*  
04B867             0330*  ; VDU 21: Disable screen (turns off VDU command processing,
04B867             0331*  ; except for VDU 1 and VDU 6) §§
04B867             0332*  vdu_disable_screen:
04B867 3E 15       0333*      ld a,21
04B869 5B D7       0334*  	rst.lil $10
04B86B C9          0335*  	ret
04B86C             0336*  
04B86C             0337*  ; VDU 22, n: Select screen mode (MODE n)
04B86C             0338*  ; Inputs: a, screen mode (8-bit unsigned integer), in the following list:
04B86C             0339*  ; https://agonconsole8.github.io/agon-docs/VDP---Screen-Modes.html
04B86C             0340*  ; Screen modes
04B86C             0341*  ; Modes over 128 are double-buffered
04B86C             0342*  ; From Version 1.04 or greater
04B86C             0343*  ; Mode 	Horz 	Vert 	Cols 	Refresh
04B86C             0344*  ; 0 	640 	480 	16 	    60hz
04B86C             0345*  ; * 1 	640 	480 	4 	    60hz
04B86C             0346*  ; 2 	640 	480 	2 	    60hz
04B86C             0347*  ; 3 	640 	240 	64 	    60hz
04B86C             0348*  ; 4 	640 	240 	16 	    60hz
04B86C             0349*  ; 5 	640 	240 	4 	    60hz
04B86C             0350*  ; 6 	640 	240 	2 	    60hz
04B86C             0351*  ; ** 7 	n/a 	n/a 	16 	    60hz
04B86C             0352*  ; 8 	320 	240 	64 	    60hz
04B86C             0353*  ; 9 	320 	240 	16 	    60hz
04B86C             0354*  ; 10 	320 	240 	4 	    60hz
04B86C             0355*  ; 11 	320 	240 	2 	    60hz
04B86C             0356*  ; 12 	320 	200 	64 	    70hz
04B86C             0357*  ; 13 	320 	200 	16 	    70hz
04B86C             0358*  ; 14 	320 	200 	4 	    70hz
04B86C             0359*  ; 15 	320 	200 	2 	    70hz
04B86C             0360*  ; 16 	800 	600 	4 	    60hz
04B86C             0361*  ; 17 	800 	600 	2 	    60hz
04B86C             0362*  ; 18 	1024 	768 	2 	    60hz
04B86C             0363*  ; 129 	640 	480 	4 	    60hz
04B86C             0364*  ; 130 	640 	480 	2 	    60hz
04B86C             0365*  ; 132 	640 	240 	16 	    60hz
04B86C             0366*  ; 133 	640 	240 	4 	    60hz
04B86C             0367*  ; 134 	640 	240 	2 	    60hz
04B86C             0368*  ; 136 	320 	240 	64 	    60hz
04B86C             0369*  ; 137 	320 	240 	16 	    60hz
04B86C             0370*  ; 138 	320 	240 	4 	    60hz
04B86C             0371*  ; 139 	320 	240 	2 	    60hz
04B86C             0372*  ; 140 	320 	200 	64 	    70hz
04B86C             0373*  ; 141 	320 	200 	16 	    70hz
04B86C             0374*  ; 142 	320 	200 	4 	    70hz
04B86C             0375*  ; 143 	320 	200 	2 	    70hz
04B86C             0376*  ; * Mode 1 is the “default” mode, and is the mode that the system will use on startup.
04B86C             0377*  ; It is also the mode that the system will fall back to use if it was not possible to
04B86C             0378*  ; change to the requested mode.
04B86C             0379*  ; ** Mode 7 is the “Teletext” mode, and essentially works in a very similar manner to
04B86C             0380*  ; the BBC Micro’s Teletext mode, which was also mode 7.
04B86C             0381*  vdu_set_screen_mode:
04B86C 32 7C B8 04 0382*  	ld (@arg),a
04B870 21 7B B8 04 0383*  	ld hl,@cmd
04B874 01 02 00 00 0384*  	ld bc,@end-@cmd
04B878 5B DF       0385*  	rst.lil $18
04B87A C9          0386*  	ret
04B87B 16          0387*  @cmd: db 22 ; set screen mode
04B87C 00          0388*  @arg: db 0  ; screen mode parameter
04B87D             0389*  @end:
04B87D             0390*  
04B87D             0391*  ; VDU 23, n: Re-program display character / System Commands
04B87D             0392*  ; inputs: a, ascii code; hl, pointer to bitmask data
04B87D             0393*  vdu_define_character:
04B87D 32 99 B8 04 0394*  	ld (@ascii),a
04B881 11 9A B8 04 0395*  	ld de,@data
04B885 06 08       0396*  	ld b,8 ; loop counter for 8 bytes of data
04B887             0397*  @loop:
04B887 7E          0398*  	ld a,(hl)
04B888 12          0399*  	ld (de),a
04B889 23          0400*  	inc hl
04B88A 13          0401*  	inc de
04B88B 10 FA       0402*  	djnz @loop
04B88D 21 98 B8 04 0403*  	ld hl,@cmd
04B891 01 0A 00 00 0404*  	ld bc,@end-@cmd
04B895 5B DF       0405*  	rst.lil $18
04B897 C9          0406*  	ret
04B898 17          0407*  @cmd:   db 23
04B899 00          0408*  @ascii: db 0
04B89A             0409*  @data:  ds 8
04B8A2             0410*  @end:
04B8A2             0411*  
04B8A2             0412*  ; VDU 24, left; bottom; right; top;: Set graphics viewport
04B8A2             0413*  ; NOTE: the order of the y-coordinate parameters are inverted
04B8A2             0414*  ; 	because we have turned off logical screen scaling
04B8A2             0415*  ; inputs: bc=x0,de=y0,ix=x1,iy=y1
04B8A2             0416*  ; outputs; nothing
04B8A2             0417*  ; destroys: a might make it out alive
04B8A2             0418*  vdu_set_gfx_viewport:
04B8A2 ED 43 C2 B8 0419*      ld (@x0),bc
       04          
04B8A7 FD 22 C4 B8 0420*      ld (@y1),iy
       04          
04B8AC DD 22 C6 B8 0421*  	ld (@x1),ix
       04          
04B8B1 ED 53 C8 B8 0422*  	ld (@y0),de
       04          
04B8B6 21 C1 B8 04 0423*  	ld hl,@cmd
04B8BA 01 09 00 00 0424*  	ld bc,@end-@cmd
04B8BE 5B DF       0425*  	rst.lil $18
04B8C0 C9          0426*  	ret
04B8C1 18          0427*  @cmd:   db 24 ; set graphics viewport command
04B8C2 00 00       0428*  @x0: 	dw 0x0000 ; set by bc
04B8C4 00 00       0429*  @y1: 	dw 0x0000 ; set by iy
04B8C6 00 00       0430*  @x1: 	dw 0x0000 ; set by ix
04B8C8 00 00       0431*  @y0: 	dw 0x0000 ; set by de
04B8CA 00          0432*  @end:   db 0x00	  ; padding
04B8CB             0433*  
04B8CB             0434*  ; VDU 25, mode, x; y;: PLOT command
04B8CB             0435*  ; Implemented in vdu_plot.asm
04B8CB             0436*  
04B8CB             0437*  ; VDU 26: Reset graphics and text viewports **
04B8CB             0438*  vdu_reset_txt_gfx_view:
04B8CB 3E 1A       0439*      ld a,26
04B8CD 5B D7       0440*  	rst.lil $10
04B8CF C9          0441*  	ret
04B8D0             0442*  
04B8D0             0443*  ; PASSES
04B8D0             0444*  ; VDU 27, char: Output character to screen §
04B8D0             0445*  ; inputs: a is the ascii code of the character to draw
04B8D0             0446*  vdu_draw_char:
04B8D0 32 E0 B8 04 0447*  	ld (@arg),a
04B8D4 21 DF B8 04 0448*  	ld hl,@cmd
04B8D8 01 02 00 00 0449*  	ld bc,@end-@cmd
04B8DC 5B DF       0450*  	rst.lil $18
04B8DE C9          0451*  	ret
04B8DF 1B          0452*  @cmd: db 27
04B8E0 00          0453*  @arg: db 0  ; ascii code of character to draw
04B8E1             0454*  @end:
04B8E1             0455*  
04B8E1             0456*  ; VDU 28, left, bottom, right, top: Set text viewport **
04B8E1             0457*  ; MIND THE LITTLE-ENDIANESS
04B8E1             0458*  ; inputs: c=left,b=bottom,e=right,d=top
04B8E1             0459*  ; outputs; nothing
04B8E1             0460*  ; destroys: a might make it out alive
04B8E1             0461*  vdu_set_txt_viewport:
04B8E1 ED 43 F7 B8 0462*      ld (@lb),bc
       04          
04B8E6 ED 53 F9 B8 0463*  	ld (@rt),de
       04          
04B8EB 21 F6 B8 04 0464*  	ld hl,@cmd
04B8EF 01 05 00 00 0465*  	ld bc,@end-@cmd
04B8F3 5B DF       0466*  	rst.lil $18
04B8F5 C9          0467*  	ret
04B8F6 1C          0468*  @cmd:   db 28 ; set text viewport command
04B8F7 00 00       0469*  @lb: 	dw 0x0000 ; set by bc
04B8F9 00 00       0470*  @rt: 	dw 0x0000 ; set by de
04B8FB 00          0471*  @end:   db 0x00	  ; padding
04B8FC             0472*  
04B8FC             0473*  ; PASSES
04B8FC             0474*  ; VDU 29, x; y;: Set graphics origin
04B8FC             0475*  ; inputs: bc,de x,y coordinates
04B8FC             0476*  vdu_set_gfx_origin:
04B8FC ED 43 12 B9 0477*      ld (@x0),bc
       04          
04B901 ED 53 14 B9 0478*      ld (@y0),de
       04          
04B906 21 11 B9 04 0479*  	ld hl,@cmd
04B90A 01 05 00 00 0480*  	ld bc,@end-@cmd
04B90E 5B DF       0481*  	rst.lil $18
04B910 C9          0482*  	ret
04B911 1D          0483*  @cmd:	db 29
04B912 00 00       0484*  @x0: 	dw 0
04B914 00 00       0485*  @y0: 	dw 0
04B916 00          0486*  @end: 	db 0 ; padding
04B917             0487*  
04B917             0488*  ; PASSES
04B917             0489*  ; VDU 30: Home cursor
04B917             0490*  vdu_home_cursor:
04B917 3E 1E       0491*      ld a,30
04B919 5B D7       0492*  	rst.lil $10
04B91B C9          0493*  	ret
04B91C             0494*  
04B91C             0495*  ; PASSES
04B91C             0496*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04B91C             0497*  ; inputs: c=x, b=y 8-bit unsigned integers
04B91C             0498*  vdu_move_cursor:
04B91C ED 43 2D B9 0499*      ld (@x0),bc
       04          
04B921 21 2C B9 04 0500*  	ld hl,@cmd
04B925 01 03 00 00 0501*  	ld bc,@end-@cmd
04B929 5B DF       0502*  	rst.lil $18
04B92B C9          0503*  	ret
04B92C 1F          0504*  @cmd: 	db 31
04B92D 00          0505*  @x0:	db 0
04B92E 00          0506*  @y0: 	db 0
04B92F 00          0507*  @end: 	db 0 ; padding
04B930             0508*  
04B930             0509*  
04B930             0510*  ; VDU 127: Backspace
04B930             0511*  vdu_bksp:
04B930 3E 7F       0512*      ld a,127
04B932 5B D7       0513*  	rst.lil $10
04B934 C9          0514*  	ret
04B935             0515*  
04B935             0516*  ; activate a bitmap in preparation to draw it
04B935             0517*  ; inputs: a holding the bitmap index
04B935             0518*  vdu_bmp_select:
04B935 32 47 B9 04 0519*  	ld (@bmp),a
04B939 21 44 B9 04 0520*  	ld hl,@cmd
04B93D 01 04 00 00 0521*  	ld bc,@end-@cmd
04B941 5B DF       0522*  	rst.lil $18
04B943 C9          0523*  	ret
04B944 17 1B 00    0524*  @cmd: db 23,27,0
04B947 00          0525*  @bmp: db 0
04B948             0526*  @end:
04B948             0527*  
04B948             0528*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04B948             0529*  ; inputs: hl=bufferId
04B948             0530*  vdu_buff_select:
04B948 22 5A B9 04 0531*  	ld (@bufferId),hl
04B94C 21 57 B9 04 0532*  	ld hl,@cmd
04B950 01 05 00 00 0533*  	ld bc,@end-@cmd
04B954 5B DF       0534*  	rst.lil $18
04B956 C9          0535*  	ret
04B957 17 1B 20    0536*  @cmd: db 23,27,0x20
04B95A 00 00       0537*  @bufferId: dw 0x0000
04B95C 00          0538*  @end: db 0x00 ; padding
04B95D             0539*  
04B95D             0540*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer
04B95D             0541*  ; inputs: a=format; bc=width; de=height
04B95D             0542*  ; prerequisites: buffer selected by vdu_bmp_select or vdu_buff_select
04B95D             0543*  ; formats: https://agonconsole8.github.io/agon-docs/VDP---Bitmaps-API.html
04B95D             0544*  ; 0 	RGBA8888 (4-bytes per pixel)
04B95D             0545*  ; 1 	RGBA2222 (1-bytes per pixel)
04B95D             0546*  ; 2 	Mono/Mask (1-bit per pixel)
04B95D             0547*  ; 3 	Reserved for internal use by VDP (“native” format)
04B95D             0548*  vdu_bmp_create:
04B95D ED 43 79 B9 0549*      ld (@width),bc
       04          
04B962 ED 53 7B B9 0550*      ld (@height),de
       04          
04B967 32 7D B9 04 0551*      ld (@fmt),a
04B96B 21 76 B9 04 0552*  	ld hl,@cmd
04B96F 01 08 00 00 0553*  	ld bc,@end-@cmd
04B973 5B DF       0554*  	rst.lil $18
04B975 C9          0555*  	ret
04B976 17 1B 21    0556*  @cmd:       db 23,27,0x21
04B979 00 00       0557*  @width:     dw 0x0000
04B97B 00 00       0558*  @height:    dw 0x0000
04B97D 00          0559*  @fmt:       db 0x00
04B97E             0560*  @end:
04B97E             0561*  
04B97E             0562*  ; Draw a bitmap on the screen
04B97E             0563*  ; inputs: bc, x-coordinate; de, y-coordinate
04B97E             0564*  ; prerequisite: bitmap index set by e.g. vdu_bmp_select
04B97E             0565*  vdu_bmp_draw:
04B97E ED 43 96 B9 0566*      ld (@x0),bc
       04          
04B983 ED 53 98 B9 0567*      ld (@y0),de
       04          
04B988 21 93 B9 04 0568*  	ld hl,@cmd
04B98C 01 07 00 00 0569*  	ld bc,@end-@cmd
04B990 5B DF       0570*  	rst.lil $18
04B992 C9          0571*  	ret
04B993 17 1B 03    0572*  @cmd: db 23,27,3
04B996 00 00       0573*  @x0:  dw 0x0000
04B998 00 00       0574*  @y0:  dw 0x0000
04B99A 00          0575*  @end: db 0x00 ; padding
04B99B             0576*  
04B99B             0577*  ; VDU 23, 0, &C0, n: Turn logical screen scaling on and off *
04B99B             0578*  ; inputs: a is scaling mode, 1=on, 0=off
04B99B             0579*  ; note: default setting on boot is scaling ON
04B99B             0580*  vdu_set_scaling:
04B99B 32 AD B9 04 0581*  	ld (@arg),a
04B99F 21 AA B9 04 0582*  	ld hl,@cmd
04B9A3 01 04 00 00 0583*  	ld bc,@end-@cmd
04B9A7 5B DF       0584*  	rst.lil $18
04B9A9 C9          0585*  	ret
04B9AA 17 00 C0    0586*  @cmd: db 23,0,0xC0
04B9AD 00          0587*  @arg: db 0  ; scaling on/off
04B9AE             0588*  @end:
04B9AE             0589*  
04B9AE             0590*  ; VDU 23, 0, &C3: Swap the screen buffer and/or wait for VSYNC **
04B9AE             0591*  ; 	Swap the screen buffer (double-buffered modes only) or wait for VSYNC
04B9AE             0592*  ; 	(all modes).
04B9AE             0593*  
04B9AE             0594*  ; 	This command will swap the screen buffer, if the current screen mode
04B9AE             0595*  ; 	is double-buffered, doing so at the next VSYNC. If the current screen
04B9AE             0596*  ; 	mode is not double-buffered then this command will wait for the next
04B9AE             0597*  ; 	VSYNC signal before returning. This can be used to synchronise the
04B9AE             0598*  ; 	screen with the vertical refresh rate of the monitor.
04B9AE             0599*  
04B9AE             0600*  ; 	Waiting for VSYNC can be useful for ensuring smooth graphical animation,
04B9AE             0601*  ; 	as it will prevent tearing of the screen.
04B9AE             0602*  ; inputs: none
04B9AE             0603*  ; outputs: none
04B9AE             0604*  ; destroys: hl, bc
04B9AE             0605*  vdu_flip:
04B9AE 21 B9 B9 04 0606*  	ld hl,@cmd
04B9B2 01 03 00 00 0607*  	ld bc,@end-@cmd
04B9B6 5B DF       0608*  	rst.lil $18
04B9B8 C9          0609*  	ret
04B9B9 17 00 C3    0610*  @cmd: db 23,0,0xC3
04B9BC             0611*  @end:
04B9BC             0612*  
04B9BC             0613*  ; Command 64: Compress a buffer
04B9BC             0614*  ; VDU 23, 0, &A0, targetBufferId; 64, sourceBufferId;
04B9BC             0615*  ; This command will compress the contents of a buffer, replacing the target buffer with the compressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04B9BC             0616*  
04B9BC             0617*  
04B9BC             0618*  ; Command 65: Decompress a buffer
04B9BC             0619*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04B9BC             0620*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04B9BC             0621*  ; inputs: hl=sourceBufferId/targetBufferId
04B9BC             0622*  vdu_decompress_buffer:
04B9BC 22 D8 B9 04 0623*  	ld (@targetBufferId),hl
04B9C0 22 DB B9 04 0624*  	ld (@sourceBufferId),hl
04B9C4 3E 41       0625*  	ld a,65
04B9C6 32 DA B9 04 0626*  	ld (@cmd1),a ; restore the part of command that got stomped on
04B9CA 21 D5 B9 04 0627*  	ld hl,@cmd
04B9CE 01 08 00 00 0628*  	ld bc,@end-@cmd
04B9D2 5B DF       0629*  	rst.lil $18
04B9D4 C9          0630*  	ret
04B9D5 17 00 A0    0631*  @cmd: 	db 23,0,0xA0
04B9D8 00 00       0632*  @targetBufferId: dw 0x0000
04B9DA 41          0633*  @cmd1:	db 65
04B9DB 00 00       0634*  @sourceBufferId: dw 0x0000
04B9DD 00          0635*  @end: 	db 0x00 ; padding
04B9DE             0636*  
04B9DE             0637*  ; Command 65: Decompress a buffer
04B9DE             0638*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04B9DE             0639*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04B9DE             0640*  ; inputs: hl=sourceBufferId/targetBufferId
04B9DE             0641*  ; 0x7FFF for the source buffer is just an easy-to remember aribtrary value
04B9DE             0642*  vdu_decompress_buffer_different:
04B9DE 22 FE B9 04 0643*  	ld (@targetBufferId),hl
04B9E2 21 FF 7F 00 0644*      ld hl,0x7FFF
04B9E6 22 01 BA 04 0645*  	ld (@sourceBufferId),hl
04B9EA 3E 41       0646*  	ld a,65
04B9EC 32 00 BA 04 0647*  	ld (@cmd1),a ; restore the part of command that got stomped on
04B9F0 21 FB B9 04 0648*  	ld hl,@cmd
04B9F4 01 08 00 00 0649*  	ld bc,@end-@cmd
04B9F8 5B DF       0650*  	rst.lil $18
04B9FA C9          0651*  	ret
04B9FB 17 00 A0    0652*  @cmd: 	db 23,0,0xA0
04B9FE 00 00       0653*  @targetBufferId: dw 0x0000
04BA00 41          0654*  @cmd1:	db 65
04BA01 00 00       0655*  @sourceBufferId: dw 0x0000
04BA03 00          0656*  @end: 	db 0x00 ; padding
04BA04             0657*  
04BA04             0658*  ; #### from vdp.asm ####
04BA04             0659*  
04BA04             0660*  ; https://github.com/breakintoprogram/agon-docs/wiki/VDP
04BA04             0661*  ; VDU 23, 7: Scrolling
04BA04             0662*  ;     VDU 23, 7, extent, direction, speed: Scroll the screen
04BA04             0663*  ; inputs: a, extent; l, direction; h; speed
04BA04             0664*  vdu_scroll_down:
04BA04 32 19 BA 04 0665*  	ld (@extent),a
04BA08 22 1A BA 04 0666*  	ld (@dir),hl ; implicitly populates @speed
04BA0C 21 17 BA 04 0667*  	ld hl,@cmd
04BA10 01 05 00 00 0668*  	ld bc,@end-@cmd
04BA14 5B DF       0669*  	rst.lil $18     ;; Sending command to VDP
04BA16 C9          0670*  	ret
04BA17 17 07       0671*  @cmd:       db 23,7
04BA19 00          0672*  @extent:    db 0x00 ; 0 current text window, 1 entire screen, 2 curr gfx viewport
04BA1A 00          0673*  @dir:       db 0x00 ; 0 right, 1 left, 2 down, 3 up
04BA1B 00          0674*  @speed:     db 0x00 ; pixels
04BA1C 00          0675*  @end:		db 0x00 ; padding
04BA1D             0676*  
04BA1D             0677*  cursor_on:
04BA1D 21 28 BA 04 0678*  	ld hl,@cmd
04BA21 01 03 00 00 0679*  	ld bc,@end-@cmd
04BA25 5B DF       0680*  	rst.lil $18
04BA27 C9          0681*  	ret
04BA28             0682*  @cmd:
04BA28 17 01 01    0683*  	db 23,1,1
04BA2B             0684*  @end:
04BA2B             0685*  
04BA2B             0686*  cursor_off:
04BA2B 21 36 BA 04 0687*  	ld hl,@cmd
04BA2F 01 03 00 00 0688*  	ld bc,@end-@cmd
04BA33 5B DF       0689*  	rst.lil $18
04BA35 C9          0690*  	ret
04BA36             0691*  @cmd:
04BA36 17 01 00    0692*  	db 23,1,0
04BA39             0693*  @end:
04BA39             0694*  
04BA39 DD E5       0695*  vdu_vblank:		PUSH 	IX			; Wait for VBLANK interrupt
04BA3B             0696*  			MOSCALL	mos_sysvars		; Fetch pointer to system variables
04BA3B 3E 08       0001*M 			LD	A, function
04BA3D 5B CF       0002*M 			RST.LIL	08h
04BA3F DD 7E 00    0697*  			LD	A, (IX + sysvar_time + 0)
04BA42 DD BE 00    0698*  @wait:			CP 	A, (IX + sysvar_time + 0)
04BA45 28 FB       0699*  			JR	Z, @wait
04BA47 DD E1       0700*  			POP	IX
04BA49 C9          0701*  			RET
04BA4A             0702*  
04BA4A             0703*  ; #### from vdu_bmp.asm ####
04BA4A             0704*  ; =========================================================================
04BA4A             0705*  ; Bitmaps
04BA4A             0706*  ; -------------------------------------------------------------------------
04BA4A             0707*  ; VDU 23, 27, 0, n: Select bitmap n
04BA4A             0708*  ; VDU 23, 27, &20, bufferId;: Select bitmap using a 16-bit buffer ID *
04BA4A             0709*  ; VDU 23, 27, 1, w; h; b1, b2 ... bn: Load colour bitmap data into current bitmap
04BA4A             0710*  
04BA4A             0711*  ; VDU 23, 27, 1, n, 0, 0;: Capture screen data into bitmap n *
04BA4A             0712*  ; VDU 23, 27, &21, bitmapId; 0; : same, but to 16-bit buffer ID *
04BA4A             0713*  ; Any PLOT, or VDU 25, style command will push the graphics cursor position -
04BA4A             0714*  ; typically "move" style plot commands are used to define the rectangle.
04BA4A             0715*  ; To be clear, this command should be performed after two "move" style PLOT commands.
04BA4A             0716*  ; inputs: hl; target bufferId
04BA4A             0717*  ; all the following are in 16.8 fixed point format
04BA4A             0718*  ;   ub.c; top-left x coordinate
04BA4A             0719*  ;   ud.e; top-left y coordinate
04BA4A             0720*  ;   ui.x; width
04BA4A             0721*  ;   ui.y; height
04BA4A             0722*  vdu_buff_screen_capture168:
04BA4A ED 53 81 BA 0723*          ld (@y0-1),de
       04          
04BA4F ED 43 7F BA 0724*          ld (@x0-1),bc
       04          
04BA54 3E 44       0725*          ld a,0x44 ; plot_pt+mv_abs
04BA56 32 7F BA 04 0726*          ld (@x0-1),a
04BA5A             0727*  
04BA5A DD 22 86 BA 0728*          ld (@x1),ix
       04          
04BA5F FD 22 88 BA 0729*          ld (@y1),iy
       04          
04BA64 3E 17       0730*          ld a,23
04BA66 32 8A BA 04 0731*          ld (@y1+2),a
04BA6A             0732*  
04BA6A 22 8D BA 04 0733*          ld (@bufId),hl
04BA6E AF          0734*          xor a
04BA6F 32 8F BA 04 0735*          ld (@bufId+2),a
04BA73             0736*  
04BA73 21 7E BA 04 0737*          ld hl,@begin
04BA77 01 13 00 00 0738*          ld bc,@end-@begin
04BA7B 5B DF       0739*          rst.lil $18
04BA7D C9          0740*          ret
04BA7E             0741*  @begin:
04BA7E             0742*  ; absolute move gfx cursor to top-left screen coordinate
04BA7E             0743*  ; VDU 25, mode, x; y;: PLOT command
04BA7E 19 44       0744*          db 25,0x44 ; plot_pt+mv_abs
04BA80 40 00       0745*  @x0: 	dw 64
04BA82 40 00       0746*  @y0: 	dw 64
04BA84             0747*  ; relative move gfx cursor to bottom-right screen coordinate
04BA84             0748*  ; VDU 25, mode, x; y;: PLOT command
04BA84 19 40       0749*          db 25,0x40 ; plot_pt+mv_rel
04BA86 0F 00       0750*  @x1: 	dw 15
04BA88 0F 00       0751*  @y1: 	dw 15
04BA8A             0752*  ; now the main event
04BA8A             0753*  ; VDU 23, 27, &21, bitmapId; 0;
04BA8A 17 1B 21    0754*          db 23,27,0x21
04BA8D 00 20 00 00 0755*  @bufId: dw 0x2000,0x0000
04BA91             0756*  @end: ; no padding required
04BA91             0757*  
04BA91             0758*  vdu_buff_screen_capture_full:
04BA91 21 9C BA 04 0759*          ld hl,@begin
04BA95 01 13 00 00 0760*          ld bc,@end-@begin
04BA99 5B DF       0761*          rst.lil $18
04BA9B C9          0762*          ret
04BA9C             0763*  @begin:
04BA9C             0764*  ; absolute move gfx cursor to top-left screen coordinate
04BA9C             0765*  ; VDU 25, mode, x; y;: PLOT command
04BA9C 19 44       0766*          db 25,0x44 ; plot_pt+mv_abs
04BA9E 00 00       0767*  @x0: 	dw 0
04BAA0 00 00       0768*  @y0: 	dw 0
04BAA2             0769*  ; relative move gfx cursor to bottom-right screen coordinate
04BAA2             0770*  ; VDU 25, mode, x; y;: PLOT command
04BAA2 19 40       0771*          db 25,0x40 ; plot_pt+mv_rel
04BAA4 3F 01       0772*  @x1: 	dw 319
04BAA6 EF 00       0773*  @y1: 	dw 239
04BAA8             0774*  ; now the main event
04BAA8             0775*  ; VDU 23, 27, &21, bitmapId; 0;
04BAA8 17 1B 21    0776*          db 23,27,0x21
04BAAB 00 20 00 00 0777*  @bufId: dw 0x2000,0x0000
04BAAF             0778*  @end: ; no padding required
04BAAF             0779*  
04BAAF             0780*  vdu_buff_screen_paste_full:
04BAAF 21 BA BA 04 0781*          ld hl,@begin
04BAB3 01 0B 00 00 0782*          ld bc,@end-@begin
04BAB7 5B DF       0783*          rst.lil $18
04BAB9 C9          0784*          ret
04BABA             0785*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04BABA 17 1B 20    0786*  @begin:    db 23,27,0x20
04BABD 00 20       0787*  @bufferId: dw 0x2000
04BABF             0788*  ; VDU 25, mode, x; y;: PLOT command
04BABF 19 ED       0789*             db 25,0xED ; plot_bmp+dr_abs_fg
04BAC1 00 00 00 00 0790*             dw 0x0000,0x0000
04BAC5             0791*  @end: ; no padding required
04BAC5             0792*  
04BAC5             0793*  vdu_buff_screen_capture_tiles:
04BAC5 21 D0 BA 04 0794*          ld hl,@begin
04BAC9 01 13 00 00 0795*          ld bc,@end-@begin
04BACD 5B DF       0796*          rst.lil $18
04BACF C9          0797*          ret
04BAD0             0798*  @begin:
04BAD0             0799*  ; absolute move gfx cursor to top-left screen coordinate
04BAD0             0800*  ; VDU 25, mode, x; y;: PLOT command
04BAD0 19 44       0801*          db 25,0x44 ; plot_pt+mv_abs
04BAD2 00 00       0802*  @x0: 	dw 0
04BAD4 00 00       0803*  @y0: 	dw 0
04BAD6             0804*  ; relative move gfx cursor to bottom-right screen coordinate
04BAD6             0805*  ; VDU 25, mode, x; y;: PLOT command
04BAD6 19 40       0806*          db 25,0x40 ; plot_pt+mv_rel
04BAD8 FF 00       0807*  @x1: 	dw 319-64
04BADA EF 00       0808*  @y1: 	dw 239
04BADC             0809*  ; now the main event
04BADC             0810*  ; VDU 23, 27, &21, bitmapId; 0;
04BADC 17 1B 21    0811*          db 23,27,0x21
04BADF 00 20 00 00 0812*  @bufId: dw 0x2000,0x0000
04BAE3             0813*  @end: ; no padding required
04BAE3             0814*  
04BAE3             0815*  vdu_buff_screen_paste_tiles:
04BAE3 21 EE BA 04 0816*          ld hl,@begin
04BAE7 01 0B 00 00 0817*          ld bc,@end-@begin
04BAEB 5B DF       0818*          rst.lil $18
04BAED C9          0819*          ret
04BAEE             0820*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04BAEE 17 1B 20    0821*  @begin:    db 23,27,0x20
04BAF1 00 20       0822*  @bufferId: dw 0x2000
04BAF3             0823*  ; VDU 25, mode, x; y;: PLOT command
04BAF3 19 ED       0824*             db 25,0xED ; plot_bmp+dr_abs_fg
04BAF5 00 00 01 00 0825*             dw 0x0000,0x0001
04BAF9             0826*  @end: ; no padding required
04BAF9             0827*  
04BAF9             0828*  ; VDU 23, 27, 2, w; h; col1; col2;: Create a solid colour rectangular bitmap
04BAF9             0829*  ; VDU 23, 27, 3, x; y;: Draw current bitmap on screen at pixel position x, y
04BAF9             0830*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer *
04BAF9             0831*  ; Value	Meaning
04BAF9             0832*  ; 0	RGBA8888 (4-bytes per pixel)
04BAF9             0833*  ; 1	RGBA2222 (1-bytes per pixel)
04BAF9             0834*  ; 2	Mono/Mask (1-bit per pixel)
04BAF9             0835*  ; 3	Reserved for internal use by VDP ("native" format)VDP.
04BAF9             0836*  ;     They have some significant limitations, and are not intended for general use.
04BAF9             0837*  
04BAF9             0838*  ; =========================================================================
04BAF9             0839*  ; Sprites
04BAF9             0840*  ; -------------------------------------------------------------------------
04BAF9             0841*  ; VDU 23, 27, 4, n: Select sprite n
04BAF9             0842*  ; VDU 23, 27, 5: Clear frames in current sprite
04BAF9             0843*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04BAF9             0844*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04BAF9             0845*  ; VDU 23, 27, 7, n: Activate n sprites
04BAF9             0846*  ; VDU 23, 27, 8: Select next frame of current sprite
04BAF9             0847*  ; VDU 23, 27, 9: Select previous frame of current sprite
04BAF9             0848*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04BAF9             0849*  ; VDU 23, 27, 11: Show current sprite
04BAF9             0850*  ; VDU 23, 27, 12: Hide current sprite
04BAF9             0851*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04BAF9             0852*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04BAF9             0853*  ; VDU 23, 27, 15: Update the sprites in the GPU
04BAF9             0854*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04BAF9             0855*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04BAF9             0856*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04BAF9             0857*  
04BAF9             0858*  ; =========================================================================
04BAF9             0859*  ; Mouse cursor
04BAF9             0860*  ; -------------------------------------------------------------------------
04BAF9             0861*  ; VDU 23, 27, &40, hotX, hotY: Setup a mouse cursor with a hot spot at hotX, hotY
04BAF9             0862*  
04BAF9             0863*  ; #### from vdu_plot.asm ####
04BAF9             0864*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04BAF9             0865*  ; PLOT code 	(Decimal) 	Effect
04BAF9             0866*  ; &00-&07 	0-7 	Solid line, includes both ends
04BAF9             0867*  plot_sl_both: equ 0x00
04BAF9             0868*  
04BAF9             0869*  ; &08-&0F 	8-15 	Solid line, final point omitted
04BAF9             0870*  plot_sl_first: equ 0x08
04BAF9             0871*  
04BAF9             0872*  ; &10-&17 	16-23 	Not supported (Dot-dash line, includes both ends, pattern restarted)
04BAF9             0873*  ; &18-&1F 	24-31 	Not supported (Dot-dash line, first point omitted, pattern restarted)
04BAF9             0874*  
04BAF9             0875*  ; &20-&27 	32-39 	Solid line, first point omitted
04BAF9             0876*  plot_sl_last: equ 0x20
04BAF9             0877*  
04BAF9             0878*  ; &28-&2F 	40-47 	Solid line, both points omitted
04BAF9             0879*  plot_sl_none: equ 0x28
04BAF9             0880*  
04BAF9             0881*  ; &30-&37 	48-55 	Not supported (Dot-dash line, first point omitted, pattern continued)
04BAF9             0882*  ; &38-&3F 	56-63 	Not supported (Dot-dash line, both points omitted, pattern continued)
04BAF9             0883*  
04BAF9             0884*  ; &40-&47 	64-71 	Point plot
04BAF9             0885*  plot_pt: equ 0x40
04BAF9             0886*  
04BAF9             0887*  ; &48-&4F 	72-79 	Line fill left and right to non-background §§
04BAF9             0888*  plot_lf_lr_non_bg: equ 0x48
04BAF9             0889*  
04BAF9             0890*  ; &50-&57 	80-87 	Triangle fill
04BAF9             0891*  plot_tf: equ 0x50
04BAF9             0892*  
04BAF9             0893*  ; &58-&5F 	88-95 	Line fill right to background §§
04BAF9             0894*  plot_lf_r_bg: equ 0x58
04BAF9             0895*  
04BAF9             0896*  ; &60-&67 	96-103 	Rectangle fill
04BAF9             0897*  plot_rf: equ 0x60
04BAF9             0898*  
04BAF9             0899*  ; &68-&6F 	104-111 	Line fill left and right to foreground §§
04BAF9             0900*  plot_lf_lr_fg: equ 0x60
04BAF9             0901*  
04BAF9             0902*  ; &70-&77 	112-119 	Parallelogram fill
04BAF9             0903*  plot_pf: equ 0x70
04BAF9             0904*  
04BAF9             0905*  ; &78-&7F 	120-127 	Line fill right to non-foreground §§
04BAF9             0906*  plot_lf_r_non_fg: equ 0x78
04BAF9             0907*  
04BAF9             0908*  ; &80-&87 	128-135 	Not supported (Flood until non-background)
04BAF9             0909*  ; &88-&8F 	136-143 	Not supported (Flood until foreground)
04BAF9             0910*  
04BAF9             0911*  ; &90-&97 	144-151 	Circle outline
04BAF9             0912*  plot_co: equ 0x90
04BAF9             0913*  
04BAF9             0914*  ; &98-&9F 	152-159 	Circle fill
04BAF9             0915*  plot_cf: equ 0x98
04BAF9             0916*  
04BAF9             0917*  ; &A0-&A7 	160-167 	Not supported (Circular arc)
04BAF9             0918*  ; &A8-&AF 	168-175 	Not supported (Circular segment)
04BAF9             0919*  ; &B0-&B7 	176-183 	Not supported (Circular sector)
04BAF9             0920*  
04BAF9             0921*  ; &B8-&BF 	184-191 	Rectangle copy/move
04BAF9             0922*  plot_rcm: equ 0xB8
04BAF9             0923*  
04BAF9             0924*  ; &C0-&C7 	192-199 	Not supported (Ellipse outline)
04BAF9             0925*  ; &C8-&CF 	200-207 	Not supported (Ellipse fill)
04BAF9             0926*  ; &D0-&D7 	208-215 	Not defined
04BAF9             0927*  ; &D8-&DF 	216-223 	Not defined
04BAF9             0928*  ; &E0-&E7 	224-231 	Not defined
04BAF9             0929*  
04BAF9             0930*  ; &E8-&EF 	232-239 	Bitmap plot §
04BAF9             0931*  plot_bmp: equ 0xE8
04BAF9             0932*  
04BAF9             0933*  ; &F0-&F7 	240-247 	Not defined
04BAF9             0934*  ; &F8-&FF 	248-255 	Not defined
04BAF9             0935*  
04BAF9             0936*  ; § Support added in Agon Console8 VDP 2.1.0 §§ Support added in
04BAF9             0937*  ; Agon Console8 VDP 2.2.0
04BAF9             0938*  
04BAF9             0939*  ; Within each group of eight plot codes, the effects are as follows:
04BAF9             0940*  ; Plot code 	Effect
04BAF9             0941*  ; 0 	Move relative
04BAF9             0942*  mv_rel: equ 0
04BAF9             0943*  
04BAF9             0944*  ; 1 	Plot relative in current foreground colour
04BAF9             0945*  dr_rel_fg: equ 1
04BAF9             0946*  
04BAF9             0947*  ; 2 	Not supported (Plot relative in logical inverse colour)
04BAF9             0948*  ; 3 	Plot relative in current background colour
04BAF9             0949*  dr_rel_bg: equ 3
04BAF9             0950*  
04BAF9             0951*  ; 4 	Move absolute
04BAF9             0952*  mv_abs: equ 4
04BAF9             0953*  
04BAF9             0954*  ; 5 	Plot absolute in current foreground colour
04BAF9             0955*  dr_abs_fg: equ 5
04BAF9             0956*  
04BAF9             0957*  ; 6 	Not supported (Plot absolute in logical inverse colour)
04BAF9             0958*  ; 7 	Plot absolute in current background colour
04BAF9             0959*  dr_abs_bg: equ 7
04BAF9             0960*  
04BAF9             0961*  ; Codes 0-3 use the position data provided as part of the command
04BAF9             0962*  ; as a relative position, adding the position given to the current
04BAF9             0963*  ; graphical cursor position. Codes 4-7 use the position data provided
04BAF9             0964*  ; as part of the command as an absolute position, setting the current
04BAF9             0965*  ; graphical cursor position to the position given.
04BAF9             0966*  
04BAF9             0967*  ; Codes 2 and 6 on Acorn systems plot using a logical inverse of the
04BAF9             0968*  ; current pixel colour. These operations cannot currently be supported
04BAF9             0969*  ; by the graphics system the Agon VDP uses, so these codes are not
04BAF9             0970*  ; supported. Support for these codes may be added in a future version
04BAF9             0971*  ; of the VDP firmware.
04BAF9             0972*  
04BAF9             0973*  ; 16 colour palette constants
04BAF9             0974*  c_black: equ 0
04BAF9             0975*  c_red_dk: equ 1
04BAF9             0976*  c_green_dk: equ 2
04BAF9             0977*  c_yellow_dk: equ 3
04BAF9             0978*  c_blue_dk: equ 4
04BAF9             0979*  c_magenta_dk: equ 5
04BAF9             0980*  c_cyan_dk: equ 6
04BAF9             0981*  c_grey: equ 7
04BAF9             0982*  c_grey_dk: equ 8
04BAF9             0983*  c_red: equ 9
04BAF9             0984*  c_green: equ 10
04BAF9             0985*  c_yellow: equ 11
04BAF9             0986*  c_blue: equ 12
04BAF9             0987*  c_magenta: equ 13
04BAF9             0988*  c_cyan: equ 14
04BAF9             0989*  c_white: equ 15
04BAF9             0990*  
04BAF9             0991*  ; VDU 25, mode, x; y;: PLOT command
04BAF9             0992*  ; inputs: a=mode, bc=x0, de=y0
04BAF9             0993*  vdu_plot:
04BAF9 32 13 BB 04 0994*      ld (@mode),a
04BAFD ED 43 14 BB 0995*      ld (@x0),bc
       04          
04BB02 ED 53 16 BB 0996*      ld (@y0),de
       04          
04BB07 21 12 BB 04 0997*  	ld hl,@cmd
04BB0B 01 06 00 00 0998*  	ld bc,@end-@cmd
04BB0F 5B DF       0999*  	rst.lil $18
04BB11 C9          1000*  	ret
04BB12 19          1001*  @cmd:   db 25
04BB13 00          1002*  @mode:  db 0
04BB14 00 00       1003*  @x0: 	dw 0
04BB16 00 00       1004*  @y0: 	dw 0
04BB18 00          1005*  @end:   db 0 ; extra byte to soak up deu
04BB19             1006*  
04BB19             1007*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04BB19             1008*  ; &E8-&EF 	232-239 	Bitmap plot §
04BB19             1009*  ; VDU 25, mode, x; y;: PLOT command
04BB19             1010*  ; inputs: bc=x0, de=y0
04BB19             1011*  ; prerequisites: vdu_buff_select
04BB19             1012*  vdu_plot_bmp:
04BB19 ED 43 30 BB 1013*      ld (@x0),bc
       04          
04BB1E ED 53 32 BB 1014*      ld (@y0),de
       04          
04BB23 21 2E BB 04 1015*  	ld hl,@cmd
04BB27 01 06 00 00 1016*  	ld bc,@end-@cmd
04BB2B 5B DF       1017*  	rst.lil $18
04BB2D C9          1018*  	ret
04BB2E 19          1019*  @cmd:   db 25
04BB2F ED          1020*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04BB30 00 00       1021*  @x0: 	dw 0x0000
04BB32 00 00       1022*  @y0: 	dw 0x0000
04BB34 00          1023*  @end:   db 0x00 ; padding
04BB35             1024*  
04BB35             1025*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04BB35             1026*  ; &E8-&EF 	232-239 	Bitmap plot §
04BB35             1027*  ; VDU 25, mode, x; y;: PLOT command
04BB35             1028*  ; inputs: bc=x0, de=y0
04BB35             1029*  ; USING 16.8 FIXED POINT COORDINATES
04BB35             1030*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04BB35             1031*  ;   the fractional portiion of the inputs are truncated
04BB35             1032*  ;   leaving only the 16-bit integer portion
04BB35             1033*  ; prerequisites: vdu_buff_select
04BB35             1034*  vdu_plot_bmp168:
04BB35             1035*  ; populate in the reverse of normal to keep the
04BB35             1036*  ; inputs from stomping on each other
04BB35 ED 53 53 BB 1037*      ld (@y0-1),de
       04          
04BB3A ED 43 51 BB 1038*      ld (@x0-1),bc
       04          
04BB3F 3E ED       1039*      ld a,plot_bmp+dr_abs_fg ; 0xED
04BB41 32 51 BB 04 1040*      ld (@mode),a ; restore the mode byte that got stomped on by bcu
04BB45 21 50 BB 04 1041*  	ld hl,@cmd
04BB49 01 06 00 00 1042*  	ld bc,@end-@cmd
04BB4D 5B DF       1043*  	rst.lil $18
04BB4F C9          1044*  	ret
04BB50 19          1045*  @cmd:   db 25
04BB51 ED          1046*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04BB52 00 00       1047*  @x0: 	dw 0x0000
04BB54 00 00       1048*  @y0: 	dw 0x0000
04BB56             1049*  @end:  ; no padding required b/c we shifted de right
04BB56             1050*  
04BB56             1051*  ; draw a filled rectangle
04BB56             1052*  vdu_plot_rf:
04BB56 ED 43 7D BB 1053*      ld (@x0),bc
       04          
04BB5B ED 53 7F BB 1054*      ld (@y0),de
       04          
04BB60 DD 22 83 BB 1055*      ld (@x1),ix
       04          
04BB65 FD 22 85 BB 1056*      ld (@y1),iy
       04          
04BB6A 3E 19       1057*      ld a,25 ; we have to reload the 2nd plot command
04BB6C 32 81 BB 04 1058*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04BB70 21 7B BB 04 1059*  	ld hl,@cmd0
04BB74 01 0C 00 00 1060*  	ld bc,@end-@cmd0
04BB78 5B DF       1061*  	rst.lil $18
04BB7A C9          1062*      ret
04BB7B 19          1063*  @cmd0:  db 25 ; plot
04BB7C 04          1064*  @arg0:  db plot_sl_both+mv_abs
04BB7D 00 00       1065*  @x0:    dw 0x0000
04BB7F 00 00       1066*  @y0:    dw 0x0000
04BB81 19          1067*  @cmd1:  db 25 ; plot
04BB82 65          1068*  @arg1:  db plot_rf+dr_abs_fg
04BB83 00 00       1069*  @x1:    dw 0x0000
04BB85 00 00       1070*  @y1:    dw 0x0000
04BB87 00          1071*  @end:   db 0x00 ; padding
04BB88             1072*  
04BB88             1073*  ; draw a filled circle
04BB88             1074*  vdu_plot_cf:
04BB88 ED 43 AF BB 1075*      ld (@x0),bc
       04          
04BB8D ED 53 B1 BB 1076*      ld (@y0),de
       04          
04BB92 DD 22 B5 BB 1077*      ld (@x1),ix
       04          
04BB97 FD 22 B7 BB 1078*      ld (@y1),iy
       04          
04BB9C 3E 19       1079*      ld a,25 ; we have to reload the 2nd plot command
04BB9E 32 B3 BB 04 1080*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04BBA2 21 AD BB 04 1081*  	ld hl,@cmd0
04BBA6 01 0C 00 00 1082*  	ld bc,@end-@cmd0
04BBAA 5B DF       1083*  	rst.lil $18
04BBAC C9          1084*      ret
04BBAD 19          1085*  @cmd0:  db 25 ; plot
04BBAE 04          1086*  @arg0:  db plot_sl_both+mv_abs
04BBAF 00 00       1087*  @x0:    dw 0x0000
04BBB1 00 00       1088*  @y0:    dw 0x0000
04BBB3 19          1089*  @cmd1:  db 25 ; plot
04BBB4 9D          1090*  @arg1:  db plot_cf+dr_abs_fg
04BBB5 00 00       1091*  @x1:    dw 0x0000
04BBB7 00 00       1092*  @y1:    dw 0x0000
04BBB9 00          1093*  @end:   db 0x00 ; padding
04BBBA             1094*  
04BBBA             1095*  ; #### from vdu_sprites.asm ####
04BBBA             1096*  ; ; https://github.com/AgonConsole8/agon-docs/blob/main/VDP---Bitmaps-API.md
04BBBA             1097*  ; the VDP can support up to 256 sprites. They must be defined
04BBBA             1098*  ; contiguously, and so the first sprite is sprite 0.
04BBBA             1099*  ; (In contrast, bitmaps can have any ID from 0 to 65534.)
04BBBA             1100*  ; Once a selection of sprites have been defined, you can activate
04BBBA             1101*  ; them using the VDU 23, 27, 7, n command, where n is the number
04BBBA             1102*  ; of sprites to activate. This will activate the first n sprites,
04BBBA             1103*  ; starting with sprite 0. All sprites from 0 to n-1 must be defined.
04BBBA             1104*  
04BBBA             1105*  ; A single sprite can have multiple "frames", referring to
04BBBA             1106*  ; different bitmaps.
04BBBA             1107*  ; (These bitmaps do not need to be the same size.)
04BBBA             1108*  ; This allows a sprite to include an animation sequence,
04BBBA             1109*  ; which can be stepped through one frame at a time, or picked
04BBBA             1110*  ; in any order.
04BBBA             1111*  
04BBBA             1112*  ; Any format of bitmap can be used as a sprite frame. It should
04BBBA             1113*  ; be noted however that "native" format bitmaps are not
04BBBA             1114*  ; recommended for use as sprite frames, as they cannot get
04BBBA             1115*  ; erased from the screen. (As noted above, the "native" bitmap
04BBBA             1116*  ; format is not really intended for general use.) This is part
04BBBA             1117*  ; of why from Agon Console8 VDP 2.6.0 bitmaps captured from the
04BBBA             1118*  ; screen are now stored in RGBA2222 format.
04BBBA             1119*  
04BBBA             1120*  ; An "active" sprite can be hidden, so it will stop being drawn,
04BBBA             1121*  ; and then later shown again.
04BBBA             1122*  
04BBBA             1123*  ; Moving sprites around the screen is done by changing the
04BBBA             1124*  ; position of the sprite. This can be done either by setting
04BBBA             1125*  ; the absolute position of the sprite, or by moving the sprite
04BBBA             1126*  ; by a given number of pixels. (Sprites are positioned using
04BBBA             1127*  ; pixel coordinates, and not by the logical OS coordinate system.)
04BBBA             1128*  ; In the current sprite system, sprites will not update their
04BBBA             1129*  ; position on-screen until either another drawing operation is
04BBBA             1130*  ; performed or an explicit VDU 23, 27, 15 command is performed.
04BBBA             1131*  
04BBBA             1132*  ; Here are the sprite commands:
04BBBA             1133*  ;
04BBBA             1134*  ; VDU 23, 27, 4,  n: Select sprite n
04BBBA             1135*  ; inputs: a is the 8-bit sprite id
04BBBA             1136*  ; vdu_sprite_select:
04BBBA             1137*  
04BBBA             1138*  ; VDU 23, 27, 5:  Clear frames in current sprite
04BBBA             1139*  ; inputs: none
04BBBA             1140*  ; prerequisites: vdu_sprite_select
04BBBA             1141*  ; vdu_sprite_clear_frames:
04BBBA             1142*  
04BBBA             1143*  ; VDU 23, 27, 6,  n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04BBBA             1144*  ; inputs: a is the 8-bit bitmap number
04BBBA             1145*  ; prerequisites: vdu_sprite_select
04BBBA             1146*  ; vdu_sprite_add_bmp:
04BBBA             1147*  
04BBBA             1148*  ; VDU 23, 27, 7,  n: Activate n sprites
04BBBA             1149*  ; inputs: a is the number of sprites to activate
04BBBA             1150*  ; vdu_sprite_activate:
04BBBA             1151*  
04BBBA             1152*  ; VDU 23, 27, 8:  Select next frame of current sprite
04BBBA             1153*  ; inputs: none
04BBBA             1154*  ; prerequisites: vdu_sprite_select
04BBBA             1155*  ; vdu_sprite_next_frame:
04BBBA             1156*  
04BBBA             1157*  ; VDU 23, 27, 9:  Select previous frame of current sprite
04BBBA             1158*  ; inputs: none
04BBBA             1159*  ; prerequisites: vdu_sprite_select
04BBBA             1160*  ; vdu_sprite_prev_frame:
04BBBA             1161*  
04BBBA             1162*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04BBBA             1163*  ; inputs: a is frame number to select
04BBBA             1164*  ; prerequisites: vdu_sprite_select
04BBBA             1165*  ; vdu_sprite_select_frame:
04BBBA             1166*  
04BBBA             1167*  ; VDU 23, 27, 11: Show current sprite
04BBBA             1168*  ; inputs: none
04BBBA             1169*  ; prerequisites: vdu_sprite_select
04BBBA             1170*  ; vdu_sprite_show:
04BBBA             1171*  
04BBBA             1172*  ; VDU 23, 27, 12: Hide current sprite
04BBBA             1173*  ; inputs: none
04BBBA             1174*  ; prerequisites: vdu_sprite_select
04BBBA             1175*  ; vdu_sprite_hide:
04BBBA             1176*  
04BBBA             1177*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04BBBA             1178*  ; inputs: bc is x coordinate, de is y coordinate
04BBBA             1179*  ; prerequisites: vdu_sprite_select
04BBBA             1180*  ; vdu_sprite_move_abs:
04BBBA             1181*  ;
04BBBA             1182*  ; USING 16.8 FIXED POINT COORDINATES
04BBBA             1183*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04BBBA             1184*  ;   the fractional portiion of the inputs are truncated
04BBBA             1185*  ;   leaving only the 16-bit integer portion
04BBBA             1186*  ; prerequisites: vdu_sprite_select
04BBBA             1187*  ; vdu_sprite_move_abs168:
04BBBA             1188*  
04BBBA             1189*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04BBBA             1190*  ; inputs: bc is x coordinate, de is y coordinate
04BBBA             1191*  ; prerequisites: vdu_sprite_select
04BBBA             1192*  ; vdu_sprite_move_rel:
04BBBA             1193*  ;
04BBBA             1194*  ; USING 16.8 FIXED POINT COORDINATES
04BBBA             1195*  ; inputs: ub.c is dx, ud.e is dy
04BBBA             1196*  ;   the fractional portiion of the inputs are truncated
04BBBA             1197*  ;   leaving only the 16-bit integer portion
04BBBA             1198*  ; prerequisites: vdu_sprite_select
04BBBA             1199*  ; vdu_sprite_move_rel168:
04BBBA             1200*  
04BBBA             1201*  ; VDU 23, 27, 15: Update the sprites in the GPU
04BBBA             1202*  ; inputs: none
04BBBA             1203*  ; vdu_sprite_update:
04BBBA             1204*  
04BBBA             1205*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04BBBA             1206*  ; inputs: none
04BBBA             1207*  ; vdu_sprite_bmp_reset:
04BBBA             1208*  
04BBBA             1209*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04BBBA             1210*  ; inputs: none
04BBBA             1211*  ; vdu_sprite_reset:
04BBBA             1212*  
04BBBA             1213*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04BBBA             1214*  ; inputs: a is the GCOL paint mode
04BBBA             1215*  ; prerequisites: vdu_sprite_select
04BBBA             1216*  ; vdu_sprite_set_gcol:
04BBBA             1217*  
04BBBA             1218*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04BBBA             1219*  ; inputs: hl=bufferId
04BBBA             1220*  ; prerequisites: vdu_sprite_select
04BBBA             1221*  ; vdu_sprite_add_buff:
04BBBA             1222*  
04BBBA             1223*  @dummy_label: ; dummy label to serve as a break from the above comments and the below code
04BBBA             1224*  
04BBBA             1225*  ; VDU 23, 27, 4, n: Select sprite n
04BBBA             1226*  ; inputs: a is the 8-bit sprite id
04BBBA             1227*  vdu_sprite_select:
04BBBA 32 CC BB 04 1228*      ld (@sprite),a
04BBBE 21 C9 BB 04 1229*      ld hl,@cmd
04BBC2 01 04 00 00 1230*      ld bc,@end-@cmd
04BBC6 5B DF       1231*      rst.lil $18
04BBC8 C9          1232*      ret
04BBC9 17 1B 04    1233*  @cmd:    db 23,27,4
04BBCC 00          1234*  @sprite: db 0x00
04BBCD             1235*  @end:
04BBCD             1236*  
04BBCD             1237*  ; VDU 23, 27, 5: Clear frames in current sprite
04BBCD             1238*  ; inputs: none
04BBCD             1239*  ; prerequisites: vdu_sprite_select
04BBCD             1240*  vdu_sprite_clear_frames:
04BBCD 21 D8 BB 04 1241*      ld hl,@cmd
04BBD1 01 03 00 00 1242*      ld bc,@end-@cmd
04BBD5 5B DF       1243*      rst.lil $18
04BBD7 C9          1244*      ret
04BBD8 17 1B 05    1245*  @cmd: db 23,27,5
04BBDB             1246*  @end:
04BBDB             1247*  
04BBDB             1248*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04BBDB             1249*  ; inputs: a is the 8-bit bitmap number
04BBDB             1250*  ; prerequisites: vdu_sprite_select
04BBDB             1251*  vdu_sprite_add_bmp:
04BBDB 32 ED BB 04 1252*      ld (@bmp),a
04BBDF 21 EA BB 04 1253*      ld hl,@cmd
04BBE3 01 04 00 00 1254*      ld bc,@end-@cmd
04BBE7 5B DF       1255*      rst.lil $18
04BBE9 C9          1256*      ret
04BBEA 17 1B 06    1257*  @cmd: db 23,27,6
04BBED 00          1258*  @bmp: db 0x00
04BBEE             1259*  @end:
04BBEE             1260*  
04BBEE             1261*  ; VDU 23, 27, 7, n: Activate n sprites
04BBEE             1262*  ; inputs: a is the number of sprites to activate
04BBEE             1263*  vdu_sprite_activate:
04BBEE 32 00 BC 04 1264*      ld (@num),a
04BBF2 21 FD BB 04 1265*      ld hl,@cmd
04BBF6 01 04 00 00 1266*      ld bc,@end-@cmd
04BBFA 5B DF       1267*      rst.lil $18
04BBFC C9          1268*      ret
04BBFD 17 1B 07    1269*  @cmd: db 23,27,7
04BC00 00          1270*  @num: db 0x00
04BC01             1271*  @end:
04BC01             1272*  
04BC01             1273*  ; VDU 23, 27, 8: Select next frame of current sprite
04BC01             1274*  ; inputs: none
04BC01             1275*  ; prerequisites: vdu_sprite_select
04BC01             1276*  vdu_sprite_next_frame:
04BC01 21 0C BC 04 1277*      ld hl,@cmd
04BC05 01 03 00 00 1278*      ld bc,@end-@cmd
04BC09 5B DF       1279*      rst.lil $18
04BC0B C9          1280*      ret
04BC0C 17 1B 08    1281*  @cmd: db 23,27,8
04BC0F             1282*  @end:
04BC0F             1283*  
04BC0F             1284*  ; VDU 23, 27, 9: Select previous frame of current sprite
04BC0F             1285*  ; inputs: none
04BC0F             1286*  ; prerequisites: vdu_sprite_select
04BC0F             1287*  vdu_sprite_prev_frame:
04BC0F 21 1A BC 04 1288*      ld hl,@cmd
04BC13 01 03 00 00 1289*      ld bc,@end-@cmd
04BC17 5B DF       1290*      rst.lil $18
04BC19 C9          1291*      ret
04BC1A 17 1B 09    1292*  @cmd: db 23,27,9
04BC1D             1293*  @end:
04BC1D             1294*  
04BC1D             1295*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04BC1D             1296*  ; inputs: a is frame number to select
04BC1D             1297*  ; prerequisites: vdu_sprite_select
04BC1D             1298*  vdu_sprite_select_frame:
04BC1D 32 2F BC 04 1299*      ld (@frame),a
04BC21 21 2C BC 04 1300*      ld hl,@cmd
04BC25 01 04 00 00 1301*      ld bc,@end-@cmd
04BC29 5B DF       1302*      rst.lil $18
04BC2B C9          1303*      ret
04BC2C 17 1B 0A    1304*  @cmd:    db 23,27,10
04BC2F 00          1305*  @frame:  db 0x00
04BC30             1306*  @end:
04BC30             1307*  
04BC30             1308*  ; VDU 23, 27, 11: Show current sprite
04BC30             1309*  ; inputs: none
04BC30             1310*  ; prerequisites: vdu_sprite_select
04BC30             1311*  vdu_sprite_show:
04BC30 21 3B BC 04 1312*      ld hl,@cmd
04BC34 01 03 00 00 1313*      ld bc,@end-@cmd
04BC38 5B DF       1314*      rst.lil $18
04BC3A C9          1315*      ret
04BC3B 17 1B 0B    1316*  @cmd: db 23,27,11
04BC3E             1317*  @end:
04BC3E             1318*  
04BC3E             1319*  ; VDU 23, 27, 12: Hide current sprite
04BC3E             1320*  ; inputs: none
04BC3E             1321*  ; prerequisites: vdu_sprite_select
04BC3E             1322*  vdu_sprite_hide:
04BC3E 21 49 BC 04 1323*      ld hl,@cmd
04BC42 01 03 00 00 1324*      ld bc,@end-@cmd
04BC46 5B DF       1325*      rst.lil $18
04BC48 C9          1326*      ret
04BC49 17 1B 0C    1327*  @cmd: db 23,27,12
04BC4C             1328*  @end:
04BC4C             1329*  
04BC4C             1330*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04BC4C             1331*  ; inputs: bc is x coordinate, de is y coordinate
04BC4C             1332*  ; prerequisites: vdu_sprite_select
04BC4C             1333*  vdu_sprite_move_abs:
04BC4C ED 43 64 BC 1334*      ld (@xpos),bc
       04          
04BC51 ED 53 66 BC 1335*      ld (@ypos),de
       04          
04BC56 21 61 BC 04 1336*      ld hl,@cmd
04BC5A 01 07 00 00 1337*      ld bc,@end-@cmd
04BC5E 5B DF       1338*      rst.lil $18
04BC60 C9          1339*      ret
04BC61 17 1B 0D    1340*  @cmd:  db 23,27,13
04BC64 00 00       1341*  @xpos: dw 0x0000
04BC66 00 00       1342*  @ypos: dw 0x0000
04BC68 00          1343*  @end:  db 0x00 ; padding
04BC69             1344*  
04BC69             1345*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04BC69             1346*  ; inputs: bc is x coordinate, de is y coordinate
04BC69             1347*  ; prerequisites: vdu_sprite_select
04BC69             1348*  vdu_sprite_move_rel:
04BC69 ED 43 81 BC 1349*      ld (@dx),bc
       04          
04BC6E ED 53 83 BC 1350*      ld (@dy),de
       04          
04BC73 21 7E BC 04 1351*      ld hl,@cmd
04BC77 01 07 00 00 1352*      ld bc,@end-@cmd
04BC7B 5B DF       1353*      rst.lil $18
04BC7D C9          1354*      ret
04BC7E 17 1B 0E    1355*  @cmd: db 23,27,14
04BC81 00 00       1356*  @dx:  dw 0x0000
04BC83 00 00       1357*  @dy:  dw 0x0000
04BC85 00          1358*  @end: db 0x00 ; padding
04BC86             1359*  
04BC86             1360*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04BC86             1361*  ; USING 16.8 FIXED POINT COORDINATES
04BC86             1362*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04BC86             1363*  ;   the fractional portiion of the inputs are truncated
04BC86             1364*  ;   leaving only the 16-bit integer portion
04BC86             1365*  ; prerequisites: vdu_sprite_select
04BC86             1366*  vdu_sprite_move_abs168:
04BC86             1367*  ; populate in the reverse of normal to keep the
04BC86             1368*  ; inputs from stomping on each other
04BC86 ED 53 A5 BC 1369*      ld (@ypos-1),de
       04          
04BC8B ED 43 A3 BC 1370*      ld (@xpos-1),bc
       04          
04BC90 3E 0D       1371*      ld a,13       ; restore the final byte of the command
04BC92 32 A3 BC 04 1372*      ld (@cmd+2),a ; string that got stomped on by bcu
04BC96 21 A1 BC 04 1373*      ld hl,@cmd
04BC9A 01 07 00 00 1374*      ld bc,@end-@cmd
04BC9E 5B DF       1375*      rst.lil $18
04BCA0 C9          1376*      ret
04BCA1 17 1B 0D    1377*  @cmd:  db 23,27,13
04BCA4 00 00       1378*  @xpos: dw 0x0000
04BCA6 00 00       1379*  @ypos: dw 0x0000
04BCA8             1380*  @end:  ; no padding required b/c we shifted de right
04BCA8             1381*  
04BCA8             1382*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04BCA8             1383*  ; USING 16.8 FIXED POINT COORDINATES
04BCA8             1384*  ; inputs: ub.c is dx, ud.e is dy
04BCA8             1385*  ;   the fractional portiion of the inputs are truncated
04BCA8             1386*  ;   leaving only the 16-bit integer portion
04BCA8             1387*  ; prerequisites: vdu_sprite_select
04BCA8             1388*  vdu_sprite_move_rel168:
04BCA8             1389*  ; populate in the reverse of normal to keep the
04BCA8             1390*  ; inputs from stomping on each other
04BCA8 ED 53 C7 BC 1391*      ld (@dy-1),de
       04          
04BCAD ED 43 C5 BC 1392*      ld (@dx-1),bc
       04          
04BCB2 3E 0E       1393*      ld a,14       ; restore the final byte of the command
04BCB4 32 C5 BC 04 1394*      ld (@cmd+2),a ; string that got stomped on by bcu
04BCB8 21 C3 BC 04 1395*      ld hl,@cmd
04BCBC 01 07 00 00 1396*      ld bc,@end-@cmd
04BCC0 5B DF       1397*      rst.lil $18
04BCC2 C9          1398*      ret
04BCC3 17 1B 0E    1399*  @cmd:  db 23,27,14
04BCC6 00 00       1400*  @dx: dw 0x0000
04BCC8 00 00       1401*  @dy: dw 0x0000
04BCCA             1402*  @end:  ; no padding required b/c we shifted de right
04BCCA             1403*  
04BCCA             1404*  ; VDU 23, 27, 15: Update the sprites in the GPU
04BCCA             1405*  ; inputs: none
04BCCA             1406*  vdu_sprite_update:
04BCCA 21 D5 BC 04 1407*      ld hl,@cmd
04BCCE 01 03 00 00 1408*      ld bc,@end-@cmd
04BCD2 5B DF       1409*      rst.lil $18
04BCD4 C9          1410*      ret
04BCD5 17 1B 0F    1411*  @cmd: db 23,27,15
04BCD8             1412*  @end:
04BCD8             1413*  
04BCD8             1414*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04BCD8             1415*  ; inputs: none
04BCD8             1416*  vdu_sprite_bmp_reset:
04BCD8 21 E3 BC 04 1417*      ld hl,@cmd
04BCDC 01 03 00 00 1418*      ld bc,@end-@cmd
04BCE0 5B DF       1419*      rst.lil $18
04BCE2 C9          1420*      ret
04BCE3 17 1B 10    1421*  @cmd: db 23,27,16
04BCE6             1422*  @end:
04BCE6             1423*  
04BCE6             1424*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04BCE6             1425*  ; inputs: none
04BCE6             1426*  vdu_sprite_reset:
04BCE6 21 F1 BC 04 1427*      ld hl,@cmd
04BCEA 01 03 00 00 1428*      ld bc,@end-@cmd
04BCEE 5B DF       1429*      rst.lil $18
04BCF0 C9          1430*      ret
04BCF1 17 1B 11    1431*  @cmd: db 23,27,17
04BCF4             1432*  @end:
04BCF4             1433*  
04BCF4             1434*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04BCF4             1435*  ; inputs: a is the GCOL paint mode
04BCF4             1436*  ; prerequisites: vdu_sprite_select
04BCF4             1437*  vdu_sprite_set_gcol:
04BCF4 32 06 BD 04 1438*      ld (@mode),a
04BCF8 21 03 BD 04 1439*      ld hl,@cmd
04BCFC 01 04 00 00 1440*      ld bc,@end-@cmd
04BD00 5B DF       1441*      rst.lil $18
04BD02 C9          1442*      ret
04BD03 17 1B 12    1443*  @cmd:  db 23,27,18
04BD06 00          1444*  @mode: db 0x00
04BD07             1445*  @end:
04BD07             1446*  
04BD07             1447*  ; VDU 23, 27, &26, n;: Add bitmap bufferId
04BD07             1448*  ;     as a frame to current sprite using a 16-bit buffer ID
04BD07             1449*  ; inputs: hl=bufferId
04BD07             1450*  ; prerequisites: vdu_sprite_select
04BD07             1451*  vdu_sprite_add_buff:
04BD07 22 19 BD 04 1452*      ld (@bufferId),hl
04BD0B 21 16 BD 04 1453*      ld hl,@cmd
04BD0F 01 05 00 00 1454*      ld bc,@end-@cmd
04BD13 5B DF       1455*      rst.lil $18
04BD15 C9          1456*      ret
04BD16 17 1B 26    1457*  @cmd:      db 23,27,0x26
04BD19 00 00       1458*  @bufferId: dw 0x0000
04BD1B 00          1459*  @end:      db 0x00 ; padding
04BD1C             1460*  
04BD1C             1461*  
04BD1C             1462*  ; #### from sfx.asm ####
04BD1C 00          1463*  sfx_last_channel: db 0x00 ; 8-bit value between 0 and 31
04BD1D             1464*  
04BD1D             1465*  ; ; play a sound effect on the next available channel at full volume for its full duration
04BD1D             1466*  ; ; inputs: hl = bufferId
04BD1D             1467*  ; sfx_play:
04BD1D             1468*  ; 	ld iy,sfx_last_channel
04BD1D             1469*  ; 	ld a,(iy+0)
04BD1D             1470*  ; 	ld (@bufferId),hl
04BD1D             1471*  ; @find_next_channel:
04BD1D             1472*  ; 	inc a ; bump to next channel
04BD1D             1473*  ; 	and 31 ; modulo 32 channel
04BD1D             1474*  ; 	cp (iy+0) ; if this is zero we've wrapped around and not found a free channel
04BD1D             1475*  ; 	ret z ; so we return to caller without doing anything
04BD1D             1476*  ; 	push af ; back up channel
04BD1D             1477*  ; 	call vdu_channel_status ; a comes back with channel status bitmask
04BD1D             1478*  ; 	and %00000010 ; bit 1 is the "is playing" flag
04BD1D             1479*  ; 	jr z,@play_sfx ; if not playing, we can use this channel
04BD1D             1480*  ; 	pop af ; restore channel
04BD1D             1481*  ; 	jr @find_next_channel ; try the next channel
04BD1D             1482*  ; @play_sfx:
04BD1D             1483*  ; 	pop af ; restore channel
04BD1D             1484*  ; 	ld (iy+0),a ; store channel
04BD1D             1485*  ; 	ld hl,(@bufferId)
04BD1D             1486*  ; 	ld c,a ; channel
04BD1D             1487*  ; 	ld b,127 ; full volume
04BD1D             1488*  ; 	ld de,1000 ; 1 second duration (should have no effect)
04BD1D             1489*  ; 	jp vdu_play_sample
04BD1D             1490*  ; @bufferId:
04BD1D             1491*  ; 	dw 0x0000 ; 16-bit value
04BD1D             1492*  
04BD1D             1493*  sfx_play_random_hurt:
04BD1D CD 72 C7 04 1494*  	call rand_8
04BD21 E6 03       1495*  	and 3
04BD23 FE 00       1496*  	cp 0
04BD25 CA 5D CE 04 1497*  	jp z,sfx_play_ahh
04BD29 FE 01       1498*  	cp 1
04BD2B CA 69 CE 04 1499*  	jp z,sfx_play_augh
04BD2F FE 02       1500*  	cp 2
04BD31 CA 75 CE 04 1501*  	jp z,sfx_play_ayee
04BD35 C3 41 CF 04 1502*  	jp sfx_play_ugh
04BD39             1503*  
04BD39             1504*  ; inputs: bc is the number of sounds to load, cur_buffer_id_lut and cur_load_jump_table set to the address of the first entry in the respective lookup tables
04BD39             1505*  sfx_load_main:
04BD39 21 00 00 00 1506*      ld hl,0
04BD3D 22 87 C7 04 1507*      ld (cur_file_idx),hl
04BD41             1508*  sfx_load_main_loop:
04BD41             1509*  ; back up loop counter
04BD41 C5          1510*      push bc
04BD42             1511*  ; load the next sound
04BD42 CD 96 BD 04 1512*      call load_next_sound
04BD46             1513*  ; draw all the things
04BD46 CD F0 C8 04 1514*      call tmp_draw_all_the_things
04BD4A             1515*  ; move bj
04BD4A CD 78 C8 04 1516*  	call move_bj
04BD4E             1517*  ; print welcome message
04BD4E DD 21 72 8B 1518*  	ld ix,font_itc_honda
       04          
04BD53 21 5A D1 04 1519*  	ld hl,hello_world
04BD57 01 20 00 00 1520*  	ld bc,32
04BD5B 11 02 00 00 1521*  	ld de,2
04BD5F CD 9F 70 04 1522*  	call font_bmp_print
04BD63             1523*  ; print current filename
04BD63 CD DF B7 04 1524*  	call vdu_cls
04BD67 2A 8A C7 04 1525*  	ld hl,(cur_filename)
04BD6B CD EF BD 04 1526*  	call printString
04BD6F CD 04 BE 04 1527*  	call printNewLine
04BD73             1528*  
04BD73             1529*  ; print current load stopwatch
04BD73 21 7C D1 04 1530*  	ld hl,loading_time
04BD77 CD EF BD 04 1531*  	call printString
04BD7B CD 0C D1 04 1532*  	call stopwatch_get ; hl = elapsed time in 120ths of a second
04BD7F CD 3D BE 04 1533*  	call printDec
04BD83             1534*  
04BD83             1535*  ; flip screen
04BD83 CD AE B9 04 1536*      call vdu_flip
04BD87             1537*  ; ; delay for a bit so sound can play
04BD87             1538*  ;     ld a,%10000000 ; 1 second delay
04BD87             1539*  ;     call multiPurposeDelay
04BD87             1540*  ; decrement loop counter
04BD87 C1          1541*      pop bc
04BD88 0B          1542*  	dec bc
04BD89             1543*  ; ; DEBUG: DUMP REGISTERS
04BD89             1544*  ; 	push bc
04BD89             1545*  ; 	call dumpRegistersHex
04BD89             1546*  ; 	call vdu_flip
04BD89             1547*  ; 	pop bc
04BD89             1548*  ; ; END DEBUG
04BD89 79          1549*      ld a,c
04BD8A B7          1550*      or a
04BD8B C2 41 BD 04 1551*      jp nz,sfx_load_main_loop
04BD8F 78          1552*      ld a,b
04BD90 B7          1553*      or a
04BD91 C2 41 BD 04 1554*      jp nz,sfx_load_main_loop
04BD95 C9          1555*      ret
04BD96             1556*  
04BD96             1557*  load_next_sound:
04BD96             1558*  ; look up the load routine for the current file index
04BD96 2A 87 C7 04 1559*  	ld hl,(cur_file_idx)
04BD9A 29          1560*  	add hl,hl ; multiply current index by 2 ...
04BD9B ED 5B 87 C7 1561*  	ld de,(cur_file_idx)
       04          
04BDA0 19          1562*  	add hl,de ; ... now by 3
04BDA1 ED 5B 93 C7 1563*  	ld de,(cur_load_jump_table) ; tack it on to the base address of the jump table
       04          
04BDA6 19          1564*  	add hl,de
04BDA7 ED 27       1565*  	ld hl,(hl) ; hl is pointing to load routine address
04BDA9 22 AE BD 04 1566*  	ld (@jump_addr+1),hl ; self-modifying code ...
04BDAD             1567*  @jump_addr:
04BDAD CD 00 00 00 1568*  	call 0 ; call the sound load routine
04BDB1             1569*  ; look up the buffer id for the current file
04BDB1 2A 87 C7 04 1570*  	ld hl,(cur_file_idx)
04BDB5 29          1571*  	add hl,hl ; multiply current index by 2 ...
04BDB6 ED 5B 87 C7 1572*  	ld de,(cur_file_idx)
       04          
04BDBB 19          1573*  	add hl,de ; ... now by 3
04BDBC ED 5B 90 C7 1574*  	ld de,(cur_buffer_id_lut) ; tack it on to the base address of the lookup table
       04          
04BDC1 19          1575*  	add hl,de
04BDC2 ED 27       1576*  	ld hl,(hl)
04BDC4 22 8D C7 04 1577*  	ld (cur_buffer_id),hl
04BDC8             1578*  ; bump the current file index
04BDC8 2A 87 C7 04 1579*  	ld hl,(cur_file_idx)
04BDCC 23          1580*  	inc hl
04BDCD 22 87 C7 04 1581*  	ld (cur_file_idx),hl
04BDD1 C9          1582*  	ret
04BDD2             1583*  
04BDD2             1584*  ; load a sound file to a buffer
04BDD2             1585*  ; inputs: hl = bufferId ; ix = file size
04BDD2             1586*  vdu_load_sfx:
04BDD2             1587*  ; back up input parameters
04BDD2 E5          1588*      push hl ; bufferId
04BDD3             1589*  ; load the sound
04BDD3 CD 79 D3 04 1590*  	call vdu_load_buffer_from_file
04BDD7             1591*  ; now make the buffer a sound sample
04BDD7 E1          1592*      pop hl ; bufferId
04BDD8 AF          1593*  	xor a ; zero is the magic number for 8-bit signed PCM 16KHz
04BDD9             1594*      ; push hl ; bufferId
04BDD9 CD 7D 01 04 1595*  	call vdu_buffer_to_sound
04BDDD             1596*  ; ; play the loaded sound
04BDDD             1597*  ;     ld c,0 ; channel
04BDDD             1598*  ;     ld b,127 ; full volume
04BDDD             1599*  ;     ld de,1000 ; 1 second duration
04BDDD             1600*  ;     pop hl ; bufferId
04BDDD             1601*  ;     call vdu_play_sample
04BDDD C9          1602*      ret
04BDDE             1603*  
04BDDE             1604*  vdu_clear_all_buffers:
04BDDE             1605*  ; clear all buffers
04BDDE 21 E9 BD 04 1606*      ld hl,@beg
04BDE2 01 06 00 00 1607*      ld bc,@end-@beg
04BDE6 5B DF       1608*      rst.lil $18
04BDE8 C9          1609*      ret
04BDE9 17 00 A0    1610*  @beg: db 23,0,$A0
04BDEC FF FF       1611*        dw -1 ; clear all buffers
04BDEE 02          1612*        db 2  ; command 2: clear a buffer
04BDEF             1613*  @end:
04BDEF             0025       include "src/asm/functions.asm"
04BDEF             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/functions.s
04BDEF             0002*  ; Print a zero-terminated string
04BDEF             0003*  ; HL: Pointer to string
04BDEF             0004*  printString:
04BDEF C5          0005*  	PUSH	BC
04BDF0 01 00 00 00 0006*  	LD		BC,0
04BDF4 3E 00       0007*  	LD 	 	A,0
04BDF6 5B DF       0008*  	RST.LIL 18h
04BDF8 C1          0009*  	POP		BC
04BDF9 C9          0010*  	RET
04BDFA             0011*  ; print a VDU sequence
04BDFA             0012*  ; HL: Pointer to VDU sequence - <1 byte length> <data>
04BDFA             0013*  sendVDUsequence:
04BDFA C5          0014*  	PUSH	BC
04BDFB 01 00 00 00 0015*  	LD		BC, 0
04BDFF 4E          0016*  	LD		C, (HL)
04BE00 5B DF       0017*  	RST.LIL	18h
04BE02 C1          0018*  	POP		BC
04BE03 C9          0019*  	RET
04BE04             0020*  ; Print Newline sequence to VDP
04BE04             0021*  printNewLine:
04BE04 3E 0D       0022*  	LD	A, '\r'
04BE06 5B D7       0023*  	RST.LIL 10h
04BE08 3E 0A       0024*  	LD	A, '\n'
04BE0A 5B D7       0025*  	RST.LIL 10h
04BE0C C9          0026*  	RET
04BE0D             0027*  ; Print a 24-bit HEX number
04BE0D             0028*  ; HLU: Number to print
04BE0D             0029*  printHex24:
04BE0D E5          0030*  	PUSH	HL
04BE0E 21 02 00 00 0031*  	LD		HL, 2
04BE12 39          0032*  	ADD		HL, SP
04BE13 7E          0033*  	LD		A, (HL)
04BE14 E1          0034*  	POP		HL
04BE15 CD 1F BE 04 0035*  	CALL	printHex8
04BE19             0036*  ; Print a 16-bit HEX number
04BE19             0037*  ; HL: Number to print
04BE19             0038*  printHex16:
04BE19 7C          0039*  	LD		A,H
04BE1A CD 1F BE 04 0040*  	CALL	printHex8
04BE1E 7D          0041*  	LD		A,L
04BE1F             0042*  ; Print an 8-bit HEX number
04BE1F             0043*  ; A: Number to print
04BE1F             0044*  printHex8:
04BE1F 4F          0045*  	LD		C,A
04BE20 1F          0046*  	RRA
04BE21 1F          0047*  	RRA
04BE22 1F          0048*  	RRA
04BE23 1F          0049*  	RRA
04BE24 CD 29 BE 04 0050*  	CALL	@F
04BE28 79          0051*  	LD		A,C
04BE29             0052*  @@:
04BE29 E6 0F       0053*  	AND		0Fh
04BE2B C6 90       0054*  	ADD		A,90h
04BE2D 27          0055*  	DAA
04BE2E CE 40       0056*  	ADC		A,40h
04BE30 27          0057*  	DAA
04BE31 5B D7       0058*  	RST.LIL	10h
04BE33 C9          0059*  	RET
04BE34             0060*  
04BE34             0061*  ; Print a 0x HEX prefix
04BE34             0062*  DisplayHexPrefix:
04BE34 3E 30       0063*  	LD	A, '0'
04BE36 5B D7       0064*  	RST.LIL 10h
04BE38 3E 78       0065*  	LD	A, 'x'
04BE3A 5B D7       0066*  	RST.LIL 10h
04BE3C C9          0067*  	RET
04BE3D             0068*  
04BE3D             0069*  
04BE3D             0070*  ; Prints the right justified decimal value in HL without leading zeroes
04BE3D             0071*  ; HL : Value to print
04BE3D             0072*  printDec:
04BE3D 11 61 BE 04 0073*  	LD	 DE, _printDecBuffer
04BE41 CD 6A BE 04 0074*  	CALL Num2String
04BE45             0075*  ; BEGIN MY CODE
04BE45             0076*  ; replace leading zeroes with spaces
04BE45 21 61 BE 04 0077*      LD	 HL, _printDecBuffer
04BE49 06 07       0078*      ld   B, 7 ; if HL was 0, we want to keep the final zero
04BE4B             0079*  @loop:
04BE4B 7E          0080*      LD	 A, (HL)
04BE4C FE 30       0081*      CP	 '0'
04BE4E C2 5C BE 04 0082*      JP	 NZ, @done
04BE52 3E 20       0083*      LD   A, ' '
04BE54 77          0084*      LD	 (HL), A
04BE55 23          0085*      INC	 HL
04BE56 CD D0 B7 04 0086*      CALL vdu_cursor_forward
04BE5A 10 EF       0087*      DJNZ @loop
04BE5C             0088*  @done:
04BE5C             0089*  ; END MY CODE
04BE5C             0090*  	; LD	 HL, _printDecBuffer
04BE5C CD EF BD 04 0091*  	CALL printString
04BE60 C9          0092*  	RET
04BE61 00 00 00 00 0093*  _printDecBuffer: blkb 9,0 ; nine bytes full of zeroes
       00 00 00 00 
       00          
04BE6A             0094*  
04BE6A             0095*  ; This routine converts the value from HL into it's ASCII representation,
04BE6A             0096*  ; starting to memory location pointing by DE, in decimal form and with leading zeroes
04BE6A             0097*  ; so it will allways be 8 characters length
04BE6A             0098*  ; HL : Value to convert to string
04BE6A             0099*  ; DE : pointer to buffer, at least 8 byte + 0
04BE6A             0100*  Num2String:
04BE6A 01 80 69 67 0101*  	LD	 BC,-10000000
04BE6E CD A1 BE 04 0102*  	CALL OneDigit
04BE72 01 C0 BD F0 0103*  	LD	 BC,-1000000
04BE76 CD A1 BE 04 0104*  	CALL OneDigit
04BE7A 01 60 79 FE 0105*  	LD	 BC,-100000
04BE7E CD A1 BE 04 0106*  	CALL OneDigit
04BE82 01 F0 D8 FF 0107*  	LD   BC,-10000
04BE86 CD A1 BE 04 0108*  	CALL OneDigit
04BE8A 01 18 FC FF 0109*  	LD   BC,-1000
04BE8E CD A1 BE 04 0110*  	CALL OneDigit
04BE92 01 9C FF FF 0111*  	LD   BC,-100
04BE96 CD A1 BE 04 0112*  	CALL OneDigit
04BE9A 0E F6       0113*  	LD   C,-10
04BE9C CD A1 BE 04 0114*  	CALL OneDigit
04BEA0 48          0115*  	LD   C,B
04BEA1             0116*  OneDigit:
04BEA1 3E 2F       0117*  	LD   A,'0'-1
04BEA3             0118*  DivideMe:
04BEA3 3C          0119*  	INC  A
04BEA4 09          0120*  	ADD  HL,BC
04BEA5 38 FC       0121*  	JR   C,DivideMe
04BEA7 ED 42       0122*  	SBC  HL,BC
04BEA9 12          0123*  	LD   (DE),A
04BEAA 13          0124*  	INC  DE
04BEAB C9          0125*  	RET
04BEAC             0126*  
04BEAC             0127*  
04BEAC             0128*  ; #### new functions added by Brandon R. Gates ####
04BEAC             0129*  
04BEAC             0130*  ; print the binary representation of the 8-bit value in a
04BEAC             0131*  ; destroys a, hl, bc
04BEAC             0132*  printBin8:
04BEAC 06 08       0133*      ld b,8      ; loop counter for 8 bits
04BEAE 21 C9 BE 04 0134*      ld hl,@cmd  ; set hl to the low byte of the output string
04BEB2             0135*                  ; (which will be the high bit of the value in a)
04BEB2             0136*  @loop:
04BEB2 07          0137*      rlca ; put the next highest bit into carry
04BEB3 38 04       0138*      jr c,@one
04BEB5 36 30       0139*      ld (hl),'0'
04BEB7 18 02       0140*      jr @next_bit
04BEB9             0141*  @one:
04BEB9 36 31       0142*      ld (hl),'1'
04BEBB             0143*  @next_bit:
04BEBB 23          0144*      inc hl
04BEBC 10 F4       0145*      djnz @loop
04BEBE             0146*  ; print it
04BEBE 21 C9 BE 04 0147*  	ld hl,@cmd
04BEC2 01 08 00 00 0148*  	ld bc,@end-@cmd
04BEC6 5B DF       0149*  	rst.lil $18
04BEC8 C9          0150*  	ret
04BEC9             0151*  @cmd: ds 8 ; eight bytes for eight bits
04BED1             0152*  @end:
04BED1             0153*  
04BED1             0154*  ; print the binary representation of the 8-bit value in a
04BED1             0155*  ; in reverse order (lsb first)
04BED1             0156*  ; destroys a, hl, bc
04BED1             0157*  printBin8Rev:
04BED1 06 08       0158*      ld b,8      ; loop counter for 8 bits
04BED3 21 EE BE 04 0159*      ld hl,@cmd  ; set hl to the low byte of the output string
04BED7             0160*                  ; (which will be the high bit of the value in a)
04BED7             0161*  @loop:
04BED7 0F          0162*      rrca ; put the next lowest bit into carry
04BED8 38 04       0163*      jr c,@one
04BEDA 36 30       0164*      ld (hl),'0'
04BEDC 18 02       0165*      jr @next_bit
04BEDE             0166*  @one:
04BEDE 36 31       0167*      ld (hl),'1'
04BEE0             0168*  @next_bit:
04BEE0 23          0169*      inc hl
04BEE1 10 F4       0170*      djnz @loop
04BEE3             0171*  ; print it
04BEE3 21 EE BE 04 0172*  	ld hl,@cmd
04BEE7 01 08 00 00 0173*  	ld bc,@end-@cmd
04BEEB 5B DF       0174*  	rst.lil $18
04BEED C9          0175*  	ret
04BEEE             0176*  @cmd: ds 8 ; eight bytes for eight bits
04BEF6             0177*  @end:
04BEF6             0178*  
04BEF6             0179*  ; print registers to screen in hexidecimal format
04BEF6             0180*  ; inputs: none
04BEF6             0181*  ; outputs: values of every register printed to screen
04BEF6             0182*  ;    values of each register in global scratch memory
04BEF6             0183*  ; destroys: nothing
04BEF6             0184*  stepRegistersHex:
04BEF6             0185*  ; store everything in scratch
04BEF6 22 F9 C0 04 0186*      ld (uhl),hl
04BEFA ED 43 FC C0 0187*      ld (ubc),bc
       04          
04BEFF ED 53 FF C0 0188*      ld (ude),de
       04          
04BF04 DD 22 02 C1 0189*      ld (uix),ix
       04          
04BF09 FD 22 05 C1 0190*      ld (uiy),iy
       04          
04BF0E F5          0191*      push af ; fml
04BF0F E1          0192*      pop hl  ; thanks, zilog
04BF10 22 F6 C0 04 0193*      ld (uaf),hl
04BF14 F5          0194*      push af ; dammit
04BF15             0195*  
04BF15             0196*  ; home the cursor
04BF15 CD 17 B9 04 0197*      call vdu_home_cursor
04BF19             0198*  
04BF19             0199*  ; print each register
04BF19 21 82 C0 04 0200*      ld hl,str_afu
04BF1D CD EF BD 04 0201*      call printString
04BF21 2A F6 C0 04 0202*      ld hl,(uaf)
04BF25 CD 0D BE 04 0203*      call printHex24
04BF29 CD 04 BE 04 0204*      call printNewLine
04BF2D             0205*  
04BF2D 21 86 C0 04 0206*      ld hl,str_hlu
04BF31 CD EF BD 04 0207*      call printString
04BF35 2A F9 C0 04 0208*      ld hl,(uhl)
04BF39 CD 0D BE 04 0209*      call printHex24
04BF3D CD 04 BE 04 0210*      call printNewLine
04BF41             0211*  
04BF41 21 8A C0 04 0212*      ld hl,str_bcu
04BF45 CD EF BD 04 0213*      call printString
04BF49 2A FC C0 04 0214*      ld hl,(ubc)
04BF4D CD 0D BE 04 0215*      call printHex24
04BF51 CD 04 BE 04 0216*      call printNewLine
04BF55             0217*  
04BF55 21 8E C0 04 0218*      ld hl,str_deu
04BF59 CD EF BD 04 0219*      call printString
04BF5D 2A FF C0 04 0220*      ld hl,(ude)
04BF61 CD 0D BE 04 0221*      call printHex24
04BF65 CD 04 BE 04 0222*      call printNewLine
04BF69             0223*  
04BF69 21 92 C0 04 0224*      ld hl,str_ixu
04BF6D CD EF BD 04 0225*      call printString
04BF71 2A 02 C1 04 0226*      ld hl,(uix)
04BF75 CD 0D BE 04 0227*      call printHex24
04BF79 CD 04 BE 04 0228*      call printNewLine
04BF7D             0229*  
04BF7D 21 96 C0 04 0230*      ld hl,str_iyu
04BF81 CD EF BD 04 0231*      call printString
04BF85 2A 05 C1 04 0232*      ld hl,(uiy)
04BF89 CD 0D BE 04 0233*      call printHex24
04BF8D CD 04 BE 04 0234*      call printNewLine
04BF91             0235*  
04BF91             0236*      ; call vsync
04BF91             0237*  
04BF91 CD 04 BE 04 0238*      call printNewLine
04BF95             0239*  
04BF95             0240*  ; check for right shift key and quit if pressed
04BF95             0241*  	MOSCALL mos_getkbmap
04BF95 3E 1E       0001*M 			LD	A, function
04BF97 5B CF       0002*M 			RST.LIL	08h
04BF99             0242*  @stayhere:
04BF99             0243*  ; 7 RightShift
04BF99 DD CB 00 76 0244*      bit 6,(ix+0)
04BF9D 20 02       0245*      jr nz,@RightShift
04BF9F 18 F8       0246*      jr @stayhere
04BFA1             0247*  @RightShift:
04BFA1 DD CB 0E 86 0248*      res 0,(ix+14) ; debounce the key (hopefully)
04BFA5 3E 80       0249*      ld a,%10000000
04BFA7 CD 1F D1 04 0250*      call multiPurposeDelay
04BFAB             0251*  
04BFAB             0252*  ; restore everything
04BFAB 2A F9 C0 04 0253*      ld hl, (uhl)
04BFAF ED 4B FC C0 0254*      ld bc, (ubc)
       04          
04BFB4 ED 5B FF C0 0255*      ld de, (ude)
       04          
04BFB9 DD 2A 02 C1 0256*      ld ix, (uix)
       04          
04BFBE FD 2A 05 C1 0257*      ld iy, (uiy)
       04          
04BFC3 F1          0258*      pop af
04BFC4             0259*  ; all done
04BFC4 C9          0260*      ret
04BFC5             0261*  
04BFC5             0262*  ; print registers to screen in hexidecimal format
04BFC5             0263*  ; inputs: none
04BFC5             0264*  ; outputs: values of every register printed to screen
04BFC5             0265*  ;    values of each register in global scratch memory
04BFC5             0266*  ; destroys: nothing
04BFC5             0267*  dumpRegistersHex:
04BFC5             0268*  ; store everything in scratch
04BFC5 22 F9 C0 04 0269*      ld (uhl),hl
04BFC9 ED 43 FC C0 0270*      ld (ubc),bc
       04          
04BFCE ED 53 FF C0 0271*      ld (ude),de
       04          
04BFD3 DD 22 02 C1 0272*      ld (uix),ix
       04          
04BFD8 FD 22 05 C1 0273*      ld (uiy),iy
       04          
04BFDD F5          0274*      push af ; fml
04BFDE E1          0275*      pop hl  ; thanks, zilog
04BFDF 22 F6 C0 04 0276*      ld (uaf),hl
04BFE3 F5          0277*      push af ; dammit
04BFE4             0278*  
04BFE4             0279*  ; home the cursor
04BFE4 CD 17 B9 04 0280*      call vdu_home_cursor
04BFE8             0281*  
04BFE8             0282*  ; print each register
04BFE8 21 82 C0 04 0283*      ld hl,str_afu
04BFEC CD EF BD 04 0284*      call printString
04BFF0 2A F6 C0 04 0285*      ld hl,(uaf)
04BFF4 CD 0D BE 04 0286*      call printHex24
04BFF8 CD 04 BE 04 0287*      call printNewLine
04BFFC             0288*  
04BFFC 21 86 C0 04 0289*      ld hl,str_hlu
04C000 CD EF BD 04 0290*      call printString
04C004 2A F9 C0 04 0291*      ld hl,(uhl)
04C008 CD 0D BE 04 0292*      call printHex24
04C00C CD 04 BE 04 0293*      call printNewLine
04C010             0294*  
04C010 21 8A C0 04 0295*      ld hl,str_bcu
04C014 CD EF BD 04 0296*      call printString
04C018 2A FC C0 04 0297*      ld hl,(ubc)
04C01C CD 0D BE 04 0298*      call printHex24
04C020 CD 04 BE 04 0299*      call printNewLine
04C024             0300*  
04C024 21 8E C0 04 0301*      ld hl,str_deu
04C028 CD EF BD 04 0302*      call printString
04C02C 2A FF C0 04 0303*      ld hl,(ude)
04C030 CD 0D BE 04 0304*      call printHex24
04C034 CD 04 BE 04 0305*      call printNewLine
04C038             0306*  
04C038 21 92 C0 04 0307*      ld hl,str_ixu
04C03C CD EF BD 04 0308*      call printString
04C040 2A 02 C1 04 0309*      ld hl,(uix)
04C044 CD 0D BE 04 0310*      call printHex24
04C048 CD 04 BE 04 0311*      call printNewLine
04C04C             0312*  
04C04C 21 96 C0 04 0313*      ld hl,str_iyu
04C050 CD EF BD 04 0314*      call printString
04C054 2A 05 C1 04 0315*      ld hl,(uiy)
04C058 CD 0D BE 04 0316*      call printHex24
04C05C CD 04 BE 04 0317*      call printNewLine
04C060             0318*  
04C060 CD 39 BA 04 0319*      call vdu_vblank
04C064             0320*  
04C064 CD 04 BE 04 0321*      call printNewLine
04C068             0322*  ; restore everything
04C068 2A F9 C0 04 0323*      ld hl, (uhl)
04C06C ED 4B FC C0 0324*      ld bc, (ubc)
       04          
04C071 ED 5B FF C0 0325*      ld de, (ude)
       04          
04C076 DD 2A 02 C1 0326*      ld ix, (uix)
       04          
04C07B FD 2A 05 C1 0327*      ld iy, (uiy)
       04          
04C080 F1          0328*      pop af
04C081             0329*  ; all done
04C081 C9          0330*      ret
04C082             0331*  
04C082 61 66 3D 00 0332*  str_afu: db "af=",0
04C086 68 6C 3D 00 0333*  str_hlu: db "hl=",0
04C08A 62 63 3D 00 0334*  str_bcu: db "bc=",0
04C08E 64 65 3D 00 0335*  str_deu: db "de=",0
04C092 69 78 3D 00 0336*  str_ixu: db "ix=",0
04C096 69 79 3D 00 0337*  str_iyu: db "iy=",0
04C09A             0338*  
04C09A             0339*  ; print udeuhl to screen in hexidecimal format
04C09A             0340*  ; inputs: none
04C09A             0341*  ; outputs: concatenated hexidecimal udeuhl
04C09A             0342*  ; destroys: nothing
04C09A             0343*  dumpUDEUHLHex:
04C09A             0344*  ; store everything in scratch
04C09A 22 F9 C0 04 0345*      ld (uhl),hl
04C09E ED 43 FC C0 0346*      ld (ubc),bc
       04          
04C0A3 ED 53 FF C0 0347*      ld (ude),de
       04          
04C0A8 DD 22 02 C1 0348*      ld (uix),ix
       04          
04C0AD FD 22 05 C1 0349*      ld (uiy),iy
       04          
04C0B2 F5          0350*      push af
04C0B3             0351*  
04C0B3             0352*  ; print each register
04C0B3             0353*  
04C0B3 21 ED C0 04 0354*      ld hl,str_udeuhl
04C0B7 CD EF BD 04 0355*      call printString
04C0BB 2A FF C0 04 0356*      ld hl,(ude)
04C0BF CD 0D BE 04 0357*      call printHex24
04C0C3 3E 2E       0358*  	ld a,'.'	; print a dot to separate the values
04C0C5 5B D7       0359*  	rst.lil 10h
04C0C7 2A F9 C0 04 0360*      ld hl,(uhl)
04C0CB CD 0D BE 04 0361*      call printHex24
04C0CF CD 04 BE 04 0362*      call printNewLine
04C0D3             0363*  
04C0D3             0364*  ; restore everything
04C0D3 2A F9 C0 04 0365*      ld hl, (uhl)
04C0D7 ED 4B FC C0 0366*      ld bc, (ubc)
       04          
04C0DC ED 5B FF C0 0367*      ld de, (ude)
       04          
04C0E1 DD 2A 02 C1 0368*      ld ix, (uix)
       04          
04C0E6 FD 2A 05 C1 0369*      ld iy, (uiy)
       04          
04C0EB F1          0370*      pop af
04C0EC             0371*  ; all done
04C0EC C9          0372*      ret
04C0ED             0373*  
04C0ED 75 64 65 2E 0374*  str_udeuhl: db "ude.uhl=",0
       75 68 6C 3D 
       00          
04C0F6             0375*  
04C0F6             0376*  ; global scratch memory for registers
04C0F6 00 00 00    0377*  uaf: dl 0
04C0F9 00 00 00    0378*  uhl: dl 0
04C0FC 00 00 00    0379*  ubc: dl 0
04C0FF 00 00 00    0380*  ude: dl 0
04C102 00 00 00    0381*  uix: dl 0
04C105 00 00 00    0382*  uiy: dl 0
04C108 00 00 00    0383*  usp: dl 0
04C10B 00 00 00    0384*  upc: dl 0
04C10E             0385*  
04C10E             0386*  ; inputs: whatever is in the flags register
04C10E             0387*  ; outputs: binary representation of flags
04C10E             0388*  ;          with a header so we know which is what
04C10E             0389*  ; destroys: nothing
04C10E             0390*  ; preserves: everything
04C10E             0391*  dumpFlags:
04C10E             0392*  ; first we curse zilog for not giving direct access to flags
04C10E F5          0393*      push af ; this is so we can send it back unharmed
04C10F F5          0394*      push af ; this is so we can pop it to hl
04C110             0395*  ; store everything in scratch
04C110 22 F9 C0 04 0396*      ld (uhl),hl
04C114 ED 43 FC C0 0397*      ld (ubc),bc
       04          
04C119 ED 53 FF C0 0398*      ld (ude),de
       04          
04C11E DD 22 02 C1 0399*      ld (uix),ix
       04          
04C123 FD 22 05 C1 0400*      ld (uiy),iy
       04          
04C128             0401*  ; next we print the header
04C128 21 54 C1 04 0402*      ld hl,@header
04C12C CD EF BD 04 0403*      call printString
04C130 E1          0404*      pop hl ; flags are now in l
04C131 7D          0405*      ld a,l ; flags are now in a
04C132 CD AC BE 04 0406*      call printBin8
04C136 CD 04 BE 04 0407*  	call printNewLine
04C13A             0408*  ; restore everything
04C13A 2A F9 C0 04 0409*      ld hl, (uhl)
04C13E ED 4B FC C0 0410*      ld bc, (ubc)
       04          
04C143 ED 5B FF C0 0411*      ld de, (ude)
       04          
04C148 DD 2A 02 C1 0412*      ld ix, (uix)
       04          
04C14D FD 2A 05 C1 0413*      ld iy, (uiy)
       04          
04C152 F1          0414*      pop af ; send her home the way she came
04C153 C9          0415*      ret
04C154             0416*  ; Bit 7 (S): Sign flag
04C154             0417*  ; Bit 6 (Z): Zero flag
04C154             0418*  ; Bit 5 (5): Reserved (copy of bit 5 of the result)
04C154             0419*  ; Bit 4 (H): Half Carry flag
04C154             0420*  ; Bit 3 (3): Reserved (copy of bit 3 of the result)
04C154             0421*  ; Bit 2 (PV): Parity/Overflow flag
04C154             0422*  ; Bit 1 (N): Subtract flag
04C154             0423*  ; Bit 0 (C): Carry flag
04C154 53 5A 78 48 0424*  @header: db "SZxHxPNC\r\n",0 ; cr/lf and 0 terminator
       78 50 4E 43 
       0D 0A 00    
04C15F             0425*  
04C15F             0426*  ; set all the bits in the flag register
04C15F             0427*  ; more of an academic exercise than anything useful
04C15F             0428*  ; inputs; none
04C15F             0429*  ; outputs; a=0,f=255
04C15F             0430*  ; destroys: flags, hl
04C15F             0431*  ; preserves: a, because why not
04C15F             0432*  setAllFlags:
04C15F 21 FF 00 00 0433*      ld hl,255
04C163 67          0434*      ld h,a ; four cycles to preserve a is cheap
04C164 E5          0435*      push hl
04C165 F1          0436*      pop af
04C166 C9          0437*      ret
04C167             0438*  
04C167             0439*  ; reset all the bits in the flag register
04C167             0440*  ; unlike its inverse counterpart, this may actually be useful
04C167             0441*  ; inputs; none
04C167             0442*  ; outputs; a=0,f=0
04C167             0443*  ; destroys: flags, hl
04C167             0444*  ; preserves: a, because why not
04C167             0445*  resetAllFlags:
04C167 21 00 00 00 0446*      ld hl,0
04C16B 67          0447*      ld h,a ; four cycles to preserve a is cheap
04C16C E5          0448*      push hl
04C16D F1          0449*      pop af
04C16E C9          0450*      ret
04C16F             0451*  
04C16F             0452*  ; wait until user presses a key
04C16F             0453*  ; inputs: none
04C16F             0454*  ; outputs: none
04C16F             0455*  ; destroys: af,ix
04C16F             0456*  waitKeypress:
04C16F             0457*      MOSCALL mos_sysvars
04C16F 3E 08       0001*M 			LD	A, function
04C171 5B CF       0002*M 			RST.LIL	08h
04C173 AF          0458*      xor a ; zero out any prior keypresses
04C174 DD 77 05    0459*      ld (ix+sysvar_keyascii),a
04C177             0460*  @loop:
04C177 DD 7E 05    0461*      ld a,(ix+sysvar_keyascii)
04C17A A7          0462*      and a
04C17B C0          0463*      ret nz
04C17C 18 F9       0464*      jr @loop
04C17E             0465*  
04C17E             0466*  
04C17E             0467*  ; print bytes from an address to the screen in hexidecimal format
04C17E             0468*  ; inputs: hl = address of first byte to print, a = number of bytes to print
04C17E             0469*  ; outputs: values of each byte printed to screen separated by spaces
04C17E             0470*  ; destroys: nothing
04C17E             0471*  dumpMemoryHex:
04C17E             0472*  ; save all registers to the stack
04C17E F5          0473*      push af
04C17F C5          0474*      push bc
04C180 D5          0475*      push de
04C181 E5          0476*      push hl
04C182 DD E5       0477*      push ix
04C184 FD E5       0478*      push iy
04C186             0479*  
04C186             0480*  ; set b to be our loop counter
04C186 47          0481*      ld b,a
04C187             0482*  @loop:
04C187             0483*  ; print the byte
04C187 7E          0484*      ld a,(hl)
04C188 CD 1F BE 04 0485*      call printHex8
04C18C             0486*  ; print a space
04C18C 3E 20       0487*      ld a,' '
04C18E 5B D7       0488*      rst.lil 10h
04C190 23          0489*      inc hl
04C191 10 F4       0490*      djnz @loop
04C193 CD 04 BE 04 0491*      call printNewLine
04C197             0492*  
04C197             0493*  ; restore everything
04C197 FD E1       0494*      pop iy
04C199 DD E1       0495*      pop ix
04C19B E1          0496*      pop hl
04C19C D1          0497*      pop de
04C19D C1          0498*      pop bc
04C19E F1          0499*      pop af
04C19F             0500*  ; all done
04C19F C9          0501*      ret
04C1A0             0502*  
04C1A0             0503*  
04C1A0             0504*  ; print bytes from an address to the screen in binary format
04C1A0             0505*  ; inputs: hl = address of first byte to print, a = number of bytes to print
04C1A0             0506*  ; outputs: values of each byte printed to screen separated by spaces
04C1A0             0507*  ; destroys: nothing
04C1A0             0508*  dumpMemoryBin:
04C1A0             0509*  ; save all registers to the stack
04C1A0 F5          0510*      push af
04C1A1 C5          0511*      push bc
04C1A2 D5          0512*      push de
04C1A3 E5          0513*      push hl
04C1A4 DD E5       0514*      push ix
04C1A6 FD E5       0515*      push iy
04C1A8             0516*  
04C1A8             0517*  ; set b to be our loop counter
04C1A8 47          0518*      ld b,a
04C1A9             0519*  @loop:
04C1A9             0520*  ; print the byte
04C1A9 7E          0521*      ld a,(hl)
04C1AA E5          0522*      push hl
04C1AB C5          0523*      push bc
04C1AC CD AC BE 04 0524*      call printBin8
04C1B0 C1          0525*      pop bc
04C1B1             0526*  ; print a space
04C1B1 3E 20       0527*      ld a,' '
04C1B3 5B D7       0528*      rst.lil 10h
04C1B5 E1          0529*      pop hl
04C1B6 23          0530*      inc hl
04C1B7 10 F0       0531*      djnz @loop
04C1B9 CD 04 BE 04 0532*      call printNewLine
04C1BD             0533*  
04C1BD             0534*  ; restore everything
04C1BD FD E1       0535*      pop iy
04C1BF DD E1       0536*      pop ix
04C1C1 E1          0537*      pop hl
04C1C2 D1          0538*      pop de
04C1C3 C1          0539*      pop bc
04C1C4 F1          0540*      pop af
04C1C5             0541*  ; all done
04C1C5 C9          0542*      ret
04C1C6             0543*  
04C1C6             0544*  ; print bytes from an address to the screen in binary format
04C1C6             0545*  ; with the bits of each byte in reverse order (lsb first)
04C1C6             0546*  ; inputs: hl = address of first byte to print, a = number of bytes to print
04C1C6             0547*  ; outputs: values of each byte printed to screen separated by spaces
04C1C6             0548*  ; destroys: nothing
04C1C6             0549*  dumpMemoryBinRev:
04C1C6             0550*  ; save all registers to the stack
04C1C6 F5          0551*      push af
04C1C7 C5          0552*      push bc
04C1C8 D5          0553*      push de
04C1C9 E5          0554*      push hl
04C1CA DD E5       0555*      push ix
04C1CC FD E5       0556*      push iy
04C1CE             0557*  
04C1CE             0558*  ; set b to be our loop counter
04C1CE 47          0559*      ld b,a
04C1CF             0560*  @loop:
04C1CF             0561*  ; print the byte
04C1CF 7E          0562*      ld a,(hl)
04C1D0 E5          0563*      push hl
04C1D1 C5          0564*      push bc
04C1D2 CD D1 BE 04 0565*      call printBin8Rev
04C1D6 C1          0566*      pop bc
04C1D7             0567*  ; print a space
04C1D7 3E 20       0568*      ld a,' '
04C1D9 5B D7       0569*      rst.lil 10h
04C1DB E1          0570*      pop hl
04C1DC 23          0571*      inc hl
04C1DD 10 F0       0572*      djnz @loop
04C1DF CD 04 BE 04 0573*      call printNewLine
04C1E3             0574*  
04C1E3             0575*  ; restore everything
04C1E3 FD E1       0576*      pop iy
04C1E5 DD E1       0577*      pop ix
04C1E7 E1          0578*      pop hl
04C1E8 D1          0579*      pop de
04C1E9 C1          0580*      pop bc
04C1EA F1          0581*      pop af
04C1EB             0582*  ; all done
04C1EB C9          0583*      ret
04C1EC             0026   	include "src/asm/player.asm"
04C1EC             0001*  ; ######## GAME STATE VARIABLES #######
04C1EC             0002*  ; we use 24-bit values for all of these for easy use with Num2String function
04C1EC 00 00 00    0003*  plyr_score: dl 0x000000 ; binary
04C1EF             0004*  ; player current health,binary
04C1EF             0005*  ; when < 0 player splodes
04C1EF             0006*  ; restores to plyr_max_health when new ship spawns
04C1EF 00 00 00    0007*  plyr_health: dl 0x000000 ; binary TODO: temp set at 50% for testing, set to 100 for actual game
04C1F2             0008*  ; max player health,binary
04C1F2             0009*  ; can increase with power-ups (todo)
04C1F2 64 00 00    0010*  plyr_max_health: dl 100 ; binary
04C1F5             0011*  ; when reaches zero,game ends
04C1F5             0012*  ; can increase based on TODO
04C1F5 03 00 00    0013*  plyr_lives: dl 3 ; binary
04C1F8             0014*  
04C1F8             0015*  ; ######### Player Variables ##########
04C1F8             0016*  ; player position on the map and orientation
04C1F8 00          0017*  cur_floor: db 0x00 ; 0-255, corresponds to floor_num in build scripts
04C1F9 00          0018*  cur_room: db 0x00 ; 0-9, corresponds to room_id in build scripts
04C1FA 00          0019*  cur_cell: db 0x00 ; 0-255, corresponds to cell_id in build scripts
04C1FB 00          0020*  from_floor: db 0x00 ; 0-255, corresponds to floor_num in build scripts
04C1FC 00          0021*  from_room: db 0x00 ; 0-9, corresponds to room_id in build scripts
04C1FD 00          0022*  orientation: db 0x00 ; 0-3 north,east,south,west
04C1FE 00          0023*  cur_x: db 0x00
04C1FF 00          0024*  cur_y: db 0x00
04C200 00          0025*         db 0x00 ; padding so we can read/write 24-bit registers
04C201 00          0026*  xvel:  db 0x00
04C202 00          0027*  yvel:  db 0x00
04C203 00          0028*         db 0x00 ; padding
04C204 00          0029*  dy:    db 0x00
04C205 00          0030*  dx:    db 0x00
04C206 00          0031*         db 0x00 ; padding
04C207 00          0032*  avel:  db 0x00 ; player angular velocity in orientation ticks per move tick
04C208             0033*  
04C208 00          0034*  plyr_shot_x:      db 0x00
04C209 00          0035*  plyr_shot_y:      db 0x00
04C20A 00          0036*                      db 0x00 ; padding
04C20B 00          0037*  plyr_shot_xvel:   db 0x00
04C20C 00          0038*  plyr_shot_yvel:   db 0x00
04C20D 00          0039*                      db 0x00 ; padding
04C20E FF          0040*  plyr_shot_status: db 0xFF ; -1 = no shot, otherwise shot direction of travel
04C20F 00 00 00    0041*  plyr_shot_time:   dl 0x000000 ; time shot was fired from RTC
04C212 00          0042*  plyr_shot_damage: db 0x00 ; damage dealt by latest shot
04C213             0043*  
04C213 00          0044*  plyr_wpns:     db 0x00 ; weapons in player's possession according to following bitmasks
04C214 00          0045*  plyr_wpn_active: db 0x00 ; currently active weapon according to following bitmasks
04C215             0046*  plyr_wpn_knife: equ %00000001
04C215             0047*  plyr_wpn_pistol: equ %00000010
04C215             0048*  plyr_wpn_mg: equ %00000100
04C215             0049*  plyr_wpn_gg: equ %00001000
04C215 00          0050*  plyr_wpn_damage: db 0x00 ; damage dealt by current weapon
04C216 00 00 00    0051*  plyr_wpn_ui_sm: dl 0x000000 ; bufferId for weapon UI
04C219 00 00 00    0052*  plyr_wpn_ui_lg: dl 0x000000 ; bufferId for weapon UI
04C21C             0053*  plyr_wpn_select_tmr: ds 6 ; time until player can selet a new weapon in 1/120ths of a second
04C222             0054*  plyr_wpn_fire_tmr: ds 6 ; time until player can fire again in 1/120ths of a second
04C228 00 00 00    0055*  plyr_wpn_fire_rate: dl 0x000000 ; rate of fire in 1/120ths of a second
04C22B             0056*  
04C22B             0057*  ; plyr_wpn_anim_tmr: ds 6 ; time until next weapon animation frame in 1/120ths of a second
04C22B 00 00 00    0058*  plyr_wpn_anim_fr: dl 0x000000 ; current weapon animation frame
04C22E             0059*  ; plyr_wpn_anim_tmr_rst: dl 0
04C22E             0060*  
04C22E             0061*  
04C22E 00 00 00    0062*  plyr_ammo: dl 0x000000 ; ammo for all projectile weapons
04C231             0063*  plyr_ammo_str: ds 8 ; Num2String buffer
04C239 00          0064*                   db 0 ; string terminator
04C23A             0065*  
04C23A             0066*  ; ######### PLAYER CONSTANTS ##########
04C23A             0067*  speed_plyr: equ 1 ; 1 map grid unit per movement tick
04C23A             0068*  plyr_move_timer: ds 6 ; time until player can move again in 1/120ths of a second
04C240             0069*  plyr_move_rate: equ 120/4 ; 4 times per second
04C240             0070*  
04C240             0071*  ; ######### PLAYER SPRITE PARAMETERS ##########
04C240             0072*  ; uses the same offsets from its table base as the main sprite table:
04C240             0073*  plyr_start_variables: ; label marking beginning of table
04C240 40          0074*  plyr_id:               db table_max_records
04C241 00          0075*  plyr_type:             db     0x00 ; 1 bytes currently not used
04C242 00 00 00    0076*  plyr_base_bufferId:    dl 0x000000 ; 3 bytes bitmap bufferId
04C245 00 00 00    0077*  plyr_move_program:     dl 0x000000 ; 3 bytes not currently used
04C248 00          0078*  plyr_collisions:       db     0x00 ; 1 bytes bit 0 set=alive, otherwise dead, bit 1 set=just died
04C249 00          0079*  plyr_dim_x:            db     0x00 ; 1 bytes sprite width in pixels
04C24A 00          0080*  plyr_dim_y:            db     0x00 ; 1 bytes sprite height in pixels
04C24B 00 00 00    0081*  plyr_x:                dl 0x000000 ; 3 bytes 16.8 fractional x position in pixels
04C24E 00 00 00    0082*  plyr_y:                dl 0x000000 ; 3 bytes 16.8 fractional y position in pixels
04C251 00 00 00    0083*  plyr_xvel:             dl 0x000000 ; 3 bytes x-component velocity, 16.8 fixed, pixels
04C254 00 00 00    0084*  plyr_yvel:             dl 0x000000 ; 3 bytes y-component velocity, 16.8 fixed, pixels
04C257 00 00 00    0085*  playervel:               dl 0x000000 ; 3 bytes velocity px/frame (16.8 fixed)
04C25A 00 00 00    0086*  plyr_heading:          dl 0x000000 ; 3 bytes sprite movement direction deg256 16.8 fixed
04C25D 00 00 00    0087*  plyr_orientation:      dl 0x000000 ; 3 bytes not currently used
04C260 00          0088*  plyr_animation:        db     0x00 ; 1 bytes not currently used
04C261 00          0089*  plyr_anim_tmr:  db     0x00 ; 1 bytes not currently used
04C262             0090*  ; plyr_move_timer:       db     0x00 ; 1 bytes not currently used
04C262 00          0091*  plyr_move_step:        db     0x00 ; 1 bytes not currently used
04C263 00          0092*  plyr_points:           db     0x00 ; 1 bytes not currently used
04C264 00          0093*  plyr_health_damage:    db     0x00 ; 1 bytes not currently used
04C265             0094*  plyr_end_variables: ; for when we want to traverse this table in reverse
04C265             0095*  
04C265             0096*  
04C265             0097*  ; set initial player position
04C265             0098*  ; inputs: none,everything is hardcoded
04C265             0099*  ; outputs: player set to the first valid position on the map
04C265             0100*  ; destroys: a
04C265             0101*  plyr_init:
04C265 CD FE 71 04 0102*      call get_floor_start ; a = cell_id, d = map_y, e = map_x
04C269 32 FA C1 04 0103*      ld (cur_cell),a
04C26D ED 53 FE C1 0104*      ld (cur_x),de ; implicitly populates cur_y
       04          
04C272 AF          0105*      xor a ; north is default orientation
04C273 32 FD C1 04 0106*      ld (orientation),a
04C277 21 1E 00 00 0107*      ld hl,plyr_move_rate
04C27B FD 21 3A C2 0108*      ld iy,plyr_move_timer
       04          
04C280 CD E3 D0 04 0109*      call timestamp_tmr_set
04C284 3E 03       0110*      ld a,3
04C286 32 F5 C1 04 0111*      ld (plyr_lives),a
04C28A 3E 64       0112*      ld a,100
04C28C 32 EF C1 04 0113*      ld (plyr_health),a
04C290 3E 08       0114*      ld a,8
04C292 32 2E C2 04 0115*      ld (plyr_ammo),a
04C296 3E 01       0116*      ld a,plyr_wpn_knife
04C298 F6 02       0117*      or plyr_wpn_pistol
04C29A 32 13 C2 04 0118*      ld (plyr_wpns),a
04C29E 3E 01       0119*      ld a,plyr_wpn_knife
04C2A0 32 14 C2 04 0120*      ld (plyr_wpn_active),a
04C2A4 CD 78 C3 04 0121*      call plyr_set_weapon_parameters
04C2A8 FD 21 1C C2 0122*      ld iy,plyr_wpn_select_tmr
       04          
04C2AD 21 00 00 00 0123*      ld hl,0
04C2B1 CD E3 D0 04 0124*      call timestamp_tmr_set
04C2B5 C9          0125*      ret
04C2B6             0126*  
04C2B6             0127*  ; restart player after dying
04C2B6             0128*  ; inputs: none,everything is hardcoded
04C2B6             0129*  ; outputs: player set to the first valid position on the map
04C2B6             0130*  ; destroys: a
04C2B6             0131*  plyr_restart:
04C2B6 3A F9 C1 04 0132*      ld a,(cur_room)
04C2BA A7          0133*      and a
04C2BB 28 3A       0134*      jr z,@no_load
04C2BD             0135*  ; not in room zero so save state of current room
04C2BD 21 D4 72 04 0136*      ld hl,room_flags
04C2C1 11 00 00 00 0137*  	ld de,0 ; make sure deu and d are zero
04C2C5 5F          0138*  	ld e,a
04C2C6 19          0139*  	add hl,de ; hl = address of room flags entry
04C2C7 3E 01       0140*  	ld a,room_flag_visited
04C2C9 B6          0141*  	or (hl)
04C2CA 77          0142*  	ld (hl),a
04C2CB             0143*  ; update from_room
04C2CB 3A F9 C1 04 0144*  	ld a,(cur_room)
04C2CF 32 FC C1 04 0145*  	ld (from_room),a
04C2D3             0146*  ; save old room state to room dat memory location
04C2D3 21 DE 72 04 0147*  	ld hl,room_dat_lut
04C2D7 57          0148*  	ld d,a
04C2D8 1E 03       0149*  	ld e,3 ; three bytes per lookup record
04C2DA ED 5C       0150*  	mlt de ; de = offset to room dat entry
04C2DC 19          0151*  	add hl,de ; hl = address of room dat entry
04C2DD ED 17       0152*  	ld de,(hl) ; destination address for room data
04C2DF 21 00 E0 B7 0153*  	ld hl,cell_status ; source address for room data
04C2E3 01 00 20 00 0154*  	ld bc,8*1024 ; size of room data
04C2E7 ED B0       0155*  	ldir
04C2E9             0156*  ; fetch room zero state from room dat memory location
04C2E9 2A DE 72 04 0157*  	ld hl,(room_00_dat) ; source address for room data
04C2ED 11 00 E0 B7 0158*  	ld de,cell_status ; destination address for room data
04C2F1 01 00 20 00 0159*  	ld bc,8*1024 ; size of room data
04C2F5 ED B0       0160*  	ldir
04C2F7             0161*  @no_load:
04C2F7 AF          0162*      xor a
04C2F8 32 F9 C1 04 0163*      ld (cur_room),a
04C2FC 32 FD C1 04 0164*      ld (orientation),a ; north is default orientation
04C300 21 1E 00 00 0165*      ld hl,plyr_move_rate
04C304 FD 21 3A C2 0166*      ld iy,plyr_move_timer
       04          
04C309             0167*  
04C309 3A F5 C1 04 0168*      ld a,(plyr_lives)
04C30D 3D          0169*      dec a
04C30E 32 F5 C1 04 0170*      ld (plyr_lives),a
04C312 3E 64       0171*      ld a,100
04C314 32 EF C1 04 0172*      ld (plyr_health),a
04C318 3E 08       0173*      ld a,8
04C31A CD 9E C4 04 0174*      call plyr_add_ammo
04C31E             0175*  
04C31E CD FE 71 04 0176*      call get_floor_start ; a = cell_id, d = map_y, e = map_x
04C322 32 FA C1 04 0177*      ld (cur_cell),a
04C326 ED 53 FE C1 0178*      ld (cur_x),de ; implicitly populates cur_y
       04          
04C32B             0179*  
04C32B C9          0180*      ret
04C32C             0181*  
04C32C             0182*  plyr_next_weapon:
04C32C             0183*  ; check if select weapons timer has expired
04C32C FD 21 1C C2 0184*      ld iy,plyr_wpn_select_tmr
       04          
04C331 CD EE D0 04 0185*      call timestamp_tmr_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04C335 F0          0186*      ret p ; time left on timer so no weapon select
04C336             0187*  ; reset weapon select timer
04C336 21 14 00 00 0188*      ld hl,120/6 ; 1/6 second
04C33A CD E3 D0 04 0189*      call timestamp_tmr_set
04C33E             0190*  ; select next weapon
04C33E 21 13 C2 04 0191*      ld hl,plyr_wpns ; hl points to plyr_wpns flags
04C342 ED 07       0192*      ld bc,(hl) ; bc contains bitmask of player's weapons inventory
04C344             0193*  @loop:
04C344 3A 14 C2 04 0194*      ld a,(plyr_wpn_active)
04C348 07          0195*      rlca ; rotate left
04C349 32 14 C2 04 0196*      ld (plyr_wpn_active),a
04C34D A6          0197*      and (hl) ; check inventory mask
04C34E 28 F4       0198*      jr z,@loop
04C350 C3 78 C3 04 0199*      jp plyr_set_weapon_parameters
04C354             0200*  
04C354             0201*  plyr_previous_weapon:
04C354             0202*  ; check if select weapons timer has expired
04C354 FD 21 1C C2 0203*      ld iy,plyr_wpn_select_tmr
       04          
04C359 CD EE D0 04 0204*      call timestamp_tmr_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04C35D F0          0205*      ret p ; time left on timer so no weapon select
04C35E             0206*  ; reset weapon select timer
04C35E 21 14 00 00 0207*      ld hl,120/6 ; 1/6 second
04C362 CD E3 D0 04 0208*      call timestamp_tmr_set
04C366             0209*  ; select next weapon
04C366 21 13 C2 04 0210*      ld hl,plyr_wpns ; hl points to plyr_wpns flags
04C36A ED 07       0211*      ld bc,(hl) ; bc contains bitmask of player's weapons inventory
04C36C             0212*  @loop:
04C36C 3A 14 C2 04 0213*      ld a,(plyr_wpn_active)
04C370 0F          0214*      rrca ; rotate right
04C371 32 14 C2 04 0215*      ld (plyr_wpn_active),a
04C375 A6          0216*      and (hl) ; check inventory mask
04C376 28 F4       0217*      jr z,@loop
04C378             0218*      ; fall through to plyr_set_weapon_parameters
04C378             0219*  
04C378             0220*  plyr_set_weapon_parameters:
04C378 FE 01       0221*      cp %00000001 ; knife
04C37A CA 91 C3 04 0222*      jp z,@knife
04C37E FE 02       0223*      cp %00000010 ; pistol
04C380 CA B9 C3 04 0224*      jp z,@pistol
04C384 FE 04       0225*      cp %00000100 ; machine gun
04C386 CA E1 C3 04 0226*      jp z,@machine_gun
04C38A FE 08       0227*      cp %00001000 ; gatling gun
04C38C CA 09 C4 04 0228*      jp z,@gatling_gun
04C390 C9          0229*      ret ; if none of the above do nothing
04C391             0230*  @knife:
04C391 21 05 21 00 0231*      ld hl,BUF_UI_BJ_KNIFE_00
04C395 22 19 C2 04 0232*      ld (plyr_wpn_ui_lg),hl
04C399 21 07 20 00 0233*      ld hl,BUF_UI_LOWER_PANEL_KNIFE
04C39D 22 16 C2 04 0234*      ld (plyr_wpn_ui_sm),hl
04C3A1 3E 14       0235*      ld a,20 ; dps = 60
04C3A3 32 15 C2 04 0236*      ld (plyr_wpn_damage),a
04C3A7 21 3C 00 00 0237*      ld hl,120/2 ; 3 times/second
04C3AB 22 28 C2 04 0238*      ld (plyr_wpn_fire_rate),hl
04C3AF FD 21 22 C2 0239*      ld iy,plyr_wpn_fire_tmr
       04          
04C3B4 CD E3 D0 04 0240*      call timestamp_tmr_set
04C3B8 C9          0241*      ret
04C3B9             0242*  @pistol:
04C3B9 21 0F 21 00 0243*      ld hl,BUF_UI_BJ_PISTOL_00
04C3BD 22 19 C2 04 0244*      ld (plyr_wpn_ui_lg),hl
04C3C1 21 09 20 00 0245*      ld hl,BUF_UI_LOWER_PANEL_PISTOL
04C3C5 22 16 C2 04 0246*      ld (plyr_wpn_ui_sm),hl
04C3C9             0247*  ; 1 shots/burst, 3 bursts/sec, 30 dmg/burst, 90 dmg/sec, 30 dmg/shot
04C3C9 3E 1E       0248*      ld a,30 ; damage/burst
04C3CB 32 15 C2 04 0249*      ld (plyr_wpn_damage),a
04C3CF 21 28 00 00 0250*      ld hl,120/3 ; 3 bursts/second
04C3D3 22 28 C2 04 0251*      ld (plyr_wpn_fire_rate),hl
04C3D7 FD 21 22 C2 0252*      ld iy,plyr_wpn_fire_tmr
       04          
04C3DC CD E3 D0 04 0253*      call timestamp_tmr_set
04C3E0 C9          0254*      ret
04C3E1             0255*  @machine_gun:
04C3E1 21 0A 21 00 0256*      ld hl,BUF_UI_BJ_MACHINE_GUN_00
04C3E5 22 19 C2 04 0257*      ld (plyr_wpn_ui_lg),hl
04C3E9 21 08 20 00 0258*      ld hl,BUF_UI_LOWER_PANEL_MACHINE_GUN
04C3ED 22 16 C2 04 0259*      ld (plyr_wpn_ui_sm),hl
04C3F1             0260*  ; 4 shots/burst, 3 bursts/sec, 80 dmg/burst, 240 dmg/sec, 20 dmg/shot
04C3F1 3E 50       0261*      ld a,80 ; damage/burst
04C3F3 32 15 C2 04 0262*      ld (plyr_wpn_damage),a
04C3F7 21 28 00 00 0263*      ld hl,120/3 ; 3 bursts/second
04C3FB 22 28 C2 04 0264*      ld (plyr_wpn_fire_rate),hl
04C3FF FD 21 22 C2 0265*      ld iy,plyr_wpn_fire_tmr
       04          
04C404 CD E3 D0 04 0266*      call timestamp_tmr_set
04C408 C9          0267*      ret
04C409             0268*  @gatling_gun:
04C409 21 00 21 00 0269*      ld hl,BUF_UI_BJ_GATLING_00
04C40D 22 19 C2 04 0270*      ld (plyr_wpn_ui_lg),hl
04C411 21 06 20 00 0271*      ld hl,BUF_UI_LOWER_PANEL_GATLING
04C415 22 16 C2 04 0272*      ld (plyr_wpn_ui_sm),hl
04C419             0273*  ; 8 shots/burst, 3 bursts/sec, 120 dmg/burst, 360 dmg/sec, 15 dmg/shot
04C419 3E 78       0274*      ld a,120 ; damage/burst
04C41B 32 15 C2 04 0275*      ld (plyr_wpn_damage),a
04C41F 21 28 00 00 0276*      ld hl,120/3 ; 3 bursts/second
04C423 22 28 C2 04 0277*      ld (plyr_wpn_fire_rate),hl
04C427 FD 21 22 C2 0278*      ld iy,plyr_wpn_fire_tmr
       04          
04C42C CD E3 D0 04 0279*      call timestamp_tmr_set
04C430 C9          0280*      ret
04C431             0281*  
04C431             0282*  ; adds to player's health by a set amount
04C431             0283*  ; inputs: a is the signed amount to modify health
04C431             0284*  ; outputs: a will contain amount of health remaining
04C431             0285*  ;          carry will be set if health maxes out to 255
04C431             0286*  plyr_add_health:
04C431 21 EF C1 04 0287*      ld hl,plyr_health
04C435 86          0288*      add a,(hl)
04C436 D2 3C C4 04 0289*      jp nc,@update ; if we roll over to zero when adding
04C43A 3E FF       0290*      ld a,255 ; ... set health remaining to max
04C43C             0291*  @update:
04C43C 77          0292*      ld (hl),a
04C43D C3 65 C4 04 0293*      jp plyr_health_image
04C441             0294*  
04C441             0295*  ; subtracts from player's health by a set amount
04C441             0296*  ; inputs: a is the signed amount to modify health
04C441             0297*  ; outputs: zero flag set, carry reset if player health rolls through/becomes zero
04C441             0298*  ;        a contains remaining health
04C441             0299*  plyr_sub_health:
04C441 A7          0300*      and a
04C442 C8          0301*      ret z
04C443             0302*  ; DEBUG
04C443 ED 44       0303*      neg
04C445 32 8C C4 04 0304*      ld (last_damage),a
04C449 ED 44       0305*      neg
04C44B             0306*  ; END DEBUG
04C44B 21 EF C1 04 0307*      ld hl,plyr_health
04C44F 86          0308*      add a,(hl)
04C450 CA 58 C4 04 0309*      jp z,@zero
04C454 DA 64 C4 04 0310*      jp c,@update
04C458             0311*  @zero:
04C458 21 03 20 00 0312*      ld hl,BUF_UI_BJ_100
04C45C 22 49 73 04 0313*      ld (bj_health_image),hl
04C460 C3 B6 C2 04 0314*      jp plyr_restart ; will go the right place from there
04C464             0315*  @update:
04C464 77          0316*      ld (hl),a
04C465             0317*  ; fall through to plyr_health_image
04C465             0318*  
04C465             0319*  plyr_health_image:
04C465 FE 19       0320*      cp 25
04C467 38 0E       0321*      jr c,@less_than_25
04C469 FE 32       0322*      cp 50
04C46B 38 10       0323*      jr c,@less_than_50
04C46D FE 4B       0324*      cp 75
04C46F 38 12       0325*      jr c,@less_than_75
04C471 21 03 20 00 0326*      ld hl,BUF_UI_BJ_100
04C475 18 10       0327*      jr @update
04C477             0328*  @less_than_25:
04C477 21 00 20 00 0329*      ld hl,BUF_UI_BJ_025
04C47B 18 0A       0330*      jr @update
04C47D             0331*  @less_than_50:
04C47D 21 01 20 00 0332*      ld hl,BUF_UI_BJ_050
04C481 18 04       0333*      jr @update
04C483             0334*  @less_than_75:
04C483 21 02 20 00 0335*      ld hl,BUF_UI_BJ_075
04C487             0336*  @update:
04C487 22 49 73 04 0337*      ld (bj_health_image),hl
04C48B C9          0338*      ret
04C48C             0339*  
04C48C 00 00 00    0340*  last_damage: dl 0x00 ; last damage dealt to player
04C48F             0341*  
04C48F             0342*  ; modifies the players score by a set amount
04C48F             0343*  ; inputs: a is the signed amount to modify score
04C48F             0344*  plyr_mod_score:
04C48F 11 00 00 00 0345*      ld de,0 ; make sure deu is zero
04C493 5F          0346*      ld e,a
04C494 2A EC C1 04 0347*      ld hl,(plyr_score)
04C498 19          0348*      add hl,de
04C499 22 EC C1 04 0349*      ld (plyr_score),hl
04C49D C9          0350*      ret
04C49E             0351*  
04C49E             0352*  ; adds to player's ammo by a set amount
04C49E             0353*  ; inputs: a is the signed amount to modify ammo
04C49E             0354*  ; outputs: a will contain amount of ammo remaining
04C49E             0355*  ;          carry will be set if ammo maxes out to 255
04C49E             0356*  plyr_add_ammo:
04C49E 21 2E C2 04 0357*      ld hl,plyr_ammo
04C4A2 86          0358*      add a,(hl)
04C4A3 D2 A9 C4 04 0359*      jp nc,@update ; if we roll over to zero when adding
04C4A7 3E FF       0360*      ld a,255 ; ... set ammo remaining to max
04C4A9             0361*  @update:
04C4A9 77          0362*      ld (hl),a
04C4AA C9          0363*      ret
04C4AB             0364*  
04C4AB             0365*  ; subtracts from player's ammo by a set amount
04C4AB             0366*  ; inputs: a is the signed amount to modify ammo
04C4AB             0367*  ; outputs: carry reset if player was out of ammo before firing
04C4AB             0368*  ;          a will also contain amount of ammo remaining after shot
04C4AB             0369*  plyr_sub_ammo:
04C4AB 21 2E C2 04 0370*      ld hl,plyr_ammo
04C4AF 86          0371*      add a,(hl)
04C4B0 DA C3 C4 04 0372*      jp c,@update
04C4B4 3E 01       0373*      ld a,%00000001 ; knife
04C4B6 32 14 C2 04 0374*      ld (plyr_wpn_active),a
04C4BA CD 78 C3 04 0375*      call plyr_set_weapon_parameters
04C4BE AF          0376*      xor a ; clear carry, set ammo to zero
04C4BF 21 2E C2 04 0377*      ld hl,plyr_ammo
04C4C3             0378*  @update:
04C4C3 77          0379*      ld (hl),a
04C4C4 C9          0380*      ret
04C4C5             0381*  
04C4C5             0382*  plyr_shoot_knife:
04C4C5 CD E1 CE 04 0383*      call sfx_play_knife
04C4C9             0384*      ; check whether the player hit anything
04C4C9 3A FD C1 04 0385*      ld a,(orientation) ; direction knife is moving
04C4CD 5F          0386*      ld e,a
04C4CE 16 01       0387*      ld d,1 ; shot "velocity" in map units
04C4D0 CD E7 70 04 0388*      call get_dx_dy ; d,e = dy,dx
04C4D4 ED 53 0B C2 0389*      ld (plyr_shot_xvel),de ; implicity populates yvel
       04          
04C4D9 2A FE C1 04 0390*      ld hl,(cur_x) ; h,l = player y,x
04C4DD 22 08 C2 04 0391*      ld (plyr_shot_x),hl ; initial shot position
04C4E1 ED 5B 0B C2 0392*      ld de,(plyr_shot_xvel) ; d,e = shot yvel,xvel
       04          
04C4E6 2A 08 C2 04 0393*      ld hl,(plyr_shot_x) ; h,l = player shot y,x
04C4EA             0394*      ; bump bullet position one map unit in direction of travel
04C4EA 7D          0395*      ld a,l ; player shot x
04C4EB 83          0396*      add a,e ; add xvel
04C4EC 6F          0397*      ld l,a ; save new x
04C4ED 7C          0398*      ld a,h ; player shot y
04C4EE 82          0399*      add a,d ; add yvel
04C4EF 67          0400*      ld h,a ; save new y
04C4F0 22 08 C2 04 0401*      ld (plyr_shot_x),hl ; and save that position
04C4F4 EB          0402*      ex de,hl ; d,e = bullet y,x
04C4F5 CD C2 70 04 0403*      call get_cell_from_coords ; ix = pointer to cell_status lut; a = obj_id, bc = cell_id
04C4F9             0404*  ; check whether target cell contains a sprite
04C4F9 DD 7E 03    0405*      ld a,(ix+map_sprite_id)
04C4FC FE FF       0406*      cp 255 ; value if not sprite
04C4FE C8          0407*      ret z ; if we hit a non-sprite, we're done
04C4FF             0408*  ; is a sprite so run its "hurt" behavior routine
04C4FF CD 67 AF 04 0409*      call sprite_set_pointer
04C503 3E 02       0410*      ld a,sp_hurt
04C505 CD A4 B0 04 0411*      call do_sprite_behavior ; a = sprite behavior return code
04C509 C9          0412*      ret
04C50A             0413*  
04C50A             0414*  plyr_shoot_pistol:
04C50A 3E FF       0415*      ld a,-1
04C50C CD AB C4 04 0416*      call plyr_sub_ammo
04C510 DA 19 C5 04 0417*      jp c,@shoot
04C514 CD C9 CE 04 0418*      call sfx_play_gun_empty
04C518 C9          0419*      ret
04C519             0420*  @shoot:
04C519 CD 35 CF 04 0421*      call sfx_play_shot_pistol
04C51D C3 4F C5 04 0422*      jp plyr_move_bullet
04C521             0423*  
04C521             0424*  plyr_shoot_machine_gun:
04C521 3E FC       0425*      ld a,-4
04C523 CD AB C4 04 0426*      call plyr_sub_ammo
04C527 DA 30 C5 04 0427*      jp c,@shoot
04C52B CD C9 CE 04 0428*      call sfx_play_gun_empty
04C52F C9          0429*      ret
04C530             0430*  @shoot:
04C530 CD 29 CF 04 0431*      call sfx_play_shot_machine_gun_burst
04C534 C3 4F C5 04 0432*      jp plyr_move_bullet
04C538             0433*  
04C538             0434*  plyr_shoot_gatling_gun:
04C538 3E F8       0435*      ld a,-8
04C53A CD AB C4 04 0436*      call plyr_sub_ammo
04C53E DA 47 C5 04 0437*      jp c,@shoot
04C542 CD C9 CE 04 0438*      call sfx_play_gun_empty
04C546 C9          0439*      ret
04C547             0440*  @shoot:
04C547 CD 1D CF 04 0441*      call sfx_play_shot_gatling_burst
04C54B C3 4F C5 04 0442*      jp plyr_move_bullet
04C54F             0443*  
04C54F             0444*  plyr_move_bullet:
04C54F             0445*      ; check whether the player hit anything
04C54F 3A FD C1 04 0446*      ld a,(orientation) ; direction shot is moving
04C553 32 0E C2 04 0447*      ld (plyr_shot_status),a ; save shot direction -- indicates live shot in flight
04C557 5F          0448*      ld e,a
04C558 16 01       0449*      ld d,1 ; shot "velocity" in map units
04C55A CD E7 70 04 0450*      call get_dx_dy ; d,e = dy,dx
04C55E ED 53 0B C2 0451*      ld (plyr_shot_xvel),de ; implicity populates yvel
       04          
04C563 2A FE C1 04 0452*      ld hl,(cur_x) ; h,l = player y,x
04C567 22 08 C2 04 0453*      ld (plyr_shot_x),hl ; initial shot position
04C56B 06 05       0454*      ld b,view_distance ; loop counter so player can't shoot past view distance
04C56D             0455*  @loop:
04C56D C5          0456*      push bc ; save loop counter
04C56E ED 5B 0B C2 0457*      ld de,(plyr_shot_xvel) ; d,e = shot yvel,xvel
       04          
04C573 2A 08 C2 04 0458*      ld hl,(plyr_shot_x) ; h,l = player shot y,x
04C577             0459*      ; bump bullet position one map unit in direction of travel
04C577 7D          0460*      ld a,l ; player shot x
04C578 83          0461*      add a,e ; add xvel
04C579 6F          0462*      ld l,a ; save new x
04C57A 7C          0463*      ld a,h ; player shot y
04C57B 82          0464*      add a,d ; add yvel
04C57C 67          0465*      ld h,a ; save new y
04C57D 22 08 C2 04 0466*      ld (plyr_shot_x),hl ; and save that position
04C581 EB          0467*      ex de,hl ; d,e = bullet y,x
04C582 CD C2 70 04 0468*      call get_cell_from_coords ; ix = pointer to cell_status lut; a = obj_id, bc = cell_id
04C586             0469*  ; check whether target cell contains a sprite
04C586 DD 7E 03    0470*      ld a,(ix+map_sprite_id)
04C589 FE FF       0471*      cp 255 ; value if not sprite
04C58B 28 14       0472*      jr z,@not_sprite
04C58D             0473*  ; is a sprite so run its "hurt" behavior routine
04C58D CD 67 AF 04 0474*      call sprite_set_pointer
04C591 3E 02       0475*      ld a,sp_hurt
04C593 CD A4 B0 04 0476*      call do_sprite_behavior ; a = sprite behavior return code
04C597 3A 0E C2 04 0477*      ld a,(plyr_shot_status)
04C59B FE FF       0478*      cp 255 ; value if shot hit a shootable sprite
04C59D 28 10       0479*      jr z,@stop_bullet ; if we hit a shootable sprite, we're done
04C59F 18 16       0480*      jr @move_bullet ; otherwise keep moving bullet
04C5A1             0481*  @not_sprite:
04C5A1 ED 5B 0B C2 0482*      ld de,(plyr_shot_xvel) ; restore yvel,xvel to d,e
       04          
04C5A6             0483*  ; read map type/status mask from target cell
04C5A6 DD 7E 00    0484*      ld a,(ix+map_type_status)
04C5A9 E6 03       0485*      and %00000011 ; mask off everything but the render type mask bits
04C5AB             0486*  ; branch on the values in the bitmask
04C5AB FE 01       0487*      cp render_type_floor
04C5AD 28 08       0488*      jr z,@move_bullet ; keep going if map cell is a floor
04C5AF             0489*  @stop_bullet:
04C5AF C1          0490*      pop bc ; dummy pop to balance stack
04C5B0 3E FF       0491*      ld a,255
04C5B2 32 0E C2 04 0492*      ld (plyr_shot_status),a ; set shot status to -1 to indicate shot is done
04C5B6 C9          0493*      ret ; combat ended
04C5B7             0494*  @move_bullet:
04C5B7 C1          0495*      pop bc ; restore loop counter
04C5B8 10 B3       0496*      djnz @loop ; keep moving bullet if we have more distance to cover
04C5BA 3E FF       0497*      ld a,255
04C5BC 32 0E C2 04 0498*      ld (plyr_shot_status),a ; set shot status to -1 to indicate shot is done
04C5C0 C9          0499*      ret ; combat ended
04C5C1             0500*  
04C5C1             0501*  plyr_shoot:
04C5C1             0502*  ; check if fire weapons timer has expired
04C5C1 FD 21 22 C2 0503*      ld iy,plyr_wpn_fire_tmr
       04          
04C5C6 CD EE D0 04 0504*      call timestamp_tmr_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04C5CA CA D3 C5 04 0505*      jp z,@time_up ; timer zero so fire weapon
04C5CE FA D3 C5 04 0506*      jp m,@time_up ; timer negative so fire weapon
04C5D2 C9          0507*      ret ; timer not expired so don't fire weapon
04C5D3             0508*  @time_up:
04C5D3             0509*  ; reset fire weapon timer
04C5D3 FD 21 22 C2 0510*      ld iy,plyr_wpn_fire_tmr ; DEBUG - we should not need this?
       04          
04C5D8 2A 28 C2 04 0511*      ld hl,(plyr_wpn_fire_rate)
04C5DC CD E3 D0 04 0512*      call timestamp_tmr_set
04C5E0             0513*  ; check animation frame for zero
04C5E0 21 2B C2 04 0514*      ld hl,plyr_wpn_anim_fr
04C5E4 7E          0515*      ld a,(hl)
04C5E5 A7          0516*      and a
04C5E6 20 01       0517*      jr nz,@shoot ; if not zero, we're already in the middle of an animation
04C5E8 34          0518*      inc (hl) ; is zero so bump to first animation frame
04C5E9             0519*  @shoot:
04C5E9             0520*  ; roll for damage modifier
04C5E9 CD 72 C7 04 0521*      call rand_8 ; a is a bitmask we apply to the weapon's dmg/burst
04C5ED 21 15 C2 04 0522*      ld hl,plyr_wpn_damage
04C5F1 A6          0523*      and a,(hl) ; a contains modified damage value
04C5F2 ED 44       0524*      neg ; so we can add the negative
04C5F4 32 12 C2 04 0525*      ld (plyr_shot_damage),a ; pass shot damage to sprite hurt routine
04C5F8             0526*  ; determine active weapon and shoot it
04C5F8 3A 14 C2 04 0527*      ld a,(plyr_wpn_active)
04C5FC FE 02       0528*      cp plyr_wpn_pistol
04C5FE CA 0A C5 04 0529*      jp z,plyr_shoot_pistol
04C602 FE 04       0530*      cp plyr_wpn_mg
04C604 CA 21 C5 04 0531*      jp z,plyr_shoot_machine_gun
04C608 FE 08       0532*      cp plyr_wpn_gg
04C60A CA 38 C5 04 0533*      jp z,plyr_shoot_gatling_gun
04C60E FE 01       0534*      cp plyr_wpn_knife
04C610 CA C5 C4 04 0535*      jp z,plyr_shoot_knife
04C614 C9          0536*      ret
04C615             0537*  
04C615             0538*  ; process player keyboard input
04C615             0539*  ; Inputs: plyr_x/y set at desired position
04C615             0540*  ; Returns: player position updated
04C615             0541*  ; Destroys: probably everything
04C615             0542*  plyr_input:
04C615             0543*  ; check weapon anmation frame for zero
04C615 3A 2B C2 04 0544*      ld a,(plyr_wpn_anim_fr)
04C619 E6 03       0545*      and 3 ; modulo 4
04C61B 32 2B C2 04 0546*      ld (plyr_wpn_anim_fr),a
04C61F 28 05       0547*      jr z,@get_input
04C621             0548*  ; ; animation frame is not zero so check animation timer
04C621             0549*  ;     ld iy,plyr_wpn_anim_tmr
04C621             0550*  ;     call timestamp_tmr_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04C621             0551*  ;     jp z,@animate ; timer zero so animate
04C621             0552*  ;     jp m,@animate ; timer negative so animate
04C621             0553*  ;     jp @get_input ; time left on timer so no animation
04C621             0554*  ; bump animation frame
04C621             0555*  @animate:
04C621 21 2B C2 04 0556*      ld hl,plyr_wpn_anim_fr
04C625 34          0557*      inc (hl) ; next frame
04C626             0558*  ; ; reset animation timer
04C626             0559*  ;     ld iy,plyr_wpn_anim_tmr ; DEBUG - we should not need this?
04C626             0560*  ;     ld hl,(plyr_wpn_anim_tmr_rst)
04C626             0561*  ;     call timestamp_tmr_set
04C626             0562*  
04C626             0563*  @get_input:
04C626             0564*  ; reset player component velocities to zero as the default
04C626 21 00 00 00 0565*      ld hl,0
04C62A 22 01 C2 04 0566*      ld (xvel),hl ; implicitly sets yvel
04C62E AF          0567*      xor a ;
04C62F 32 07 C2 04 0568*      ld (avel),a ; set player angular velocity to zero as default
04C633             0569*  
04C633             0570*  ; check for keypresses and branch accordingly
04C633             0571*      MOSCALL	mos_getkbmap ;ix = pointer to MOS virtual keys table
04C633 3E 1E       0001*M 			LD	A, function
04C635 5B CF       0002*M 			RST.LIL	08h
04C637             0572*  
04C637             0573*  ; CHECK WEAPON CONTROL KEYS
04C637             0574*  ; 58 Up player selects next weapon
04C637 DD CB 07 4E 0575*      bit 1,(ix+7)
04C63B 28 08       0576*      jr z,@Up
04C63D DD E5       0577*      push ix ; it gets clobbered by the weapon select routine
04C63F CD 2C C3 04 0578*      call plyr_next_weapon
04C643 DD E1       0579*      pop ix
04C645             0580*  @Up:
04C645             0581*  
04C645             0582*  ; 42 Down
04C645 DD CB 05 4E 0583*      bit 1,(ix+5)
04C649 28 08       0584*      jr z,@Down
04C64B DD E5       0585*      push ix ; it gets clobbered by the weapon select routine
04C64D CD 54 C3 04 0586*      call plyr_previous_weapon
04C651 DD E1       0587*      pop ix
04C653             0588*  @Down:
04C653             0589*  
04C653             0590*  ; =====================
04C653             0591*  ; 99 Space FIRE ZEE MISSILES!!!111
04C653 DD CB 0C 56 0592*      bit 2,(ix+12)
04C657 28 08       0593*      jr z,@Space
04C659 DD E5       0594*      push ix ; it gets clobbered by the weapon firing
04C65B CD C1 C5 04 0595*      call plyr_shoot
04C65F DD E1       0596*      pop ix ; restore ix
04C661             0597*  @Space:
04C661             0598*  
04C661             0599*  ; CHECK MOVEMENT KEYS
04C661             0600*  ; non-zero means no movement key was pressed
04C661 3E FF       0601*      ld a,-1
04C663             0602*  
04C663             0603*  ; 34 W player moves forward
04C663 DD CB 04 4E 0604*      bit 1,(ix+4)
04C667 28 07       0605*      jr z,@W
04C669 3E 01       0606*      ld a,speed_plyr ; this is *camera* relative, not map relative, so y-axis is NOT inverted!
04C66B 32 02 C2 04 0607*      ld (yvel),a
04C66F AF          0608*      xor a
04C670             0609*  @W:
04C670             0610*  
04C670             0611*  ; 82 S player moves backward
04C670 DD CB 0A 4E 0612*      bit 1,(ix+10)
04C674 28 0C       0613*      jr z,@S
04C676 16 FF       0614*      ld d,-speed_plyr ; this is *camera* relative, not map relative, so y-axis is NOT inverted!
04C678 3A 02 C2 04 0615*      ld a,(yvel)
04C67C 82          0616*      add a,d
04C67D 32 02 C2 04 0617*      ld (yvel),a
04C681 AF          0618*      xor a
04C682             0619*  @S:
04C682             0620*  
04C682             0621*  ; 66 A plyer moves left
04C682 DD CB 08 4E 0622*      bit 1,(ix+8)
04C686 28 07       0623*      jr z,@A
04C688 3E FF       0624*      ld a,-speed_plyr ; no funky axis conversion here
04C68A 32 01 C2 04 0625*      ld (xvel),a
04C68E AF          0626*      xor a
04C68F             0627*  @A:
04C68F             0628*  
04C68F             0629*  ; 51 D player moves right
04C68F DD CB 06 56 0630*      bit 2,(ix+6)
04C693 28 0C       0631*      jr z,@D
04C695 16 01       0632*      ld d,speed_plyr ; no funky axis conversion here
04C697 3A 01 C2 04 0633*      ld a,(xvel)
04C69B 82          0634*      add a,d
04C69C 32 01 C2 04 0635*      ld (xvel),a
04C6A0 AF          0636*      xor a
04C6A1             0637*  @D:
04C6A1             0638*  
04C6A1             0639*  ; 26 Left player rotates anti-clockwise
04C6A1 DD CB 03 4E 0640*      bit 1,(ix+3)
04C6A5 28 06       0641*      jr z,@Left
04C6A7 21 07 C2 04 0642*      ld hl,avel
04C6AB 35          0643*      dec (hl)
04C6AC AF          0644*      xor a
04C6AD             0645*  @Left:
04C6AD             0646*  
04C6AD             0647*  ; 122 Right player rotates clockwise
04C6AD DD CB 0F 4E 0648*      bit 1,(ix+15)
04C6B1 28 06       0649*      jr z,@Right
04C6B3 21 07 C2 04 0650*      ld hl,avel
04C6B7 34          0651*      inc (hl)
04C6B8 AF          0652*      xor a
04C6B9             0653*  @Right:
04C6B9             0654*  
04C6B9             0655*  ; KEYPRESS DETECTION DONE
04C6B9 A7          0656*      and a ; this will zero if player pressed a movement key
04C6BA C0          0657*      ret nz ; non zero so no key pressed
04C6BB             0658*  ; check move timer
04C6BB FD 21 3A C2 0659*      ld iy,plyr_move_timer
       04          
04C6C0 CD EE D0 04 0660*      call timestamp_tmr_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04C6C4 F0          0661*      ret p ; time left on timer so no movement
04C6C5             0662*  ; reset_move_timer
04C6C5 21 1E 00 00 0663*      ld hl,plyr_move_rate
04C6C9 FD 21 3A C2 0664*      ld iy,plyr_move_timer; DEBUG - we should not need this?
       04          
04C6CE CD E3 D0 04 0665*      call timestamp_tmr_set
04C6D2             0666*  ; move player according to velocities set by keypresses
04C6D2 ED 5B 01 C2 0667*      ld de,(xvel) ; d = yvel, e = xvel
       04          
04C6D7 3A 07 C2 04 0668*      ld a,(avel)
04C6DB 21 FD C1 04 0669*      ld hl,orientation
04C6DF 86          0670*      add a,(hl)
04C6E0 E6 03       0671*      and 0x03 ; modulo 4
04C6E2 77          0672*      ld (hl),a
04C6E3 CD 2F 71 04 0673*      call trans_dx_dy ; d = dy, e = dx
04C6E7 ED 53 05 C2 0674*      ld (dx),de
       04          
04C6EC 3A FE C1 04 0675*      ld a,(cur_x)
04C6F0 83          0676*      add a,e
04C6F1 5F          0677*      ld e,a
04C6F2 3A FF C1 04 0678*      ld a,(cur_y)
04C6F6 82          0679*      add a,d
04C6F7 57          0680*      ld d,a
04C6F8 ED 53 01 C2 0681*      ld (xvel),de ; save yvel,xvel from d,e
       04          
04C6FD CD C2 70 04 0682*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
04C701             0683*  ; check whether target cell contains a sprite
04C701 DD 7E 03    0684*      ld a,(ix+map_sprite_id)
04C704 FE FF       0685*      cp 255 ; value if not sprite
04C706 28 0A       0686*      jr z,@not_sprite
04C708             0687*  ; is a sprite so run its "use" behavior routine
04C708 CD 67 AF 04 0688*      call sprite_set_pointer
04C70C 3E 01       0689*      ld a,sp_use
04C70E CD A4 B0 04 0690*      call do_sprite_behavior
04C712             0691*  ; fall through because we still need to check out what's going on in the target cell
04C712             0692*  @not_sprite:
04C712 ED 5B 01 C2 0693*      ld de,(xvel) ; restore yvel,xvel to d,e
       04          
04C717             0694*  ; read map type/status mask from target cell
04C717 DD 7E 00    0695*      ld a,(ix+map_type_status)
04C71A 47          0696*      ld b,a ; b = target cell type/status
04C71B             0697*  ; branch on the values in the bitmask
04C71B 3E 40       0698*      ld a,cell_is_wall
04C71D A0          0699*      and b
04C71E C0          0700*      ret nz ; can't move thru walls
04C71F 3E 04       0701*      ld a,cell_is_to_room
04C721 A0          0702*      and b
04C722 C2 3A 72 04 0703*      jp nz,change_room
04C726             0704*      ; fall through to @move_it
04C726             0705*  @move_it:
04C726             0706*  ; we are cleared for movement so update player position
04C726 11 00 00 00 0707*      ld de,0 ; make sure deu is zero
04C72A ED 4B 05 C2 0708*      ld bc,(dx) ; b = dy, c = dx
       04          
04C72F 3A FE C1 04 0709*      ld a,(cur_x)
04C733 81          0710*      add a,c
04C734 5F          0711*      ld e,a
04C735 32 FE C1 04 0712*      ld (cur_x),a
04C739 3A FF C1 04 0713*      ld a,(cur_y)
04C73D 80          0714*      add a,b
04C73E 57          0715*      ld d,a
04C73F 32 FF C1 04 0716*      ld (cur_y),a
04C743 C9          0717*      ret
04C744             0027   	include "src/asm/maths.asm"
04C744 00 00 00 00 0001*  add_bcd_arg1: db #00,#00,#00,#00
04C748 00 00 00 00 0002*  add_bcd_arg2: db #00,#00,#00,#00
04C74C             0003*  
04C74C             0004*  ; set bcd values in a scratch memory address from registers bcde
04C74C             0005*  ; input: hl; scratch address,bcde; 8-place bcd number
04C74C             0006*  ; destroys ; hl
04C74C             0007*  set_bcd:
04C74C 73          0008*      ld (hl),e
04C74D 23          0009*      inc hl
04C74E 72          0010*      ld (hl),d
04C74F 23          0011*      inc hl
04C750 71          0012*      ld (hl),c
04C751 23          0013*      inc hl
04C752 70          0014*      ld (hl),b
04C753 C9          0015*      ret
04C754             0016*  
04C754             0017*  ; load bcd values from a scratch memory address to bcde
04C754             0018*  ; input: hl; scratch address
04C754             0019*  ; output: bcde; 8-place bcd number
04C754             0020*  ; destroys: hl
04C754             0021*  get_bcd:
04C754 5E          0022*      ld e,(hl)
04C755 23          0023*      inc hl
04C756 56          0024*      ld d,(hl)
04C757 23          0025*      inc hl
04C758 4E          0026*      ld c,(hl)
04C759 23          0027*      inc hl
04C75A 46          0028*      ld b,(hl)
04C75B C9          0029*      ret
04C75C             0030*  
04C75C             0031*  ; BCD addition
04C75C             0032*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
04C75C             0033*  ;       a is the number of bytes holding each number (number of places/2)
04C75C             0034*  ; outputs: (hl) + (de) --> (hl)
04C75C             0035*  ; destroys: a,b,de,hl
04C75C             0036*  add_bcd:
04C75C 47          0037*      ld b,a ; loop counter
04C75D AF          0038*      xor a ; reset a, clear carry flag
04C75E             0039*  adcec:
04C75E 1A          0040*      ld a,(de) ; addend to acc
04C75F 8E          0041*      adc a,(hl) ; add (hl) to acc
04C760 27          0042*      daa ; adjust result to bcd
04C761 77          0043*      ld (hl),a ; store result
04C762 23          0044*      inc hl ; advance memory pointers
04C763 13          0045*      inc de
04C764 10 F8       0046*      djnz adcec ; loop until b == 0
04C766 C9          0047*      ret
04C767             0048*  
04C767             0049*  ; BCD subtraction
04C767             0050*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
04C767             0051*  ;       a is the number of bytes holding each number (number of places/2)
04C767             0052*  ; outputs: (hl) - (de) --> (hl)
04C767             0053*  ; destroys: a,b,de,hl
04C767             0054*  sub_bcd:
04C767 47          0055*      ld b,a ; loop counter
04C768 AF          0056*      xor a ; reset a,clear carry flag
04C769             0057*  subdec:
04C769 1A          0058*      ld a,(de) ; subtrahend to acc
04C76A 9E          0059*      sbc a,(hl) ; subtract (hl) from acc
04C76B 27          0060*      daa ; adjust result to bcd
04C76C 77          0061*      ld (hl),a ; store result
04C76D 23          0062*      inc hl ; advance memory pointers
04C76E 13          0063*      inc de
04C76F 10 F8       0064*      djnz subdec ; loop until b == 0
04C771 C9          0065*      ret
04C772             0066*  
04C772             0067*  ; http://www.z80.info/pseudo-random.txt
04C772             0068*  rand_8:
04C772 C5          0069*      push bc
04C773 3A 86 C7 04 0070*      ld a,(r_seed)
04C777 4F          0071*      ld c,a
04C778             0072*  
04C778 0F          0073*      rrca ; multiply by 32
04C779 0F          0074*      rrca
04C77A 0F          0075*      rrca
04C77B EE 1F       0076*      xor 0x1f
04C77D             0077*  
04C77D 81          0078*      add a,c
04C77E DE FF       0079*      sbc a,255 ; carry
04C780             0080*  
04C780 32 86 C7 04 0081*      ld (r_seed),a
04C784 C1          0082*      pop bc
04C785 C9          0083*      ret
04C786 50          0084*  r_seed: defb $50
04C787             0028   	include "src/asm/img_load.asm"
04C787 00 00 00    0001*  cur_file_idx: dl 0
04C78A 00 00 00    0002*  cur_filename: dl 0
04C78D 00 00 00    0003*  cur_buffer_id: dl 0
04C790 00 00 00    0004*  cur_buffer_id_lut: dl 0
04C793 00 00 00    0005*  cur_load_jump_table: dl 0
04C796             0006*  
04C796             0007*  img_load_init:
04C796             0008*  ; initialize bj's position parameters
04C796 21 00 00 00 0009*  	ld hl,0
04C79A 22 E4 C8 04 0010*  	ld (bj_yvel),hl
04C79E             0011*  
04C79E 21 2D 00 00 0012*      ld hl,45
04C7A2 22 E7 C8 04 0013*  	ld (bj_y_cur),hl
04C7A6 22 EA C8 04 0014*  	ld (bj_y_min),hl
04C7AA 22 ED C8 04 0015*      ld (bj_y_max),hl
04C7AE             0016*  
04C7AE 21 01 00 00 0017*  	ld hl,1
04C7B2 22 D8 C8 04 0018*  	ld (bj_xvel),hl
04C7B6             0019*  
04C7B6 21 0A 00 00 0020*  	ld hl,10
04C7BA 22 DB C8 04 0021*  	ld (bj_x_cur),hl
04C7BE 22 DE C8 04 0022*  	ld (bj_x_min),hl
04C7C2             0023*  
04C7C2 21 C8 00 00 0024*  	ld hl,320-120
04C7C6 22 E1 C8 04 0025*  	ld (bj_x_max),hl
04C7CA             0026*  
04C7CA C9          0027*      ret
04C7CB             0028*  
04C7CB             0029*  ; inputs: bc is the number of images to load, cur_buffer_id_lut and cur_load_jump_table set to the address of the first entry in the respective lookup tables
04C7CB             0030*  img_load_main:
04C7CB 21 00 00 00 0031*      ld hl,0
04C7CF 22 87 C7 04 0032*      ld (cur_file_idx),hl
04C7D3             0033*  img_load_main_loop:
04C7D3             0034*  ; back up loop counter
04C7D3 C5          0035*      push bc
04C7D4             0036*  ; load the next panel
04C7D4 CD 3C C8 04 0037*      call load_next_panel
04C7D8             0038*  ; draw all the things
04C7D8 CD F0 C8 04 0039*      call tmp_draw_all_the_things
04C7DC             0040*  ; draw the most recently loaded panel
04C7DC 2A 8D C7 04 0041*  	ld hl,(cur_buffer_id)
04C7E0 CD 48 B9 04 0042*  	call vdu_buff_select
04C7E4 01 00 00 00 0043*  	ld bc,0
04C7E8 11 00 00 00 0044*  	ld de,0
04C7EC CD 19 BB 04 0045*  	call vdu_plot_bmp
04C7F0             0046*  ; move bj
04C7F0 CD 78 C8 04 0047*  	call move_bj
04C7F4             0048*  ; print welcome message
04C7F4 DD 21 72 8B 0049*  	ld ix,font_itc_honda
       04          
04C7F9 21 5A D1 04 0050*  	ld hl,hello_world
04C7FD 01 20 00 00 0051*  	ld bc,32
04C801 11 02 00 00 0052*  	ld de,2
04C805 CD 9F 70 04 0053*  	call font_bmp_print
04C809             0054*  ; print current filename
04C809 CD DF B7 04 0055*  	call vdu_cls
04C80D 2A 8A C7 04 0056*  	ld hl,(cur_filename)
04C811 CD EF BD 04 0057*  	call printString
04C815 CD 04 BE 04 0058*  	call printNewLine
04C819             0059*  
04C819             0060*  ; print current load stopwatch
04C819 21 7C D1 04 0061*  	ld hl,loading_time
04C81D CD EF BD 04 0062*  	call printString
04C821 CD 0C D1 04 0063*  	call stopwatch_get ; hl = elapsed time in 120ths of a second
04C825 CD 3D BE 04 0064*  	call printDec
04C829             0065*  
04C829             0066*  ; flip screen
04C829 CD AE B9 04 0067*      call vdu_flip
04C82D             0068*  ; decrement loop counter
04C82D C1          0069*      pop bc
04C82E 0B          0070*  	dec bc
04C82F             0071*  ; ; DEBUG: DUMP REGISTERS
04C82F             0072*  ; 	push bc
04C82F             0073*  ; 	call dumpRegistersHex
04C82F             0074*  ; 	call vdu_flip
04C82F             0075*  ; 	pop bc
04C82F             0076*  ; ; END DEBUG
04C82F 79          0077*      ld a,c
04C830 B7          0078*      or a
04C831 C2 D3 C7 04 0079*      jp nz,img_load_main_loop
04C835 78          0080*      ld a,b
04C836 B7          0081*      or a
04C837 C2 D3 C7 04 0082*      jp nz,img_load_main_loop
04C83B C9          0083*      ret
04C83C             0084*  
04C83C             0085*  load_next_panel:
04C83C             0086*  ; look up the load routine for the current file index
04C83C 2A 87 C7 04 0087*  	ld hl,(cur_file_idx)
04C840 29          0088*  	add hl,hl ; multiply current index by 2 ...
04C841 ED 5B 87 C7 0089*  	ld de,(cur_file_idx)
       04          
04C846 19          0090*  	add hl,de ; ... now by 3
04C847 ED 5B 93 C7 0091*  	ld de,(cur_load_jump_table) ; tack it on to the base address of the jump table
       04          
04C84C 19          0092*  	add hl,de
04C84D ED 27       0093*  	ld hl,(hl) ; hl is pointing to load routine address
04C84F 22 54 C8 04 0094*  	ld (@jump_addr+1),hl ; self-modifying code ...
04C853             0095*  @jump_addr:
04C853 CD 00 00 00 0096*  	call 0 ; call the panel load routine
04C857             0097*  ; look up the buffer id for the current file
04C857 2A 87 C7 04 0098*  	ld hl,(cur_file_idx)
04C85B 29          0099*  	add hl,hl ; multiply current index by 2 ...
04C85C ED 5B 87 C7 0100*  	ld de,(cur_file_idx)
       04          
04C861 19          0101*  	add hl,de ; ... now by 3
04C862 ED 5B 90 C7 0102*  	ld de,(cur_buffer_id_lut) ; tack it on to the base address of the lookup table
       04          
04C867 19          0103*  	add hl,de
04C868 ED 27       0104*  	ld hl,(hl)
04C86A 22 8D C7 04 0105*  	ld (cur_buffer_id),hl
04C86E             0106*  ; bump the current file index
04C86E 2A 87 C7 04 0107*  	ld hl,(cur_file_idx)
04C872 23          0108*  	inc hl
04C873 22 87 C7 04 0109*  	ld (cur_file_idx),hl
04C877 C9          0110*  	ret
04C878             0111*  
04C878             0112*  move_bj:
04C878             0113*  ; activate bj bitmap
04C878 21 04 20 00 0114*  	ld hl, BUF_UI_BJ_120_120
04C87C CD 48 B9 04 0115*  	call vdu_buff_select
04C880             0116*  ; update position based on velocity parameters
04C880 2A DB C8 04 0117*  	ld hl, (bj_x_cur)
04C884 ED 5B D8 C8 0118*  	ld de, (bj_xvel)
       04          
04C889 19          0119*  	add hl, de
04C88A 22 DB C8 04 0120*  	ld (bj_x_cur), hl
04C88E EB          0121*  	ex de,hl ; store x_cur in de
04C88F             0122*  ; check if we're < x_min
04C88F 2A DE C8 04 0123*  	ld hl,(bj_x_min)
04C893 AF          0124*  	xor a ; clear carry
04C894 ED 52       0125*  	sbc hl,de ; x_min - x_cur
04C896 F2 B4 C8 04 0126*  	jp p, move_bj_x_min
04C89A             0127*  ; check if we're > x_max
04C89A 2A E1 C8 04 0128*  	ld hl,(bj_x_max)
04C89E AF          0129*  	xor a ; clear carry
04C89F ED 52       0130*  	sbc hl,de ; x_max - x_cur
04C8A1 FA C6 C8 04 0131*  	jp m, move_bj_x_max
04C8A5             0132*  ; if not at either boundary, fall through to draw bj's
04C8A5             0133*  draw_bj:
04C8A5 ED 4B DB C8 0134*  	ld bc,(bj_x_cur)
       04          
04C8AA ED 5B E7 C8 0135*  	ld de,(bj_y_cur)
       04          
04C8AF CD 19 BB 04 0136*  	call vdu_plot_bmp
04C8B3 C9          0137*  	ret
04C8B4             0138*  move_bj_x_min:
04C8B4 21 01 00 00 0139*  	ld hl,1
04C8B8 22 D8 C8 04 0140*  	ld (bj_xvel),hl
04C8BC 2A DE C8 04 0141*  	ld hl,(bj_x_min)
04C8C0 22 DB C8 04 0142*  	ld (bj_x_cur),hl
04C8C4 18 DF       0143*  	jr draw_bj
04C8C6             0144*  move_bj_x_max:
04C8C6 21 FF FF FF 0145*  	ld hl,-1
04C8CA 22 D8 C8 04 0146*  	ld (bj_xvel),hl
04C8CE 2A E1 C8 04 0147*  	ld hl,(bj_x_max)
04C8D2 22 DB C8 04 0148*  	ld (bj_x_cur),hl
04C8D6 18 CD       0149*  	jr draw_bj
04C8D8 00 00 00    0150*  bj_xvel: dl 0
04C8DB 00 00 00    0151*  bj_x_cur: dl 0
04C8DE 00 00 00    0152*  bj_x_min: dl 0
04C8E1 00 00 00    0153*  bj_x_max: dl 0
04C8E4             0154*  
04C8E4 00 00 00    0155*  bj_yvel: dl 0
04C8E7 00 00 00    0156*  bj_y_cur: dl 0
04C8EA 00 00 00    0157*  bj_y_min: dl 0
04C8ED 00 00 00    0158*  bj_y_max: dl 0
04C8F0             0159*  
04C8F0             0160*  tmp_draw_all_the_things:
04C8F0 21 0A 20 00 0161*      ld hl,BUF_UI_SPLASH
04C8F4 CD 48 B9 04 0162*      call vdu_buff_select
04C8F8 01 00 00 00 0163*      ld bc,0
04C8FC 11 00 00 00 0164*      ld de,0
04C900 CD 19 BB 04 0165*      call vdu_plot_bmp
04C904 C9          0166*  	ret
04C905             0167*  
04C905             0168*  ; load an uncompressed rgba2222 image file to a buffer
04C905             0169*  ; inputs: bc,de image width,height ; hl = bufferId ; ix = file size
04C905             0170*  vdu_load_img:
04C905             0171*  ; back up image dimension parameters
04C905 C5          0172*  	push bc
04C906 D5          0173*  	push de
04C907             0174*  ; load the image
04C907 CD 79 D3 04 0175*  	call vdu_load_buffer_from_file
04C90B             0176*  ; now make it a bitmap
04C90B D1          0177*  	pop de
04C90C C1          0178*  	pop bc
04C90D 3E 01       0179*  	ld a,1 ; the magic number for rgba2222
04C90F C3 5D B9 04 0180*  	jp vdu_bmp_create ; will return to caller from there
04C913             0181*  
04C913             0182*  ; load a compressed rgba2222 image file to a buffer
04C913             0183*  ; inputs: bc,de image width,height ; hl = bufferId ; ix = file size
04C913             0184*  vdu_load_img_cmp:
04C913             0185*  ; back up image dimension parameters
04C913 C5          0186*  	push bc
04C914 D5          0187*  	push de
04C915             0188*  ; back up the buffer id
04C915 E5          0189*  	push hl
04C916             0190*  ; load the image
04C916 CD 79 D3 04 0191*  	call vdu_load_buffer_from_file
04C91A             0192*  ; decompress the buffer
04C91A E1          0193*  	pop hl ; bufferId
04C91B CD BC B9 04 0194*  	call vdu_decompress_buffer
04C91F             0195*  ; now make it a bitmap
04C91F D1          0196*  	pop de ; image height
04C920 C1          0197*  	pop bc ; image width
04C921 3E 01       0198*  	ld a,1 ; the magic number for rgba2222
04C923 C3 5D B9 04 0199*  	jp vdu_bmp_create ; will return to caller from there
04C927             0029   	include "src/asm/sfx.asm"
04C927             0001*  ; This file is created by build_98_asm_sfx.py, do not edit it!
04C927             0002*  
04C927             0003*  SFX_num_buffers: equ 22
04C927             0004*  ; SFX buffer ids:
04C927             0005*  BUF_ACHTUNG: equ 0xFB00
04C927             0006*  BUF_AHH: equ 0xFB01
04C927             0007*  BUF_AUGH: equ 0xFB02
04C927             0008*  BUF_AYEE: equ 0xFB03
04C927             0009*  BUF_AYEE_HIGH: equ 0xFB04
04C927             0010*  BUF_DOG_WOOF_DOUBLE: equ 0xFB05
04C927             0011*  BUF_DOG_WOOF_SINGLE: equ 0xFB06
04C927             0012*  BUF_DOG_YELP: equ 0xFB07
04C927             0013*  BUF_EXPLODE: equ 0xFB08
04C927             0014*  BUF_GOT_TREASURE: equ 0xFB09
04C927             0015*  BUF_GUN_EMPTY: equ 0xFB0A
04C927             0016*  BUF_GUN_RELOAD: equ 0xFB0B
04C927             0017*  BUF_KNIFE: equ 0xFB0C
04C927             0018*  BUF_MEIN_LEBEN: equ 0xFB0D
04C927             0019*  BUF_OOF: equ 0xFB0E
04C927             0020*  BUF_SCHUSSTAFFEL: equ 0xFB0F
04C927             0021*  BUF_SCREAM: equ 0xFB10
04C927             0022*  BUF_SHOT_GATLING_BURST: equ 0xFB11
04C927             0023*  BUF_SHOT_MACHINE_GUN_BURST: equ 0xFB12
04C927             0024*  BUF_SHOT_PISTOL: equ 0xFB13
04C927             0025*  BUF_UGH: equ 0xFB14
04C927             0026*  BUF_WILHELM: equ 0xFB15
04C927             0027*  
04C927             0028*  ; SFX buffer id reverse lookup:
04C927             0029*  SFX_buffer_id_lut:
04C927 00 FB 00    0030*  	dl BUF_ACHTUNG
04C92A 01 FB 00    0031*  	dl BUF_AHH
04C92D 02 FB 00    0032*  	dl BUF_AUGH
04C930 03 FB 00    0033*  	dl BUF_AYEE
04C933 04 FB 00    0034*  	dl BUF_AYEE_HIGH
04C936 05 FB 00    0035*  	dl BUF_DOG_WOOF_DOUBLE
04C939 06 FB 00    0036*  	dl BUF_DOG_WOOF_SINGLE
04C93C 07 FB 00    0037*  	dl BUF_DOG_YELP
04C93F 08 FB 00    0038*  	dl BUF_EXPLODE
04C942 09 FB 00    0039*  	dl BUF_GOT_TREASURE
04C945 0A FB 00    0040*  	dl BUF_GUN_EMPTY
04C948 0B FB 00    0041*  	dl BUF_GUN_RELOAD
04C94B 0C FB 00    0042*  	dl BUF_KNIFE
04C94E 0D FB 00    0043*  	dl BUF_MEIN_LEBEN
04C951 0E FB 00    0044*  	dl BUF_OOF
04C954 0F FB 00    0045*  	dl BUF_SCHUSSTAFFEL
04C957 10 FB 00    0046*  	dl BUF_SCREAM
04C95A 11 FB 00    0047*  	dl BUF_SHOT_GATLING_BURST
04C95D 12 FB 00    0048*  	dl BUF_SHOT_MACHINE_GUN_BURST
04C960 13 FB 00    0049*  	dl BUF_SHOT_PISTOL
04C963 14 FB 00    0050*  	dl BUF_UGH
04C966 15 FB 00    0051*  	dl BUF_WILHELM
04C969             0052*  
04C969             0053*  ; SFX duration lookup:
04C969             0054*  SFX_duration_lut:
04C969 58 03       0055*  	dw 856 ; ACHTUNG
04C96B 91 01       0056*  	dw 401 ; AHH
04C96D FC 02       0057*  	dw 764 ; AUGH
04C96F E6 01       0058*  	dw 486 ; AYEE
04C971 40 04       0059*  	dw 1088 ; AYEE_HIGH
04C973 63 02       0060*  	dw 611 ; DOG_WOOF_DOUBLE
04C975 15 02       0061*  	dw 533 ; DOG_WOOF_SINGLE
04C977 B0 01       0062*  	dw 432 ; DOG_YELP
04C979 13 05       0063*  	dw 1299 ; EXPLODE
04C97B A7 05       0064*  	dw 1447 ; GOT_TREASURE
04C97D 24 01       0065*  	dw 292 ; GUN_EMPTY
04C97F BA 01       0066*  	dw 442 ; GUN_RELOAD
04C981 F2 00       0067*  	dw 242 ; KNIFE
04C983 2E 03       0068*  	dw 814 ; MEIN_LEBEN
04C985 CE 03       0069*  	dw 974 ; OOF
04C987 48 02       0070*  	dw 584 ; SCHUSSTAFFEL
04C989 E0 02       0071*  	dw 736 ; SCREAM
04C98B B6 05       0072*  	dw 1462 ; SHOT_GATLING_BURST
04C98D F9 03       0073*  	dw 1017 ; SHOT_MACHINE_GUN_BURST
04C98F 7C 04       0074*  	dw 1148 ; SHOT_PISTOL
04C991 77 01       0075*  	dw 375 ; UGH
04C993 FD 04       0076*  	dw 1277 ; WILHELM
04C995             0077*  
04C995             0078*  ; SFX load routines jump table:
04C995             0079*  SFX_load_routines_table:
04C995 D7 C9 04    0080*  	dl load_sfx_ACHTUNG
04C998 F9 C9 04    0081*  	dl load_sfx_AHH
04C99B 1B CA 04    0082*  	dl load_sfx_AUGH
04C99E 3D CA 04    0083*  	dl load_sfx_AYEE
04C9A1 5F CA 04    0084*  	dl load_sfx_AYEE_HIGH
04C9A4 81 CA 04    0085*  	dl load_sfx_DOG_WOOF_DOUBLE
04C9A7 A3 CA 04    0086*  	dl load_sfx_DOG_WOOF_SINGLE
04C9AA C5 CA 04    0087*  	dl load_sfx_DOG_YELP
04C9AD E7 CA 04    0088*  	dl load_sfx_EXPLODE
04C9B0 09 CB 04    0089*  	dl load_sfx_GOT_TREASURE
04C9B3 2B CB 04    0090*  	dl load_sfx_GUN_EMPTY
04C9B6 4D CB 04    0091*  	dl load_sfx_GUN_RELOAD
04C9B9 6F CB 04    0092*  	dl load_sfx_KNIFE
04C9BC 91 CB 04    0093*  	dl load_sfx_MEIN_LEBEN
04C9BF B3 CB 04    0094*  	dl load_sfx_OOF
04C9C2 D5 CB 04    0095*  	dl load_sfx_SCHUSSTAFFEL
04C9C5 F7 CB 04    0096*  	dl load_sfx_SCREAM
04C9C8 19 CC 04    0097*  	dl load_sfx_SHOT_GATLING_BURST
04C9CB 3B CC 04    0098*  	dl load_sfx_SHOT_MACHINE_GUN_BURST
04C9CE 5D CC 04    0099*  	dl load_sfx_SHOT_PISTOL
04C9D1 7F CC 04    0100*  	dl load_sfx_UGH
04C9D4 A1 CC 04    0101*  	dl load_sfx_WILHELM
04C9D7             0102*  
04C9D7             0103*  ; Import sfx .raw files and load them into VDP buffers
04C9D7             0104*  
04C9D7             0105*  load_sfx_ACHTUNG:
04C9D7 21 C3 CC 04 0106*  	ld hl,FACHTUNG
04C9DB 22 8A C7 04 0107*  	ld (cur_filename),hl
04C9DF 11 C6 D3 04 0108*  	ld de,filedata
04C9E3 01 00 00 01 0109*  	ld bc,65536
04C9E7 3E 01       0110*  	ld a,mos_load
04C9E9 5B CF       0111*  	RST.LIL 08h
04C9EB 21 00 FB 00 0112*  	ld hl,BUF_ACHTUNG
04C9EF DD 21 3A 38 0113*  	ld ix,14394
       00          
04C9F4 CD D2 BD 04 0114*  	call vdu_load_sfx
04C9F8 C9          0115*  	ret
04C9F9             0116*  
04C9F9             0117*  load_sfx_AHH:
04C9F9 21 D3 CC 04 0118*  	ld hl,FAHH
04C9FD 22 8A C7 04 0119*  	ld (cur_filename),hl
04CA01 11 C6 D3 04 0120*  	ld de,filedata
04CA05 01 00 00 01 0121*  	ld bc,65536
04CA09 3E 01       0122*  	ld a,mos_load
04CA0B 5B CF       0123*  	RST.LIL 08h
04CA0D 21 01 FB 00 0124*  	ld hl,BUF_AHH
04CA11 DD 21 63 1A 0125*  	ld ix,6755
       00          
04CA16 CD D2 BD 04 0126*  	call vdu_load_sfx
04CA1A C9          0127*  	ret
04CA1B             0128*  
04CA1B             0129*  load_sfx_AUGH:
04CA1B 21 DF CC 04 0130*  	ld hl,FAUGH
04CA1F 22 8A C7 04 0131*  	ld (cur_filename),hl
04CA23 11 C6 D3 04 0132*  	ld de,filedata
04CA27 01 00 00 01 0133*  	ld bc,65536
04CA2B 3E 01       0134*  	ld a,mos_load
04CA2D 5B CF       0135*  	RST.LIL 08h
04CA2F 21 02 FB 00 0136*  	ld hl,BUF_AUGH
04CA33 DD 21 39 32 0137*  	ld ix,12857
       00          
04CA38 CD D2 BD 04 0138*  	call vdu_load_sfx
04CA3C C9          0139*  	ret
04CA3D             0140*  
04CA3D             0141*  load_sfx_AYEE:
04CA3D 21 EC CC 04 0142*  	ld hl,FAYEE
04CA41 22 8A C7 04 0143*  	ld (cur_filename),hl
04CA45 11 C6 D3 04 0144*  	ld de,filedata
04CA49 01 00 00 01 0145*  	ld bc,65536
04CA4D 3E 01       0146*  	ld a,mos_load
04CA4F 5B CF       0147*  	RST.LIL 08h
04CA51 21 03 FB 00 0148*  	ld hl,BUF_AYEE
04CA55 DD 21 00 20 0149*  	ld ix,8192
       00          
04CA5A CD D2 BD 04 0150*  	call vdu_load_sfx
04CA5E C9          0151*  	ret
04CA5F             0152*  
04CA5F             0153*  load_sfx_AYEE_HIGH:
04CA5F 21 F9 CC 04 0154*  	ld hl,FAYEE_HIGH
04CA63 22 8A C7 04 0155*  	ld (cur_filename),hl
04CA67 11 C6 D3 04 0156*  	ld de,filedata
04CA6B 01 00 00 01 0157*  	ld bc,65536
04CA6F 3E 01       0158*  	ld a,mos_load
04CA71 5B CF       0159*  	RST.LIL 08h
04CA73 21 04 FB 00 0160*  	ld hl,BUF_AYEE_HIGH
04CA77 DD 21 77 47 0161*  	ld ix,18295
       00          
04CA7C CD D2 BD 04 0162*  	call vdu_load_sfx
04CA80 C9          0163*  	ret
04CA81             0164*  
04CA81             0165*  load_sfx_DOG_WOOF_DOUBLE:
04CA81 21 0B CD 04 0166*  	ld hl,FDOG_WOOF_DOUBLE
04CA85 22 8A C7 04 0167*  	ld (cur_filename),hl
04CA89 11 C6 D3 04 0168*  	ld de,filedata
04CA8D 01 00 00 01 0169*  	ld bc,65536
04CA91 3E 01       0170*  	ld a,mos_load
04CA93 5B CF       0171*  	RST.LIL 08h
04CA95 21 05 FB 00 0172*  	ld hl,BUF_DOG_WOOF_DOUBLE
04CA99 DD 21 24 28 0173*  	ld ix,10276
       00          
04CA9E CD D2 BD 04 0174*  	call vdu_load_sfx
04CAA2 C9          0175*  	ret
04CAA3             0176*  
04CAA3             0177*  load_sfx_DOG_WOOF_SINGLE:
04CAA3 21 23 CD 04 0178*  	ld hl,FDOG_WOOF_SINGLE
04CAA7 22 8A C7 04 0179*  	ld (cur_filename),hl
04CAAB 11 C6 D3 04 0180*  	ld de,filedata
04CAAF 01 00 00 01 0181*  	ld bc,65536
04CAB3 3E 01       0182*  	ld a,mos_load
04CAB5 5B CF       0183*  	RST.LIL 08h
04CAB7 21 06 FB 00 0184*  	ld hl,BUF_DOG_WOOF_SINGLE
04CABB DD 21 10 23 0185*  	ld ix,8976
       00          
04CAC0 CD D2 BD 04 0186*  	call vdu_load_sfx
04CAC4 C9          0187*  	ret
04CAC5             0188*  
04CAC5             0189*  load_sfx_DOG_YELP:
04CAC5 21 3B CD 04 0190*  	ld hl,FDOG_YELP
04CAC9 22 8A C7 04 0191*  	ld (cur_filename),hl
04CACD 11 C6 D3 04 0192*  	ld de,filedata
04CAD1 01 00 00 01 0193*  	ld bc,65536
04CAD5 3E 01       0194*  	ld a,mos_load
04CAD7 5B CF       0195*  	RST.LIL 08h
04CAD9 21 07 FB 00 0196*  	ld hl,BUF_DOG_YELP
04CADD DD 21 60 1C 0197*  	ld ix,7264
       00          
04CAE2 CD D2 BD 04 0198*  	call vdu_load_sfx
04CAE6 C9          0199*  	ret
04CAE7             0200*  
04CAE7             0201*  load_sfx_EXPLODE:
04CAE7 21 4C CD 04 0202*  	ld hl,FEXPLODE
04CAEB 22 8A C7 04 0203*  	ld (cur_filename),hl
04CAEF 11 C6 D3 04 0204*  	ld de,filedata
04CAF3 01 00 00 01 0205*  	ld bc,65536
04CAF7 3E 01       0206*  	ld a,mos_load
04CAF9 5B CF       0207*  	RST.LIL 08h
04CAFB 21 08 FB 00 0208*  	ld hl,BUF_EXPLODE
04CAFF DD 21 48 55 0209*  	ld ix,21832
       00          
04CB04 CD D2 BD 04 0210*  	call vdu_load_sfx
04CB08 C9          0211*  	ret
04CB09             0212*  
04CB09             0213*  load_sfx_GOT_TREASURE:
04CB09 21 5C CD 04 0214*  	ld hl,FGOT_TREASURE
04CB0D 22 8A C7 04 0215*  	ld (cur_filename),hl
04CB11 11 C6 D3 04 0216*  	ld de,filedata
04CB15 01 00 00 01 0217*  	ld bc,65536
04CB19 3E 01       0218*  	ld a,mos_load
04CB1B 5B CF       0219*  	RST.LIL 08h
04CB1D 21 09 FB 00 0220*  	ld hl,BUF_GOT_TREASURE
04CB21 DD 21 07 5F 0221*  	ld ix,24327
       00          
04CB26 CD D2 BD 04 0222*  	call vdu_load_sfx
04CB2A C9          0223*  	ret
04CB2B             0224*  
04CB2B             0225*  load_sfx_GUN_EMPTY:
04CB2B 21 71 CD 04 0226*  	ld hl,FGUN_EMPTY
04CB2F 22 8A C7 04 0227*  	ld (cur_filename),hl
04CB33 11 C6 D3 04 0228*  	ld de,filedata
04CB37 01 00 00 01 0229*  	ld bc,65536
04CB3B 3E 01       0230*  	ld a,mos_load
04CB3D 5B CF       0231*  	RST.LIL 08h
04CB3F 21 0A FB 00 0232*  	ld hl,BUF_GUN_EMPTY
04CB43 DD 21 3F 13 0233*  	ld ix,4927
       00          
04CB48 CD D2 BD 04 0234*  	call vdu_load_sfx
04CB4C C9          0235*  	ret
04CB4D             0236*  
04CB4D             0237*  load_sfx_GUN_RELOAD:
04CB4D 21 83 CD 04 0238*  	ld hl,FGUN_RELOAD
04CB51 22 8A C7 04 0239*  	ld (cur_filename),hl
04CB55 11 C6 D3 04 0240*  	ld de,filedata
04CB59 01 00 00 01 0241*  	ld bc,65536
04CB5D 3E 01       0242*  	ld a,mos_load
04CB5F 5B CF       0243*  	RST.LIL 08h
04CB61 21 0B FB 00 0244*  	ld hl,BUF_GUN_RELOAD
04CB65 DD 21 0F 1D 0245*  	ld ix,7439
       00          
04CB6A CD D2 BD 04 0246*  	call vdu_load_sfx
04CB6E C9          0247*  	ret
04CB6F             0248*  
04CB6F             0249*  load_sfx_KNIFE:
04CB6F 21 96 CD 04 0250*  	ld hl,FKNIFE
04CB73 22 8A C7 04 0251*  	ld (cur_filename),hl
04CB77 11 C6 D3 04 0252*  	ld de,filedata
04CB7B 01 00 00 01 0253*  	ld bc,65536
04CB7F 3E 01       0254*  	ld a,mos_load
04CB81 5B CF       0255*  	RST.LIL 08h
04CB83 21 0C FB 00 0256*  	ld hl,BUF_KNIFE
04CB87 DD 21 F3 0F 0257*  	ld ix,4083
       00          
04CB8C CD D2 BD 04 0258*  	call vdu_load_sfx
04CB90 C9          0259*  	ret
04CB91             0260*  
04CB91             0261*  load_sfx_MEIN_LEBEN:
04CB91 21 A4 CD 04 0262*  	ld hl,FMEIN_LEBEN
04CB95 22 8A C7 04 0263*  	ld (cur_filename),hl
04CB99 11 C6 D3 04 0264*  	ld de,filedata
04CB9D 01 00 00 01 0265*  	ld bc,65536
04CBA1 3E 01       0266*  	ld a,mos_load
04CBA3 5B CF       0267*  	RST.LIL 08h
04CBA5 21 0D FB 00 0268*  	ld hl,BUF_MEIN_LEBEN
04CBA9 DD 21 81 35 0269*  	ld ix,13697
       00          
04CBAE CD D2 BD 04 0270*  	call vdu_load_sfx
04CBB2 C9          0271*  	ret
04CBB3             0272*  
04CBB3             0273*  load_sfx_OOF:
04CBB3 21 B7 CD 04 0274*  	ld hl,FOOF
04CBB7 22 8A C7 04 0275*  	ld (cur_filename),hl
04CBBB 11 C6 D3 04 0276*  	ld de,filedata
04CBBF 01 00 00 01 0277*  	ld bc,65536
04CBC3 3E 01       0278*  	ld a,mos_load
04CBC5 5B CF       0279*  	RST.LIL 08h
04CBC7 21 0E FB 00 0280*  	ld hl,BUF_OOF
04CBCB DD 21 00 40 0281*  	ld ix,16384
       00          
04CBD0 CD D2 BD 04 0282*  	call vdu_load_sfx
04CBD4 C9          0283*  	ret
04CBD5             0284*  
04CBD5             0285*  load_sfx_SCHUSSTAFFEL:
04CBD5 21 C3 CD 04 0286*  	ld hl,FSCHUSSTAFFEL
04CBD9 22 8A C7 04 0287*  	ld (cur_filename),hl
04CBDD 11 C6 D3 04 0288*  	ld de,filedata
04CBE1 01 00 00 01 0289*  	ld bc,65536
04CBE5 3E 01       0290*  	ld a,mos_load
04CBE7 5B CF       0291*  	RST.LIL 08h
04CBE9 21 0F FB 00 0292*  	ld hl,BUF_SCHUSSTAFFEL
04CBED DD 21 63 26 0293*  	ld ix,9827
       00          
04CBF2 CD D2 BD 04 0294*  	call vdu_load_sfx
04CBF6 C9          0295*  	ret
04CBF7             0296*  
04CBF7             0297*  load_sfx_SCREAM:
04CBF7 21 D8 CD 04 0298*  	ld hl,FSCREAM
04CBFB 22 8A C7 04 0299*  	ld (cur_filename),hl
04CBFF 11 C6 D3 04 0300*  	ld de,filedata
04CC03 01 00 00 01 0301*  	ld bc,65536
04CC07 3E 01       0302*  	ld a,mos_load
04CC09 5B CF       0303*  	RST.LIL 08h
04CC0B 21 10 FB 00 0304*  	ld hl,BUF_SCREAM
04CC0F DD 21 5E 30 0305*  	ld ix,12382
       00          
04CC14 CD D2 BD 04 0306*  	call vdu_load_sfx
04CC18 C9          0307*  	ret
04CC19             0308*  
04CC19             0309*  load_sfx_SHOT_GATLING_BURST:
04CC19 21 E7 CD 04 0310*  	ld hl,FSHOT_GATLING_BURST
04CC1D 22 8A C7 04 0311*  	ld (cur_filename),hl
04CC21 11 C6 D3 04 0312*  	ld de,filedata
04CC25 01 00 00 01 0313*  	ld bc,65536
04CC29 3E 01       0314*  	ld a,mos_load
04CC2B 5B CF       0315*  	RST.LIL 08h
04CC2D 21 11 FB 00 0316*  	ld hl,BUF_SHOT_GATLING_BURST
04CC31 DD 21 00 60 0317*  	ld ix,24576
       00          
04CC36 CD D2 BD 04 0318*  	call vdu_load_sfx
04CC3A C9          0319*  	ret
04CC3B             0320*  
04CC3B             0321*  load_sfx_SHOT_MACHINE_GUN_BURST:
04CC3B 21 02 CE 04 0322*  	ld hl,FSHOT_MACHINE_GUN_BURST
04CC3F 22 8A C7 04 0323*  	ld (cur_filename),hl
04CC43 11 C6 D3 04 0324*  	ld de,filedata
04CC47 01 00 00 01 0325*  	ld bc,65536
04CC4B 3E 01       0326*  	ld a,mos_load
04CC4D 5B CF       0327*  	RST.LIL 08h
04CC4F 21 12 FB 00 0328*  	ld hl,BUF_SHOT_MACHINE_GUN_BURST
04CC53 DD 21 C4 42 0329*  	ld ix,17092
       00          
04CC58 CD D2 BD 04 0330*  	call vdu_load_sfx
04CC5C C9          0331*  	ret
04CC5D             0332*  
04CC5D             0333*  load_sfx_SHOT_PISTOL:
04CC5D 21 21 CE 04 0334*  	ld hl,FSHOT_PISTOL
04CC61 22 8A C7 04 0335*  	ld (cur_filename),hl
04CC65 11 C6 D3 04 0336*  	ld de,filedata
04CC69 01 00 00 01 0337*  	ld bc,65536
04CC6D 3E 01       0338*  	ld a,mos_load
04CC6F 5B CF       0339*  	RST.LIL 08h
04CC71 21 13 FB 00 0340*  	ld hl,BUF_SHOT_PISTOL
04CC75 DD 21 61 4B 0341*  	ld ix,19297
       00          
04CC7A CD D2 BD 04 0342*  	call vdu_load_sfx
04CC7E C9          0343*  	ret
04CC7F             0344*  
04CC7F             0345*  load_sfx_UGH:
04CC7F 21 35 CE 04 0346*  	ld hl,FUGH
04CC83 22 8A C7 04 0347*  	ld (cur_filename),hl
04CC87 11 C6 D3 04 0348*  	ld de,filedata
04CC8B 01 00 00 01 0349*  	ld bc,65536
04CC8F 3E 01       0350*  	ld a,mos_load
04CC91 5B CF       0351*  	RST.LIL 08h
04CC93 21 14 FB 00 0352*  	ld hl,BUF_UGH
04CC97 DD 21 A9 18 0353*  	ld ix,6313
       00          
04CC9C CD D2 BD 04 0354*  	call vdu_load_sfx
04CCA0 C9          0355*  	ret
04CCA1             0356*  
04CCA1             0357*  load_sfx_WILHELM:
04CCA1 21 41 CE 04 0358*  	ld hl,FWILHELM
04CCA5 22 8A C7 04 0359*  	ld (cur_filename),hl
04CCA9 11 C6 D3 04 0360*  	ld de,filedata
04CCAD 01 00 00 01 0361*  	ld bc,65536
04CCB1 3E 01       0362*  	ld a,mos_load
04CCB3 5B CF       0363*  	RST.LIL 08h
04CCB5 21 15 FB 00 0364*  	ld hl,BUF_WILHELM
04CCB9 DD 21 D7 53 0365*  	ld ix,21463
       00          
04CCBE CD D2 BD 04 0366*  	call vdu_load_sfx
04CCC2 C9          0367*  	ret
04CCC3             0368*  
04CCC3             0369*  ; File name lookups:
04CCC3 73 66 78 2F 0370*  FACHTUNG: db "sfx/ACHTUNG.raw",0
       41 43 48 54 
       55 4E 47 2E 
       72 61 77 00 
04CCD3 73 66 78 2F 0371*  FAHH: db "sfx/AHH.raw",0
       41 48 48 2E 
       72 61 77 00 
04CCDF 73 66 78 2F 0372*  FAUGH: db "sfx/AUGH.raw",0
       41 55 47 48 
       2E 72 61 77 
       00          
04CCEC 73 66 78 2F 0373*  FAYEE: db "sfx/AYEE.raw",0
       41 59 45 45 
       2E 72 61 77 
       00          
04CCF9 73 66 78 2F 0374*  FAYEE_HIGH: db "sfx/AYEE_HIGH.raw",0
       41 59 45 45 
       5F 48 49 47 
       48 2E 72 61 
       77 00       
04CD0B 73 66 78 2F 0375*  FDOG_WOOF_DOUBLE: db "sfx/DOG_WOOF_DOUBLE.raw",0
       44 4F 47 5F 
       57 4F 4F 46 
       5F 44 4F 55 
       42 4C 45 2E 
       72 61 77 00 
04CD23 73 66 78 2F 0376*  FDOG_WOOF_SINGLE: db "sfx/DOG_WOOF_SINGLE.raw",0
       44 4F 47 5F 
       57 4F 4F 46 
       5F 53 49 4E 
       47 4C 45 2E 
       72 61 77 00 
04CD3B 73 66 78 2F 0377*  FDOG_YELP: db "sfx/DOG_YELP.raw",0
       44 4F 47 5F 
       59 45 4C 50 
       2E 72 61 77 
       00          
04CD4C 73 66 78 2F 0378*  FEXPLODE: db "sfx/EXPLODE.raw",0
       45 58 50 4C 
       4F 44 45 2E 
       72 61 77 00 
04CD5C 73 66 78 2F 0379*  FGOT_TREASURE: db "sfx/GOT_TREASURE.raw",0
       47 4F 54 5F 
       54 52 45 41 
       53 55 52 45 
       2E 72 61 77 
       00          
04CD71 73 66 78 2F 0380*  FGUN_EMPTY: db "sfx/GUN_EMPTY.raw",0
       47 55 4E 5F 
       45 4D 50 54 
       59 2E 72 61 
       77 00       
04CD83 73 66 78 2F 0381*  FGUN_RELOAD: db "sfx/GUN_RELOAD.raw",0
       47 55 4E 5F 
       52 45 4C 4F 
       41 44 2E 72 
       61 77 00    
04CD96 73 66 78 2F 0382*  FKNIFE: db "sfx/KNIFE.raw",0
       4B 4E 49 46 
       45 2E 72 61 
       77 00       
04CDA4 73 66 78 2F 0383*  FMEIN_LEBEN: db "sfx/MEIN_LEBEN.raw",0
       4D 45 49 4E 
       5F 4C 45 42 
       45 4E 2E 72 
       61 77 00    
04CDB7 73 66 78 2F 0384*  FOOF: db "sfx/OOF.raw",0
       4F 4F 46 2E 
       72 61 77 00 
04CDC3 73 66 78 2F 0385*  FSCHUSSTAFFEL: db "sfx/SCHUSSTAFFEL.raw",0
       53 43 48 55 
       53 53 54 41 
       46 46 45 4C 
       2E 72 61 77 
       00          
04CDD8 73 66 78 2F 0386*  FSCREAM: db "sfx/SCREAM.raw",0
       53 43 52 45 
       41 4D 2E 72 
       61 77 00    
04CDE7 73 66 78 2F 0387*  FSHOT_GATLING_BURST: db "sfx/SHOT_GATLING_BURST.raw",0
       53 48 4F 54 
       5F 47 41 54 
       4C 49 4E 47 
       5F 42 55 52 
       53 54 2E 72 
       61 77 00    
04CE02 73 66 78 2F 0388*  FSHOT_MACHINE_GUN_BURST: db "sfx/SHOT_MACHINE_GUN_BURST.raw",0
       53 48 4F 54 
       5F 4D 41 43 
       48 49 4E 45 
       5F 47 55 4E 
       5F 42 55 52 
       53 54 2E 72 
       61 77 00    
04CE21 73 66 78 2F 0389*  FSHOT_PISTOL: db "sfx/SHOT_PISTOL.raw",0
       53 48 4F 54 
       5F 50 49 53 
       54 4F 4C 2E 
       72 61 77 00 
04CE35 73 66 78 2F 0390*  FUGH: db "sfx/UGH.raw",0
       55 47 48 2E 
       72 61 77 00 
04CE41 73 66 78 2F 0391*  FWILHELM: db "sfx/WILHELM.raw",0
       57 49 4C 48 
       45 4C 4D 2E 
       72 61 77 00 
04CE51             0392*  
04CE51             0393*  ; Play sfx routines
04CE51             0394*  
04CE51             0395*  sfx_play_achtung:
04CE51 21 00 FB 00 0396*  	ld hl,BUF_ACHTUNG
04CE55 01 58 03 00 0397*  	ld bc,856
04CE59 C3 46 00 04 0398*  	jp vdu_play_sfx
04CE5D             0399*  
04CE5D             0400*  sfx_play_ahh:
04CE5D 21 01 FB 00 0401*  	ld hl,BUF_AHH
04CE61 01 91 01 00 0402*  	ld bc,401
04CE65 C3 46 00 04 0403*  	jp vdu_play_sfx
04CE69             0404*  
04CE69             0405*  sfx_play_augh:
04CE69 21 02 FB 00 0406*  	ld hl,BUF_AUGH
04CE6D 01 FC 02 00 0407*  	ld bc,764
04CE71 C3 46 00 04 0408*  	jp vdu_play_sfx
04CE75             0409*  
04CE75             0410*  sfx_play_ayee:
04CE75 21 03 FB 00 0411*  	ld hl,BUF_AYEE
04CE79 01 E6 01 00 0412*  	ld bc,486
04CE7D C3 46 00 04 0413*  	jp vdu_play_sfx
04CE81             0414*  
04CE81             0415*  sfx_play_ayee_high:
04CE81 21 04 FB 00 0416*  	ld hl,BUF_AYEE_HIGH
04CE85 01 40 04 00 0417*  	ld bc,1088
04CE89 C3 46 00 04 0418*  	jp vdu_play_sfx
04CE8D             0419*  
04CE8D             0420*  sfx_play_dog_woof_double:
04CE8D 21 05 FB 00 0421*  	ld hl,BUF_DOG_WOOF_DOUBLE
04CE91 01 63 02 00 0422*  	ld bc,611
04CE95 C3 46 00 04 0423*  	jp vdu_play_sfx
04CE99             0424*  
04CE99             0425*  sfx_play_dog_woof_single:
04CE99 21 06 FB 00 0426*  	ld hl,BUF_DOG_WOOF_SINGLE
04CE9D 01 15 02 00 0427*  	ld bc,533
04CEA1 C3 46 00 04 0428*  	jp vdu_play_sfx
04CEA5             0429*  
04CEA5             0430*  sfx_play_dog_yelp:
04CEA5 21 07 FB 00 0431*  	ld hl,BUF_DOG_YELP
04CEA9 01 B0 01 00 0432*  	ld bc,432
04CEAD C3 46 00 04 0433*  	jp vdu_play_sfx
04CEB1             0434*  
04CEB1             0435*  sfx_play_explode:
04CEB1 21 08 FB 00 0436*  	ld hl,BUF_EXPLODE
04CEB5 01 13 05 00 0437*  	ld bc,1299
04CEB9 C3 46 00 04 0438*  	jp vdu_play_sfx
04CEBD             0439*  
04CEBD             0440*  sfx_play_got_treasure:
04CEBD 21 09 FB 00 0441*  	ld hl,BUF_GOT_TREASURE
04CEC1 01 A7 05 00 0442*  	ld bc,1447
04CEC5 C3 46 00 04 0443*  	jp vdu_play_sfx
04CEC9             0444*  
04CEC9             0445*  sfx_play_gun_empty:
04CEC9 21 0A FB 00 0446*  	ld hl,BUF_GUN_EMPTY
04CECD 01 24 01 00 0447*  	ld bc,292
04CED1 C3 46 00 04 0448*  	jp vdu_play_sfx
04CED5             0449*  
04CED5             0450*  sfx_play_gun_reload:
04CED5 21 0B FB 00 0451*  	ld hl,BUF_GUN_RELOAD
04CED9 01 BA 01 00 0452*  	ld bc,442
04CEDD C3 46 00 04 0453*  	jp vdu_play_sfx
04CEE1             0454*  
04CEE1             0455*  sfx_play_knife:
04CEE1 21 0C FB 00 0456*  	ld hl,BUF_KNIFE
04CEE5 01 F2 00 00 0457*  	ld bc,242
04CEE9 C3 46 00 04 0458*  	jp vdu_play_sfx
04CEED             0459*  
04CEED             0460*  sfx_play_mein_leben:
04CEED 21 0D FB 00 0461*  	ld hl,BUF_MEIN_LEBEN
04CEF1 01 2E 03 00 0462*  	ld bc,814
04CEF5 C3 46 00 04 0463*  	jp vdu_play_sfx
04CEF9             0464*  
04CEF9             0465*  sfx_play_oof:
04CEF9 21 0E FB 00 0466*  	ld hl,BUF_OOF
04CEFD 01 CE 03 00 0467*  	ld bc,974
04CF01 C3 46 00 04 0468*  	jp vdu_play_sfx
04CF05             0469*  
04CF05             0470*  sfx_play_schusstaffel:
04CF05 21 0F FB 00 0471*  	ld hl,BUF_SCHUSSTAFFEL
04CF09 01 48 02 00 0472*  	ld bc,584
04CF0D C3 46 00 04 0473*  	jp vdu_play_sfx
04CF11             0474*  
04CF11             0475*  sfx_play_scream:
04CF11 21 10 FB 00 0476*  	ld hl,BUF_SCREAM
04CF15 01 E0 02 00 0477*  	ld bc,736
04CF19 C3 46 00 04 0478*  	jp vdu_play_sfx
04CF1D             0479*  
04CF1D             0480*  sfx_play_shot_gatling_burst:
04CF1D 21 11 FB 00 0481*  	ld hl,BUF_SHOT_GATLING_BURST
04CF21 01 B6 05 00 0482*  	ld bc,1462
04CF25 C3 46 00 04 0483*  	jp vdu_play_sfx
04CF29             0484*  
04CF29             0485*  sfx_play_shot_machine_gun_burst:
04CF29 21 12 FB 00 0486*  	ld hl,BUF_SHOT_MACHINE_GUN_BURST
04CF2D 01 F9 03 00 0487*  	ld bc,1017
04CF31 C3 46 00 04 0488*  	jp vdu_play_sfx
04CF35             0489*  
04CF35             0490*  sfx_play_shot_pistol:
04CF35 21 13 FB 00 0491*  	ld hl,BUF_SHOT_PISTOL
04CF39 01 7C 04 00 0492*  	ld bc,1148
04CF3D C3 46 00 04 0493*  	jp vdu_play_sfx
04CF41             0494*  
04CF41             0495*  sfx_play_ugh:
04CF41 21 14 FB 00 0496*  	ld hl,BUF_UGH
04CF45 01 77 01 00 0497*  	ld bc,375
04CF49 C3 46 00 04 0498*  	jp vdu_play_sfx
04CF4D             0499*  
04CF4D             0500*  sfx_play_wilhelm:
04CF4D 21 15 FB 00 0501*  	ld hl,BUF_WILHELM
04CF51 01 FD 04 00 0502*  	ld bc,1277
04CF55 C3 46 00 04 0503*  	jp vdu_play_sfx
04CF59             0030   	include "src/asm/timer.asm"
04CF59             0001*  ; Table 32. Timer Control Registers
04CF59             0002*  ; this constant is the base address of the timer control registers
04CF59             0003*  ; each timer takes three bytes:
04CF59             0004*  ;   0: control register
04CF59             0005*  ;   1: low byte of timer reset value
04CF59             0006*  ;   2: high byte of timer reset value
04CF59             0007*  ; note that the value is only 8-bits,so we use in0/out0 i/o calls,
04CF59             0008*  ; which correctly force the high and upper bytes of the address bus to zero
04CF59             0009*  TMR_CTL:     equ 80h
04CF59             0010*  
04CF59             0011*  ; Timer Control Register Bit Definitions
04CF59             0012*  PRT_IRQ_0:    equ %00000000 ; The timer does not reach its end-of-count value.
04CF59             0013*                              ; This bit is reset to 0 every time the TMRx_CTL register is read.
04CF59             0014*  PRT_IRQ_1:    equ %10000000 ; The timer reaches its end-of-count value. If IRQ_EN is set to 1,
04CF59             0015*                              ; an interrupt signal is sent to the CPU. This bit remains 1 until
04CF59             0016*                              ; the TMRx_CTL register is read.
04CF59             0017*  
04CF59             0018*  IRQ_EN_0:     equ %00000000 ; Timer interrupt requests are disabled.
04CF59             0019*  IRQ_EN_1:     equ %01000000 ; Timer interrupt requests are enabled.
04CF59             0020*  
04CF59             0021*  PRT_MODE_0:   equ %00000000 ; The timer operates in SINGLE PASS mode. PRT_EN (bit 0) is reset to
04CF59             0022*                              ;  0,and counting stops when the end-of-count value is reached.
04CF59             0023*  PRT_MODE_1:   equ %00010000 ; The timer operates in CONTINUOUS mode. The timer reload value is
04CF59             0024*                              ; written to the counter when the end-of-count value is reached.
04CF59             0025*  
04CF59             0026*  ; CLK_DIV is a 2-bit mask that sets the timer input source clock divider
04CF59             0027*  CLK_DIV_256:  equ %00001100 ;
04CF59             0028*  CLK_DIV_64:   equ %00001000 ;
04CF59             0029*  CLK_DIV_16:   equ %00000100 ;
04CF59             0030*  CLK_DIV_4:    equ %00000000 ;
04CF59             0031*  
04CF59             0032*  RST_EN_0:     equ %00000000 ; The reload and restart function is disabled.
04CF59             0033*  RST_EN_1:     equ %00000010 ; The reload and restart function is enabled.
04CF59             0034*                              ; When a 1 is written to this bit,the values in the reload registers
04CF59             0035*                              ;  are loaded into the downcounter when the timer restarts. The
04CF59             0036*                              ; programmer must ensure that this bit is set to 1 each time
04CF59             0037*                              ; SINGLE-PASS mode is used.
04CF59             0038*  
04CF59             0039*  ; disable/enable the programmable reload timer
04CF59             0040*  PRT_EN_0:     equ %00000000 ;
04CF59             0041*  PRT_EN_1:     equ %00000001 ;
04CF59             0042*  
04CF59             0043*  ; Table 37. Timer Input Source Select Register
04CF59             0044*  ; Each of the 4 timers are allocated two bits of the 8-bit register
04CF59             0045*  ; in little-endian order,with TMR0 using bits 0 and 1,TMR1 using bits 2 and 3,etc.
04CF59             0046*  ;   00: System clock / CLK_DIV
04CF59             0047*  ;   01: RTC / CLK_DIV
04CF59             0048*  ;   NOTE: these are the values given in the manual,but it may be a typo
04CF59             0049*  ;   10: GPIO port B pin 1.
04CF59             0050*  ;   11: GPIO port B pin 1.
04CF59             0051*  TMR_ISS:   equ 92h ; register address
04CF59             0052*  
04CF59             0053*  ; Table 51. Real-Time Clock Control Register
04CF59             0054*  RTC_CTRL: equ EDh ; register address
04CF59             0055*  
04CF59             0056*  ; alarm interrupt disable/enable
04CF59             0057*  RTC_ALARM_0:    equ %00000000
04CF59             0058*  RTC_ALARM_1:    equ %10000000
04CF59             0059*  
04CF59             0060*  ; interrupt on alarm disable/enable
04CF59             0061*  RTC_INT_ENT_0:  equ %00000000
04CF59             0062*  RTC_INT_ENT_1:  equ %01000000
04CF59             0063*  
04CF59             0064*  RTC_BCD_EN_0:   equ %00000000   ; RTC count and alarm registers are binary
04CF59             0065*  RTC_BCD_EN_1:   equ %00100000   ; RTC count and alarm registers are BCD
04CF59             0066*  
04CF59             0067*  RTC_CLK_SEL_0:  equ %00000000   ; RTC clock source is crystal oscillator output (32768 Hz).
04CF59             0068*                                  ; On-chip 32768 Hz oscillator is enabled.
04CF59             0069*  RTC_CLK_SEL_1:  equ %00010000   ; RTC clock source is power line frequency input as set by FREQ_SEL.
04CF59             0070*                                  ; On-chip 32768 Hz oscillator is disabled.
04CF59             0071*  
04CF59             0072*  RTC_FREQ_SEL_0: equ %00000000   ; 60 Hz power line frequency.
04CF59             0073*  RTC_FREQ_SEL_1: equ %00001000   ; 50 Hz power line frequency.
04CF59             0074*  
04CF59             0075*  RTC_SLP_WAKE_0: equ %00000000   ; RTC does not generate a sleep-mode recovery reset.
04CF59             0076*  RTC_SLP_WAKE_1: equ %00000010   ; RTC generates a sleep-mode recovery reset.
04CF59             0077*  
04CF59             0078*  RTC_UNLOCK_0:   equ %00000000   ; RTC count registers are locked to prevent Write access.
04CF59             0079*                                  ; RTC counter is enabled.
04CF59             0080*  RTC_UNLOCK_1:   equ %00000001   ; RTC count registers are unlocked to allow Write access.
04CF59             0081*                                  ; RTC counter is disabled.
04CF59             0082*  
04CF59             0083*  ; prt_reload_emulator: equ 11234 ; 1/102.4 seconds on emulator with 16 clock divider
04CF59             0084*  
04CF59             0085*  prt_reload_emulator: equ 11519 ; 1 centisecond on emulator with 16 clock divider
04CF59             0086*  prt_reload_hardware: equ 11532 ; 1 centisecond on hardware with 16 clock divider
04CF59 00 00 00    0087*  prt_reload: dl 0x000000
04CF5C             0088*  
04CF5C             0089*  ; returns: a = 0 if running on hardware,1 if running on emulator
04CF5C             0090*  ;          de = number PRT interrupts during test interval
04CF5C             0091*  prt_calibrate:
04CF5C CD 39 BA 04 0092*      call vdu_vblank
04CF60             0093*  ; set a MOS timer
04CF60 21 78 00 00 0094*      ld hl,120*1 ; 1 second
04CF64 FD 21 B7 D0 0095*      ld iy,tmr_test
       04          
04CF69 CD 95 D0 04 0096*      call tmr_set
04CF6D             0097*  ; set a PRT timer
04CF6D             0098*      ; ld hl,prt_reload_hardware
04CF6D             0099*      ; ld hl,prt_reload_emulator
04CF6D 21 05 2D 00 0100*      ld hl,prt_reload_emulator + prt_reload_hardware / 2
04CF71 22 59 CF 04 0101*      ld (prt_reload),hl
04CF75 CD D0 CF 04 0102*      call prt_set
04CF79             0103*  @loop:
04CF79             0104*  ; check time remaining on MOS timer
04CF79 CD A3 D0 04 0105*      call tmr_get
04CF7D CA 87 CF 04 0106*      jp z,@done ; time expired,so quit
04CF81 FA 87 CF 04 0107*      jp m,@done ; time past expiration (negative),so quit
04CF85 18 F2       0108*      jr @loop
04CF87             0109*  @done:
04CF87 ED 5B 1E D0 0110*      ld de,(prt_irq_counter)
       04          
04CF8C 01 0C 2D 00 0111*      ld bc,prt_reload_hardware ; default value for running on hardware
04CF90 ED 43 59 CF 0112*      ld (prt_reload),bc
       04          
04CF95 21 64 00 00 0113*      ld hl,100 ; halfway between 101 for real hardware and 99 for emulator
04CF99 AF          0114*      xor a ; clear carry,zero is default value for running on hardware
04CF9A 32 A7 D1 04 0115*      ld (is_emulator),a
04CF9E ED 52       0116*      sbc hl,de
04CFA0 21 BF D1 04 0117*      ld hl,on_hardware ; default message for running on hardware
04CFA4 CA 5C CF 04 0118*      jp z,prt_calibrate ; zero result is indeterminate so we try again
04CFA8 F8          0119*      ret m ; negative result means we're on hardware
04CFA9 3C          0120*      inc a ; we're on emulator
04CFAA 32 A7 D1 04 0121*      ld (is_emulator),a
04CFAE 01 FF 2C 00 0122*      ld bc,prt_reload_emulator
04CFB2 ED 43 59 CF 0123*      ld (prt_reload),bc
       04          
04CFB7 21 A8 D1 04 0124*      ld hl,on_emulator
04CFBB C9          0125*      ret
04CFBC             0126*  
04CFBC 43 61 6C 69 0127*  calibrating_timer: defb "Calibrating timer\r\n",0
       62 72 61 74 
       69 6E 67 20 
       74 69 6D 65 
       72 0D 0A 00 
04CFD0             0128*  
04CFD0             0129*  ; set PRT timer
04CFD0             0130*  prt_set:
04CFD0 21 00 00 00 0131*      ld hl,0
04CFD4 22 1E D0 04 0132*      ld (prt_irq_counter),hl
04CFD8 2A 59 CF 04 0133*      ld hl,(prt_reload)
04CFDC ED 29 84    0134*      out0 ($84),l
04CFDF ED 21 85    0135*  	out0 ($85),h
04CFE2             0136*  ; disable timer
04CFE2 3E 06       0137*      ld a,PRT_IRQ_0 | IRQ_EN_0 | PRT_MODE_0 | CLK_DIV_16 | RST_EN_1 | PRT_EN_0
04CFE4 ED 39 83    0138*  	out0 ($83),a
04CFE7             0139*  ; enable timer,with interrupt and CONTINUOUS mode,clock divider 16
04CFE7 3E 57       0140*      ld a,PRT_IRQ_0 | IRQ_EN_1 | PRT_MODE_1 | CLK_DIV_16 | RST_EN_1 | PRT_EN_1
04CFE9 ED 39 83    0141*  	out0 ($83),a
04CFEC C9          0142*      ret
04CFED             0143*  
04CFED             0144*  ; ===============================================
04CFED             0145*  ; PRT Timer Interrupt Handling
04CFED             0146*  ; https://github.com/tomm/agon-cpu-emulator/blob/main/sdcard/regression_suite/timerirq.asm
04CFED             0147*  ; -----------------------------------------------
04CFED             0148*  prt_irq_init:
04CFED             0149*      ; set up interrupt vector table 2
04CFED 21 00 00 00 0150*  	ld hl,0
04CFF1 3A 0C 01 00 0151*  	ld a,($10c)
04CFF5 6F          0152*  	ld l,a
04CFF6 3A 0D 01 00 0153*  	ld a,($10d)
04CFFA 67          0154*  	ld h,a
04CFFB             0155*  
04CFFB             0156*  	; skip over CALL ($c3)
04CFFB 23          0157*  	inc hl
04CFFC             0158*  	; load address of jump into vector table 2 (in ram)
04CFFC ED 27       0159*  	ld hl,(hl)
04CFFE             0160*  
04CFFE             0161*  	; write CALL prt_irq_handler to vector table 2
04CFFE 3E C3       0162*  	ld a,$c3
04D000 77          0163*  	ld (hl),a
04D001 23          0164*  	inc hl
04D002 11 09 D0 04 0165*  	ld de,prt_irq_handler
04D006 ED 1F       0166*  	ld (hl),de
04D008             0167*  
04D008 C9          0168*      ret
04D009             0169*  
04D009             0170*  prt_irq_handler:
04D009 F3          0171*  	di
04D00A F5          0172*  	push af
04D00B E5          0173*      push hl
04D00C ED 38 83    0174*  	in0 a,($83)
04D00F 2A 1E D0 04 0175*  	ld hl,(prt_irq_counter)
04D013 23          0176*  	inc hl
04D014 22 1E D0 04 0177*  	ld (prt_irq_counter),hl
04D018 E1          0178*      pop hl
04D019 F1          0179*  	pop af
04D01A FB          0180*  	ei
04D01B 5B ED 4D    0181*  	reti.l
04D01E             0182*  
04D01E             0183*  prt_irq_counter:
04D01E 00 00 00    0184*  	.dl 0
04D021             0185*  prt_irq_counter_saved:
04D021 00 00 00    0186*      .dl 0
04D024             0187*  
04D024             0188*  prt_loop_reset:
04D024 E5          0189*      push hl
04D025 21 00 00 00 0190*  	ld hl,0
04D029 22 1E D0 04 0191*  	ld (prt_irq_counter),hl
04D02D 22 8F D0 04 0192*      ld (prt_loop_counter),hl
04D031 22 92 D0 04 0193*      ld (prt_loops),hl
04D035 CD D0 CF 04 0194*      call prt_set
04D039 E1          0195*      pop hl
04D03A C9          0196*      ret
04D03B             0197*  
04D03B             0198*  prt_loop_start:
04D03B E5          0199*      push hl
04D03C 21 00 00 00 0200*  	ld hl,0
04D040 22 1E D0 04 0201*  	ld (prt_irq_counter),hl
04D044 E1          0202*      pop hl
04D045 C9          0203*      ret
04D046             0204*  
04D046             0205*  prt_loop_stop:
04D046 E5          0206*      push hl
04D047 D5          0207*      push de
04D048 2A 1E D0 04 0208*      ld hl,(prt_irq_counter)
04D04C ED 5B 8F D0 0209*      ld de,(prt_loop_counter)
       04          
04D051 19          0210*      add hl,de
04D052 22 8F D0 04 0211*      ld (prt_loop_counter),hl
04D056 21 00 00 00 0212*      ld hl,0
04D05A 22 1E D0 04 0213*      ld (prt_irq_counter),hl
04D05E 2A 92 D0 04 0214*      ld hl,(prt_loops)
04D062 23          0215*      inc hl
04D063 22 92 D0 04 0216*      ld (prt_loops),hl
04D067 D1          0217*      pop de
04D068 E1          0218*      pop hl
04D069 C9          0219*      ret
04D06A             0220*  
04D06A             0221*  ; inputs: bc = y,x text coordinates to print
04D06A             0222*  prt_loop_print:
04D06A F5          0223*      push af
04D06B E5          0224*      push hl
04D06C C5          0225*      push bc
04D06D D5          0226*      push de
04D06E DD E5       0227*      push ix
04D070 FD E5       0228*      push iy
04D072 CD 1C B9 04 0229*      call vdu_move_cursor
04D076             0230*  
04D076 2A 8F D0 04 0231*      ld hl,(prt_loop_counter)
04D07A CD 3D BE 04 0232*      call printDec
04D07E             0233*  
04D07E 2A 92 D0 04 0234*      ld hl,(prt_loops)
04D082 CD 3D BE 04 0235*      call printDec
04D086             0236*  
04D086 FD E1       0237*      pop iy
04D088 DD E1       0238*      pop ix
04D08A D1          0239*      pop de
04D08B C1          0240*      pop bc
04D08C E1          0241*      pop hl
04D08D F1          0242*      pop af
04D08E C9          0243*      ret
04D08F             0244*  
04D08F             0245*  prt_loop_counter:
04D08F 00 00 00    0246*      .dl 0
04D092             0247*  prt_loops:
04D092 00 00 00    0248*      .dl 0
04D095             0249*  
04D095             0250*  ; ===============================================
04D095             0251*  ; Timer functions
04D095             0252*  ; -----------------------------------------------
04D095             0253*  ; set a countdown timer
04D095             0254*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
04D095             0255*  ; returns: hl = current time
04D095             0256*  tmr_set:
04D095 FD 2F 03    0257*      ld (iy+3),hl            ; set time remaining
04D098             0258*      MOSCALL mos_sysvars     ; ix points to syvars table
04D098 3E 08       0001*M 			LD	A, function
04D09A 5B CF       0002*M 			RST.LIL	08h
04D09C DD 27 00    0259*      ld hl,(ix+sysvar_time)  ; get current time
04D09F FD 2F 00    0260*      ld (iy+0),hl            ; set start time
04D0A2 C9          0261*      ret
04D0A3             0262*  
04D0A3             0263*  ; gets time remaining on a countdown timer
04D0A3             0264*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
04D0A3             0265*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
04D0A3             0266*  ;          sign flags: pos = time not expired,zero or neg = time expired
04D0A3             0267*  tmr_get:
04D0A3             0268*      MOSCALL mos_sysvars     ; ix points to syvars table
04D0A3 3E 08       0001*M 			LD	A, function
04D0A5 5B CF       0002*M 			RST.LIL	08h
04D0A7 DD 17 00    0269*      ld de,(ix+sysvar_time)  ; get current time
04D0AA FD 27 00    0270*      ld hl,(iy+0)            ; get start time
04D0AD AF          0271*      xor a                   ; clear carry
04D0AE ED 52       0272*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
04D0B0 FD 17 03    0273*      ld de,(iy+3)            ; get timer set value
04D0B3 AF          0274*      xor a                   ; clear carry
04D0B4 ED 5A       0275*      adc hl,de               ; hl = time remaining
04D0B6             0276*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
04D0B6 C9          0277*      ret
04D0B7             0278*  
04D0B7             0279*  tmr_test: ds 6 ; example of a buffer to hold timer data
04D0BD             0280*  
04D0BD 00 00 00    0281*  timestamp_now: dl 0
04D0C0 00 00 00    0282*  timestamp_old: dl 0
04D0C3 00 00 00    0283*  timestamp_chg: dl 0
04D0C6             0284*  
04D0C6             0285*  ; update the global timestamp from the system clock
04D0C6             0286*  ; inputs: none
04D0C6             0287*  ; returns: hl = time elapsed in 1/120ths of a second
04D0C6             0288*  ;          de = current time
04D0C6             0289*  ;          ix = pointer to syvars table
04D0C6             0290*  ; destroys: af,hl,de,ix
04D0C6             0291*  timestamp_tick:
04D0C6 ED 5B BD D0 0292*      ld de,(timestamp_now)   ; get previous time
       04          
04D0CB ED 53 C0 D0 0293*      ld (timestamp_old),de   ; save previous time
       04          
04D0D0             0294*      MOSCALL mos_sysvars     ; ix points to syvars table
04D0D0 3E 08       0001*M 			LD	A, function
04D0D2 5B CF       0002*M 			RST.LIL	08h
04D0D4 DD 27 00    0295*      ld hl,(ix+sysvar_time)  ; get current time
04D0D7 22 BD D0 04 0296*      ld (timestamp_now),hl   ; save current time
04D0DB AF          0297*      xor a                   ; clear carry
04D0DC ED 52       0298*      sbc hl,de               ; hl = time elapsed
04D0DE 22 C3 D0 04 0299*      ld (timestamp_chg),hl   ; save elapsed time
04D0E2 C9          0300*      ret
04D0E3             0301*  
04D0E3             0302*  ; set a countdown timer
04D0E3             0303*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
04D0E3             0304*  ; requires: timestamp_tick to be called at least once before this function
04D0E3             0305*  ; returns: hl = current time
04D0E3             0306*  ; destroys: hl
04D0E3             0307*  timestamp_tmr_set:
04D0E3 FD 2F 03    0308*      ld (iy+3),hl            ; set time remaining
04D0E6 2A BD D0 04 0309*      ld hl,(timestamp_now)   ; get current timestamp
04D0EA FD 2F 00    0310*      ld (iy+0),hl            ; set start time
04D0ED C9          0311*      ret
04D0EE             0312*  
04D0EE             0313*  ; gets time remaining on a countdown timer following the global timestamp
04D0EE             0314*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
04D0EE             0315*  ; requires: timestamp_tick to be called at least once before this function
04D0EE             0316*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
04D0EE             0317*  ;          sign flags: pos = time not expired,zero or neg = time expired
04D0EE             0318*  ; destroys: af,hl,de
04D0EE             0319*  timestamp_tmr_get:
04D0EE ED 5B BD D0 0320*      ld de,(timestamp_now)   ; get current timestamp
       04          
04D0F3 FD 27 00    0321*      ld hl,(iy+0)            ; get start time
04D0F6 AF          0322*      xor a                   ; clear carry
04D0F7 ED 52       0323*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
04D0F9 FD 17 03    0324*      ld de,(iy+3)            ; get timer set value
04D0FC AF          0325*      xor a                   ; clear carry
04D0FD ED 5A       0326*      adc hl,de               ; hl = time remaining
04D0FF             0327*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
04D0FF C9          0328*      ret
04D100             0329*  
04D100             0330*  ; set a stopwatch
04D100             0331*  ; returns: hl = start time
04D100             0332*  ; destroys: hl,ix
04D100             0333*  stopwatch_set:
04D100             0334*      MOSCALL mos_sysvars     ; ix points to syvars table
04D100 3E 08       0001*M 			LD	A, function
04D102 5B CF       0002*M 			RST.LIL	08h
04D104 DD 27 00    0335*      ld hl,(ix+sysvar_time)  ; get current time
04D107 22 1C D1 04 0336*      ld (stopwatch_started),hl            ; set start time
04D10B C9          0337*      ret
04D10C             0338*  
04D10C             0339*  ; gets time elapsed on a stopwatch
04D10C             0340*  ; returns: hl = time elapsed in 1/120ths of a second
04D10C             0341*  ; destroys: af,hl,de,ix
04D10C             0342*  stopwatch_get:
04D10C             0343*      MOSCALL mos_sysvars     ; ix points to syvars table
04D10C 3E 08       0001*M 			LD	A, function
04D10E 5B CF       0002*M 			RST.LIL	08h
04D110 DD 27 00    0344*      ld hl,(ix+sysvar_time)  ; get current time
04D113 ED 5B 1C D1 0345*      ld de,(stopwatch_started)            ; get start time
       04          
04D118 AF          0346*      xor a                   ; clear carry
04D119 ED 52       0347*      sbc hl,de               ; hl = time elapsed (will always be zero or positive)
04D11B C9          0348*      ret
04D11C             0349*  
04D11C             0350*  stopwatch_started: ds 3 ; buffer to hold stopwatch start time
04D11F             0351*  
04D11F             0352*  ; ------------------
04D11F             0353*  ; delay routine
04D11F             0354*  ; Author: Richard Turrnidge
04D11F             0355*  ; https://github.com/richardturnnidge/lessons/blob/main/slowdown.asm
04D11F             0356*  ; routine waits a fixed time,then returns
04D11F             0357*  ; arrive with A =  the delay byte. One bit to be set only.
04D11F             0358*  ; eg. ld A,00000100b
04D11F             0359*  
04D11F             0360*  multiPurposeDelay:
04D11F F5          0361*      push af
04D120 C5          0362*      push bc
04D121 DD E5       0363*      push ix
04D123 47          0364*      ld b,a
04D124 3E 08       0365*      ld a,$08
04D126 5B CF       0366*      RST.LIL	08h                 ; get IX pointer to sysvars
04D128             0367*  
04D128             0368*  waitLoop:
04D128             0369*  
04D128 DD 7E 00    0370*      ld a,(ix + 0)              ; ix+0h is lowest byte of clock timer
04D12B             0371*  
04D12B             0372*                                  ;   we check if bit set is same as last time we checked.
04D12B             0373*                                  ;   bit 0 - don't use
04D12B             0374*                                  ;   bit 1 - changes 64 times per second
04D12B             0375*                                  ;   bit 2 - changes 32 times per second
04D12B             0376*                                  ;   bit 3 - changes 16 times per second
04D12B             0377*  
04D12B             0378*                                  ;   bit 4 - changes 8 times per second
04D12B             0379*                                  ;   bit 5 - changes 4 times per second
04D12B             0380*                                  ;   bit 6 - changes 2 times per second
04D12B             0381*                                  ;   bit 7 - changes 1 times per second
04D12B A0          0382*      and b
04D12C 4F          0383*      ld c,a
04D12D 3A 3E D1 04 0384*      ld a,(oldTimeStamp)
04D131 B9          0385*      cp c                        ; is A same as last value?
04D132 28 F4       0386*      jr z,waitLoop              ; loop here if it is
04D134 79          0387*      ld a,c
04D135 32 3E D1 04 0388*      ld (oldTimeStamp),a        ; set new value
04D139             0389*  
04D139 DD E1       0390*      pop ix
04D13B C1          0391*      pop bc
04D13C F1          0392*      pop af
04D13D C9          0393*      ret
04D13E             0394*  
04D13E 00          0395*  oldTimeStamp:   .db 00h
04D13F             0031   
04D13F             0032   
04D13F             0033   start:
04D13F F5          0034       push af
04D140 C5          0035       push bc
04D141 D5          0036       push de
04D142 DD E5       0037       push ix
04D144 FD E5       0038       push iy
04D146             0039   
04D146 CD D6 D1 04 0040   	call init ; Initialization code
04D14A CD 21 D3 04 0041       call main ; Call the main function
04D14E             0042   
04D14E             0043   exit:
04D14E             0044   
04D14E FD E1       0045       pop iy
04D150 DD E1       0046       pop ix
04D152 D1          0047       pop de
04D153 C1          0048       pop bc
04D154 F1          0049       pop af
04D155 21 00 00 00 0050       ld hl,0
04D159             0051   
04D159 C9          0052       ret
04D15A             0053   
04D15A 57 65 6C 63 0054   hello_world: defb "Welcome to Agon Wolf3D",0
       6F 6D 65 20 
       74 6F 20 41 
       67 6F 6E 20 
       57 6F 6C 66 
       33 44 00    
04D171 4C 6F 61 64 0055   loading_ui: defb "Loading UI",0
       69 6E 67 20 
       55 49 00    
04D17C 4C 6F 61 64 0056   loading_time: defb "Loading time:",0
       69 6E 67 20 
       74 69 6D 65 
       3A 00       
04D18A 50 72 65 73 0057   loading_complete: defb "Press any key to continue.\r\n",0
       73 20 61 6E 
       79 20 6B 65 
       79 20 74 6F 
       20 63 6F 6E 
       74 69 6E 75 
       65 2E 0D 0A 
       00          
04D1A7 00          0058   is_emulator: defb 0
04D1A8 52 75 6E 6E 0059   on_emulator: defb "Running on emulator.\r\n",0
       69 6E 67 20 
       6F 6E 20 65 
       6D 75 6C 61 
       74 6F 72 2E 
       0D 0A 00    
04D1BF 52 75 6E 6E 0060   on_hardware: defb "Running on hardware.\r\n",0
       69 6E 67 20 
       6F 6E 20 68 
       61 72 64 77 
       61 72 65 2E 
       0D 0A 00    
04D1D6             0061   
04D1D6             0062   init:
04D1D6             0063   ; clear all buffers
04D1D6 CD DE BD 04 0064       call vdu_clear_all_buffers
04D1DA             0065   
04D1DA             0066   ; set up the display
04D1DA 3E 88       0067       ld a,8+128 ; 320x240x64 double-buffered
04D1DC CD 6C B8 04 0068       call vdu_set_screen_mode
04D1E0 AF          0069       xor a
04D1E1 CD 9B B9 04 0070       call vdu_set_scaling
04D1E5             0071   
04D1E5             0072   ; start generic stopwatch to time setup loop
04D1E5             0073   ; so we can determine if we're running on emulator or hardware
04D1E5 CD 00 D1 04 0074   	call stopwatch_set
04D1E9             0075   
04D1E9             0076   ; initialize global timestamp
04D1E9 DD 27 00    0077       ld hl,(ix+sysvar_time) ; ix was set by stopwatch_start
04D1EC 22 BD D0 04 0078       ld (timestamp_now),hl
04D1F0             0079   
04D1F0             0080   ; enable additional audio channels
04D1F0 CD 8C 00 04 0081   	call vdu_enable_channels
04D1F4             0082   
04D1F4             0083   ; set the cursor off
04D1F4 CD 2B BA 04 0084   	call cursor_off
04D1F8             0085   
04D1F8             0086   ; print loading ui message
04D1F8 21 71 D1 04 0087   	ld hl,loading_ui
04D1FC CD EF BD 04 0088   	call printString
04D200             0089   
04D200             0090   ; load fonts
04D200 CD 94 8D 04 0091   	call load_font_itc_honda
04D204 CD 77 9E 04 0092   	call load_font_retro_computer
04D208             0093   
04D208             0094   ; load UI images
04D208 CD 00 A7 04 0095   	call load_ui_images
04D20C CD B2 A9 04 0096   	call load_ui_images_bj
04D210             0097   
04D210             0098   ; set text background color
04D210 3E 84       0099   	ld a,4 + 128
04D212 CD F8 B7 04 0100   	call vdu_colour_text
04D216             0101   
04D216             0102   ; set text foreground color
04D216 3E 2F       0103   	ld a,47 ; aaaaff lavenderish
04D218 CD F8 B7 04 0104   	call vdu_colour_text
04D21C             0105   
04D21C             0106   ; set gfx bg color
04D21C AF          0107   	xor a ; plotting mode 0
04D21D 0E 04       0108   	ld c,4 ; dark blue
04D21F CD 20 B8 04 0109   	call vdu_gcol_bg
04D223 CD F3 B7 04 0110   	call vdu_clg
04D227             0111   
04D227             0112   ; set the cursor off again since we changed screen modes
04D227 CD 2B BA 04 0113   	call cursor_off
04D22B             0114   
04D22B             0115   ; VDU 28, left, bottom, right, top: Set text viewport **
04D22B             0116   ; MIND THE LITTLE-ENDIANESS
04D22B             0117   ; inputs: c=left,b=bottom,e=right,d=top
04D22B 0E 00       0118   	ld c,0 ; left
04D22D 16 14       0119   	ld d,20 ; top
04D22F 1E 27       0120   	ld e,39 ; right
04D231 06 1D       0121   	ld b,29; bottom
04D233 CD E1 B8 04 0122   	call vdu_set_txt_viewport
04D237             0123   
04D237             0124   ; initialize image load routine
04D237 CD 96 C7 04 0125   	call img_load_init
04D23B             0126   
04D23B             0127   ; load panels
04D23B 01 34 01 00 0128   	ld bc,cube_num_panels
04D23F 21 D4 01 04 0129   	ld hl,cube_buffer_id_lut
04D243 22 90 C7 04 0130   	ld (cur_buffer_id_lut),hl
04D247 21 70 05 04 0131   	ld hl,cube_load_panels_table
04D24B 22 93 C7 04 0132   	ld (cur_load_jump_table),hl
04D24F CD CB C7 04 0133   	call img_load_main
04D253             0134   
04D253             0135   ; load sprites
04D253 01 64 00 00 0136   	ld bc,sprite_num_panels
04D257 21 A4 53 04 0137   	ld hl,sprite_buffer_id_lut
04D25B 22 90 C7 04 0138   	ld (cur_buffer_id_lut),hl
04D25F 21 D0 54 04 0139   	ld hl,sprite_load_panels_table
04D263 22 93 C7 04 0140   	ld (cur_load_jump_table),hl
04D267 CD CB C7 04 0141   	call img_load_main
04D26B             0142   
04D26B             0143   ; load distance walls
04D26B 01 09 00 00 0144   	ld bc,dws_num_panels
04D26F 21 34 6E 04 0145   	ld hl,dws_buffer_id_lut
04D273 22 90 C7 04 0146   	ld (cur_buffer_id_lut),hl
04D277 21 4F 6E 04 0147   	ld hl,dws_load_panels_table
04D27B 22 93 C7 04 0148   	ld (cur_load_jump_table),hl
04D27F CD CB C7 04 0149   	call img_load_main
04D283             0150   
04D283             0151   ; load sound effects
04D283 01 16 00 00 0152   	ld bc,SFX_num_buffers
04D287 21 27 C9 04 0153   	ld hl,SFX_buffer_id_lut
04D28B 22 90 C7 04 0154   	ld (cur_buffer_id_lut),hl
04D28F 21 95 C9 04 0155   	ld hl,SFX_load_routines_table
04D293 22 93 C7 04 0156   	ld (cur_load_jump_table),hl
04D297 CD 39 BD 04 0157   	call sfx_load_main
04D29B             0158   
04D29B             0159   ; self modify vdu_play_sfx to enable sound
04D29B AF          0160   	xor a
04D29C 32 46 00 04 0161   	ld (vdu_play_sfx_disable),a
04D2A0             0162   
04D2A0             0163   ; use loading time to determine if we're running on emulator or hardware
04D2A0 CD 0C D1 04 0164   	call stopwatch_get ; hl = elapsed time in 120ths of a second
04D2A4 11 40 1F 00 0165   	ld de,8000 ; emulator loads in about 2,400 ticks, hardware about 15,000
04D2A8 AF          0166   	xor a ; clear carry, default is running on hardware
04D2A9 32 A7 D1 04 0167   	ld (is_emulator),a
04D2AD ED 52       0168   	sbc hl,de
04D2AF FA C3 D2 04 0169   	jp m,@on_emulator
04D2B3 CD 17 B9 04 0170   	call vdu_home_cursor
04D2B7 21 BF D1 04 0171   	ld hl,on_hardware
04D2BB CD EF BD 04 0172   	call printString
04D2BF C3 D5 D2 04 0173   	jp @test_done
04D2C3             0174   
04D2C3             0175   @on_emulator:
04D2C3             0176   ; print emulator message
04D2C3 3E 01       0177   	ld a,1
04D2C5 32 A7 D1 04 0178   	ld (is_emulator),a
04D2C9 CD 17 B9 04 0179   	call vdu_home_cursor
04D2CD 21 A8 D1 04 0180   	ld hl,on_emulator
04D2D1 CD EF BD 04 0181   	call printString
04D2D5             0182   
04D2D5             0183   @test_done:
04D2D5             0184   ; print final loading time
04D2D5 21 7C D1 04 0185   	ld hl,loading_time
04D2D9 CD EF BD 04 0186   	call printString
04D2DD CD 0C D1 04 0187   	call stopwatch_get ; hl = elapsed time in 120ths of a second
04D2E1 CD 3D BE 04 0188   	call printDec
04D2E5 CD 04 BE 04 0189   	call printNewLine
04D2E9             0190   
04D2E9             0191   ; print loading complete message and wait for user keypress
04D2E9 21 8A D1 04 0192   	ld hl,loading_complete
04D2ED CD EF BD 04 0193   	call printString
04D2F1 CD AE B9 04 0194   	call vdu_flip
04D2F5 CD 6F C1 04 0195   	call waitKeypress
04D2F9             0196   
04D2F9             0197   ; initialization done
04D2F9 C9          0198   	ret
04D2FA             0199   
04D2FA             0200   ; DEBUG: set up a simple countdown timer
04D2FA 01          0201   debug_timer: db 0x01
04D2FB             0202   
04D2FB             0203   main_loop_tmr: ds 6
04D301             0204   framerate: equ 30
04D301             0205   
04D301             0206   new_game:
04D301             0207   ; initialize map variables and load map file
04D301 21 D4 72 04 0208   	ld hl,room_flags
04D305 AF          0209   	xor a
04D306 06 0A       0210   	ld b,10
04D308             0211   @room_flags_loop:
04D308 77          0212   	ld (hl),a
04D309 23          0213   	inc hl
04D30A 10 FC       0214   	djnz @room_flags_loop
04D30C             0215   ; map_init:
04D30C 32 F8 C1 04 0216   	ld (cur_floor),a
04D310 32 F9 C1 04 0217   	ld (cur_room),a
04D314             0218   ; load room file
04D314 CD 6A 71 04 0219   	call map_load
04D318             0220   ; initialize sprite data
04D318 CD 9B 71 04 0221   	call map_init_sprites
04D31C             0222   ; initialize player position
04D31C CD 65 C2 04 0223   	call plyr_init
04D320             0224   
04D320 C9          0225   	ret
04D321             0226   
04D321             0227   main:
04D321 CD 01 D3 04 0228   	call new_game
04D325             0229   
04D325             0230   ; main:
04D325             0231   ; ; set map variables and load initial map file
04D325             0232   ; 	call map_init
04D325             0233   ; ; initialize player position
04D325             0234   ; 	call plyr_init
04D325             0235   
04D325             0236   
04D325             0237   main_loop:
04D325             0238   ; update global timestamp
04D325 CD C6 D0 04 0239       call timestamp_tick
04D329             0240   
04D329             0241   ; move enemies
04D329 CD DE B6 04 0242   	call sprites_see_plyr ; 220-285  prt ticks
04D32D             0243   
04D32D             0244   ; get player input and update sprite position
04D32D             0245   	; 0-1 prt ticks
04D32D CD 15 C6 04 0246   	call plyr_input ; ix points to cell defs/status, a is target cell current obj_id
04D331             0247   
04D331             0248   ; render the updated scene
04D331 CD 51 74 04 0249   	call render_scene ; 6-12 prt ticks
04D335             0250   ; full loop 12-16 prt ticks
04D335             0251   
04D335             0252   ; flip the screen
04D335 CD AE B9 04 0253   	call vdu_flip
04D339             0254   
04D339             0255   @wait:
04D339 FD 21 FB D2 0256   	ld iy,main_loop_tmr
       04          
04D33E CD A3 D0 04 0257   	call tmr_get
04D342 CA 4E D3 04 0258   	jp z,@continue
04D346 FA 4E D3 04 0259   	jp m,@continue
04D34A C3 39 D3 04 0260   	jp @wait
04D34E             0261   @continue:
04D34E             0262   
04D34E             0263   ; reset main loop timer
04D34E FD 21 FB D2 0264   	ld iy,main_loop_tmr
       04          
04D353 21 04 00 00 0265   	ld hl,120/framerate
04D357 CD 95 D0 04 0266   	call tmr_set
04D35B             0267   
04D35B             0268   ; check for escape key and quit if pressed
04D35B             0269   	MOSCALL mos_getkbmap
04D35B 3E 1E       0001M  			LD	A, function
04D35D 5B CF       0002M  			RST.LIL	08h
04D35F             0270   ; 113 Escape
04D35F DD CB 0E 46 0271       bit 0,(ix+14)
04D363 20 02       0272   	jr nz,main_end
04D365             0273   @Escape:
04D365 18 BE       0274   	jr main_loop
04D367             0275   
04D367             0276   main_end:
04D367             0277   	; call do_outro
04D367             0278   
04D367 CD DE BD 04 0279           call vdu_clear_all_buffers
04D36B CD B4 00 04 0280   	call vdu_disable_channels
04D36F             0281   
04D36F             0282   ; restore screen to something normalish
04D36F AF          0283   	xor a
04D370 CD 6C B8 04 0284   	call vdu_set_screen_mode
04D374 CD 1D BA 04 0285   	call cursor_on
04D378 C9          0286   	ret
04D379             0287   
04D379             0288   ; files.asm must go here so that filedata doesn't stomp on program data
04D379             0289   	include "src/asm/files.asm"
04D379             0001*  ; WARNING: this routine must be the last one loaded in the main program so that filedata doesn't stomp on any program code
04D379             0002*  ; inputs: hl = bufferId, ix = file size
04D379             0003*  vdu_load_buffer_from_file:
04D379             0004*  	; load buffer ids
04D379 22 B6 D3 04 0005*  		ld (@id0),hl
04D37D 22 BC D3 04 0006*  		ld (@id1),hl
04D381 22 C1 D3 04 0007*  		ld (@id2),hl
04D385             0008*  	; clean up bytes that got stomped on by the ID loads
04D385 3E 02       0009*  		ld a,2
04D387 32 B8 D3 04 0010*  		ld (@id0+2),a
04D38B 3E 17       0011*  		ld a,23
04D38D 32 BE D3 04 0012*  		ld (@id1+2),a
04D391 AF          0013*  		xor a
04D392 32 C3 D3 04 0014*  		ld (@id2+2),a
04D396             0015*  	; read size from ix
04D396 DD 7D       0016*  		ld a,ixl
04D398 32 C4 D3 04 0017*  		ld (@size),a
04D39C DD 7C       0018*  		ld a,ixh
04D39E 32 C5 D3 04 0019*  		ld (@size+1),a
04D3A2             0020*  	; get all the ducks in a row for the vdu call
04D3A2 01 13 00 00 0021*  		ld bc,filedata-@start
04D3A6 DD 09       0022*  		add ix,bc
04D3A8 DD 44       0023*  		ld b,ixh
04D3AA DD 4D       0024*  		ld c,ixl
04D3AC 21 B3 D3 04 0025*  		ld hl,@start
04D3B0             0026*  	; push the button
04D3B0 5B DF       0027*  		rst.lil $18
04D3B2             0028*  	; back to caller
04D3B2 C9          0029*  		ret
04D3B3             0030*  ; vdp command string:
04D3B3 17 00 A0    0031*  @start: db 23,0,0xA0 ; Clear buffer
04D3B6 00 00       0032*  @id0:	dw 0x0000 ; bufferId
04D3B8 02          0033*  		db 2
04D3B9             0034*  	; select buffer VDU 23, 27, &20, bufferId;
04D3B9 17 1B 20    0035*  		db 23,27,0x20
04D3BC 00 00       0036*  @id1:	dw 0x0000 ; bufferId
04D3BE             0037*  	; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
04D3BE 17 00 A0    0038*  		db 23,0,0xA0
04D3C1 00 00       0039*  @id2:	dw 0x0000 ; bufferId
04D3C3 00          0040*  		db 0
04D3C4             0041*  		; CAUTION: the size argument is a 16-bit value, so the max number of bytes we can load in one chunk is 64KiB!! This corresponds to an rgba2 image size of 320x204.
04D3C4 00 00       0042*  @size:	dw 0x0000 ; length of data in bytes
04D3C6             0043*  filedata: ; no need to allocate space here if this is the final include of the application
04D3C6             0044*  	; ds 65536 ; placeholder for file data	DEBUG
